<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="20:RadioScannerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f081936f0c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f08193ab720"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f08193ab720"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f08193a9e20"/></to>
    </wire>
    <wire loc="21:RadioScannerAppC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f081935d980"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f0818e83220"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f0818e83220"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f0818e51bf0"/></to>
    </wire>
    <wire loc="22:RadioScannerAppC.nc">
      <from><interface-ref name="DBInit" scoped="" ref="0x7f081936ee10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f08192d4690"/></to>
    </wire>
    <wire loc="35:Database/DatabaseC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f08192d4690"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f08192c9aa0"/></to>
    </wire>
    <wire loc="23:RadioScannerAppC.nc">
      <from><interface-ref name="DB" scoped="" ref="0x7f0819354590"/></from>
      <to><interface-ref name="Database" scoped="" ref="0x7f08192d4cc0"/></to>
    </wire>
    <wire loc="36:Database/DatabaseC.nc">
      <from><interface-ref name="Database" scoped="" ref="0x7f08192d4cc0"/></from>
      <to><interface-ref name="Database" scoped="" ref="0x7f08192c8120"/></to>
    </wire>
    <wire loc="24:RadioScannerAppC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x7f081935c4d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0818899850"/></to>
    </wire>
    <wire loc="26:FMClick/FMClickC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0818899850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0818895c10"/></to>
    </wire>
    <wire loc="25:RadioScannerAppC.nc">
      <from><interface-ref name="Radio" scoped="" ref="0x7f0819349360"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f0818899e70"/></to>
    </wire>
    <wire loc="27:FMClick/FMClickC.nc">
      <from><interface-ref name="FMClick" scoped="" ref="0x7f0818899e70"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f08188922c0"/></to>
    </wire>
    <wire loc="26:RadioScannerAppC.nc">
      <from><interface-ref name="Keyboard" scoped="" ref="0x7f0819346d20"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f0818393e60"/></to>
    </wire>
    <wire loc="20:PS2/PS2C.nc">
      <from><interface-ref name="PS2" scoped="" ref="0x7f0818393e60"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f081836a860"/></to>
    </wire>
    <wire loc="27:RadioScannerAppC.nc">
      <from><interface-ref name="volumeKnob" scoped="" ref="0x7f0819343860"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f08183234d0"/></to>
    </wire>
    <wire loc="22:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f08183234d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f08181ccbe0"/></to>
    </wire>
    <wire loc="28:RadioScannerAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0819338e20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0818321b00"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0818321b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f08190eeaa0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f08193aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0817752c00"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f08193aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0817c50c20"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f08193aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0817c873a0"/></to>
    </wire>
    <wire loc="96:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f08193aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0817d254c0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f08193aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0818e4f020"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f08193aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f08190e87a0"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f08193aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f081912c020"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f08193aabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0819204020"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f081937b4b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f0819538a20"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f0819538a20"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f0819439990"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f081937a020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f08193add00"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f08193add00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f081939f0c0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f081937a720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f08193aabf0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f08193a7d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f08182eb150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f08193a7020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f081938d020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f081939e020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f081938e860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f081939f7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f08185e0ab0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f081939f7a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f0819397020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f08193976f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f08193a7d50"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f08194389e0"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f08194330d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f0819451080"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f0819416de0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f0819035020"/></to>
    </wire>
    <wire loc="59:RadioScannerP.nc">
      <from><interface-ref name="inputTuneChannel" scoped="" ref="0x7f081932f840"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:RadioScannerP.nc">
      <from><interface-ref name="handleChar" scoped="" ref="0x7f081932eab0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:RadioScannerP.nc">
      <from><interface-ref name="radioInitFail" scoped="" ref="0x7f08193157e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:RadioScannerP.nc">
      <from><interface-ref name="seekBand" scoped="" ref="0x7f0819319590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:RadioScannerP.nc">
      <from><interface-ref name="finishedSeeking" scoped="" ref="0x7f081930c190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="207:RadioScannerP.nc">
      <from><interface-ref name="handleRDS" scoped="" ref="0x7f0819307190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:RadioScannerP.nc">
      <from><interface-ref name="finishedTuning" scoped="" ref="0x7f08193129e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:RadioScannerP.nc">
      <from><interface-ref name="readyScreen" scoped="" ref="0x7f08193171d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f08191ae490"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f08191b47f0"/></to>
    </wire>
    <wire loc="38:Database/DatabaseC.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f08191ae490"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f0818e846f0"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f0818e846f0"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f0818ba9b00"/></to>
    </wire>
    <wire loc="40:Database/DatabaseC.nc">
      <from><interface-ref name="UdpSend" scoped="" ref="0x7f08192be5f0"/></from>
      <to><interface-ref name="UdpSend" scoped="" ref="0x7f08189451f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpSend" scoped="" ref="0x7f08189451f0"/></from>
      <to><interface-ref name="UdpSend" scoped="" ref="0x7f0817cb9c50"/></to>
    </wire>
    <wire loc="41:Database/DatabaseC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f08192bc8b0"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f0818945990"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f0818945990"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f081893d330"/>
      <arguments>
        <value cst="I:50000">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:Database/DatabaseC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f08192b67b0"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f081921b020"/></to>
    </wire>
    <wire loc="28:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f081921b020"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f081920b690"/></to>
    </wire>
    <wire loc="43:Database/DatabaseC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7f08192b2960"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f0818bab330"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f0818bab330"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f0818b6ecf0"/></to>
    </wire>
    <wire loc="44:Database/DatabaseC.nc">
      <from><interface-ref name="MsgPool" scoped="" ref="0x7f08192ab770"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f08188f1cd0"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x7f08188f1cd0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x7f0817c87a90"/></to>
    </wire>
    <wire loc="45:Database/DatabaseC.nc">
      <from><interface-ref name="SendQ" scoped="" ref="0x7f08192a8190"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f08188c6720"/></to>
    </wire>
    <wire loc="46:Database/DatabaseC.nc">
      <from><interface-ref name="RecvQ" scoped="" ref="0x7f081929ed30"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x7f08188a5d10"/></to>
    </wire>
    <wire loc="48:Database/DatabaseC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f08192996c0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f0818e83220"/></to>
    </wire>
    <wire loc="48:Database/DatabaseP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f0819297ae0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:Database/DatabaseP.nc">
      <from><interface-ref name="recvTask" scoped="" ref="0x7f08192959b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f081921f620"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f081920d360"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpPacket" scoped="" ref="0x7f081921aaf0"/></from>
      <to><interface-ref name="IpPacket" scoped="" ref="0x7f0819204690"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f08192188a0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f081920b020"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f0819205580"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f08191c05f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f08191c05f0"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f08181ab1b0"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f0819208020"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f08191c0d90"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f08191c0d90"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f08191b9520"/>
      <arguments>
        <value cst="I:2048">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="Arp" scoped="" ref="0x7f08191fb820"/></from>
      <to><interface-ref name="Arp" scoped="" ref="0x7f08191430c0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="Arp" scoped="" ref="0x7f08191430c0"/></from>
      <to><interface-ref name="Arp" scoped="" ref="0x7f081913f020"/></to>
    </wire>
    <wire loc="30:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f08191438c0"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f081920b690"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f08181ab950"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f081918d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f08191bc930"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f08191b0290"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f08191b9520"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f08191afe30"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="MacControl" scoped="" ref="0x7f08191b1140"/></from>
      <to><interface-ref name="MacControl" scoped="" ref="0x7f08191ad020"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f081918d1d0"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f0819156840"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f081915cd50"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f08191bc930"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f0819155250"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f081918be10"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f081918be10"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f08181a0a00"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f081819d770"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f081915cd50"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f081819cd60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="Timeout" scoped="" ref="0x7f081913a0b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0818f38140"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0818f38140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f08190eeaa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="ClearCacheTimeout" scoped="" ref="0x7f08191356e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0818f32b00"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0818f32b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f08190eeaa0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f0819130a10"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f0818f2b700"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f0818f2b700"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f08181138f0"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f081912f320"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f0818f2a020"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f0818f2a020"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f08191b9520"/>
      <arguments>
        <value cst="I:2054">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f081912f990"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f08191438c0"/></to>
    </wire>
    <wire loc="28:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="MacControl" scoped="" ref="0x7f081912d960"/></from>
      <to><interface-ref name="MacControl" scoped="" ref="0x7f08191b1140"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f081913c260"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f0818f284a0"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f0818f284a0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f081810a510"/></to>
    </wire>
    <wire loc="30:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0818f25360"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f081913f9e0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f08190eeaa0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f08190e55a0"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f08190e55a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0818f59150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f08190e87a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f08190db7a0"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f08190de020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f0818f4a790"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f08190db7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0818fd9ba0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f0818f53640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0818fa9830"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f0818fa4cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f08190d7440"/></to>
    </wire>
    <wire loc="35:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f08190d7440"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f0818fd84b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f0818f40a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f08190c8b40"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f08190c8b40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f0818fd48d0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f0818fd48d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f081817a8d0"/></to>
    </wire>
    <wire loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0818fd9ba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f081817fcb0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f0818fd84b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f081817e530"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f0818177bc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f081904f190"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f081904f190"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f0819040270"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f081816fe20"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f081904a570"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f081904a570"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f081903b7b0"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f081816d0a0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f08190499d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f08190499d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f081903ab60"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f0818169450"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f0819045d60"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f0819045d60"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f0819035750"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f0818f9f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f0818f4ea00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f08181120c0"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f081918d1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0818108240"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0818f25360"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f0818106840"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/ping/PingC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f0818e8c7a0"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f0818f185f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f0818f185f0"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f08180f4870"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/ping/PingC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f0818e8c130"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f0818f18d90"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f0818f18d90"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f0818f08610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f08180f3060"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f0818ea9410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0818f129e0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0818ed5290"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f0818f08610"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f0818ed4df0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f0818ed2c90"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f0818f05bd0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f0818f05bd0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f08192188a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f0818ed2490"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f0818f05430"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f0818f05430"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f08180ee680"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f08180eee20"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f0818ef4d60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f0818ef4d60"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f0818ee99f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f0818ee64e0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f0818eee060"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f0818eee060"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f08180e3b70"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0818eec020"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f081921f620"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f08180e1890"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0818eec020"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f08180de020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f0818ea9410"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f0818e9e450"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f0818e9ee30"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f0818ea7ae0"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f0818ea7ae0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f08180c9020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0818ea49d0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0818f129e0"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f08180c7d20"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0818ea49d0"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f08180c5340"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Hpl" scoped="" ref="0x7f0818e48640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f0818e80640"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="HplKS0108" scoped="" ref="0x7f0818e80640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f0818dd8be0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_0" scoped="" ref="0x7f0818dce7b0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x7f0818d6c350"/></to>
    </wire>
    <wire loc="175:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f0818d6c350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0818cc9020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_1" scoped="" ref="0x7f0818dd49c0"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x7f0818d6b670"/></to>
    </wire>
    <wire loc="176:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f0818d6b670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0818cc82b0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RS" scoped="" ref="0x7f0818dd3cd0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f0818d6a990"/></to>
    </wire>
    <wire loc="177:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f0818d6a990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0818cc7440"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RW" scoped="" ref="0x7f0818dcc020"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f0818d69cb0"/></to>
    </wire>
    <wire loc="178:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f0818d69cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0818cc65d0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="EN" scoped="" ref="0x7f0818dcb370"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f0818d67020"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f0818d67020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0818cc5760"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RST" scoped="" ref="0x7f0818dca690"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f0818d66350"/></to>
    </wire>
    <wire loc="180:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f0818d66350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0818cc48f0"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="Data" scoped="" ref="0x7f0818dc1d40"/></from>
      <to><interface-ref name="PortA" scoped="" ref="0x7f0818c20c40"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortA" scoped="" ref="0x7f0818c20c40"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818c09c90"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f0818dbea00"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f0818bb82e0"/></to>
    </wire>
    <wire loc="191:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f0818d5a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818c6c6d0"/></to>
    </wire>
    <wire loc="165:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f0818d77800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0818cdbc10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0818cdbc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817f37e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0818cc82b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817ec53f0"/></to>
    </wire>
    <wire loc="185:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f0818d61020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0818cb95d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0818cb95d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817e5a3f0"/></to>
    </wire>
    <wire loc="196:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f0818d54350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818c52c90"/></to>
    </wire>
    <wire loc="143:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f0818d8f990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0818d03a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0818d03a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08180679b0"/></to>
    </wire>
    <wire loc="183:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f0818d64990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0818cbb2b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0818cbb2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817e61e20"/></to>
    </wire>
    <wire loc="146:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f0818d8c020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0818cfa3f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0818cfa3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818010a60"/></to>
    </wire>
    <wire loc="157:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f0818d80020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0818ce9a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0818ce9a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817f9e0a0"/></to>
    </wire>
    <wire loc="168:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f0818d73060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0818cd62b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0818cd62b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817f2c6d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0818cc5760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817ebbe20"/></to>
    </wire>
    <wire loc="138:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f0818d96b20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0818d082b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0818d082b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08180789b0"/></to>
    </wire>
    <wire loc="149:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f0818d89990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0818cf78f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0818cf78f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08180053f0"/></to>
    </wire>
    <wire loc="160:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f0818d7d990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0818ce5020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0818ce5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817f949b0"/></to>
    </wire>
    <wire loc="171:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f0818d70990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0818cd3760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0818cd3760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817f220a0"/></to>
    </wire>
    <wire loc="188:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f0818d5e990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0818cb6a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0818cb6a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817e50e20"/></to>
    </wire>
    <wire loc="194:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f0818d57cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818c5c6d0"/></to>
    </wire>
    <wire loc="174:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f0818d6d020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0818ccbe60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0818ccbe60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817ecce20"/></to>
    </wire>
    <wire loc="141:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f0818d91350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0818d05760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0818d05760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081806d3f0"/></to>
    </wire>
    <wire loc="152:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f0818d85350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0818cf4da0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0818cf4da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817ffce20"/></to>
    </wire>
    <wire loc="192:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f0818d59670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818c66160"/></to>
    </wire>
    <wire loc="155:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f0818d83990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0818ceb7a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0818ceb7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817fa5c90"/></to>
    </wire>
    <wire loc="166:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f0818d76b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0818cdada0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0818cdada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817f330a0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0818cc7440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817ec16d0"/></to>
    </wire>
    <wire loc="186:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f0818d60350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0818cb8760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0818cb8760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817e576d0"/></to>
    </wire>
    <wire loc="144:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f0818d8ecb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0818d02c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0818d02c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818064e20"/></to>
    </wire>
    <wire loc="147:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f0818d8b350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0818cf95d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0818cf95d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081800de20"/></to>
    </wire>
    <wire loc="158:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f0818d7f350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0818ce8c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0818ce8c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817f9a3f0"/></to>
    </wire>
    <wire loc="169:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f0818d72350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0818cd5440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0818cd5440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817f299b0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0818cc48f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817eb70a0"/></to>
    </wire>
    <wire loc="139:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f0818d94e40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0818d07440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0818d07440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818074e20"/></to>
    </wire>
    <wire loc="150:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f0818d88cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0818cf6a80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0818cf6a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08180026d0"/></to>
    </wire>
    <wire loc="161:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f0818d7ccb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0818ce32b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0818ce32b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817f91e20"/></to>
    </wire>
    <wire loc="189:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f0818d5dcb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0818cb5c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0818cb5c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817e4c0a0"/></to>
    </wire>
    <wire loc="164:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f0818d79350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0818cdca20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0818cdca20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817f3ac90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0818cc9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817ec80a0"/></to>
    </wire>
    <wire loc="184:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f0818d63cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0818cba440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0818cba440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817e5d0a0"/></to>
    </wire>
    <wire loc="195:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f0818d55020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818c56160"/></to>
    </wire>
    <wire loc="142:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f0818d90670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0818d048f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0818d048f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081806a6d0"/></to>
    </wire>
    <wire loc="153:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f0818d84670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0818cf2020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0818cf2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817ff80a0"/></to>
    </wire>
    <wire loc="182:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f0818d65670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0818cbc020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0818cbc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817e64c90"/></to>
    </wire>
    <wire loc="156:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f0818d82cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0818cea8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0818cea8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817fa2e20"/></to>
    </wire>
    <wire loc="167:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f0818d75e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0818cd7020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0818cd7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817f303f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0818cc65d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817ebe9b0"/></to>
    </wire>
    <wire loc="187:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f0818d5f670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0818cb78f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0818cb78f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817e539b0"/></to>
    </wire>
    <wire loc="137:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f0818d99860"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0818d09140"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0818d09140"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081807b6d0"/></to>
    </wire>
    <wire loc="148:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f0818d8a670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0818cf8760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0818cf8760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08180090a0"/></to>
    </wire>
    <wire loc="159:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f0818d7e670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f0818ce7da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f0818ce7da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817f976d0"/></to>
    </wire>
    <wire loc="170:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f0818d71670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f0818cd45d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f0818cd45d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817f26e20"/></to>
    </wire>
    <wire loc="193:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f0818d58990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818c62c90"/></to>
    </wire>
    <wire loc="173:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f0818d6fcb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0818cccd30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0818cccd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817ecfc90"/></to>
    </wire>
    <wire loc="162:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f0818d7a020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0818ce2440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0818ce2440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817f8d0a0"/></to>
    </wire>
    <wire loc="140:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f0818d92060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f0818d065d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f0818d065d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08180700a0"/></to>
    </wire>
    <wire loc="151:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f0818d86020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f0818cf5c10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f0818cf5c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817fff9b0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortL" scoped="" ref="0x7f0818c12870"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818bc4c90"/></to>
    </wire>
    <wire loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortD" scoped="" ref="0x7f0818c1be80"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818be6cd0"/></to>
    </wire>
    <wire loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortG" scoped="" ref="0x7f0818c161d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818bd7cd0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortJ" scoped="" ref="0x7f0818c14550"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818bcec90"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortB" scoped="" ref="0x7f0818c1dd20"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818bef390"/></to>
    </wire>
    <wire loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortE" scoped="" ref="0x7f0818c18020"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818be0390"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortH" scoped="" ref="0x7f0818c153c0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818bd2c90"/></to>
    </wire>
    <wire loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortK" scoped="" ref="0x7f0818c136e0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818bc9c90"/></to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortC" scoped="" ref="0x7f0818c1cde0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818beb910"/></to>
    </wire>
    <wire loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortF" scoped="" ref="0x7f0818c17100"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818bdc910"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Enc28j60Control" scoped="" ref="0x7f0818b76ba0"/></from>
      <to><interface-ref name="Enc28j60Control" scoped="" ref="0x7f0818b68880"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f0818b67430"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f0818afcb00"/></to>
    </wire>
    <wire loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f0818afcb00"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f0818aec340"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0818b6e020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0818afbbd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="ssETH" scoped="" ref="0x7f0818b746c0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f0818d8c020"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="rstETH" scoped="" ref="0x7f0818b739d0"/></from>
      <to><interface-ref name="PortB4" scoped="" ref="0x7f0818d88cb0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="intETH" scoped="" ref="0x7f0818b6a620"/></from>
      <to><interface-ref name="Int2" scoped="" ref="0x7f08189b4b70"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f08189b4b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f081896dc90"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="intPin" scoped="" ref="0x7f0818b72cf0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f0818d76b20"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <from><interface-ref name="checkInterruptflag" scoped="" ref="0x7f0818b315d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f0818af0e60"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f0818aeb5f0"/></to>
    </wire>
    <wire loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f0818b01300"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f0818aee670"/></to>
    </wire>
    <wire loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f0818af7400"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f0818aec980"/></to>
    </wire>
    <wire loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0818afbbd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0818aea320"/></to>
    </wire>
    <wire loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiControl" scoped="" ref="0x7f0818afc4a0"/></from>
      <to><interface-ref name="SpiControl" scoped="" ref="0x7f0818aeecb0"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f0818acd740"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f08189c1520"/></to>
    </wire>
    <wire loc="98:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f08189c1520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0817d239d0"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0818ac9cd0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f08189c0b20"/></to>
    </wire>
    <wire loc="100:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f08189c0b20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0817d21020"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f0818ace340"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f0818a79100"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f0818a79100"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f0818a73060"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f0818acb510"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f08194175a0"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f0818aa6de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f0818a69b30"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f08194175a0"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f0818a6f020"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f0818d8c020"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f0818a6e330"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f0818d8b350"/></to>
    </wire>
    <wire loc="88:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f0818a6c4e0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f0818d8a670"/></to>
    </wire>
    <wire loc="89:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f0818a6a7f0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f0818d89990"/></to>
    </wire>
    <wire loc="99:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f08189c03a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f0817d22850"/></to>
    </wire>
    <wire loc="101:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0817d21910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f08189bf570"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f0817d20120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f0817d25ad0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f0817d20c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f08189b0b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f081895bc90"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f08189b5b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0818971da0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f08189b2b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0818964c90"/></to>
    </wire>
    <wire loc="78:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f08189afb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0818957c90"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f08189b1b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0818960c90"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f08189b8b20"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0818989060"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f08189b3b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f0818969c90"/></to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0818989e80"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f08189a8a00"/></to>
    </wire>
    <wire loc="81:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0818970c20"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f08189a9230"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f081896cb40"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f08189a99b0"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0818968b40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f08189a7150"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0818963b40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f08189a78d0"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f081895fb40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f08189a60b0"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f081895ab40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f08189a6830"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f0818956b40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f08189a5020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpQueue" scoped="" ref="0x7f0817cb8440"/></from>
      <to><interface-ref name="UdpQueue" scoped="" ref="0x7f081890d1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f081893f710"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f081893ab90"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f081893d330"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f0818935730"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f0818934c70"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f0818939e60"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f0818939e60"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f0817cabb10"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f0818934600"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f081893b2b0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f081893b2b0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f08192188a0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f0818935d80"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f081893c9d0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f081893c9d0"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f0817cb20c0"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IpPacket" scoped="" ref="0x7f08189334a0"/></from>
      <to><interface-ref name="IpPacket" scoped="" ref="0x7f081921aaf0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f0817cb2860"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f0818ef4d60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f081891f630"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f0818f08610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f0817caa440"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f0818ea9410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="UdpQueue" scoped="" ref="0x7f081890d1d0"/></from>
      <to><interface-ref name="UdpQueue" scoped="" ref="0x7f08189021d0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f0818902bb0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f081890a790"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f081890a790"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f0817c9e0b0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0818908620"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f081893f710"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f0817c9cdd0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f0818908620"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f0817c9a4e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:FMClick/FMClickC.nc">
      <from><interface-ref name="Int" scoped="" ref="0x7f0818891750"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f08189b3b70"/></to>
    </wire>
    <wire loc="31:FMClick/FMClickC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f08188906a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f08187a29f0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f08187a29f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f08187979b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:FMClick/FMClickC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f081887f6f0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f08185bf880"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f08185bf880"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f0818792020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:FMClick/FMClickC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f081887d620"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f08185b9b80"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f08185b9b80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f08190eeaa0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:FMClick/FMClickC.nc">
      <from><interface-ref name="RSTPin" scoped="" ref="0x7f0818879a60"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f0818590670"/></to>
    </wire>
    <wire loc="250:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f0818590670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0818511440"/></to>
    </wire>
    <wire loc="37:FMClick/FMClickC.nc">
      <from><interface-ref name="SDIOPin" scoped="" ref="0x7f0818877cc0"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f0818591350"/></to>
    </wire>
    <wire loc="249:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f0818591350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f08185122b0"/></to>
    </wire>
    <wire loc="38:FMClick/FMClickC.nc">
      <from><interface-ref name="INTPin" scoped="" ref="0x7f0818875020"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7f081858f990"/></to>
    </wire>
    <wire loc="251:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f081858f990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f08185105d0"/></to>
    </wire>
    <wire loc="40:FMClick/FMClickC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f08188742a0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f0818e83220"/></to>
    </wire>
    <wire loc="184:FMClick/FMClickP.nc">
      <from><interface-ref name="seek" scoped="" ref="0x7f08188622a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="182:FMClick/FMClickP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7f08188642a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:FMClick/FMClickP.nc">
      <from><interface-ref name="decodeRDS" scoped="" ref="0x7f08188612a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:FMClick/FMClickP.nc">
      <from><interface-ref name="tune" scoped="" ref="0x7f08188632a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f08187979b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f08186d6020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f0818792020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f08186d5020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f08186d1e40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0818725e60"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0818725e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0817c4c4d0"/></to>
    </wire>
    <wire loc="64:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f08186d0c40"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f081865cc00"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f08186cb8e0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f08186578e0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f081871d550"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f081865c340"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f08187102f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0818723400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0818723400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0817c4bb20"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f0818656020"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f081864a0e0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f081864a0e0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f0818647a70"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f0818654ac0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f08185d8980"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f0818651160"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f08185d8980"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f0818724bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f0817c4b3a0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0818721060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0817c4a8b0"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0817c49210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0818721930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f0817c499d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f0817c4f2b0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f0817c47c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f08186507a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f0818642540"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7f0818d79350"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f0818641810"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f0818d77800"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f081860a4a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f0818606dc0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f08185e0ab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f08186067c0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f0818602550"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f08185e41d0"/></to>
    </wire>
    <wire loc="57:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f08185e41d0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f0818d99860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f08186017f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f08185e3510"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f08185e3510"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f0818d96b20"/></to>
    </wire>
    <wire loc="56:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f0818600b10"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f08185e2830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f08185e2830"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f0818d94e40"/></to>
    </wire>
    <wire loc="275:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f0818575cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08184ba6d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f08185122b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a27e20"/></to>
    </wire>
    <wire loc="260:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f0818585350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f08185008f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f08185008f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08179b53f0"/></to>
    </wire>
    <wire loc="269:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f081857bcb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f08184f1c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f08184f1c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081794a3f0"/></to>
    </wire>
    <wire loc="280:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f081856e060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08184a0c90"/></to>
    </wire>
    <wire loc="284:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH2" scoped="" ref="0x7f081856b990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081847ac90"/></to>
    </wire>
    <wire loc="289:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH7" scoped="" ref="0x7f0818564990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08184619b0"/></to>
    </wire>
    <wire loc="297:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ6" scoped="" ref="0x7f081855b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081843d180"/></to>
    </wire>
    <wire loc="300:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK0" scoped="" ref="0x7f0818559670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818434c90"/></to>
    </wire>
    <wire loc="311:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL2" scoped="" ref="0x7f081854d670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818401180"/></to>
    </wire>
    <wire loc="227:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f08185a9350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f081853a2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f081853a2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817b57e20"/></to>
    </wire>
    <wire loc="267:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f081857d670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f08184f38f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f08184f38f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817951e20"/></to>
    </wire>
    <wire loc="230:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f08185a7990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0818533a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0818533a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817b00c90"/></to>
    </wire>
    <wire loc="241:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f081859a990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0818520020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0818520020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a8e0a0"/></to>
    </wire>
    <wire loc="252:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f081858ecb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f081850f760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f081850f760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a1d6d0"/></to>
    </wire>
    <wire loc="263:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f0818581cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f08184fdda0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f08184fdda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08179ace20"/></to>
    </wire>
    <wire loc="222:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f08185af4e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f08185418f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f08185418f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817b6de20"/></to>
    </wire>
    <wire loc="233:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f08185a3350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f081852e020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f081852e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817af63f0"/></to>
    </wire>
    <wire loc="244:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f0818596350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f081851d5d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f081851d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a859b0"/></to>
    </wire>
    <wire loc="255:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f081858a670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f081850bc10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f081850bc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a120a0"/></to>
    </wire>
    <wire loc="272:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f0818577670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f08184ed2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f08184ed2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817941e20"/></to>
    </wire>
    <wire loc="278:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f0818571b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08184aa6d0"/></to>
    </wire>
    <wire loc="282:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH0" scoped="" ref="0x7f081856d350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818483020"/></to>
    </wire>
    <wire loc="258:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f0818588cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f08185035d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f08185035d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08179bce20"/></to>
    </wire>
    <wire loc="287:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH5" scoped="" ref="0x7f0818567350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081846be20"/></to>
    </wire>
    <wire loc="292:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ1" scoped="" ref="0x7f0818561020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08184576d0"/></to>
    </wire>
    <wire loc="295:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ4" scoped="" ref="0x7f081855e990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08184486d0"/></to>
    </wire>
    <wire loc="303:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK3" scoped="" ref="0x7f0818555020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818425c90"/></to>
    </wire>
    <wire loc="306:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK6" scoped="" ref="0x7f0818552990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818416c90"/></to>
    </wire>
    <wire loc="309:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL0" scoped="" ref="0x7f081854f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081840c6d0"/></to>
    </wire>
    <wire loc="314:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL5" scoped="" ref="0x7f0818548020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08183f36d0"/></to>
    </wire>
    <wire loc="225:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f08185ace40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f081853dda0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f081853dda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817b5e6d0"/></to>
    </wire>
    <wire loc="236:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f081859fcb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f081852b5d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f081852b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817aece20"/></to>
    </wire>
    <wire loc="276:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f08185734e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08184b4160"/></to>
    </wire>
    <wire loc="239:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f081859c350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0818523d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0818523d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a95c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0818511440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a230a0"/></to>
    </wire>
    <wire loc="261:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f0818584670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f08184ffa80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f08184ffa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08179b26d0"/></to>
    </wire>
    <wire loc="270:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f0818579020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f08184f0da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f08184f0da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08179476d0"/></to>
    </wire>
    <wire loc="285:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH3" scoped="" ref="0x7f081856acb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818474180"/></to>
    </wire>
    <wire loc="298:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ7" scoped="" ref="0x7f081855a350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08184396d0"/></to>
    </wire>
    <wire loc="301:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK1" scoped="" ref="0x7f0818558990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081842e180"/></to>
    </wire>
    <wire loc="312:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL3" scoped="" ref="0x7f081854c990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08183fd6d0"/></to>
    </wire>
    <wire loc="293:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ2" scoped="" ref="0x7f0818560350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818452c90"/></to>
    </wire>
    <wire loc="228:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f08185a8670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f0818539440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f0818539440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817b530a0"/></to>
    </wire>
    <wire loc="304:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK4" scoped="" ref="0x7f0818554350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081841f180"/></to>
    </wire>
    <wire loc="315:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL6" scoped="" ref="0x7f0818547350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08183eec90"/></to>
    </wire>
    <wire loc="231:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f08185a6cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0818531c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0818531c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817afde20"/></to>
    </wire>
    <wire loc="242:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f0818599cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f081851f2b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f081851f2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a8b3f0"/></to>
    </wire>
    <wire loc="253:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f081858c020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f081850e8f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f081850e8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a1a9b0"/></to>
    </wire>
    <wire loc="264:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f081857f020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f08184fb020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f08184fb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08179a70a0"/></to>
    </wire>
    <wire loc="223:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f08185ae800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0818540a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0818540a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817b690a0"/></to>
    </wire>
    <wire loc="234:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f08185a2670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f081852d2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f081852d2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817af36d0"/></to>
    </wire>
    <wire loc="245:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f0818595670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f081851c760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f081851c760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a81e20"/></to>
    </wire>
    <wire loc="273:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f0818576990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f08184ec440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f08184ec440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081793d0a0"/></to>
    </wire>
    <wire loc="283:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH1" scoped="" ref="0x7f081856c670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081847f6d0"/></to>
    </wire>
    <wire loc="248:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f0818593cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f0818513020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f0818513020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a2ac90"/></to>
    </wire>
    <wire loc="259:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f0818586020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0818502760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0818502760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08179b80a0"/></to>
    </wire>
    <wire loc="268:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f081857c990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f08184f2a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f08184f2a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081794d0a0"/></to>
    </wire>
    <wire loc="279:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f0818570e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08184a4160"/></to>
    </wire>
    <wire loc="288:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH6" scoped="" ref="0x7f0818565670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818466460"/></to>
    </wire>
    <wire loc="296:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ5" scoped="" ref="0x7f081855dcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818443c90"/></to>
    </wire>
    <wire loc="307:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK7" scoped="" ref="0x7f0818551cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818410180"/></to>
    </wire>
    <wire loc="310:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL1" scoped="" ref="0x7f081854e350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818407c90"/></to>
    </wire>
    <wire loc="226:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f08185aa060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f081853b020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f081853b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817b5a9b0"/></to>
    </wire>
    <wire loc="237:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f081859d020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f081852a760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f081852a760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817ae80a0"/></to>
    </wire>
    <wire loc="266:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f081857e350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f08184f47a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f08184f47a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817954c90"/></to>
    </wire>
    <wire loc="240:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f081859b670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f0818522e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f0818522e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a92e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f08185105d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a203f0"/></to>
    </wire>
    <wire loc="262:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f0818582990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f08184fec10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f08184fec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08179af9b0"/></to>
    </wire>
    <wire loc="271:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f0818578350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f08184ee020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f08184ee020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08179449b0"/></to>
    </wire>
    <wire loc="221:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f08185b01e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f08185427a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f08185427a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817b70b00"/></to>
    </wire>
    <wire loc="232:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f08185a4020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f0818530da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f0818530da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817af90a0"/></to>
    </wire>
    <wire loc="243:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f0818597020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f081851e440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f081851e440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a886d0"/></to>
    </wire>
    <wire loc="254:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f081858b350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f081850ca80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f081850ca80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a17e20"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f0818572800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08184b0c90"/></to>
    </wire>
    <wire loc="286:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH4" scoped="" ref="0x7f0818568020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0818470830"/></to>
    </wire>
    <wire loc="291:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ0" scoped="" ref="0x7f0818563cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081845b160"/></to>
    </wire>
    <wire loc="257:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f0818589990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f08185043f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f08185043f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08179bfc90"/></to>
    </wire>
    <wire loc="294:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ3" scoped="" ref="0x7f081855f670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081844c180"/></to>
    </wire>
    <wire loc="302:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK2" scoped="" ref="0x7f0818557cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081842a6d0"/></to>
    </wire>
    <wire loc="305:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK5" scoped="" ref="0x7f0818553670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f081841b6d0"/></to>
    </wire>
    <wire loc="313:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL4" scoped="" ref="0x7f081854bcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08183f70a0"/></to>
    </wire>
    <wire loc="316:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL7" scoped="" ref="0x7f0818546670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f08183e8180"/></to>
    </wire>
    <wire loc="246:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f0818594990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f081851b8f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f081851b8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817a7d0a0"/></to>
    </wire>
    <wire loc="224:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f08185adb20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f081853fc10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f081853fc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817b613f0"/></to>
    </wire>
    <wire loc="235:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f08185a1990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f081852c440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f081852c440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f0817af09b0"/></to>
    </wire>
    <wire loc="21:PS2/PS2C.nc">
      <from><interface-ref name="ClockIRQ" scoped="" ref="0x7f0818362d90"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f081838eca0"/></to>
    </wire>
    <wire loc="23:PS2/PS2C.nc">
      <from><interface-ref name="ClockPin" scoped="" ref="0x7f08183671c0"/></from>
      <to><interface-ref name="PortK7" scoped="" ref="0x7f0818551cb0"/></to>
    </wire>
    <wire loc="24:PS2/PS2C.nc">
      <from><interface-ref name="DataPin" scoped="" ref="0x7f08183604f0"/></from>
      <to><interface-ref name="PortK6" scoped="" ref="0x7f0818552990"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f08181ccbe0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f081830adf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="VolumePin" scoped="" ref="0x7f081831b8e0"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x7f081857e350"/></to>
    </wire>
    <wire loc="26:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f08181ca320"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f0818318540"/></to>
    </wire>
    <wire loc="27:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f08181cac10"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f081831b020"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f0818300c30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f08181ca320"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f08182ffb50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f08182fb8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f08182f7af0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f08181cac10"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f081830adf0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f08181ef150"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f0818301e60"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f08182191d0"/></to>
    </wire>
    <wire loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f08181d4300"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f08182ffb50"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f0818217a10"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f0818300c30"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f08181d6af0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f081821c410"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f08182189f0"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f08182f4dd0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f08182f4dd0"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f08182ea020"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f0818216740"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f0818bb82e0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f08182fb8c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f0818237e70"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f0818237e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f081774f4d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f08182eec90"/></from>
      <to><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f08182ea9d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0818233930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f08182f7af0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f08182e8020"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f08182ecd30"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f08182ecd30"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f08182a1200"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f08182d9630"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f08193a7020"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f081822f020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f08182eb7c0"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f081822fd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0818234400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0818234400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f081774eb20"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f081829f7f0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f08194175a0"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f0818236c00"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f081774e3a0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0818233060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f081774d8b0"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f081774b210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0818233930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f081774b9d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f08177512b0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f0817749c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f0817716660"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f081822f020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f0817716dc0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f081822f780"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f08177153d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f081822fd50"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0817714020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0818225990"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f0818204820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../tinyos_ws18/tos/system/MainC.nc">
      <documentation loc="45:../tinyos_ws18/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <documentation loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../tinyos_ws18/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../tinyos_ws18/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../tinyos_ws18/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc" safe="">
      <documentation loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioScannerP" loc="15:RadioScannerP.nc">
      <documentation loc="1:RadioScannerP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file RadioScannerP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-20&#10;&#10; Implementation of the RadioScanner app.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="DatabaseC" loc="14:Database/DatabaseC.nc">
      <configuration/>
    </component>
    <component qname="DatabaseP" loc="20:Database/DatabaseP.nc">
      <module/>
    </component>
    <component qname="IpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IpTransceiverP" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <module/>
    </component>
    <component qname="IpTransceiverC.LlcC" loc="10(IpTransceiverC.LlcC):../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LlcC"/>
        <arguments>
          <value cst="I:2048">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LlcTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IpTransceiverC.LlcC.LlcP" loc="10(IpTransceiverC.LlcC.LlcP):../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LlcP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LlcQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LlcQueueC.PacketQueueC" loc="8(LlcQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f081920f7e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f081920fd60"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcQueueC.PacketQueueC.PacketQueueP" loc="11(LlcQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="0">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f081918cb30"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LlcQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArpC" loc="8:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ArpP" loc="11:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArpC.TimerMilliC" loc="44(ArpC.TimerMilliC):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <documentation loc="11:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC" loc="32(AlarmCounterMilliP.Atm1280AlarmSyncC):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:124">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP" loc="33(AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f08190c6c70"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280Timer2SyncC" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <documentation loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280Timer2SyncP" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc" safe="">
      <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changed to sync mode&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArpC.ClearCacheTimeoutC" loc="44(ArpC.ClearCacheTimeoutC):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.LlcC" loc="10(ArpC.LlcC):../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LlcC"/>
        <arguments>
          <value cst="I:2054">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.LlcC.LlcP" loc="10(ArpC.LlcC.LlcP):../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LlcP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArpC.PacketQueueC" loc="8(ArpC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f08191ffcc0"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f08191fe650"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.PacketQueueC.PacketQueueP" loc="11(ArpC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="1">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f081918cb30"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PingC.IcmpC" loc="10(PingC.IcmpC):../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <instance number="0">
        <component-ref qname="IcmpC"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC.IpC" loc="10(IcmpTransceiverC.IpC):../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IpC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC.IpC.IpP" loc="10(IcmpTransceiverC.IpC.IpP):../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IpQueueC.PacketQueueC" loc="8(IpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f08192c9080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f08192c9600"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IpQueueC.PacketQueueC.PacketQueueP" loc="11(IpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="2">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f081918cb30"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IcmpTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PingC.IcmpC.IcmpP" loc="10(PingC.IcmpC.IcmpP):../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IcmpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IcmpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IcmpQueueC.PacketQueueC" loc="8(IcmpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0818f15b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0818f14230"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpQueueC.PacketQueueC.PacketQueueP" loc="11(IcmpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="3">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f081918cb30"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IcmpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PingP" loc="8:../tinyos_ws18/tos/lib_ecs/ping/PingP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ping/PingP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GlcdC" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
        <short>&#10; High level implementation for KS0108 Glcd&#10; </short>
        <long>&#10; High level implementation for KS0108 Glcd&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="GlcdP" loc="41:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <module/>
    </component>
    <component qname="HplKS0108C" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
        <short>&#10; Configuration for KS0108 GLCD Display&#10; </short>
        <long>&#10; Configuration for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplKS0108P" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
        <short>&#10; Hpl implementation for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl implementation for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10; Based on an implementation of Andreas Hagmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC" loc="6:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortAP" loc="6(HplAtm128GeneralIOFastPortC.PortAP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortBP" loc="6(HplAtm128GeneralIOFastPortC.PortBP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortCP" loc="6(HplAtm128GeneralIOFastPortC.PortCP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortDP" loc="6(HplAtm128GeneralIOFastPortC.PortDP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortEP" loc="6(HplAtm128GeneralIOFastPortC.PortEP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortFP" loc="6(HplAtm128GeneralIOFastPortC.PortFP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortGP" loc="6(HplAtm128GeneralIOFastPortC.PortGP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortHP" loc="6(HplAtm128GeneralIOFastPortC.PortHP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortJP" loc="6(HplAtm128GeneralIOFastPortC.PortJP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortKP" loc="6(HplAtm128GeneralIOFastPortC.PortKP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortLP" loc="6(HplAtm128GeneralIOFastPortC.PortLP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:9">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="38:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc" safe="">
      <documentation loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Enc28j60C" loc="7:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Harald Glanzer, 0727156 TU Wien&#10;&#10; overhauled by Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Enc28j60P" loc="9:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/enc28j60/enc28j60.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Harald Glanzer, 0727156 TU Wien&#10;&#10; overhauled by Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280SpiC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <documentation loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280SpiP" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc" safe="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.h">
        <short>&#10; </short>
        <long>&#10; @author Markus Hartmann e988811@student.tuwien.ac.at&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280SpiC.Arbiter" loc="83(Atm1280SpiC.Arbiter):../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280SpiC.Arbiter.Queue" loc="42(Atm1280SpiC.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280SpiC.Arbiter.Arbiter" loc="49(Atm1280SpiC.Arbiter.Arbiter):../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpC" loc="10(DatabaseC.UdpC):../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UdpC"/>
        <arguments>
          <value cst="I:50000">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IpC" loc="10(UdpTransceiverC.IpC):../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IpC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IpC.IpP" loc="10(UdpTransceiverC.IpC.IpP):../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UdpTransceiverC.IcmpC" loc="10(UdpTransceiverC.IcmpC):../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <instance number="1">
        <component-ref qname="IcmpC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IcmpC.IcmpP" loc="10(UdpTransceiverC.IcmpC.IcmpP):../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IcmpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpC.UdpP" loc="10(DatabaseC.UdpC.UdpP):../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UdpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UdpQueueC.PacketQueueC" loc="8(UdpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f08192c2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f08192c1390"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpQueueC.PacketQueueC.PacketQueueP" loc="11(UdpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="4">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f081918cb30"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DatabaseC.UdpMsgPool" loc="41(DatabaseC.UdpMsgPool):../tinyos_ws18/tos/system/PoolC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f08192d7880"/>
            <typename><typedef-ref name="udp_msg_t" ref="0x7f08192d4230"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DatabaseC.UdpMsgPool.PoolP" loc="53(DatabaseC.UdpMsgPool.PoolP):../tinyos_ws18/tos/system/PoolP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f08188f0340"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpSendQ" loc="42(DatabaseC.UdpSendQ):../tinyos_ws18/tos/system/QueueC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f08192d7880"/>
              <typename><typedef-ref name="udp_msg_t" ref="0x7f08192d4230"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpRecvQ" loc="42(DatabaseC.UdpRecvQ):../tinyos_ws18/tos/system/QueueC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f08192d7880"/>
              <typename><typedef-ref name="udp_msg_t" ref="0x7f08192d4230"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FMClickC" loc="11:FMClick/FMClickC.nc">
      <documentation loc="1:FMClick/FMClickC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; Configuration of the FMClick module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FMClickP" loc="17:FMClick/FMClickP.nc">
      <documentation loc="1:FMClick/FMClickP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; FMClick module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.I2C" loc="43(FMClickC.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../tinyos_ws18/tos/system/LedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc" safe="">
      <documentation loc="35:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../tinyos_ws18/tos/system/NoLedsC.nc">
      <documentation loc="35:../tinyos_ws18/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.Timer" loc="44(FMClickC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; Changed for Atm1280&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA" loc="40(HplAtm1280GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit0" loc="41(HplAtm1280GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="48">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit1" loc="41(HplAtm1280GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="49">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit2" loc="41(HplAtm1280GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="50">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit3" loc="41(HplAtm1280GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="51">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit4" loc="41(HplAtm1280GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="52">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit5" loc="41(HplAtm1280GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="53">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit6" loc="41(HplAtm1280GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="54">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit7" loc="41(HplAtm1280GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="55">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB" loc="40(HplAtm1280GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit0" loc="41(HplAtm1280GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="56">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit1" loc="41(HplAtm1280GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="57">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit2" loc="41(HplAtm1280GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="58">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit3" loc="41(HplAtm1280GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="59">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit4" loc="41(HplAtm1280GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="60">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit5" loc="41(HplAtm1280GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="61">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit6" loc="41(HplAtm1280GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="62">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit7" loc="41(HplAtm1280GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="63">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC" loc="40(HplAtm1280GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit0" loc="41(HplAtm1280GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="64">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit1" loc="41(HplAtm1280GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="65">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit2" loc="41(HplAtm1280GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="66">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit3" loc="41(HplAtm1280GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="67">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit4" loc="41(HplAtm1280GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="68">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit5" loc="41(HplAtm1280GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="69">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit6" loc="41(HplAtm1280GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="70">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit7" loc="41(HplAtm1280GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="71">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD" loc="40(HplAtm1280GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit0" loc="41(HplAtm1280GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="72">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit1" loc="41(HplAtm1280GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="73">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit2" loc="41(HplAtm1280GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="74">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit3" loc="41(HplAtm1280GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="75">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit4" loc="41(HplAtm1280GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="76">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit5" loc="41(HplAtm1280GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="77">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit6" loc="41(HplAtm1280GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="78">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit7" loc="41(HplAtm1280GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="79">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE" loc="40(HplAtm1280GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit0" loc="41(HplAtm1280GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="80">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit1" loc="41(HplAtm1280GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="81">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit2" loc="41(HplAtm1280GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="82">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit3" loc="41(HplAtm1280GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="83">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit4" loc="41(HplAtm1280GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="84">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit5" loc="41(HplAtm1280GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="85">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit6" loc="41(HplAtm1280GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="86">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit7" loc="41(HplAtm1280GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="87">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF" loc="40(HplAtm1280GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit0" loc="41(HplAtm1280GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="88">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit1" loc="41(HplAtm1280GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="89">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit2" loc="41(HplAtm1280GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="90">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit3" loc="41(HplAtm1280GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="91">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit4" loc="41(HplAtm1280GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="92">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit5" loc="41(HplAtm1280GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="93">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit6" loc="41(HplAtm1280GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="94">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit7" loc="41(HplAtm1280GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="95">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F0" loc="42(HplAtm1280GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F1" loc="42(HplAtm1280GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F2" loc="42(HplAtm1280GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F3" loc="42(HplAtm1280GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F4" loc="42(HplAtm1280GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F5" loc="42(HplAtm1280GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F6" loc="42(HplAtm1280GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F7" loc="42(HplAtm1280GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G0" loc="42(HplAtm1280GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G1" loc="42(HplAtm1280GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G2" loc="42(HplAtm1280GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G3" loc="42(HplAtm1280GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G4" loc="42(HplAtm1280GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G5" loc="42(HplAtm1280GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H0" loc="42(HplAtm1280GeneralIOC.H0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H1" loc="42(HplAtm1280GeneralIOC.H1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H2" loc="42(HplAtm1280GeneralIOC.H2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H3" loc="42(HplAtm1280GeneralIOC.H3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H4" loc="42(HplAtm1280GeneralIOC.H4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H5" loc="42(HplAtm1280GeneralIOC.H5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H6" loc="42(HplAtm1280GeneralIOC.H6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H7" loc="42(HplAtm1280GeneralIOC.H7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J0" loc="42(HplAtm1280GeneralIOC.J0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J1" loc="42(HplAtm1280GeneralIOC.J1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J2" loc="42(HplAtm1280GeneralIOC.J2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J3" loc="42(HplAtm1280GeneralIOC.J3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J4" loc="42(HplAtm1280GeneralIOC.J4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J5" loc="42(HplAtm1280GeneralIOC.J5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J6" loc="42(HplAtm1280GeneralIOC.J6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J7" loc="42(HplAtm1280GeneralIOC.J7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K0" loc="42(HplAtm1280GeneralIOC.K0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K1" loc="42(HplAtm1280GeneralIOC.K1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K2" loc="42(HplAtm1280GeneralIOC.K2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K3" loc="42(HplAtm1280GeneralIOC.K3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K4" loc="42(HplAtm1280GeneralIOC.K4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K5" loc="42(HplAtm1280GeneralIOC.K5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K6" loc="42(HplAtm1280GeneralIOC.K6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K7" loc="42(HplAtm1280GeneralIOC.K7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L0" loc="42(HplAtm1280GeneralIOC.L0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L1" loc="42(HplAtm1280GeneralIOC.L1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L2" loc="42(HplAtm1280GeneralIOC.L2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L3" loc="42(HplAtm1280GeneralIOC.L3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L4" loc="42(HplAtm1280GeneralIOC.L4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L5" loc="42(HplAtm1280GeneralIOC.L5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L6" loc="42(HplAtm1280GeneralIOC.L6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L7" loc="42(HplAtm1280GeneralIOC.L7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PS2C" loc="11:PS2/PS2C.nc">
      <documentation loc="1:PS2/PS2C.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file    PS2C.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the PS2 module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PS2P" loc="18:PS2/PS2P.nc">
      <module/>
    </component>
    <component qname="HplAtmegaPinChange2C" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <module/>
    </component>
    <component qname="VolumeAdcC" loc="13:VolumeAdc/VolumeAdcC.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the VolumeAdc module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="VolumeAdcP" loc="13:VolumeAdc/VolumeAdcP.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; VolumeAdc module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="VolumeAdcC.Adc" loc="21(VolumeAdcC.Adc):../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <documentation loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcP" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc" safe="">
      <documentation loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
        <short>&#10; Internal component of the Atmega1280 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1280 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm1280AdcC" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280AdcP" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc" safe="">
      <documentation loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter" loc="89(Atm1280AdcC.AdcArbiter):../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Queue" loc="42(Atm1280AdcC.AdcArbiter.Queue):../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Arbiter" loc="52(Atm1280AdcC.AdcArbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.PM" loc="67(Atm1280AdcC.PM):../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.PM.PowerManager" loc="58(Atm1280AdcC.PM.PowerManager):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc" safe="">
      <documentation loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
        <short>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RadioScannerAppC.Timer" loc="44(RadioScannerAppC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="ETHER_TYPE" ref="0x7f0819214670" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
          <component-ref qname="LlcC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LlcP" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="ETHER_TYPE" ref="0x7f08191bd530" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
          <component-ref qname="LlcP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketQueueC" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="ITEM_TYPE" ref="0x7f081918cb30" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
          <component-ref qname="PacketQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f081918cb30"/></type-var>
        </typedef>
        <constant name="LEN" ref="0x7f081918ce60" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
          <component-ref qname="PacketQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc" abstract="">
      <parameters>
        <typedef name="ITEM_TYPE" ref="0x7f081917dad0" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
          <component-ref qname="PacketQueueP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f081917dad0"/></type-var>
        </typedef>
        <constant name="QUEUE_LEN" ref="0x7f081917de40" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
          <component-ref qname="PacketQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../tinyos_ws18/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncC" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc" abstract="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f08190c6c70" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f08190c6c70"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f08190c3060" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f08190c33f0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncP" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f08190b7020" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f08190b7020"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f08190b73b0" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f08190b7740" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0818fcd160" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0818fcd160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0818f9a230" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0818f9a230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f0818f9a560" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0818f4bde0" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0818f4bde0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="IcmpC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc" abstract="">
      <parameters>
        <constant name="TYPE" ref="0x7f0818f14650" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
          <component-ref qname="IcmpC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IpC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PROTOCOL" ref="0x7f0818f076b0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
          <component-ref qname="IpC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IpP" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PROTOCOL" ref="0x7f0818f03650" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
          <component-ref qname="IpP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="IcmpP" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="TYPE" ref="0x7f0818eb7020" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
          <component-ref qname="IcmpP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f0818d51900" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f0818d51c70" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f0818d4e020" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f0818d43d00" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f0818d400d0" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f0818d40460" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f0818d407b0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f0818cae890" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f0818caec20" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f0818cab020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f0818cab370" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortP" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f0818c0aba0" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f0818c07020" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f0818c07390" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f0818a20e40" loc="83:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f0818a11210" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../tinyos_ws18/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f08189883d0" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f0818988760" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f0818988af0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f0818988e40" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="UdpC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PORT" ref="0x7f0818947450" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
          <component-ref qname="UdpC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="UdpP" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PORT" ref="0x7f0818940e70" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
          <component-ref qname="UdpP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:../tinyos_ws18/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f08188f0340" loc="41:../tinyos_ws18/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f08188f0340"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x7f08188f06b0" loc="41:../tinyos_ws18/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:../tinyos_ws18/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x7f08188e95c0" loc="53:../tinyos_ws18/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x7f08188e95c0"/></type-var>
        </typedef>
        <constant name="size" ref="0x7f08188e9900" loc="53:../tinyos_ws18/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:../tinyos_ws18/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x7f08188c8760" loc="42:../tinyos_ws18/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x7f08188c8760"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x7f08188c8ae0" loc="42:../tinyos_ws18/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f081878cc20" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f081877ca00" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f08184994c0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f0818499860" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f0818499c00" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f0818498020" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f0818264020" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f081825eac0" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadC" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f08181ee1f0" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f08181ee1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f08193aabf0" loc="58:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f08193aabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f08193ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f08193ab720" loc="57:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f08193ab720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f08193abaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f08193a7d50" loc="52:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f08193a7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f08193a6100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f08193add00" loc="46:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f08193add00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f08193a80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f08193a7020" loc="50:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f08193a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f08193a73a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f08193a7530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f08193a76c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f08193a7850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f08193a79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f081939f7a0" loc="45:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f081939f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f081939fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f081939f0c0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f081939f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f081939f440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f081939e020" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f081939e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f081939e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f08193976f0" loc="4:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f08193976f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0819397a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f0819397020" loc="3:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f0819397020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f08193973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f081938e860" loc="51:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f081938e860"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f081938ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f081938d020" loc="52:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f081938d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f081938d3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f081938d530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f081938d6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f081938d850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f081938d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f081937a720" loc="60:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f081937a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f081937aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f08193a9e20" loc="57:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f08193a9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f081937b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f081937a020" loc="59:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f081937a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f081937a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f081937b4b0" loc="58:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f081937b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f081937b830"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f081937b9c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f081937bb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f081952ebd0" loc="48:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f081952ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0819562020"/>
        <function-ref name="runTask" scoped="" ref="0x7f08195621b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f0819538a20" loc="47:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f0819538a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0819538da0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f0819ee6020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f0819ee61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f08194389e0" loc="56:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f08194389e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0819438d60"/>
        <function-ref name="runTask" scoped="" ref="0x7f0819436020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f08194330d0" loc="57:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f08194330d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f0819433450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f0819439990" loc="55:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f0819439990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0819439d10"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f0819438020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f08194381b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f0819416de0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f0819416de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f0819419180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f0819451080" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f0819451080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f0819451400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f08194175a0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f08194175a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f0819417920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DB" ref="0x7f0819354590" loc="21:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DB" scoped="" ref="0x7f0819354590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f0819354910"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f0819354aa0"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f0819354c30"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f0819354dc0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f081935c020"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f081935c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f081936f0c0" loc="18:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f081936f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f081936f440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x7f081935c4d0" loc="22:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x7f081935c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f081935c850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="volumeKnob" ref="0x7f0819343860" loc="25:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="volumeKnob" scoped="" ref="0x7f0819343860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0819348480"/>
        <function-ref name="readDone" scoped="" ref="0x7f0819348900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inputTuneChannel" ref="0x7f081932f840" loc="59:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inputTuneChannel" scoped="" ref="0x7f081932f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f081932fbc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f081932fd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Keyboard" ref="0x7f0819346d20" loc="24:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Keyboard" scoped="" ref="0x7f0819346d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f08193520e0"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f0819352270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="handleChar" ref="0x7f081932eab0" loc="65:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="handleChar" scoped="" ref="0x7f081932eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f081932ee30"/>
        <function-ref name="runTask" scoped="" ref="0x7f081932c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioInitFail" ref="0x7f08193157e0" loc="167:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioInitFail" scoped="" ref="0x7f08193157e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0819315b60"/>
        <function-ref name="runTask" scoped="" ref="0x7f0819315cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seekBand" ref="0x7f0819319590" loc="156:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seekBand" scoped="" ref="0x7f0819319590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0819319910"/>
        <function-ref name="runTask" scoped="" ref="0x7f0819319aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedSeeking" ref="0x7f081930c190" loc="191:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedSeeking" scoped="" ref="0x7f081930c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f081930c510"/>
        <function-ref name="runTask" scoped="" ref="0x7f081930c6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="handleRDS" ref="0x7f0819307190" loc="207:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="handleRDS" scoped="" ref="0x7f0819307190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0819307510"/>
        <function-ref name="runTask" scoped="" ref="0x7f08193076a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DBInit" ref="0x7f081936ee10" loc="20:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DBInit" scoped="" ref="0x7f081936ee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f081936d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Radio" ref="0x7f0819349360" loc="23:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Radio" scoped="" ref="0x7f0819349360"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f08193534d0"/>
        <function-ref name="initDone" scoped="" ref="0x7f0819349870"/>
        <function-ref name="setVolume" scoped="" ref="0x7f0819349a00"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f0819349b90"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f0819349d20"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f0819353020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f08193531b0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f0819353340"/>
        <function-ref name="seek" scoped="" ref="0x7f08193496e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedTuning" ref="0x7f08193129e0" loc="173:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedTuning" scoped="" ref="0x7f08193129e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0819312d60"/>
        <function-ref name="runTask" scoped="" ref="0x7f0819311020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readyScreen" ref="0x7f08193171d0" loc="161:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readyScreen" scoped="" ref="0x7f08193171d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0819317650"/>
        <function-ref name="runTask" scoped="" ref="0x7f08193177e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f081935d980" loc="19:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f081935d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f081936eb10"/>
        <function-ref name="drawRect" scoped="" ref="0x7f081936e020"/>
        <function-ref name="drawLine" scoped="" ref="0x7f081936e1b0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f081936e340"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f081936e4d0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f081936e660"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f081936e7f0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f081935dd00"/>
        <function-ref name="drawText" scoped="" ref="0x7f081936e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f0819338e20" loc="26:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0819338e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0819335390"/>
        <function-ref name="fired" scoped="" ref="0x7f0819337970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0819336720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f08193362a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f0819335c90"/>
        <function-ref name="gett0" scoped="" ref="0x7f0819335810"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0819337df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0819341a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0819336d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0819337020"/>
        <function-ref name="stop" scoped="" ref="0x7f08193374f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f08192d4690" loc="17:Database/DatabaseC.nc">
      <component-ref qname="DatabaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f08192d4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f08192d4a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Database" ref="0x7f08192d4cc0" loc="18:Database/DatabaseC.nc">
      <component-ref qname="DatabaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Database" scoped="" ref="0x7f08192d4cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f08192d20a0"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f08192d2230"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f08192d23c0"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f08192d2550"/>
        <function-ref name="getChannel" scoped="" ref="0x7f08192d26e0"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f08192d2870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RecvQ" ref="0x7f081929ed30" loc="34:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RecvQ" scoped="" ref="0x7f081929ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f08192d7880"/>
              <typename><typedef-ref name="udp_msg_t" ref="0x7f08192d4230"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f081929bba0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f081929a950"/>
        <function-ref name="element" scoped="" ref="0x7f0819299020"/>
        <function-ref name="full" scoped="" ref="0x7f081929ddc0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f081929b720"/>
        <function-ref name="dequeue" scoped="" ref="0x7f081929a2a0"/>
        <function-ref name="empty" scoped="" ref="0x7f081929d940"/>
        <function-ref name="size" scoped="" ref="0x7f081929b2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQ" ref="0x7f08192a8190" loc="33:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQ" scoped="" ref="0x7f08192a8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f08192d7880"/>
              <typename><typedef-ref name="udp_msg_t" ref="0x7f08192d4230"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f081929f020"/>
        <function-ref name="enqueue" scoped="" ref="0x7f081929fd80"/>
        <function-ref name="element" scoped="" ref="0x7f081929e440"/>
        <function-ref name="full" scoped="" ref="0x7f08192a7260"/>
        <function-ref name="maxSize" scoped="" ref="0x7f08192a7b60"/>
        <function-ref name="dequeue" scoped="" ref="0x7f081929f6d0"/>
        <function-ref name="empty" scoped="" ref="0x7f08192a8d80"/>
        <function-ref name="size" scoped="" ref="0x7f08192a76e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f08192b67b0" loc="30:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f08192b67b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f08192b6b30"/>
        <function-ref name="getGateway" scoped="" ref="0x7f08192b6cc0"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f08192b6e50"/>
        <function-ref name="getIp" scoped="" ref="0x7f08192bb020"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f08192bb1b0"/>
        <function-ref name="setIp" scoped="" ref="0x7f08192bb340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f0819297ae0" loc="48:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f0819297ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0819297e60"/>
        <function-ref name="runTask" scoped="" ref="0x7f0819295020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f08192c9aa0" loc="23:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f08192c9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f08192c9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Database" ref="0x7f08192c8120" loc="24:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Database" scoped="" ref="0x7f08192c8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f08192c84a0"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f08192c8630"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f08192c87c0"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f08192c8950"/>
        <function-ref name="getChannel" scoped="" ref="0x7f08192c8ae0"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f08192c8c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpSend" ref="0x7f08192be5f0" loc="28:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f08192be5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08192be970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08192beb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Control" ref="0x7f08192b2960" loc="31:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Control" scoped="" ref="0x7f08192b2960"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f08192b2ce0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f08192b2e70"/>
        <function-ref name="start" scoped="" ref="0x7f08192ba030"/>
        <function-ref name="stop" scoped="" ref="0x7f08192ba1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpReceive" ref="0x7f08192bc8b0" loc="29:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f08192bc8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f08192bcc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MsgPool" ref="0x7f08192ab770" loc="32:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MsgPool" scoped="" ref="0x7f08192ab770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f08192d7880"/>
            <typename><typedef-ref name="udp_msg_t" ref="0x7f08192d4230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f08192b1860"/>
        <function-ref name="maxSize" scoped="" ref="0x7f08192b5c90"/>
        <function-ref name="empty" scoped="" ref="0x7f08192b5390"/>
        <function-ref name="put" scoped="" ref="0x7f08192b1170"/>
        <function-ref name="size" scoped="" ref="0x7f08192b5810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f08192996c0" loc="36:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f08192996c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f08192987f0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f0819299bd0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f0819299d60"/>
        <function-ref name="setPixel" scoped="" ref="0x7f0819298020"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f08192981b0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f0819298340"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f08192984d0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f0819299a40"/>
        <function-ref name="drawText" scoped="" ref="0x7f0819298660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="recvTask" ref="0x7f08192959b0" loc="49:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="recvTask" scoped="" ref="0x7f08192959b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0819295d30"/>
        <function-ref name="runTask" scoped="" ref="0x7f0819294020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f081921f620" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f081921f620"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f08192c9080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f08192c9600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f081921e390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f081921e8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpControl" ref="0x7f081921b020" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f081921b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f081921b3a0"/>
        <function-ref name="getGateway" scoped="" ref="0x7f081921b530"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f081921b6c0"/>
        <function-ref name="getIp" scoped="" ref="0x7f081921b850"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f081921b9e0"/>
        <function-ref name="setIp" scoped="" ref="0x7f081921bb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpPacket" ref="0x7f081921aaf0" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f081921aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f081921ae70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f08192188a0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f08192188a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0819218c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f081920d360" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f081920d360"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f08192c9080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f08192c9600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f081920c020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f081920c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcReceive" ref="0x7f0819208020" loc="16:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f0819208020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f08192083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpControl" ref="0x7f081920b690" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f081920b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f081920ba10"/>
        <function-ref name="getGateway" scoped="" ref="0x7f081920bba0"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f081920bd30"/>
        <function-ref name="getIp" scoped="" ref="0x7f081920a020"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f081920a1b0"/>
        <function-ref name="setIp" scoped="" ref="0x7f081920a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcSend" ref="0x7f0819205580" loc="15:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f0819205580"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0819205900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0819205a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Arp" ref="0x7f08191fb820" loc="17:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f08191fb820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f08191fbba0"/>
        <function-ref name="resolved" scoped="" ref="0x7f08191fbd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0819204020" loc="18:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0819204020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f08192043a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpPacket" ref="0x7f0819204690" loc="19:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f0819204690"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f0819204a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f081920b020" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f081920b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f081920b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f08191c0d90" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="IpTransceiverC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f08191c0d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0819147180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f08191c05f0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="IpTransceiverC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f08191c05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08191c0970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08191c0b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f08191bc930" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f08191bc930"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f081920f7e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f081920fd60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08191bb560"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08191bba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f08191b9520" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f08191b9520"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f08191b98a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacControl" ref="0x7f08191b1140" loc="14:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f08191b1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f08191b14c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mac" ref="0x7f08191b47f0" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f08191b47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08191b4b70"/>
        <function-ref name="received" scoped="" ref="0x7f08191b4d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08191b8020"/>
        <function-ref name="getMac" scoped="" ref="0x7f08191b81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f08191b0290" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f08191b0290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f081920f7e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f081920fd60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08191b0e80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08191af3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f08191afe30" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f08191afe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f08191ae1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacControl" ref="0x7f08191ad020" loc="14:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f08191ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f08191ad3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mac" ref="0x7f08191ae490" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f08191ae490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08191ae810"/>
        <function-ref name="received" scoped="" ref="0x7f08191ae9a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08191aeb30"/>
        <function-ref name="getMac" scoped="" ref="0x7f08191aecc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f08181ab1b0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="IpTransceiverC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f08181ab1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08181ab530"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08181ab6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcQueue" ref="0x7f08181ab950" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="IpTransceiverC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f08181ab950"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08181abcd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08181abe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcQueue" ref="0x7f081918d1d0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <component-ref qname="LlcQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f081918d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f081918d550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f081918d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f081915cd50" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="LlcQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f081915cd50"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f081920f7e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f081920fd60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f081915b980"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0819159020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f081918be10" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="LlcQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f081918be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f081920f7e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f081920fd60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f081915c020"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f081918aa80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f081915c4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f081819d770" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f081819d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f081920f7e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f081920fd60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f081819c390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f081819c8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f08181a0a00" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f08181a0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f081920f7e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f081920fd60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f081819eb80"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f081819e670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f081819d090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f081819cd60" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f081819cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f081819a180"/>
        <function-ref name="runTask" scoped="" ref="0x7f081819a310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f0819155250" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <component-ref qname="LlcQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0819155250"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f081920f7e0"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f081920fd60"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0819154380"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0819155e40"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0819154850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcQueue" ref="0x7f0819156840" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <component-ref qname="LlcQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f0819156840"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0819156bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0819156d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f08191438c0" loc="10:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <component-ref qname="ArpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f08191438c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f0819143c40"/>
        <function-ref name="getGateway" scoped="" ref="0x7f0819143dd0"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f0819142020"/>
        <function-ref name="getIp" scoped="" ref="0x7f08191421b0"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f0819142340"/>
        <function-ref name="setIp" scoped="" ref="0x7f08191424d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Arp" ref="0x7f08191430c0" loc="9:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <component-ref qname="ArpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f08191430c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f0819143440"/>
        <function-ref name="resolved" scoped="" ref="0x7f08191435d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f081913f9e0" loc="13:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f081913f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f08191ffcc0"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f08191fe650"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f081913e670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f081913eb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timeout" ref="0x7f081913a0b0" loc="15:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timeout" scoped="" ref="0x7f081913a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0819136630"/>
        <function-ref name="fired" scoped="" ref="0x7f0819139b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0819137920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f08191374a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f0819135020"/>
        <function-ref name="gett0" scoped="" ref="0x7f0819136ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0819137020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f081913aca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0819136020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f08191391b0"/>
        <function-ref name="stop" scoped="" ref="0x7f0819139680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClearCacheTimeout" ref="0x7f08191356e0" loc="16:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClearCacheTimeout" scoped="" ref="0x7f08191356e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0819131c40"/>
        <function-ref name="fired" scoped="" ref="0x7f08191321e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0819131020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0819132ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f0819130590"/>
        <function-ref name="gett0" scoped="" ref="0x7f0819130110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0819132660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0819134390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0819131630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0819134860"/>
        <function-ref name="stop" scoped="" ref="0x7f0819134d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcReceive" ref="0x7f081912f320" loc="18:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f081912f320"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f081912f6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f081913c260" loc="14:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f081913c260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f08191ffcc0"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f08191fe650"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f081913b390"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f081913ce50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f081913b860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Arp" ref="0x7f081913f020" loc="12:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f081913f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f081913f3a0"/>
        <function-ref name="resolved" scoped="" ref="0x7f081913f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcSend" ref="0x7f0819130a10" loc="17:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f0819130a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0819130d90"/>
        <function-ref name="sendDone" scoped="" ref="0x7f081912f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f081912f990" loc="19:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f081912f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f081912fd10"/>
        <function-ref name="getGateway" scoped="" ref="0x7f081912d020"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f081912d1b0"/>
        <function-ref name="getIp" scoped="" ref="0x7f081912d340"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f081912d4d0"/>
        <function-ref name="setIp" scoped="" ref="0x7f081912d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MacControl" ref="0x7f081912d960" loc="20:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f081912d960"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f081912dce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f081912c020" loc="21:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f081912c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f081912c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0818f38140" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="ArpC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0818f38140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0818f34630"/>
        <function-ref name="fired" scoped="" ref="0x7f0818f37b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0818f36920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0818f364a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f0818f33020"/>
        <function-ref name="gett0" scoped="" ref="0x7f0818f34ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0818f36020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0818f38d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0818f34020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0818f37220"/>
        <function-ref name="stop" scoped="" ref="0x7f0818f376f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f08190eeaa0" loc="49:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f08190eeaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f08190ea020"/>
        <function-ref name="fired" scoped="" ref="0x7f08190ec510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f08190eb300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f08190ece10"/>
        <function-ref name="getdt" scoped="" ref="0x7f08190ea920"/>
        <function-ref name="gett0" scoped="" ref="0x7f08190ea4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f08190ec990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f08190ed6b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f08190eb910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f08190edb80"/>
        <function-ref name="stop" scoped="" ref="0x7f08190ec090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f08190e55a0" loc="46:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f08190e55a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f08190e1a80"/>
        <function-ref name="fired" scoped="" ref="0x7f08190e2090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f08190e2e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f08190e2990"/>
        <function-ref name="getdt" scoped="" ref="0x7f08190e04a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f08190e0020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f08190e2510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f08190e4200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f08190e1470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f08190e46d0"/>
        <function-ref name="stop" scoped="" ref="0x7f08190e4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f08190de020" loc="47:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f08190de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f08190dec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f08190e87a0" loc="45:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f08190e87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f08190e8b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f08190c8b40" loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f08190c8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f08190cc970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f08190c7340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f08190cce30"/>
        <function-ref name="overflow" scoped="" ref="0x7f08190c7800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f08190db7a0" loc="27:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f08190db7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f08190dbb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f08190d7440" loc="28:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f08190d7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f08190cfdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f08190d6da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f08190cf760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f08190cf2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f08190ce2a0"/>
        <function-ref name="start" scoped="" ref="0x7f08190d63d0"/>
        <function-ref name="stop" scoped="" ref="0x7f08190d68e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f0818fd84b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f0818fd84b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0818fd5db0"/>
        <function-ref name="fired" scoped="" ref="0x7f0818fd6da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f0818fd5760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0818fd52a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0818fd42a0"/>
        <function-ref name="start" scoped="" ref="0x7f0818fd63d0"/>
        <function-ref name="stop" scoped="" ref="0x7f0818fd68e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0818fd9ba0" loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0818fd9ba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f081953a020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f081953a020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0818fd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f0818fd48d0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0818fd48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0818fd3780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0818fd1150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0818fd3c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f0818fd1610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f081816fe20" loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f081816fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f081816e1c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f081816e350"/>
        <function-ref name="getControlA" scoped="" ref="0x7f081816e4e0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f081816e670"/>
        <function-ref name="setControlB" scoped="" ref="0x7f081816e800"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f081816e990"/>
        <function-ref name="getControlB" scoped="" ref="0x7f081816eb20"/>
        <function-ref name="setControlA" scoped="" ref="0x7f081816ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f081817e530" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f081817e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f081817bdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f081817cda0"/>
        <function-ref name="startAt" scoped="" ref="0x7f081817b760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f081817b2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f081817a2a0"/>
        <function-ref name="start" scoped="" ref="0x7f081817c3d0"/>
        <function-ref name="stop" scoped="" ref="0x7f081817c8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f081817fcb0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f081817fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f081817e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f081817a8d0" loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f081817a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0818179780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0818177150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0818179c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f0818177610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x7f0818169450" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f0818169450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f08181697d0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f0818169960"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f0818169af0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f0818169c80"/>
        <function-ref name="countBusy" scoped="" ref="0x7f0818169e10"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f0818168020"/>
        <function-ref name="getAssr" scoped="" ref="0x7f08181681b0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f0818168340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f081816d0a0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f081816d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f081816ba10"/>
        <function-ref name="fired" scoped="" ref="0x7f081816c6c0"/>
        <function-ref name="get" scoped="" ref="0x7f081816dcd0"/>
        <function-ref name="reset" scoped="" ref="0x7f081816cb80"/>
        <function-ref name="isOn" scoped="" ref="0x7f0818169020"/>
        <function-ref name="set" scoped="" ref="0x7f081816c1b0"/>
        <function-ref name="start" scoped="" ref="0x7f081816b090"/>
        <function-ref name="stop" scoped="" ref="0x7f081816b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f0818177bc0" loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0818177bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f081816f020"/>
        <function-ref name="test" scoped="" ref="0x7f0818171590"/>
        <function-ref name="get" scoped="" ref="0x7f0818176820"/>
        <function-ref name="setScale" scoped="" ref="0x7f081816f4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7f081816f9f0"/>
        <function-ref name="reset" scoped="" ref="0x7f0818175720"/>
        <function-ref name="overflow" scoped="" ref="0x7f0818175260"/>
        <function-ref name="isOn" scoped="" ref="0x7f0818171a50"/>
        <function-ref name="set" scoped="" ref="0x7f0818176ce0"/>
        <function-ref name="start" scoped="" ref="0x7f0818175be0"/>
        <function-ref name="stop" scoped="" ref="0x7f08181710d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f081904a570" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f081904a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f081904a8f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f081904aa80"/>
        <function-ref name="getControlA" scoped="" ref="0x7f081904ac10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f081904ada0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f0819049020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f08190491b0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f0819049340"/>
        <function-ref name="setControlA" scoped="" ref="0x7f08190494d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f0819045d60" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f0819045d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f0819044180"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f0819044310"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f08190444a0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f0819044630"/>
        <function-ref name="countBusy" scoped="" ref="0x7f08190447c0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f0819044950"/>
        <function-ref name="getAssr" scoped="" ref="0x7f0819044ae0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f0819044c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f08190499d0" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f08190499d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0819045350"/>
        <function-ref name="fired" scoped="" ref="0x7f0819046020"/>
        <function-ref name="get" scoped="" ref="0x7f0819048630"/>
        <function-ref name="reset" scoped="" ref="0x7f08190464e0"/>
        <function-ref name="isOn" scoped="" ref="0x7f0819045810"/>
        <function-ref name="set" scoped="" ref="0x7f0819048af0"/>
        <function-ref name="start" scoped="" ref="0x7f08190469a0"/>
        <function-ref name="stop" scoped="" ref="0x7f0819046e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f081904f190" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f081904f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f081904b4e0"/>
        <function-ref name="test" scoped="" ref="0x7f081904cb30"/>
        <function-ref name="get" scoped="" ref="0x7f081904fdc0"/>
        <function-ref name="setScale" scoped="" ref="0x7f081904b9a0"/>
        <function-ref name="getScale" scoped="" ref="0x7f081904a020"/>
        <function-ref name="reset" scoped="" ref="0x7f081904ecb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f081904e7f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f081904b020"/>
        <function-ref name="set" scoped="" ref="0x7f081904e2e0"/>
        <function-ref name="start" scoped="" ref="0x7f081904c1b0"/>
        <function-ref name="stop" scoped="" ref="0x7f081904c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f081903b7b0" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f081903b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f081903bb30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f081903bcc0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f081903be50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f081903a020"/>
        <function-ref name="setControlB" scoped="" ref="0x7f081903a1b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f081903a340"/>
        <function-ref name="getControlB" scoped="" ref="0x7f081903a4d0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f081903a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f0819035020" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f0819035020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f08190353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f0819035750" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f0819035750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f0819035ad0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f0819035c60"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f0819035df0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f0819034020"/>
        <function-ref name="countBusy" scoped="" ref="0x7f08190341b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f0819034340"/>
        <function-ref name="getAssr" scoped="" ref="0x7f08190344d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f0819034660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f081903ab60" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f081903ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0819036550"/>
        <function-ref name="fired" scoped="" ref="0x7f08190371f0"/>
        <function-ref name="get" scoped="" ref="0x7f08190397d0"/>
        <function-ref name="reset" scoped="" ref="0x7f08190376b0"/>
        <function-ref name="isOn" scoped="" ref="0x7f0819036a10"/>
        <function-ref name="set" scoped="" ref="0x7f0819039c90"/>
        <function-ref name="start" scoped="" ref="0x7f0819037b70"/>
        <function-ref name="stop" scoped="" ref="0x7f0819036090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0819040270" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0819040270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f081903c810"/>
        <function-ref name="test" scoped="" ref="0x7f081903de60"/>
        <function-ref name="get" scoped="" ref="0x7f081903f020"/>
        <function-ref name="setScale" scoped="" ref="0x7f081903ccd0"/>
        <function-ref name="getScale" scoped="" ref="0x7f081903b260"/>
        <function-ref name="reset" scoped="" ref="0x7f081903d020"/>
        <function-ref name="overflow" scoped="" ref="0x7f081903f9f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f081903c350"/>
        <function-ref name="set" scoped="" ref="0x7f081903f4e0"/>
        <function-ref name="start" scoped="" ref="0x7f081903d4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f081903d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f0818f9f020" loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f0818f9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0818f9f3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f0818f9f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f0818fa4cd0" loc="49:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f0818fa4cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0818fa0670"/>
        <function-ref name="fired" scoped="" ref="0x7f0818fa1550"/>
        <function-ref name="startAt" scoped="" ref="0x7f0818fa0020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0818fa1a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f0818fa0b30"/>
        <function-ref name="start" scoped="" ref="0x7f0818fa2b60"/>
        <function-ref name="stop" scoped="" ref="0x7f0818fa1090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0818fa9830" loc="48:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0818fa9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0818fa5cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f0818fa6300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0818fa50d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0818fa6c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f0818fa4660"/>
        <function-ref name="gett0" scoped="" ref="0x7f0818fa41e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0818fa6780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0818fa8480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0818fa56e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0818fa8950"/>
        <function-ref name="stop" scoped="" ref="0x7f0818fa8e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f0818f4ea00" loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f0818f4ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0818f4ed80"/>
        <function-ref name="runTask" scoped="" ref="0x7f0818f4c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f0818f53640" loc="49:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f0818f53640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0818f4fc40"/>
        <function-ref name="fired" scoped="" ref="0x7f0818f501e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0818f4f020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0818f50ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f0818f4e590"/>
        <function-ref name="gett0" scoped="" ref="0x7f0818f4e110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0818f50660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0818f51390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0818f4f630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0818f51860"/>
        <function-ref name="stop" scoped="" ref="0x7f0818f51d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0818f59150" loc="48:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0818f59150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0818f54700"/>
        <function-ref name="fired" scoped="" ref="0x7f0818f57c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0818f56a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0818f565b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f0818f53090"/>
        <function-ref name="gett0" scoped="" ref="0x7f0818f54ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0818f56110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0818f59d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0818f540d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0818f572a0"/>
        <function-ref name="stop" scoped="" ref="0x7f0818f57790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f0818f4a790" loc="48:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f0818f4a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0818f403f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f0818f40a60" loc="49:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f0818f40a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0818f3f890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f0818f3e260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f0818f3fd50"/>
        <function-ref name="overflow" scoped="" ref="0x7f0818f3e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0818f32b00" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="ArpC.ClearCacheTimeoutC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0818f32b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f0818f2d110"/>
        <function-ref name="fired" scoped="" ref="0x7f0818f305b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f0818f2f4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f0818f2f020"/>
        <function-ref name="getdt" scoped="" ref="0x7f0818f2da10"/>
        <function-ref name="gett0" scoped="" ref="0x7f0818f2d590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f0818f30a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f0818f31750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f0818f2fab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f0818f31c20"/>
        <function-ref name="stop" scoped="" ref="0x7f0818f30130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f0818f2a020" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="ArpC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f0818f2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0818f2a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f0818f2b700" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="ArpC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f0818f2b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818f2ba80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818f2bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f08181138f0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="ArpC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f08181138f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818113c70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818113e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcQueue" ref="0x7f08181120c0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="ArpC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f08181120c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818112440"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08181125d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f0818f25360" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="ArpC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0818f25360"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f08191ffcc0"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f08191fe650"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818f24020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818f24530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f0818f284a0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="ArpC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0818f284a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f08191ffcc0"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f08191fe650"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818f265e0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0818f260d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818f26ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f0818108240" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0818108240"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f08191ffcc0"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f08191fe650"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818108e30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818106380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f081810a510" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f081810a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f08191ffcc0"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f08191fe650"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818109640"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0818109130"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818109b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f0818106840" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f0818106840"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0818106bc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f0818106d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f0818f18d90" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="PingC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f0818f18d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0818e8f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f0818f185f0" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="PingC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f0818f185f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818f18970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818f18b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f0818f129e0" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <component-ref qname="IcmpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0818f129e0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0818f15b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0818f14230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818f09670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818f09b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f0818f08610" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <component-ref qname="IcmpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f0818f08610"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0818f08990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f0818f05430" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="IcmpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f0818f05430"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818f057b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818f05940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f0818f05bd0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="IcmpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f0818f05bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0818ed8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f08180ee680" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="IcmpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f08180ee680"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08180eea00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08180eeb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpQueue" ref="0x7f08180eee20" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="IcmpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f08180eee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08180ed1c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08180ed350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpQueue" ref="0x7f0818ef4d60" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <component-ref qname="IpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f0818ef4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818ef1180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818ef1310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f0818eec020" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0818eec020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f08192c9080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f08192c9600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818eecc10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818eea170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f0818eee060" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0818eee060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f08192c9080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f08192c9600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818eed1b0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0818eeec50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818eed680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f08180e1890" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f08180e1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f08192c9080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f08192c9600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08180e04c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08180e09d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f08180e3b70" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f08180e3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f08192c9080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f08192c9600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08180e2ca0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f08180e2790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08180e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f08180de020" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f08180de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f08180de3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f08180de530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpQueue" ref="0x7f0818ee99f0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <component-ref qname="IpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f0818ee99f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818ee9d70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818ee6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f0818ee64e0" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <component-ref qname="IpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0818ee64e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f08192c9080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f08192c9600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818ee5620"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0818ee5110"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818ee5af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f0818ed5290" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0818ed5290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0818f15b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0818f14230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818ed5e80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818ed43b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpSend" ref="0x7f0818ed2490" loc="13:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f0818ed2490"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818ed2810"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818ed29a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f0818ed4df0" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f0818ed4df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0818ed21c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpReceive" ref="0x7f0818ed2c90" loc="14:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f0818ed2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0818ed10a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpQueue" ref="0x7f08180f3060" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="PingC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f08180f3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08180f33e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08180f3570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f08180f4870" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="PingC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f08180f4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08180f4bf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08180f4d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpQueue" ref="0x7f0818ea9410" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <component-ref qname="IcmpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f0818ea9410"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818ea9790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818ea9920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f0818ea49d0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0818ea49d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0818f15b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0818f14230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818ea35f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818ea3b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f0818ea7ae0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0818ea7ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0818f15b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0818f14230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818ea5c60"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0818ea5750"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818ea4170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f08180c7d20" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f08180c7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0818f15b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0818f14230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08180c6940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08180c6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f08180c9020" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f08180c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0818f15b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0818f14230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08180c7170"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f08180c9c10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08180c7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f08180c5340" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f08180c5340"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f08180c56c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f08180c5850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpQueue" ref="0x7f0818e9e450" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <component-ref qname="IcmpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f0818e9e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818e9e7d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818e9e960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f0818e9ee30" loc="13:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <component-ref qname="IcmpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0818e9ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f0818f15b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f0818f14230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818e9c020"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0818e9da80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818e9c4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpReceive" ref="0x7f0818e8c130" loc="9:../tinyos_ws18/tos/lib_ecs/ping/PingP.nc">
      <component-ref qname="PingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f0818e8c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0818e8c4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpSend" ref="0x7f0818e8c7a0" loc="10:../tinyos_ws18/tos/lib_ecs/ping/PingP.nc">
      <component-ref qname="PingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f0818e8c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818e8cb20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818e8ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f0818e83220" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <component-ref qname="GlcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f0818e83220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f0818e82340"/>
        <function-ref name="drawRect" scoped="" ref="0x7f0818e83730"/>
        <function-ref name="drawLine" scoped="" ref="0x7f0818e838c0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f0818e83a50"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f0818e83be0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f0818e83d70"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f0818e82020"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f0818e835a0"/>
        <function-ref name="drawText" scoped="" ref="0x7f0818e821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0818e4f020" loc="44:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0818e4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0818e4f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hpl" ref="0x7f0818e48640" loc="45:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hpl" scoped="" ref="0x7f0818e48640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f0818e489c0"/>
        <function-ref name="init" scoped="" ref="0x7f0818e48b50"/>
        <function-ref name="dataRead" scoped="" ref="0x7f0818e48ce0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f0818e48e70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f0818e4e030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f0818e51bf0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f0818e51bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f0818e50ca0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f0818e501b0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f0818e50340"/>
        <function-ref name="setPixel" scoped="" ref="0x7f0818e504d0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f0818e50660"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f0818e507f0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f0818e50980"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f0818e50020"/>
        <function-ref name="drawText" scoped="" ref="0x7f0818e50b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f0818e80640" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <component-ref qname="HplKS0108C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f0818e80640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f0818e809c0"/>
        <function-ref name="init" scoped="" ref="0x7f0818e80b50"/>
        <function-ref name="dataRead" scoped="" ref="0x7f0818e80ce0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f0818e80e70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f0818dd8030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EN" ref="0x7f0818dcb370" loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EN" scoped="" ref="0x7f0818dcb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818dcb6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818dcb880"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818dcba10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818dcbba0"/>
        <function-ref name="get" scoped="" ref="0x7f0818dcbd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818dca020"/>
        <function-ref name="set" scoped="" ref="0x7f0818dca1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818dca340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f0818dbea00" loc="34:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f0818dbea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194825c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f0819482930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f0818dc6890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_0" ref="0x7f0818dce7b0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_0" scoped="" ref="0x7f0818dce7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818dceb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818dcecc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818dcee50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818dd4020"/>
        <function-ref name="get" scoped="" ref="0x7f0818dd41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818dd4340"/>
        <function-ref name="set" scoped="" ref="0x7f0818dd44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818dd4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RST" ref="0x7f0818dca690" loc="30:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RST" scoped="" ref="0x7f0818dca690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818dcaa10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818dcaba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818dcad30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818dc9020"/>
        <function-ref name="get" scoped="" ref="0x7f0818dc91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818dc9340"/>
        <function-ref name="set" scoped="" ref="0x7f0818dc94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818dc9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RS" ref="0x7f0818dd3cd0" loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RS" scoped="" ref="0x7f0818dd3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818dcd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818dcd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818dcd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818dcd550"/>
        <function-ref name="get" scoped="" ref="0x7f0818dcd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818dcd870"/>
        <function-ref name="set" scoped="" ref="0x7f0818dcda00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818dcdb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_1" ref="0x7f0818dd49c0" loc="26:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_1" scoped="" ref="0x7f0818dd49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818dd4d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818dd3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818dd31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818dd3340"/>
        <function-ref name="get" scoped="" ref="0x7f0818dd34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818dd3660"/>
        <function-ref name="set" scoped="" ref="0x7f0818dd37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818dd3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f0818dd8be0" loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f0818dd8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f0818dd5020"/>
        <function-ref name="init" scoped="" ref="0x7f0818dd51b0"/>
        <function-ref name="dataRead" scoped="" ref="0x7f0818dd5340"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f0818dd54d0"/>
        <function-ref name="controlRead" scoped="" ref="0x7f0818dd5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RW" ref="0x7f0818dcc020" loc="28:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RW" scoped="" ref="0x7f0818dcc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818dcc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818dcc530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818dcc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818dcc850"/>
        <function-ref name="get" scoped="" ref="0x7f0818dcc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818dccb70"/>
        <function-ref name="set" scoped="" ref="0x7f0818dccd00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818dcb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Data" ref="0x7f0818dc1d40" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Data" scoped="" ref="0x7f0818dc1d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818dc70e0"/>
        <function-ref name="clear" scoped="" ref="0x7f0818dc7270"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818dc7400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818dc7590"/>
        <function-ref name="read" scoped="" ref="0x7f0818dc7720"/>
        <function-ref name="write" scoped="" ref="0x7f0818dc78b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818dc7a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f0818d5a020" loc="98:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f0818d5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d5a7a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d5a930"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d5aac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d5ac50"/>
        <function-ref name="get" scoped="" ref="0x7f0818d5ade0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d59020"/>
        <function-ref name="set" scoped="" ref="0x7f0818d591b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d59340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f0818d77800" loc="72:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f0818d77800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d77b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d77d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d76020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d761b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818d76340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d764d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818d76660"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d767f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f0818d6b670" loc="83:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f0818d6b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d6b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d6bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d6bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d6a020"/>
        <function-ref name="get" scoped="" ref="0x7f0818d6a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d6a340"/>
        <function-ref name="set" scoped="" ref="0x7f0818d6a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d6a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f0818d61020" loc="92:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f0818d61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d613a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d61530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d616c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d61850"/>
        <function-ref name="get" scoped="" ref="0x7f0818d619e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d61b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818d61d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f0818d54350" loc="103:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f0818d54350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d546d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d54860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d549f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d54b80"/>
        <function-ref name="get" scoped="" ref="0x7f0818d54d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d53020"/>
        <function-ref name="set" scoped="" ref="0x7f0818d531b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d53340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f0818d8f990" loc="50:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f0818d8f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d8fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d8e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d8e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d8e340"/>
        <function-ref name="get" scoped="" ref="0x7f0818d8e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d8e660"/>
        <function-ref name="set" scoped="" ref="0x7f0818d8e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d8e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f0818d64990" loc="90:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f0818d64990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d64d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d63020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d631b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d63340"/>
        <function-ref name="get" scoped="" ref="0x7f0818d634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d63660"/>
        <function-ref name="set" scoped="" ref="0x7f0818d637f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d63980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f0818d8c020" loc="53:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f0818d8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d8c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d8c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d8c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d8c850"/>
        <function-ref name="get" scoped="" ref="0x7f0818d8c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d8cb70"/>
        <function-ref name="set" scoped="" ref="0x7f0818d8cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f0818d80020" loc="64:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f0818d80020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d803a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d80530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d806c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d80850"/>
        <function-ref name="get" scoped="" ref="0x7f0818d809e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d80b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818d80d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f0818d73060" loc="75:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f0818d73060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d733e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d73570"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d73700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d73890"/>
        <function-ref name="get" scoped="" ref="0x7f0818d73a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d73bb0"/>
        <function-ref name="set" scoped="" ref="0x7f0818d73d40"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f0818d67020" loc="86:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f0818d67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d673a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d67530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d676c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d67850"/>
        <function-ref name="get" scoped="" ref="0x7f0818d679e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d67b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818d67d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d66020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f0818d96b20" loc="45:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f0818d96b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d94020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d941b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d94340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d944d0"/>
        <function-ref name="get" scoped="" ref="0x7f0818d94660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d947f0"/>
        <function-ref name="set" scoped="" ref="0x7f0818d94980"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d94b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f0818d89990" loc="56:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f0818d89990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d89d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d88020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d881b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d88340"/>
        <function-ref name="get" scoped="" ref="0x7f0818d884d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d88660"/>
        <function-ref name="set" scoped="" ref="0x7f0818d887f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d88980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f0818d7d990" loc="67:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f0818d7d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d7dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d7c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d7c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d7c340"/>
        <function-ref name="get" scoped="" ref="0x7f0818d7c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d7c660"/>
        <function-ref name="set" scoped="" ref="0x7f0818d7c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d7c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f0818d70990" loc="78:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f0818d70990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d70d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d6f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d6f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d6f340"/>
        <function-ref name="get" scoped="" ref="0x7f0818d6f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d6f660"/>
        <function-ref name="set" scoped="" ref="0x7f0818d6f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d6f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f0818d5e990" loc="95:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f0818d5e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d5ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d5d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d5d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d5d340"/>
        <function-ref name="get" scoped="" ref="0x7f0818d5d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d5d660"/>
        <function-ref name="set" scoped="" ref="0x7f0818d5d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d5d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f0818d57cb0" loc="101:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f0818d57cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d560a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d56230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d563c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d56550"/>
        <function-ref name="get" scoped="" ref="0x7f0818d566e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d56870"/>
        <function-ref name="set" scoped="" ref="0x7f0818d56a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d56b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f0818d6d020" loc="81:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f0818d6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d6d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d6d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d6d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d6d850"/>
        <function-ref name="get" scoped="" ref="0x7f0818d6d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d6db70"/>
        <function-ref name="set" scoped="" ref="0x7f0818d6dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f0818d91350" loc="48:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f0818d91350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d916d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d91860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d919f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d91b80"/>
        <function-ref name="get" scoped="" ref="0x7f0818d91d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d90020"/>
        <function-ref name="set" scoped="" ref="0x7f0818d901b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d90340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f0818d85350" loc="59:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f0818d85350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d856d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d85860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d859f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d85b80"/>
        <function-ref name="get" scoped="" ref="0x7f0818d85d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d84020"/>
        <function-ref name="set" scoped="" ref="0x7f0818d841b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d84340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f0818d59670" loc="99:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f0818d59670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d599f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d59b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d59d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d58020"/>
        <function-ref name="get" scoped="" ref="0x7f0818d581b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d58340"/>
        <function-ref name="set" scoped="" ref="0x7f0818d584d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d58660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f0818d83990" loc="62:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f0818d83990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d83d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d82020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d821b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d82340"/>
        <function-ref name="get" scoped="" ref="0x7f0818d824d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d82660"/>
        <function-ref name="set" scoped="" ref="0x7f0818d827f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d82980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f0818d76b20" loc="73:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f0818d76b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d75020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d751b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d75340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d754d0"/>
        <function-ref name="get" scoped="" ref="0x7f0818d75660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d757f0"/>
        <function-ref name="set" scoped="" ref="0x7f0818d75980"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d75b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f0818d6a990" loc="84:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f0818d6a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d6ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d69020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d691b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d69340"/>
        <function-ref name="get" scoped="" ref="0x7f0818d694d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d69660"/>
        <function-ref name="set" scoped="" ref="0x7f0818d697f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d69980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f0818d60350" loc="93:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f0818d60350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d606d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d60860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d609f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d60b80"/>
        <function-ref name="get" scoped="" ref="0x7f0818d60d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d5f020"/>
        <function-ref name="set" scoped="" ref="0x7f0818d5f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d5f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f0818d8ecb0" loc="51:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f0818d8ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d8d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d8d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d8d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d8d550"/>
        <function-ref name="get" scoped="" ref="0x7f0818d8d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d8d870"/>
        <function-ref name="set" scoped="" ref="0x7f0818d8da00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d8db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f0818d8b350" loc="54:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f0818d8b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d8b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d8b860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d8b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d8bb80"/>
        <function-ref name="get" scoped="" ref="0x7f0818d8bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d8a020"/>
        <function-ref name="set" scoped="" ref="0x7f0818d8a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d8a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f0818d7f350" loc="65:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f0818d7f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d7f6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d7f860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d7f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d7fb80"/>
        <function-ref name="get" scoped="" ref="0x7f0818d7fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d7e020"/>
        <function-ref name="set" scoped="" ref="0x7f0818d7e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d7e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f0818d72350" loc="76:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f0818d72350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d726d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d72860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d729f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d72b80"/>
        <function-ref name="get" scoped="" ref="0x7f0818d72d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d71020"/>
        <function-ref name="set" scoped="" ref="0x7f0818d711b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d71340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f0818d66350" loc="87:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f0818d66350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d666d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d66860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d669f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d66b80"/>
        <function-ref name="get" scoped="" ref="0x7f0818d66d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d65020"/>
        <function-ref name="set" scoped="" ref="0x7f0818d651b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d65340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f0818d94e40" loc="46:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f0818d94e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d931e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d93370"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d93500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d93690"/>
        <function-ref name="get" scoped="" ref="0x7f0818d93820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d939b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818d93b40"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d93cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f0818d88cb0" loc="57:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f0818d88cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d87180"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d87310"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d874a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d87630"/>
        <function-ref name="get" scoped="" ref="0x7f0818d877c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d87950"/>
        <function-ref name="set" scoped="" ref="0x7f0818d87ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d87c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f0818d7ccb0" loc="68:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f0818d7ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d7b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d7b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d7b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d7b550"/>
        <function-ref name="get" scoped="" ref="0x7f0818d7b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d7b870"/>
        <function-ref name="set" scoped="" ref="0x7f0818d7ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d7bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f0818d5dcb0" loc="96:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f0818d5dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d5b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d5b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d5b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d5b550"/>
        <function-ref name="get" scoped="" ref="0x7f0818d5b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d5b870"/>
        <function-ref name="set" scoped="" ref="0x7f0818d5ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d5bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f0818d79350" loc="71:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f0818d79350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d798d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d79a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d79bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d79d80"/>
        <function-ref name="get" scoped="" ref="0x7f0818d77020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d771b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818d77340"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d774d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f0818d6c350" loc="82:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f0818d6c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d6c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d6c860"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d6c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d6cb80"/>
        <function-ref name="get" scoped="" ref="0x7f0818d6cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d6b020"/>
        <function-ref name="set" scoped="" ref="0x7f0818d6b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d6b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f0818d63cb0" loc="91:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f0818d63cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d620a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d62230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d623c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d62550"/>
        <function-ref name="get" scoped="" ref="0x7f0818d626e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d62870"/>
        <function-ref name="set" scoped="" ref="0x7f0818d62a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d62b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f0818d55020" loc="102:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f0818d55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d553a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d55530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d556c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d55850"/>
        <function-ref name="get" scoped="" ref="0x7f0818d559e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d55b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818d55d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f0818d90670" loc="49:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f0818d90670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d909f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d90b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d90d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d8f020"/>
        <function-ref name="get" scoped="" ref="0x7f0818d8f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d8f340"/>
        <function-ref name="set" scoped="" ref="0x7f0818d8f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d8f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f0818d84670" loc="60:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f0818d84670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d849f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d84b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d84d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d83020"/>
        <function-ref name="get" scoped="" ref="0x7f0818d831b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d83340"/>
        <function-ref name="set" scoped="" ref="0x7f0818d834d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d83660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f0818d65670" loc="89:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f0818d65670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d659f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d65b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d65d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d64020"/>
        <function-ref name="get" scoped="" ref="0x7f0818d641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d64340"/>
        <function-ref name="set" scoped="" ref="0x7f0818d644d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d64660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f0818d82cb0" loc="63:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f0818d82cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d810a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d81230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d813c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d81550"/>
        <function-ref name="get" scoped="" ref="0x7f0818d816e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d81870"/>
        <function-ref name="set" scoped="" ref="0x7f0818d81a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d81b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f0818d75e40" loc="74:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f0818d75e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d741e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d74370"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d74500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d74690"/>
        <function-ref name="get" scoped="" ref="0x7f0818d74820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d749b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818d74b40"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d74cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f0818d69cb0" loc="85:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f0818d69cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d680a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d68230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d683c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d68550"/>
        <function-ref name="get" scoped="" ref="0x7f0818d686e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d68870"/>
        <function-ref name="set" scoped="" ref="0x7f0818d68a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d68b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f0818d5f670" loc="94:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f0818d5f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d5f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d5fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d5fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d5e020"/>
        <function-ref name="get" scoped="" ref="0x7f0818d5e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d5e340"/>
        <function-ref name="set" scoped="" ref="0x7f0818d5e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d5e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f0818d99860" loc="44:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f0818d99860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d99be0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d99d70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d96020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d961b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818d96340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d964d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818d96660"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d967f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f0818d8a670" loc="55:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f0818d8a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d8a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d8ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d8ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d89020"/>
        <function-ref name="get" scoped="" ref="0x7f0818d891b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d89340"/>
        <function-ref name="set" scoped="" ref="0x7f0818d894d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d89660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f0818d7e670" loc="66:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f0818d7e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d7e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d7eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d7ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d7d020"/>
        <function-ref name="get" scoped="" ref="0x7f0818d7d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d7d340"/>
        <function-ref name="set" scoped="" ref="0x7f0818d7d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d7d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f0818d71670" loc="77:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f0818d71670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d719f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d71b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d71d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d70020"/>
        <function-ref name="get" scoped="" ref="0x7f0818d701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d70340"/>
        <function-ref name="set" scoped="" ref="0x7f0818d704d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d70660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f0818d58990" loc="100:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f0818d58990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d58d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d57020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d571b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d57340"/>
        <function-ref name="get" scoped="" ref="0x7f0818d574d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d57660"/>
        <function-ref name="set" scoped="" ref="0x7f0818d577f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d57980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f0818d6fcb0" loc="80:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f0818d6fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d6e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d6e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d6e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d6e550"/>
        <function-ref name="get" scoped="" ref="0x7f0818d6e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d6e870"/>
        <function-ref name="set" scoped="" ref="0x7f0818d6ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d6eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f0818d7a020" loc="69:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f0818d7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d7a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d7a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d7a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d7a850"/>
        <function-ref name="get" scoped="" ref="0x7f0818d7a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d7ab70"/>
        <function-ref name="set" scoped="" ref="0x7f0818d7ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d79020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f0818d92060" loc="47:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f0818d92060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d923e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d92570"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d92700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d92890"/>
        <function-ref name="get" scoped="" ref="0x7f0818d92a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d92bb0"/>
        <function-ref name="set" scoped="" ref="0x7f0818d92d40"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f0818d86020" loc="58:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f0818d86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d863a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d86530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d866c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d86850"/>
        <function-ref name="get" scoped="" ref="0x7f0818d869e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d86b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818d86d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0818d07440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0818d07440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d077c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d07950"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d07ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d07c70"/>
        <function-ref name="get" scoped="" ref="0x7f0818d07e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d06020"/>
        <function-ref name="set" scoped="" ref="0x7f0818d061b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d06340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0818d048f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0818d048f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d04c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d04e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d03020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d031b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818d03340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d034d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818d03660"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d037f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0818d09140" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0818d09140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d094c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d09650"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d097e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d09970"/>
        <function-ref name="get" scoped="" ref="0x7f0818d09b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d09c90"/>
        <function-ref name="set" scoped="" ref="0x7f0818d09e20"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0818d065d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0818d065d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d06950"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d06ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d06c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d06e00"/>
        <function-ref name="get" scoped="" ref="0x7f0818d05020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d051b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818d05340"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0818d03a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0818d03a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d03e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d02020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d02340"/>
        <function-ref name="get" scoped="" ref="0x7f0818d024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d02660"/>
        <function-ref name="set" scoped="" ref="0x7f0818d027f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d02980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0818d082b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0818d082b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d08630"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d087c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d08950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d08ae0"/>
        <function-ref name="get" scoped="" ref="0x7f0818d08c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d08e00"/>
        <function-ref name="set" scoped="" ref="0x7f0818d07020"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0818d05760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0818d05760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d05ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d05c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d05e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d04020"/>
        <function-ref name="get" scoped="" ref="0x7f0818d041b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d04340"/>
        <function-ref name="set" scoped="" ref="0x7f0818d044d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d04660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0818d02c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0818d02c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818d01020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818d011b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818d01340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818d014d0"/>
        <function-ref name="get" scoped="" ref="0x7f0818d01660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818d017f0"/>
        <function-ref name="set" scoped="" ref="0x7f0818d01980"/>
        <function-ref name="clr" scoped="" ref="0x7f0818d01b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081807b6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081807b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081807ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f081807bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081807bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081807a020"/>
        <function-ref name="get" scoped="" ref="0x7f081807a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081807a340"/>
        <function-ref name="set" scoped="" ref="0x7f081807a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f081807a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08180789b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08180789b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818078d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818076020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08180761b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818076340"/>
        <function-ref name="get" scoped="" ref="0x7f08180764d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818076660"/>
        <function-ref name="set" scoped="" ref="0x7f08180767f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818076980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818074e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818074e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08180731c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818073350"/>
        <function-ref name="toggle" scoped="" ref="0x7f08180734e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818073670"/>
        <function-ref name="get" scoped="" ref="0x7f0818073800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818073990"/>
        <function-ref name="set" scoped="" ref="0x7f0818073b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0818073cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08180700a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08180700a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818070420"/>
        <function-ref name="isInput" scoped="" ref="0x7f08180705b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818070740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08180708d0"/>
        <function-ref name="get" scoped="" ref="0x7f0818070a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818070bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0818070d80"/>
        <function-ref name="clr" scoped="" ref="0x7f081806f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081806d3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081806d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081806d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f081806d900"/>
        <function-ref name="toggle" scoped="" ref="0x7f081806da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081806dc20"/>
        <function-ref name="get" scoped="" ref="0x7f081806ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081806c020"/>
        <function-ref name="set" scoped="" ref="0x7f081806c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f081806c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081806a6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081806a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081806aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f081806abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081806ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818069020"/>
        <function-ref name="get" scoped="" ref="0x7f08180691b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818069340"/>
        <function-ref name="set" scoped="" ref="0x7f08180694d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818069660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08180679b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08180679b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818067d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818066020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08180661b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818066340"/>
        <function-ref name="get" scoped="" ref="0x7f08180664d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818066660"/>
        <function-ref name="set" scoped="" ref="0x7f08180667f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818066980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818064e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818064e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08180631c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818063350"/>
        <function-ref name="toggle" scoped="" ref="0x7f08180634e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818063670"/>
        <function-ref name="get" scoped="" ref="0x7f0818063800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818063990"/>
        <function-ref name="set" scoped="" ref="0x7f0818063b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0818063cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0818cf8760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0818cf8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cf8ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cf8c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cf8e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cf7020"/>
        <function-ref name="get" scoped="" ref="0x7f0818cf71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cf7340"/>
        <function-ref name="set" scoped="" ref="0x7f0818cf74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cf7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0818cf5c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0818cf5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cf4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cf41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cf4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cf44d0"/>
        <function-ref name="get" scoped="" ref="0x7f0818cf4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cf47f0"/>
        <function-ref name="set" scoped="" ref="0x7f0818cf4980"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cf4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0818cfa3f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0818cfa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cfa770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cfa900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cfaa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cfac20"/>
        <function-ref name="get" scoped="" ref="0x7f0818cfadb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cf9020"/>
        <function-ref name="set" scoped="" ref="0x7f0818cf91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cf9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0818cf78f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0818cf78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cf7c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cf7e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cf6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cf61b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818cf6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cf64d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818cf6660"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cf67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0818cf4da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0818cf4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cf3180"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cf3310"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cf34a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cf3630"/>
        <function-ref name="get" scoped="" ref="0x7f0818cf37c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cf3950"/>
        <function-ref name="set" scoped="" ref="0x7f0818cf3ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cf3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0818cf95d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0818cf95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cf9950"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cf9ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cf9c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cf9e00"/>
        <function-ref name="get" scoped="" ref="0x7f0818cf8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cf81b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818cf8340"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cf84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0818cf6a80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0818cf6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cf6e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cf5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cf51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cf5340"/>
        <function-ref name="get" scoped="" ref="0x7f0818cf54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cf5660"/>
        <function-ref name="set" scoped="" ref="0x7f0818cf57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cf5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0818cf2020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0818cf2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cf23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cf2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cf26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cf2850"/>
        <function-ref name="get" scoped="" ref="0x7f0818cf29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cf2b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818cf2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cf1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818010a60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818010a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818010de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081800f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f081800f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081800f340"/>
        <function-ref name="get" scoped="" ref="0x7f081800f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081800f660"/>
        <function-ref name="set" scoped="" ref="0x7f081800f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f081800f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081800de20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081800de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081800c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081800c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f081800c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081800c670"/>
        <function-ref name="get" scoped="" ref="0x7f081800c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081800c990"/>
        <function-ref name="set" scoped="" ref="0x7f081800cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f081800ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08180090a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08180090a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818009420"/>
        <function-ref name="isInput" scoped="" ref="0x7f08180095b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818009740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08180098d0"/>
        <function-ref name="get" scoped="" ref="0x7f0818009a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818009bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0818009d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0818007020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08180053f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08180053f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818005770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818005900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818005a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818005c20"/>
        <function-ref name="get" scoped="" ref="0x7f0818005db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818004020"/>
        <function-ref name="set" scoped="" ref="0x7f08180041b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818004340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08180026d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08180026d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818002a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818002be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818002d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818001020"/>
        <function-ref name="get" scoped="" ref="0x7f08180011b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818001340"/>
        <function-ref name="set" scoped="" ref="0x7f08180014d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818001660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817fff9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817fff9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817fffd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817ffe020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817ffe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817ffe340"/>
        <function-ref name="get" scoped="" ref="0x7f0817ffe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817ffe660"/>
        <function-ref name="set" scoped="" ref="0x7f0817ffe7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817ffe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817ffce20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817ffce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817ffb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817ffb350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817ffb4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817ffb670"/>
        <function-ref name="get" scoped="" ref="0x7f0817ffb800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817ffb990"/>
        <function-ref name="set" scoped="" ref="0x7f0817ffbb20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817ffbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817ff80a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817ff80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817ff8420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817ff85b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817ff8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817ff88d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817ff8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817ff8bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817ff8d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817ff7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0818ce9a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0818ce9a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818ce9e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818ce8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818ce81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818ce8340"/>
        <function-ref name="get" scoped="" ref="0x7f0818ce84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818ce8660"/>
        <function-ref name="set" scoped="" ref="0x7f0818ce87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818ce8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0818ce5020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0818ce5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818ce53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818ce5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818ce56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818ce5850"/>
        <function-ref name="get" scoped="" ref="0x7f0818ce59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818ce5b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818ce5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818ce3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0818ceb7a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0818ceb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cebb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cebcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cebe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cea020"/>
        <function-ref name="get" scoped="" ref="0x7f0818cea1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cea340"/>
        <function-ref name="set" scoped="" ref="0x7f0818cea4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0818ce8c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0818ce8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818ce7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818ce71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818ce7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818ce74d0"/>
        <function-ref name="get" scoped="" ref="0x7f0818ce7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818ce77f0"/>
        <function-ref name="set" scoped="" ref="0x7f0818ce7980"/>
        <function-ref name="clr" scoped="" ref="0x7f0818ce7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0818ce32b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0818ce32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818ce3630"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818ce37c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818ce3950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818ce3ae0"/>
        <function-ref name="get" scoped="" ref="0x7f0818ce3c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818ce3e00"/>
        <function-ref name="set" scoped="" ref="0x7f0818ce2020"/>
        <function-ref name="clr" scoped="" ref="0x7f0818ce21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0818cea8f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0818cea8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818ceac70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818ceae00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818ce9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818ce91b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818ce9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818ce94d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818ce9660"/>
        <function-ref name="clr" scoped="" ref="0x7f0818ce97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0818ce7da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0818ce7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818ce6180"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818ce6310"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818ce64a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818ce6630"/>
        <function-ref name="get" scoped="" ref="0x7f0818ce67c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818ce6950"/>
        <function-ref name="set" scoped="" ref="0x7f0818ce6ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818ce6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0818ce2440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0818ce2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818ce27c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818ce2950"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818ce2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818ce2c70"/>
        <function-ref name="get" scoped="" ref="0x7f0818ce2e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818ce1020"/>
        <function-ref name="set" scoped="" ref="0x7f0818ce11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818ce1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817fa5c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817fa5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817fa40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817fa4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817fa43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817fa4550"/>
        <function-ref name="get" scoped="" ref="0x7f0817fa46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817fa4870"/>
        <function-ref name="set" scoped="" ref="0x7f0817fa4a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0817fa4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817fa2e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817fa2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817fa11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817fa1350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817fa14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817fa1670"/>
        <function-ref name="get" scoped="" ref="0x7f0817fa1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817fa1990"/>
        <function-ref name="set" scoped="" ref="0x7f0817fa1b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817fa1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817f9e0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817f9e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817f9e420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817f9e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817f9e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817f9e8d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817f9ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817f9ebf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817f9ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817f9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817f9a3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817f9a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817f9a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817f9a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817f9aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817f9ac20"/>
        <function-ref name="get" scoped="" ref="0x7f0817f9adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817f99020"/>
        <function-ref name="set" scoped="" ref="0x7f0817f991b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817f99340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817f976d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817f976d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817f97a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817f97be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817f97d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817f96020"/>
        <function-ref name="get" scoped="" ref="0x7f0817f961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817f96340"/>
        <function-ref name="set" scoped="" ref="0x7f0817f964d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817f96660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817f949b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817f949b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817f94d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817f93020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817f931b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817f93340"/>
        <function-ref name="get" scoped="" ref="0x7f0817f934d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817f93660"/>
        <function-ref name="set" scoped="" ref="0x7f0817f937f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817f93980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817f91e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817f91e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817f901c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817f90350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817f904e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817f90670"/>
        <function-ref name="get" scoped="" ref="0x7f0817f90800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817f90990"/>
        <function-ref name="set" scoped="" ref="0x7f0817f90b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817f90cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817f8d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817f8d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817f8d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817f8d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817f8d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817f8d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817f8da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817f8dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817f8dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817f8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0818cdada0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0818cdada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cd8180"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cd8310"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cd84a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cd8630"/>
        <function-ref name="get" scoped="" ref="0x7f0818cd87c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cd8950"/>
        <function-ref name="set" scoped="" ref="0x7f0818cd8ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cd8c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0818cd5440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0818cd5440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cd57c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cd5950"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cd5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cd5c70"/>
        <function-ref name="get" scoped="" ref="0x7f0818cd5e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cd4020"/>
        <function-ref name="set" scoped="" ref="0x7f0818cd41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cd4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0818cdca20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0818cdca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cdcda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cdb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cdb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cdb340"/>
        <function-ref name="get" scoped="" ref="0x7f0818cdb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cdb660"/>
        <function-ref name="set" scoped="" ref="0x7f0818cdb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cdb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0818cd7020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0818cd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cd73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cd7530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cd76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cd7850"/>
        <function-ref name="get" scoped="" ref="0x7f0818cd79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cd7b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818cd7d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0818cd45d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0818cd45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cd4950"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cd4ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cd4c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cd4e00"/>
        <function-ref name="get" scoped="" ref="0x7f0818cd3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cd31b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818cd3340"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cd34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0818cdbc10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0818cdbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cda020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cda1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cda340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cda4d0"/>
        <function-ref name="get" scoped="" ref="0x7f0818cda660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cda7f0"/>
        <function-ref name="set" scoped="" ref="0x7f0818cda980"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cdab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0818cd62b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0818cd62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cd6630"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cd67c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cd6950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cd6ae0"/>
        <function-ref name="get" scoped="" ref="0x7f0818cd6c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cd6e00"/>
        <function-ref name="set" scoped="" ref="0x7f0818cd5020"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cd51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0818cd3760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0818cd3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cd3ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cd3c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cd3e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cd2020"/>
        <function-ref name="get" scoped="" ref="0x7f0818cd21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cd2340"/>
        <function-ref name="set" scoped="" ref="0x7f0818cd24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cd2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817f3ac90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817f3ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817f390a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817f39230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817f393c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817f39550"/>
        <function-ref name="get" scoped="" ref="0x7f0817f396e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817f39870"/>
        <function-ref name="set" scoped="" ref="0x7f0817f39a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0817f39b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817f37e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817f37e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817f361c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817f36350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817f364e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817f36670"/>
        <function-ref name="get" scoped="" ref="0x7f0817f36800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817f36990"/>
        <function-ref name="set" scoped="" ref="0x7f0817f36b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817f36cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817f330a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817f330a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817f33420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817f335b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817f33740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817f338d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817f33a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817f33bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817f33d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817f32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817f303f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817f303f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817f30770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817f30900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817f30a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817f30c20"/>
        <function-ref name="get" scoped="" ref="0x7f0817f30db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817f2e020"/>
        <function-ref name="set" scoped="" ref="0x7f0817f2e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817f2e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817f2c6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817f2c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817f2ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817f2cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817f2cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817f2b020"/>
        <function-ref name="get" scoped="" ref="0x7f0817f2b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817f2b340"/>
        <function-ref name="set" scoped="" ref="0x7f0817f2b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817f2b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817f299b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817f299b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817f29d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817f28020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817f281b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817f28340"/>
        <function-ref name="get" scoped="" ref="0x7f0817f284d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817f28660"/>
        <function-ref name="set" scoped="" ref="0x7f0817f287f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817f28980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817f26e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817f26e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817f251c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817f25350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817f254e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817f25670"/>
        <function-ref name="get" scoped="" ref="0x7f0817f25800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817f25990"/>
        <function-ref name="set" scoped="" ref="0x7f0817f25b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817f25cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817f220a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817f220a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817f22420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817f225b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817f22740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817f228d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817f22a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817f22bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817f22d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817f21020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0818cc9020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0818cc9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cc93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cc9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cc96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cc9850"/>
        <function-ref name="get" scoped="" ref="0x7f0818cc99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cc9b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818cc9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cc8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0818cc65d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0818cc65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cc6950"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cc6ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cc6c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cc6e00"/>
        <function-ref name="get" scoped="" ref="0x7f0818cc5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cc51b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818cc5340"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cc54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0818cccd30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0818cccd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818ccb0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818ccb270"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818ccb400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818ccb590"/>
        <function-ref name="get" scoped="" ref="0x7f0818ccb720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818ccb8b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818ccba40"/>
        <function-ref name="clr" scoped="" ref="0x7f0818ccbbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0818cc82b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0818cc82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cc8630"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cc87c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cc8950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cc8ae0"/>
        <function-ref name="get" scoped="" ref="0x7f0818cc8c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cc8e00"/>
        <function-ref name="set" scoped="" ref="0x7f0818cc7020"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cc71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0818cc5760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0818cc5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cc5ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cc5c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cc5e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cc4020"/>
        <function-ref name="get" scoped="" ref="0x7f0818cc41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cc4340"/>
        <function-ref name="set" scoped="" ref="0x7f0818cc44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cc4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0818ccbe60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0818ccbe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cca210"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cca3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cca530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cca6c0"/>
        <function-ref name="get" scoped="" ref="0x7f0818cca850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cca9e0"/>
        <function-ref name="set" scoped="" ref="0x7f0818ccab70"/>
        <function-ref name="clr" scoped="" ref="0x7f0818ccad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0818cc7440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0818cc7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cc77c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cc7950"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cc7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cc7c70"/>
        <function-ref name="get" scoped="" ref="0x7f0818cc7e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cc6020"/>
        <function-ref name="set" scoped="" ref="0x7f0818cc61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cc6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0818cc48f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0818cc48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cc4c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cc4e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cc3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cc31b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818cc3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cc34d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818cc3660"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cc37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817ecfc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817ecfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817ece0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817ece230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817ece3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817ece550"/>
        <function-ref name="get" scoped="" ref="0x7f0817ece6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817ece870"/>
        <function-ref name="set" scoped="" ref="0x7f0817ecea00"/>
        <function-ref name="clr" scoped="" ref="0x7f0817eceb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817ecce20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817ecce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817ecb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817ecb350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817ecb4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817ecb670"/>
        <function-ref name="get" scoped="" ref="0x7f0817ecb800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817ecb990"/>
        <function-ref name="set" scoped="" ref="0x7f0817ecbb20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817ecbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817ec80a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817ec80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817ec8420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817ec85b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817ec8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817ec88d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817ec8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817ec8bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817ec8d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817ec7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817ec53f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817ec53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817ec5770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817ec5900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817ec5a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817ec5c20"/>
        <function-ref name="get" scoped="" ref="0x7f0817ec5db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817ec3020"/>
        <function-ref name="set" scoped="" ref="0x7f0817ec31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817ec3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817ec16d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817ec16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817ec1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817ec1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817ec1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817ec0020"/>
        <function-ref name="get" scoped="" ref="0x7f0817ec01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817ec0340"/>
        <function-ref name="set" scoped="" ref="0x7f0817ec04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817ec0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817ebe9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817ebe9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817ebed30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817ebd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817ebd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817ebd340"/>
        <function-ref name="get" scoped="" ref="0x7f0817ebd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817ebd660"/>
        <function-ref name="set" scoped="" ref="0x7f0817ebd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817ebd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817ebbe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817ebbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817eba1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817eba350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817eba4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817eba670"/>
        <function-ref name="get" scoped="" ref="0x7f0817eba800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817eba990"/>
        <function-ref name="set" scoped="" ref="0x7f0817ebab20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817ebacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817eb70a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817eb70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817eb7420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817eb75b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817eb7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817eb78d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817eb7a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817eb7bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817eb7d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817eb6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0818cba440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0818cba440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cba7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cba950"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cbaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cbac70"/>
        <function-ref name="get" scoped="" ref="0x7f0818cbae00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cb9020"/>
        <function-ref name="set" scoped="" ref="0x7f0818cb91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cb9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f0818cb78f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f0818cb78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cb7c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cb7e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cb6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cb61b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818cb6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cb64d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818cb6660"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cb67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0818cbc020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0818cbc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cbc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cbc530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cbc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cbc850"/>
        <function-ref name="get" scoped="" ref="0x7f0818cbc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cbcb70"/>
        <function-ref name="set" scoped="" ref="0x7f0818cbcd00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cbb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f0818cb95d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f0818cb95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cb9950"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cb9ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cb9c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cb9e00"/>
        <function-ref name="get" scoped="" ref="0x7f0818cb8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cb81b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818cb8340"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cb84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f0818cb6a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f0818cb6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cb6e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cb5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cb51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cb5340"/>
        <function-ref name="get" scoped="" ref="0x7f0818cb54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cb5660"/>
        <function-ref name="set" scoped="" ref="0x7f0818cb57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cb5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0818cbb2b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0818cbb2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cbb630"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cbb7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cbb950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cbbae0"/>
        <function-ref name="get" scoped="" ref="0x7f0818cbbc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cbbe00"/>
        <function-ref name="set" scoped="" ref="0x7f0818cba020"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f0818cb8760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f0818cb8760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cb8ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cb8c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cb8e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cb7020"/>
        <function-ref name="get" scoped="" ref="0x7f0818cb71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cb7340"/>
        <function-ref name="set" scoped="" ref="0x7f0818cb74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cb7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0818cb5c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0818cb5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cb3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cb31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cb3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818cb34d0"/>
        <function-ref name="get" scoped="" ref="0x7f0818cb3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cb37f0"/>
        <function-ref name="set" scoped="" ref="0x7f0818cb3980"/>
        <function-ref name="clr" scoped="" ref="0x7f0818cb3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817e64c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817e64c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817e630a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817e63230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817e633c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817e63550"/>
        <function-ref name="get" scoped="" ref="0x7f0817e636e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817e63870"/>
        <function-ref name="set" scoped="" ref="0x7f0817e63a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0817e63b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817e61e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817e61e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817e601c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817e60350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817e604e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817e60670"/>
        <function-ref name="get" scoped="" ref="0x7f0817e60800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817e60990"/>
        <function-ref name="set" scoped="" ref="0x7f0817e60b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817e60cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817e5d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817e5d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817e5d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817e5d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817e5d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817e5d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817e5da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817e5dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817e5dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817e5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817e5a3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817e5a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817e5a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817e5a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817e5aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817e5ac20"/>
        <function-ref name="get" scoped="" ref="0x7f0817e5adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817e59020"/>
        <function-ref name="set" scoped="" ref="0x7f0817e591b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817e59340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817e576d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817e576d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817e57a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817e57be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817e57d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817e55020"/>
        <function-ref name="get" scoped="" ref="0x7f0817e551b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817e55340"/>
        <function-ref name="set" scoped="" ref="0x7f0817e554d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817e55660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817e539b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817e539b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817e53d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817e52020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817e521b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817e52340"/>
        <function-ref name="get" scoped="" ref="0x7f0817e524d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817e52660"/>
        <function-ref name="set" scoped="" ref="0x7f0817e527f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817e52980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817e50e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817e50e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817e4f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817e4f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817e4f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817e4f670"/>
        <function-ref name="get" scoped="" ref="0x7f0817e4f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817e4f990"/>
        <function-ref name="set" scoped="" ref="0x7f0817e4fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817e4fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817e4c0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817e4c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817e4c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817e4c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817e4c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817e4c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817e4ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817e4cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817e4cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817e4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818cac260" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818cac260"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818cac5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818cac770"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818cac900"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818caca90"/>
        <function-ref name="get" scoped="" ref="0x7f0818cacc20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818cacdb0"/>
        <function-ref name="set" scoped="" ref="0x7f0818c95020"/>
        <function-ref name="clr" scoped="" ref="0x7f0818c951b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818c92d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818c92d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c910a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818c91230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c913c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818c91550"/>
        <function-ref name="get" scoped="" ref="0x7f0818c916e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c91870"/>
        <function-ref name="set" scoped="" ref="0x7f0818c91a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818c91b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818c8c6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818c8c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c8ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818c8cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c8cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818c8b020"/>
        <function-ref name="get" scoped="" ref="0x7f0818c8b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c8b340"/>
        <function-ref name="set" scoped="" ref="0x7f0818c8b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818c8b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818c86160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818c86160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c864e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818c86670"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c86800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818c86990"/>
        <function-ref name="get" scoped="" ref="0x7f0818c86b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c86cb0"/>
        <function-ref name="set" scoped="" ref="0x7f0818c86e40"/>
        <function-ref name="clr" scoped="" ref="0x7f0818c85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818c82c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818c82c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c810a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818c81230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c813c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818c81550"/>
        <function-ref name="get" scoped="" ref="0x7f0818c816e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c81870"/>
        <function-ref name="set" scoped="" ref="0x7f0818c81a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818c81b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818c7c6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818c7c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c7ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818c7cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c7cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818c7b020"/>
        <function-ref name="get" scoped="" ref="0x7f0818c7b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c7b340"/>
        <function-ref name="set" scoped="" ref="0x7f0818c7b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818c7b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818c76270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818c76270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c765f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818c76780"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c76910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818c76aa0"/>
        <function-ref name="get" scoped="" ref="0x7f0818c76c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c76dc0"/>
        <function-ref name="set" scoped="" ref="0x7f0818c75020"/>
        <function-ref name="clr" scoped="" ref="0x7f0818c751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818c72d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818c72d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c710a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818c71230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c713c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818c71550"/>
        <function-ref name="get" scoped="" ref="0x7f0818c716e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c71870"/>
        <function-ref name="set" scoped="" ref="0x7f0818c71a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818c71b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818c6c6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818c6c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c6ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818c6cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c6cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818c6b020"/>
        <function-ref name="get" scoped="" ref="0x7f0818c6b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c6b340"/>
        <function-ref name="set" scoped="" ref="0x7f0818c6b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818c6b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818c66160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818c66160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c664e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818c66670"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c66800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818c66990"/>
        <function-ref name="get" scoped="" ref="0x7f0818c66b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c66cb0"/>
        <function-ref name="set" scoped="" ref="0x7f0818c66e40"/>
        <function-ref name="clr" scoped="" ref="0x7f0818c65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818c62c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818c62c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c610a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818c61230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c613c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818c61550"/>
        <function-ref name="get" scoped="" ref="0x7f0818c616e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c61870"/>
        <function-ref name="set" scoped="" ref="0x7f0818c61a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818c61b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818c5c6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818c5c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c5ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818c5cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c5cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818c5b020"/>
        <function-ref name="get" scoped="" ref="0x7f0818c5b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c5b340"/>
        <function-ref name="set" scoped="" ref="0x7f0818c5b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818c5b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818c56160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818c56160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c564e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818c56670"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c56800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818c56990"/>
        <function-ref name="get" scoped="" ref="0x7f0818c56b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c56cb0"/>
        <function-ref name="set" scoped="" ref="0x7f0818c56e40"/>
        <function-ref name="clr" scoped="" ref="0x7f0818c55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818c52c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818c52c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c510a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818c51230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c513c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818c51550"/>
        <function-ref name="get" scoped="" ref="0x7f0818c516e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c51870"/>
        <function-ref name="set" scoped="" ref="0x7f0818c51a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818c51b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA" ref="0x7f0818c20c40" loc="7:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA" scoped="" ref="0x7f0818c20c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c1d020"/>
        <function-ref name="clear" scoped="" ref="0x7f0818c1d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c1d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c1d4d0"/>
        <function-ref name="read" scoped="" ref="0x7f0818c1d660"/>
        <function-ref name="write" scoped="" ref="0x7f0818c1d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f0818c1d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL" ref="0x7f0818c12870" loc="18:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL" scoped="" ref="0x7f0818c12870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c12bf0"/>
        <function-ref name="clear" scoped="" ref="0x7f0818c12d80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c11020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c111b0"/>
        <function-ref name="read" scoped="" ref="0x7f0818c11340"/>
        <function-ref name="write" scoped="" ref="0x7f0818c114d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818c11660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD" ref="0x7f0818c1be80" loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD" scoped="" ref="0x7f0818c1be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c19220"/>
        <function-ref name="clear" scoped="" ref="0x7f0818c193b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c19540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c196d0"/>
        <function-ref name="read" scoped="" ref="0x7f0818c19860"/>
        <function-ref name="write" scoped="" ref="0x7f0818c199f0"/>
        <function-ref name="set" scoped="" ref="0x7f0818c19b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG" ref="0x7f0818c161d0" loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG" scoped="" ref="0x7f0818c161d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c16550"/>
        <function-ref name="clear" scoped="" ref="0x7f0818c166e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c16870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c16a00"/>
        <function-ref name="read" scoped="" ref="0x7f0818c16b90"/>
        <function-ref name="write" scoped="" ref="0x7f0818c16d20"/>
        <function-ref name="set" scoped="" ref="0x7f0818c15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ" ref="0x7f0818c14550" loc="16:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ" scoped="" ref="0x7f0818c14550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c148d0"/>
        <function-ref name="clear" scoped="" ref="0x7f0818c14a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c14bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c14d80"/>
        <function-ref name="read" scoped="" ref="0x7f0818c13020"/>
        <function-ref name="write" scoped="" ref="0x7f0818c131b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818c13340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB" ref="0x7f0818c1dd20" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB" scoped="" ref="0x7f0818c1dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c1c0e0"/>
        <function-ref name="clear" scoped="" ref="0x7f0818c1c270"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c1c400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c1c590"/>
        <function-ref name="read" scoped="" ref="0x7f0818c1c720"/>
        <function-ref name="write" scoped="" ref="0x7f0818c1c8b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818c1ca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE" ref="0x7f0818c18020" loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE" scoped="" ref="0x7f0818c18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c183a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0818c18530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c186c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c18850"/>
        <function-ref name="read" scoped="" ref="0x7f0818c189e0"/>
        <function-ref name="write" scoped="" ref="0x7f0818c18b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818c18d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH" ref="0x7f0818c153c0" loc="15:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH" scoped="" ref="0x7f0818c153c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c15740"/>
        <function-ref name="clear" scoped="" ref="0x7f0818c158d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c15a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c15bf0"/>
        <function-ref name="read" scoped="" ref="0x7f0818c15d80"/>
        <function-ref name="write" scoped="" ref="0x7f0818c14020"/>
        <function-ref name="set" scoped="" ref="0x7f0818c141b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK" ref="0x7f0818c136e0" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK" scoped="" ref="0x7f0818c136e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c13a60"/>
        <function-ref name="clear" scoped="" ref="0x7f0818c13bf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c13d80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c12020"/>
        <function-ref name="read" scoped="" ref="0x7f0818c121b0"/>
        <function-ref name="write" scoped="" ref="0x7f0818c12340"/>
        <function-ref name="set" scoped="" ref="0x7f0818c124d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC" ref="0x7f0818c1cde0" loc="9:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC" scoped="" ref="0x7f0818c1cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c1b180"/>
        <function-ref name="clear" scoped="" ref="0x7f0818c1b310"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c1b4a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c1b630"/>
        <function-ref name="read" scoped="" ref="0x7f0818c1b7c0"/>
        <function-ref name="write" scoped="" ref="0x7f0818c1b950"/>
        <function-ref name="set" scoped="" ref="0x7f0818c1bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF" ref="0x7f0818c17100" loc="12:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF" scoped="" ref="0x7f0818c17100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c17480"/>
        <function-ref name="clear" scoped="" ref="0x7f0818c17610"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c177a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c17930"/>
        <function-ref name="read" scoped="" ref="0x7f0818c17ac0"/>
        <function-ref name="write" scoped="" ref="0x7f0818c17c50"/>
        <function-ref name="set" scoped="" ref="0x7f0818c17de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0818c09c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortAP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818c09c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818c080a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0818c08230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818c083c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818c08550"/>
        <function-ref name="read" scoped="" ref="0x7f0818c086e0"/>
        <function-ref name="write" scoped="" ref="0x7f0818c08870"/>
        <function-ref name="set" scoped="" ref="0x7f0818c08a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0818bef390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortBP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818bef390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818bef710"/>
        <function-ref name="clear" scoped="" ref="0x7f0818bef8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818befa30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818befbc0"/>
        <function-ref name="read" scoped="" ref="0x7f0818befd50"/>
        <function-ref name="write" scoped="" ref="0x7f0818bee020"/>
        <function-ref name="set" scoped="" ref="0x7f0818bee1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0818beb910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818beb910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818bebc90"/>
        <function-ref name="clear" scoped="" ref="0x7f0818bebe20"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818bea020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818bea1b0"/>
        <function-ref name="read" scoped="" ref="0x7f0818bea340"/>
        <function-ref name="write" scoped="" ref="0x7f0818bea4d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818bea660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0818be6cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818be6cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818be50a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0818be5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818be53c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818be5550"/>
        <function-ref name="read" scoped="" ref="0x7f0818be56e0"/>
        <function-ref name="write" scoped="" ref="0x7f0818be5870"/>
        <function-ref name="set" scoped="" ref="0x7f0818be5a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0818be0390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortEP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818be0390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818be0710"/>
        <function-ref name="clear" scoped="" ref="0x7f0818be08a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818be0a30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818be0bc0"/>
        <function-ref name="read" scoped="" ref="0x7f0818be0d50"/>
        <function-ref name="write" scoped="" ref="0x7f0818bdf020"/>
        <function-ref name="set" scoped="" ref="0x7f0818bdf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0818bdc910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortFP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818bdc910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818bdcc90"/>
        <function-ref name="clear" scoped="" ref="0x7f0818bdce20"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818bdb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818bdb1b0"/>
        <function-ref name="read" scoped="" ref="0x7f0818bdb340"/>
        <function-ref name="write" scoped="" ref="0x7f0818bdb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818bdb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0818bd7cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortGP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818bd7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818bd60a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0818bd6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818bd63c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818bd6550"/>
        <function-ref name="read" scoped="" ref="0x7f0818bd66e0"/>
        <function-ref name="write" scoped="" ref="0x7f0818bd6870"/>
        <function-ref name="set" scoped="" ref="0x7f0818bd6a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0818bd2c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortHP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818bd2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818bd10a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0818bd1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818bd13c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818bd1550"/>
        <function-ref name="read" scoped="" ref="0x7f0818bd16e0"/>
        <function-ref name="write" scoped="" ref="0x7f0818bd1870"/>
        <function-ref name="set" scoped="" ref="0x7f0818bd1a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0818bcec90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortJP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818bcec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818bcd0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0818bcd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818bcd3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818bcd550"/>
        <function-ref name="read" scoped="" ref="0x7f0818bcd6e0"/>
        <function-ref name="write" scoped="" ref="0x7f0818bcd870"/>
        <function-ref name="set" scoped="" ref="0x7f0818bcda00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0818bc9c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortKP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818bc9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818bc80a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0818bc8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818bc83c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818bc8550"/>
        <function-ref name="read" scoped="" ref="0x7f0818bc86e0"/>
        <function-ref name="write" scoped="" ref="0x7f0818bc8870"/>
        <function-ref name="set" scoped="" ref="0x7f0818bc8a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f0818bc4c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortLP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f0818bc4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818bc30a0"/>
        <function-ref name="clear" scoped="" ref="0x7f0818bc3230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818bc33c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818bc3550"/>
        <function-ref name="read" scoped="" ref="0x7f0818bc36e0"/>
        <function-ref name="write" scoped="" ref="0x7f0818bc3870"/>
        <function-ref name="set" scoped="" ref="0x7f0818bc3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f0818bb82e0" loc="40:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f0818bb82e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194825c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f0819482930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f0818bb7110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f0818bab330" loc="9:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f0818bab330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0818bab6b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0818bab840"/>
        <function-ref name="start" scoped="" ref="0x7f0818bab9d0"/>
        <function-ref name="stop" scoped="" ref="0x7f0818babb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Enc28j60Control" ref="0x7f0818b76ba0" loc="10:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Enc28j60Control" scoped="" ref="0x7f0818b76ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Enc28j60Control"/>
      </instance>
      <interface-functions>
        <function-ref name="linkChange" scoped="" ref="0x7f0818ba9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mac" ref="0x7f0818e846f0" loc="8:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f0818e846f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818e84a70"/>
        <function-ref name="received" scoped="" ref="0x7f0818e84c00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818e84d90"/>
        <function-ref name="getMac" scoped="" ref="0x7f0818bab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="intPin" ref="0x7f0818b72cf0" loc="13:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="intPin" scoped="" ref="0x7f0818b72cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818b710a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818b71230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818b713c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818b71550"/>
        <function-ref name="get" scoped="" ref="0x7f0818b716e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818b71870"/>
        <function-ref name="set" scoped="" ref="0x7f0818b71a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818b71b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f0818b6ecf0" loc="17:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f0818b6ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f0818b680a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f0818b68230"/>
        <function-ref name="start" scoped="" ref="0x7f0818b683c0"/>
        <function-ref name="stop" scoped="" ref="0x7f0818b68550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Enc28j60Control" ref="0x7f0818b68880" loc="18:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Enc28j60Control" scoped="" ref="0x7f0818b68880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Enc28j60Control"/>
      </instance>
      <interface-functions>
        <function-ref name="linkChange" scoped="" ref="0x7f0818b68c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f0818b67430" loc="15:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f0818b67430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f0818b677b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mac" ref="0x7f0818ba9b00" loc="10:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f0818ba9b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818ba9e80"/>
        <function-ref name="received" scoped="" ref="0x7f0818b74030"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818b741c0"/>
        <function-ref name="getMac" scoped="" ref="0x7f0818b74350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ssETH" ref="0x7f0818b746c0" loc="11:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ssETH" scoped="" ref="0x7f0818b746c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818b74a40"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818b74bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818b74d60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818b73020"/>
        <function-ref name="get" scoped="" ref="0x7f0818b731b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818b73340"/>
        <function-ref name="set" scoped="" ref="0x7f0818b734d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818b73660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="rstETH" ref="0x7f0818b739d0" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="rstETH" scoped="" ref="0x7f0818b739d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818b73d50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818b72020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818b721b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818b72340"/>
        <function-ref name="get" scoped="" ref="0x7f0818b724d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818b72660"/>
        <function-ref name="set" scoped="" ref="0x7f0818b727f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818b72980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="intETH" ref="0x7f0818b6a620" loc="14:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="intETH" scoped="" ref="0x7f0818b6a620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0818b6a9a0"/>
        <function-ref name="fired" scoped="" ref="0x7f0818b6ab30"/>
        <function-ref name="disable" scoped="" ref="0x7f0818b6acc0"/>
        <function-ref name="edge" scoped="" ref="0x7f0818b6ae50"/>
        <function-ref name="enable" scoped="" ref="0x7f0818b6f020"/>
        <function-ref name="getValue" scoped="" ref="0x7f0818b6f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="checkInterruptflag" ref="0x7f0818b315d0" loc="179:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="checkInterruptflag" scoped="" ref="0x7f0818b315d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0818b31950"/>
        <function-ref name="runTask" scoped="" ref="0x7f0818b31ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f0818b6e020" loc="16:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0818b6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0818b6e3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0818b6e530"/>
        <function-ref name="request" scoped="" ref="0x7f0818b6e6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f0818b6e850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0818b6e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f0818af0e60" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f0818af0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818afb210"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818afb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f0818afcb00" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f0818afcb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f0818afce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0818b01300" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0818b01300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0818b01680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f0818af7400" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f0818af7400"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f0818af7780"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f0818af7910"/>
        <function-ref name="splitRead" scoped="" ref="0x7f0818af7aa0"/>
        <function-ref name="write" scoped="" ref="0x7f0818af7c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0818afbbd0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0818afbbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0818af6020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0818af61b0"/>
        <function-ref name="request" scoped="" ref="0x7f0818af6340"/>
        <function-ref name="granted" scoped="" ref="0x7f0818af64d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0818af6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiControl" ref="0x7f0818afc4a0" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiControl" scoped="" ref="0x7f0818afc4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setClock" scoped="" ref="0x7f0818afc820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f0818acb510" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f0818acb510"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f0818acb890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f0818aa6de0" loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f0818aa6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0818aa5180"/>
        <function-ref name="runTask" scoped="" ref="0x7f0818aa5310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f0818aeb5f0" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f0818aeb5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818aeb970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818aebb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f0818acd740" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f0818acd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0818acdac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0818acdc50"/>
        <function-ref name="request" scoped="" ref="0x7f0818acdde0"/>
        <function-ref name="granted" scoped="" ref="0x7f0818acc020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0818acc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f0818aec340" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f0818aec340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f0818aec6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0818aee670" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0818aee670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0818aee9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f0818ace340" loc="102:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f0818ace340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f0818ace6c0"/>
        <function-ref name="sleep" scoped="" ref="0x7f0818ae7ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f0818ace9e0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f0818ae7e30"/>
        <function-ref name="initMaster" scoped="" ref="0x7f0818aced00"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f0818ae8020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f0818ae81b0"/>
        <function-ref name="read" scoped="" ref="0x7f0818ae8340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f0818ae84d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f0818ae8660"/>
        <function-ref name="setClock" scoped="" ref="0x7f0818ae87f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f0818ae8980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f0818ae8b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f0818ae8da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f0818ae7020"/>
        <function-ref name="write" scoped="" ref="0x7f0818ae71b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f0818ae7340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f0818ae74d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f0818ae7660"/>
        <function-ref name="getClock" scoped="" ref="0x7f0818ae77f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f0818ae7980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f0818ace850"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f0818aceb70"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f0818ae7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f0818aec980" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f0818aec980"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f0818aecd00"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f0818aeb020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f0818aeb1b0"/>
        <function-ref name="write" scoped="" ref="0x7f0818aeb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0818aea320" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0818aea320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0818aea6a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0818aea830"/>
        <function-ref name="request" scoped="" ref="0x7f0818aea9c0"/>
        <function-ref name="granted" scoped="" ref="0x7f0818aeab50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0818aeace0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f0818ac9cd0" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0818ac9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f0818acb0a0"/>
        <function-ref name="userId" scoped="" ref="0x7f0818acb230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiControl" ref="0x7f0818aeecb0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiControl" scoped="" ref="0x7f0818aeecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setClock" scoped="" ref="0x7f0818aec0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f0818a79100" loc="76:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f0818a79100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f0818a79480"/>
        <function-ref name="sleep" scoped="" ref="0x7f0818a77980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f0818a797a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f0818a77b10"/>
        <function-ref name="initMaster" scoped="" ref="0x7f0818a79ac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f0818a79c50"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f0818a79de0"/>
        <function-ref name="read" scoped="" ref="0x7f0818a78020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f0818a781b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f0818a78340"/>
        <function-ref name="setClock" scoped="" ref="0x7f0818a784d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f0818a78660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f0818a787f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f0818a78a80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f0818a78c10"/>
        <function-ref name="write" scoped="" ref="0x7f0818a78da0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f0818a77020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f0818a771b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f0818a77340"/>
        <function-ref name="getClock" scoped="" ref="0x7f0818a774d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f0818a77660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f0818a79610"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f0818a79930"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f0818a777f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f0818a6a7f0" loc="81:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f0818a6a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818a6ab70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818a6ad00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818a69020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818a691b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818a69340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818a694d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818a69660"/>
        <function-ref name="clr" scoped="" ref="0x7f0818a697f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f0818a6e330" loc="79:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f0818a6e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818a6e6b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818a6e840"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818a6e9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818a6eb60"/>
        <function-ref name="get" scoped="" ref="0x7f0818a6ecf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818a6ee80"/>
        <function-ref name="set" scoped="" ref="0x7f0818a6c030"/>
        <function-ref name="clr" scoped="" ref="0x7f0818a6c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f0818a6f020" loc="78:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f0818a6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818a6f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818a6f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818a6f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818a6f850"/>
        <function-ref name="get" scoped="" ref="0x7f0818a6f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818a6fb70"/>
        <function-ref name="set" scoped="" ref="0x7f0818a6fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818a6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f0818a6d770" loc="75:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f0818a6d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f0818a6daf0"/>
        <function-ref name="stop" scoped="" ref="0x7f0818a6dc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f0818a69b30" loc="82:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f0818a69b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f0818a68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f0818a73060" loc="74:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f0818a73060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f0818a733e0"/>
        <function-ref name="sleep" scoped="" ref="0x7f0818a71980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f0818a73700"/>
        <function-ref name="dataReady" scoped="" ref="0x7f0818a71b10"/>
        <function-ref name="initMaster" scoped="" ref="0x7f0818a73a20"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f0818a73bb0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f0818a73d40"/>
        <function-ref name="read" scoped="" ref="0x7f0818a72020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f0818a721b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f0818a72340"/>
        <function-ref name="setClock" scoped="" ref="0x7f0818a724d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f0818a72660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f0818a727f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f0818a72a80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f0818a72c10"/>
        <function-ref name="write" scoped="" ref="0x7f0818a72da0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f0818a71020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f0818a711b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f0818a71340"/>
        <function-ref name="getClock" scoped="" ref="0x7f0818a714d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f0818a71660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f0818a73570"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f0818a73890"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f0818a717f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f0818a6c4e0" loc="80:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f0818a6c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818a6c860"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818a6c9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818a6cb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818a6cd10"/>
        <function-ref name="get" scoped="" ref="0x7f0818a6a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818a6a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818a6a340"/>
        <function-ref name="clr" scoped="" ref="0x7f0818a6a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f08189c03a0" loc="86:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f08189c03a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f08189c0740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f08189c08d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f08189bf570" loc="89:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f08189bf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f08189bf910"/>
        <function-ref name="configure" scoped="" ref="0x7f08189bfaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f08189c1520" loc="85:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f08189c1520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f08189c18c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f08189c1a50"/>
        <function-ref name="request" scoped="" ref="0x7f08189c1be0"/>
        <function-ref name="granted" scoped="" ref="0x7f08189c1d70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f08189c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f08189c0b20" loc="87:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f08189c0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f08189bf020"/>
        <function-ref name="userId" scoped="" ref="0x7f08189bf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0817d254c0" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0817d254c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0817d25840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f0817d25ad0" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f0817d25ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f0817d25e50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f0817d24020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f0817d241b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f0817d24340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f0817d22850" loc="52:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f0817d22850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f0817d22bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0817d22d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f0817d21910" loc="56:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0817d21910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f0817d21cb0"/>
        <function-ref name="configure" scoped="" ref="0x7f0817d21e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f0817d20120" loc="57:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f0817d20120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f0817d204a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f0817d20630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f0817d207c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f0817d20950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0817d239d0" loc="51:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0817d239d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0817d23d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0817d22020"/>
        <function-ref name="request" scoped="" ref="0x7f0817d221b0"/>
        <function-ref name="granted" scoped="" ref="0x7f0817d22340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0817d224d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f0817d21020" loc="53:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0817d21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f0817d213a0"/>
        <function-ref name="userId" scoped="" ref="0x7f0817d21530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f0817d20c20" loc="68:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f0817d20c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0817d1e020"/>
        <function-ref name="runTask" scoped="" ref="0x7f0817d1e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f08189b0b70" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f08189b0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f08189af020"/>
        <function-ref name="fired" scoped="" ref="0x7f08189af1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f08189af340"/>
        <function-ref name="edge" scoped="" ref="0x7f08189af4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f08189af660"/>
        <function-ref name="getValue" scoped="" ref="0x7f08189af7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f08189b5b70" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f08189b5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f08189b4020"/>
        <function-ref name="fired" scoped="" ref="0x7f08189b41b0"/>
        <function-ref name="disable" scoped="" ref="0x7f08189b4340"/>
        <function-ref name="edge" scoped="" ref="0x7f08189b44d0"/>
        <function-ref name="enable" scoped="" ref="0x7f08189b4660"/>
        <function-ref name="getValue" scoped="" ref="0x7f08189b47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f08189b2b70" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f08189b2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f08189b1020"/>
        <function-ref name="fired" scoped="" ref="0x7f08189b11b0"/>
        <function-ref name="disable" scoped="" ref="0x7f08189b1340"/>
        <function-ref name="edge" scoped="" ref="0x7f08189b14d0"/>
        <function-ref name="enable" scoped="" ref="0x7f08189b1660"/>
        <function-ref name="getValue" scoped="" ref="0x7f08189b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f08189afb70" loc="52:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f08189afb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f08189ae020"/>
        <function-ref name="fired" scoped="" ref="0x7f08189ae1b0"/>
        <function-ref name="disable" scoped="" ref="0x7f08189ae340"/>
        <function-ref name="edge" scoped="" ref="0x7f08189ae4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f08189ae660"/>
        <function-ref name="getValue" scoped="" ref="0x7f08189ae7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f08189b4b70" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f08189b4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f08189b3020"/>
        <function-ref name="fired" scoped="" ref="0x7f08189b31b0"/>
        <function-ref name="disable" scoped="" ref="0x7f08189b3340"/>
        <function-ref name="edge" scoped="" ref="0x7f08189b34d0"/>
        <function-ref name="enable" scoped="" ref="0x7f08189b3660"/>
        <function-ref name="getValue" scoped="" ref="0x7f08189b37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f08189b1b70" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f08189b1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f08189b0020"/>
        <function-ref name="fired" scoped="" ref="0x7f08189b01b0"/>
        <function-ref name="disable" scoped="" ref="0x7f08189b0340"/>
        <function-ref name="edge" scoped="" ref="0x7f08189b04d0"/>
        <function-ref name="enable" scoped="" ref="0x7f08189b0660"/>
        <function-ref name="getValue" scoped="" ref="0x7f08189b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f08189b8b20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f08189b8b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f08189b5020"/>
        <function-ref name="fired" scoped="" ref="0x7f08189b51b0"/>
        <function-ref name="disable" scoped="" ref="0x7f08189b5340"/>
        <function-ref name="edge" scoped="" ref="0x7f08189b54d0"/>
        <function-ref name="enable" scoped="" ref="0x7f08189b5660"/>
        <function-ref name="getValue" scoped="" ref="0x7f08189b57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f08189b3b70" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f08189b3b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f08189b2020"/>
        <function-ref name="fired" scoped="" ref="0x7f08189b21b0"/>
        <function-ref name="disable" scoped="" ref="0x7f08189b2340"/>
        <function-ref name="edge" scoped="" ref="0x7f08189b24d0"/>
        <function-ref name="enable" scoped="" ref="0x7f08189b2660"/>
        <function-ref name="getValue" scoped="" ref="0x7f08189b27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f08189a6830" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f08189a6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f08189a6bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f08189a9230" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f08189a9230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f08189a95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f08189a78d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f08189a78d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f08189a7c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f08189a5020" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f08189a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f08189a53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f08189a99b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f08189a99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f08189a9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f08189a60b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f08189a60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f08189a6430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f08189a8a00" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f08189a8a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f08189a8d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f08189a7150" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f08189a7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f08189a74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0818989060" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0818989060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f08189893e0"/>
        <function-ref name="fired" scoped="" ref="0x7f0818989570"/>
        <function-ref name="disable" scoped="" ref="0x7f0818989700"/>
        <function-ref name="edge" scoped="" ref="0x7f0818989890"/>
        <function-ref name="enable" scoped="" ref="0x7f0818989a20"/>
        <function-ref name="getValue" scoped="" ref="0x7f0818989bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0818989e80" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0818989e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0818974220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0818971da0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0818971da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0818970180"/>
        <function-ref name="fired" scoped="" ref="0x7f0818970310"/>
        <function-ref name="disable" scoped="" ref="0x7f08189704a0"/>
        <function-ref name="edge" scoped="" ref="0x7f0818970630"/>
        <function-ref name="enable" scoped="" ref="0x7f08189707c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f0818970950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0818970c20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0818970c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f081896f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f081896dc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f081896dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f081896c0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f081896c230"/>
        <function-ref name="disable" scoped="" ref="0x7f081896c3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f081896c550"/>
        <function-ref name="enable" scoped="" ref="0x7f081896c6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f081896c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f081896cb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f081896cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f081896b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0818969c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0818969c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f08189680a0"/>
        <function-ref name="fired" scoped="" ref="0x7f0818968230"/>
        <function-ref name="disable" scoped="" ref="0x7f08189683c0"/>
        <function-ref name="edge" scoped="" ref="0x7f0818968550"/>
        <function-ref name="enable" scoped="" ref="0x7f08189686e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f0818968870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0818968b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0818968b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0818966020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0818964c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0818964c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f08189630a0"/>
        <function-ref name="fired" scoped="" ref="0x7f0818963230"/>
        <function-ref name="disable" scoped="" ref="0x7f08189633c0"/>
        <function-ref name="edge" scoped="" ref="0x7f0818963550"/>
        <function-ref name="enable" scoped="" ref="0x7f08189636e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f0818963870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0818963b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0818963b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0818962020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0818960c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0818960c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f081895f0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f081895f230"/>
        <function-ref name="disable" scoped="" ref="0x7f081895f3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f081895f550"/>
        <function-ref name="enable" scoped="" ref="0x7f081895f6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f081895f870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f081895fb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f081895fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f081895e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f081895bc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f081895bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f081895a0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f081895a230"/>
        <function-ref name="disable" scoped="" ref="0x7f081895a3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f081895a550"/>
        <function-ref name="enable" scoped="" ref="0x7f081895a6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f081895a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f081895ab40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f081895ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0818959020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f0818957c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f0818957c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f08189560a0"/>
        <function-ref name="fired" scoped="" ref="0x7f0818956230"/>
        <function-ref name="disable" scoped="" ref="0x7f08189563c0"/>
        <function-ref name="edge" scoped="" ref="0x7f0818956550"/>
        <function-ref name="enable" scoped="" ref="0x7f08189566e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f0818956870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f0818956b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f0818956b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f0818955020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpSend" ref="0x7f08189451f0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <component-ref qname="DatabaseC.UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f08189451f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818945570"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818945700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f0818945990" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <component-ref qname="DatabaseC.UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f0818945990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0818945d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f081893f710" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <component-ref qname="UdpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f081893f710"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f08192c2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f08192c1390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f081893e390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f081893e8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f081893d330" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <component-ref qname="UdpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f081893d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f081893d6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f081893c9d0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="UdpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f081893c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f081893cd50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f081893b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f081893b2b0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="UdpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f081893b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f081893b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f0817cb20c0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="UdpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f0817cb20c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0817cb2440"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0817cb25d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpQueue" ref="0x7f0817cb2860" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="UdpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f0817cb2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0817cb2be0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0817cb2d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f081893ab90" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f081893ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f08192c2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f08192c1390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08189377b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818937cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpSend" ref="0x7f0818935d80" loc="13:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f0818935d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818934180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818934310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpPacket" ref="0x7f08189334a0" loc="16:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f08189334a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f0818933820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f0818935730" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f0818935730"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0818935ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpSend" ref="0x7f0818934c70" loc="15:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f0818934c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818933020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08189331b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpReceive" ref="0x7f0818934600" loc="14:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f0818934600"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f0818934980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f081891f630" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="UdpTransceiverC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f081891f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f081891f9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f0818939e60" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="UdpTransceiverC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f0818939e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f081891f210"/>
        <function-ref name="sendDone" scoped="" ref="0x7f081891f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpQueue" ref="0x7f0817caa440" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="UdpTransceiverC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f0817caa440"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0817caa7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0817caa950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f0817cabb10" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="UdpTransceiverC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f0817cabb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0817caa020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0817caa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpSend" ref="0x7f0817cb9c50" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <component-ref qname="DatabaseC.UdpC.UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f0817cb9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0817cb8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0817cb81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpQueue" ref="0x7f0817cb8440" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <component-ref qname="DatabaseC.UdpC.UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f0817cb8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0817cb87c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0817cb8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpQueue" ref="0x7f081890d1d0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <component-ref qname="UdpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f081890d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f081890d550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f081890d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f0818908620" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="UdpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0818908620"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f081953a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f08192c2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f08192c1390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818907390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08189078a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f081890a790" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="UdpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f081890a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f08192c2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f08192c1390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f08189098c0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f08189093b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818909d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f0817c9cdd0" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f0817c9cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f08192c2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f08192c1390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0817c9ba80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0817c9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f0817c9e0b0" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0817c9e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f08192c2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f08192c1390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0817c9c220"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f0817c9eca0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0817c9c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f0817c9a4e0" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f0817c9a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0817c9a860"/>
        <function-ref name="runTask" scoped="" ref="0x7f0817c9a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f0818902bb0" loc="13:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <component-ref qname="UdpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f0818902bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f08192c2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f08192c1390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818901cf0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f08189017e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f0818900220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpQueue" ref="0x7f08189021d0" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <component-ref qname="UdpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f08189021d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f0818902550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f08189026e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f08188f1cd0" loc="42:../tinyos_ws18/tos/system/PoolC.nc">
      <component-ref qname="DatabaseC.UdpMsgPool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f08188f1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f08192d7880"/>
            <typename><typedef-ref name="udp_msg_t" ref="0x7f08192d4230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f08188cbe10"/>
        <function-ref name="maxSize" scoped="" ref="0x7f08188cb2a0"/>
        <function-ref name="empty" scoped="" ref="0x7f08188cc940"/>
        <function-ref name="put" scoped="" ref="0x7f08188cb720"/>
        <function-ref name="size" scoped="" ref="0x7f08188ccdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x7f0817c87a90" loc="56:../tinyos_ws18/tos/system/PoolP.nc">
      <component-ref qname="DatabaseC.UdpMsgPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x7f0817c87a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f08192d7880"/>
            <typename><typedef-ref name="udp_msg_t" ref="0x7f08192d4230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f0817c85b90"/>
        <function-ref name="maxSize" scoped="" ref="0x7f0817c85020"/>
        <function-ref name="empty" scoped="" ref="0x7f0817c866b0"/>
        <function-ref name="put" scoped="" ref="0x7f0817c854a0"/>
        <function-ref name="size" scoped="" ref="0x7f0817c86b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0817c873a0" loc="55:../tinyos_ws18/tos/system/PoolP.nc">
      <component-ref qname="DatabaseC.UdpMsgPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0817c873a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0817c87720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f08188c6720" loc="43:../tinyos_ws18/tos/system/QueueC.nc">
      <component-ref qname="DatabaseC.UdpSendQ"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f08188c6720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f08192d7880"/>
              <typename><typedef-ref name="udp_msg_t" ref="0x7f08192d4230"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f08188a95f0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f08188a83a0"/>
        <function-ref name="element" scoped="" ref="0x7f08188a8a10"/>
        <function-ref name="full" scoped="" ref="0x7f08188ab810"/>
        <function-ref name="maxSize" scoped="" ref="0x7f08188a9170"/>
        <function-ref name="dequeue" scoped="" ref="0x7f08188a9ca0"/>
        <function-ref name="empty" scoped="" ref="0x7f08188ab390"/>
        <function-ref name="size" scoped="" ref="0x7f08188abc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x7f08188a5d10" loc="43:../tinyos_ws18/tos/system/QueueC.nc">
      <component-ref qname="DatabaseC.UdpRecvQ"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f08188a5d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:130" alignment="I:1"><struct-ref name="udp_msg" ref="0x7f08192d7880"/>
              <typename><typedef-ref name="udp_msg_t" ref="0x7f08192d4230"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x7f08188a3ba0"/>
        <function-ref name="enqueue" scoped="" ref="0x7f08188a2950"/>
        <function-ref name="element" scoped="" ref="0x7f08188a0020"/>
        <function-ref name="full" scoped="" ref="0x7f08188a4dc0"/>
        <function-ref name="maxSize" scoped="" ref="0x7f08188a3720"/>
        <function-ref name="dequeue" scoped="" ref="0x7f08188a22a0"/>
        <function-ref name="empty" scoped="" ref="0x7f08188a4940"/>
        <function-ref name="size" scoped="" ref="0x7f08188a32a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0818899850" loc="14:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0818899850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0818899bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f0818899e70" loc="15:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f0818899e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f0818895020"/>
        <function-ref name="initDone" scoped="" ref="0x7f08188963b0"/>
        <function-ref name="setVolume" scoped="" ref="0x7f0818896540"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f08188966d0"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f0818896860"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f08188969f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f0818896b80"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f0818896d10"/>
        <function-ref name="seek" scoped="" ref="0x7f0818896220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seek" ref="0x7f08188622a0" loc="184:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seek" scoped="" ref="0x7f08188622a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0818862720"/>
        <function-ref name="runTask" scoped="" ref="0x7f08188628b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDIOPin" ref="0x7f0818877cc0" loc="30:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SDIOPin" scoped="" ref="0x7f0818877cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08188760a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818876230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08188763c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818876550"/>
        <function-ref name="get" scoped="" ref="0x7f08188766e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818876870"/>
        <function-ref name="set" scoped="" ref="0x7f0818876a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818876b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="INTPin" ref="0x7f0818875020" loc="31:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="INTPin" scoped="" ref="0x7f0818875020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08188753a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818875530"/>
        <function-ref name="toggle" scoped="" ref="0x7f08188756c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818875850"/>
        <function-ref name="get" scoped="" ref="0x7f08188759e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818875b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818875d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818874020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Int" ref="0x7f0818891750" loc="25:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int" scoped="" ref="0x7f0818891750"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f0818891ad0"/>
        <function-ref name="fired" scoped="" ref="0x7f0818891c60"/>
        <function-ref name="disable" scoped="" ref="0x7f0818891df0"/>
        <function-ref name="edge" scoped="" ref="0x7f0818890020"/>
        <function-ref name="enable" scoped="" ref="0x7f08188901b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f0818890340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f081887f6f0" loc="27:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f081887f6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f081888c020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f081888c2e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f081888e3d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0818880880"/>
        <function-ref name="write" scoped="" ref="0x7f081888d020"/>
        <function-ref name="readDone" scoped="" ref="0x7f081888dc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7f08188642a0" loc="182:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init" scoped="" ref="0x7f08188642a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0818864620"/>
        <function-ref name="runTask" scoped="" ref="0x7f08188647b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="decodeRDS" ref="0x7f08188612a0" loc="185:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="decodeRDS" scoped="" ref="0x7f08188612a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0818861620"/>
        <function-ref name="runTask" scoped="" ref="0x7f08188617b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0818895c10" loc="20:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0818895c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0818892020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f08188906a0" loc="26:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f08188906a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0818890a20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0818890bb0"/>
        <function-ref name="request" scoped="" ref="0x7f0818890d40"/>
        <function-ref name="granted" scoped="" ref="0x7f081888f020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f081888f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTPin" ref="0x7f0818879a60" loc="29:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTPin" scoped="" ref="0x7f0818879a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818879de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818877020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08188771b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818877340"/>
        <function-ref name="get" scoped="" ref="0x7f08188774d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818877660"/>
        <function-ref name="set" scoped="" ref="0x7f08188777f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818877980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f08188922c0" loc="21:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f08188922c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f0818891340"/>
        <function-ref name="initDone" scoped="" ref="0x7f08188927d0"/>
        <function-ref name="setVolume" scoped="" ref="0x7f0818892960"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f0818892af0"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f0818892c80"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f0818892e10"/>
        <function-ref name="getChannel" scoped="" ref="0x7f0818891020"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f08188911b0"/>
        <function-ref name="seek" scoped="" ref="0x7f0818892640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f08188742a0" loc="32:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f08188742a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f0818873340"/>
        <function-ref name="drawRect" scoped="" ref="0x7f08188747b0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f0818874940"/>
        <function-ref name="setPixel" scoped="" ref="0x7f0818874ad0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f0818874c60"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f0818874df0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f0818873020"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f0818874620"/>
        <function-ref name="drawText" scoped="" ref="0x7f08188731b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f081887d620" loc="28:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f081887d620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f081887ac40"/>
        <function-ref name="fired" scoped="" ref="0x7f081887b1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f081887a020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f081887bae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f0818879590"/>
        <function-ref name="gett0" scoped="" ref="0x7f0818879110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f081887b660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f081887c390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f081887a630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f081887c860"/>
        <function-ref name="stop" scoped="" ref="0x7f081887cd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune" ref="0x7f08188632a0" loc="183:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune" scoped="" ref="0x7f08188632a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0818863620"/>
        <function-ref name="runTask" scoped="" ref="0x7f08188637b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f08187a29f0" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f08187a29f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f08187a2d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f08185bf020"/>
        <function-ref name="request" scoped="" ref="0x7f08185bf1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f08185bf340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f08185bf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f08185bf880" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f08185bf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f081888c020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f081888c2e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f08185be500"/>
        <function-ref name="writeDone" scoped="" ref="0x7f08185bb9b0"/>
        <function-ref name="write" scoped="" ref="0x7f08185bd150"/>
        <function-ref name="readDone" scoped="" ref="0x7f08185bdd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f08187979b0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f08187979b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0818797d30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0818794020"/>
        <function-ref name="request" scoped="" ref="0x7f08187941b0"/>
        <function-ref name="granted" scoped="" ref="0x7f0818794340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f08187944d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f0818792020" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f0818792020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f081888c020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f081888c2e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0818792c50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f081878f150"/>
        <function-ref name="write" scoped="" ref="0x7f08187918c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f0818790510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f0818724bf0" loc="92:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f0818724bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f0818723020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f08187231b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f0818721930" loc="96:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0818721930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f0818721cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f0818721e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f0818723400" loc="93:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0818723400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0818723780"/>
        <function-ref name="requested" scoped="" ref="0x7f0818723910"/>
        <function-ref name="granted" scoped="" ref="0x7f0818723aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0818723c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0818723dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0818725e60" loc="91:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0818725e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0818724230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f08187243c0"/>
        <function-ref name="request" scoped="" ref="0x7f0818724550"/>
        <function-ref name="granted" scoped="" ref="0x7f08187246e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0818724870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f0818721060" loc="94:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0818721060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f08187213e0"/>
        <function-ref name="userId" scoped="" ref="0x7f0818721570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0817c50c20" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0817c50c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0817c4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f0817c4f2b0" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f0817c4f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f0817c4f630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f0817c4f7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f0817c4f950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f0817c4fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f0817c4b3a0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f0817c4b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f0817c4b740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0817c4b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f0817c49210" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0817c49210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f0817c495b0"/>
        <function-ref name="configure" scoped="" ref="0x7f0817c49740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f0817c499d0" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f0817c499d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f0817c49d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f0817c48020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f0817c481b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f0817c48340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f0817c4bb20" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0817c4bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0817c4a020"/>
        <function-ref name="requested" scoped="" ref="0x7f0817c4a1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f0817c4a340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0817c4a4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0817c4a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f0817c48590" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0817c48590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0817c48910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0817c48aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f0817c48c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0817c48dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0817c47020"/>
        <function-ref name="get" scoped="" ref="0x7f0817c471b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0817c47340"/>
        <function-ref name="led0On" scoped="" ref="0x7f0817c47980"/>
        <function-ref name="set" scoped="" ref="0x7f0817c47660"/>
        <function-ref name="led2On" scoped="" ref="0x7f0817c474d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0817c477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0817c4c4d0" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0817c4c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0817c4c870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f0817c4ca00"/>
        <function-ref name="request" scoped="" ref="0x7f0817c4cb90"/>
        <function-ref name="granted" scoped="" ref="0x7f0817c4cd20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0817c4b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f0817c4a8b0" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0817c4a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f0817c4ac30"/>
        <function-ref name="userId" scoped="" ref="0x7f0817c4adc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f0817c47c50" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f0817c47c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0817c46020"/>
        <function-ref name="runTask" scoped="" ref="0x7f0817c461b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f081871dcb0" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f081871dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f08187100a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f08187102f0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f08187102f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0818710670"/>
        <function-ref name="requested" scoped="" ref="0x7f0818710800"/>
        <function-ref name="granted" scoped="" ref="0x7f0818710990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0818710b20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0818710cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f081871d550" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f081871d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f081871d8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f081871da60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f081870f020" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f081870f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f081870f3a0"/>
        <function-ref name="userId" scoped="" ref="0x7f081870f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f08186cb8e0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f08186cb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f08186cbc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f08186d0c40" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f08186d0c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f081888c020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f081888c2e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f08186cf8a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f08186cdd20"/>
        <function-ref name="write" scoped="" ref="0x7f08186ce4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f08186cd110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f08186ca020" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f08186ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f08186ca3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f08186ca530"/>
        <function-ref name="led1On" scoped="" ref="0x7f08186ca6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f08186ca850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f08186ca9e0"/>
        <function-ref name="get" scoped="" ref="0x7f08186cab70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f08186cad00"/>
        <function-ref name="led2On" scoped="" ref="0x7f08186c94d0"/>
        <function-ref name="set" scoped="" ref="0x7f08186c91b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f08186c9020"/>
        <function-ref name="led0On" scoped="" ref="0x7f08186c9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f08186d6020" loc="41:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f08186d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f08186d63c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f08186d6550"/>
        <function-ref name="request" scoped="" ref="0x7f08186d66e0"/>
        <function-ref name="granted" scoped="" ref="0x7f08186d6870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f08186d6a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f08186d5020" loc="42:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f08186d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f081888c020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f081888c2e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f08186d5c70"/>
        <function-ref name="writeDone" scoped="" ref="0x7f08186d1170"/>
        <function-ref name="write" scoped="" ref="0x7f08186d48c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f08186d3510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f08186d1e40" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f08186d1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f08186d0210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f08186d03a0"/>
        <function-ref name="request" scoped="" ref="0x7f08186d0530"/>
        <function-ref name="granted" scoped="" ref="0x7f08186d06c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f08186d0850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f08186578e0" loc="79:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f08186578e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f0818657c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f0818656020" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f0818656020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f08186563a0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f0818656530"/>
        <function-ref name="setStart" scoped="" ref="0x7f08186566c0"/>
        <function-ref name="status" scoped="" ref="0x7f0818656850"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f08186569e0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f0818656b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f0818656d00"/>
        <function-ref name="read" scoped="" ref="0x7f0818655020"/>
        <function-ref name="init" scoped="" ref="0x7f08186551b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f0818655340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f08186554d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f0818655660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f08186557f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f0818655a80"/>
        <function-ref name="enable" scoped="" ref="0x7f0818655c10"/>
        <function-ref name="write" scoped="" ref="0x7f0818655da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f0818654020"/>
        <function-ref name="off" scoped="" ref="0x7f08186541b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f0818654340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f08186544d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f0818654660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f08186547f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f0818654ac0" loc="82:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f0818654ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0818654e40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0818652020"/>
        <function-ref name="led1On" scoped="" ref="0x7f08186521b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0818652340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f08186524d0"/>
        <function-ref name="get" scoped="" ref="0x7f0818652660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f08186527f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f0818652e30"/>
        <function-ref name="set" scoped="" ref="0x7f0818652b10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0818652980"/>
        <function-ref name="led0On" scoped="" ref="0x7f0818652ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f0818651160" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f0818651160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f08186514e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0818651670"/>
        <function-ref name="led1On" scoped="" ref="0x7f0818651800"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0818651990"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0818651b20"/>
        <function-ref name="get" scoped="" ref="0x7f0818651cb0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0818651e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f08186504d0"/>
        <function-ref name="set" scoped="" ref="0x7f08186501b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f0818650020"/>
        <function-ref name="led0On" scoped="" ref="0x7f0818650340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f08186507a0" loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f08186507a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0818650b20"/>
        <function-ref name="runTask" scoped="" ref="0x7f0818650cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f081865c340" loc="77:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f081865c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f081865c6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f081865c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f081865cc00" loc="78:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f081865cc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f081888c020"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f081888c2e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f081865a8a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f0818658d20"/>
        <function-ref name="write" scoped="" ref="0x7f08186594d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f0818658110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f081864a0e0" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f081864a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f081864a460"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f081864a5f0"/>
        <function-ref name="setStart" scoped="" ref="0x7f081864a780"/>
        <function-ref name="status" scoped="" ref="0x7f081864a910"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f081864aaa0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f081864ac30"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f081864adc0"/>
        <function-ref name="read" scoped="" ref="0x7f0818649020"/>
        <function-ref name="init" scoped="" ref="0x7f08186491b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f0818649340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f08186494d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f0818649660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f08186497f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f0818649a80"/>
        <function-ref name="enable" scoped="" ref="0x7f0818649c10"/>
        <function-ref name="write" scoped="" ref="0x7f0818649da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f0818648020"/>
        <function-ref name="off" scoped="" ref="0x7f08186481b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f0818648340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f08186484d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f0818648660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f08186487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f0818647a70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f0818647a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f0818647df0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f0818644020"/>
        <function-ref name="setStart" scoped="" ref="0x7f08186441b0"/>
        <function-ref name="status" scoped="" ref="0x7f0818644340"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f08186444d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f0818644660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f08186447f0"/>
        <function-ref name="read" scoped="" ref="0x7f0818644980"/>
        <function-ref name="init" scoped="" ref="0x7f0818644b10"/>
        <function-ref name="enableAck" scoped="" ref="0x7f0818644ca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f0818644e30"/>
        <function-ref name="hasStart" scoped="" ref="0x7f0818643020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f08186431b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f0818643440"/>
        <function-ref name="enable" scoped="" ref="0x7f08186435d0"/>
        <function-ref name="write" scoped="" ref="0x7f0818643760"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f08186438f0"/>
        <function-ref name="off" scoped="" ref="0x7f0818643a80"/>
        <function-ref name="setStop" scoped="" ref="0x7f0818643c10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f0818643da0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f0818642020"/>
        <function-ref name="hasStop" scoped="" ref="0x7f08186421b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f0818642540" loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f0818642540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08186428c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818642a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818642be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818642d70"/>
        <function-ref name="get" scoped="" ref="0x7f0818641020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08186411b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818641340"/>
        <function-ref name="clr" scoped="" ref="0x7f08186414d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f0818641810" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f0818641810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818641b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818641d20"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818640020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08186401b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818640340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08186404d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818640660"/>
        <function-ref name="clr" scoped="" ref="0x7f08186407f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f081860a4a0" loc="46:../tinyos_ws18/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f081860a4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f081860a820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f081860a9b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f081860ab40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f081860acd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f081860ae60"/>
        <function-ref name="get" scoped="" ref="0x7f0818607020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f08186071b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f08186077f0"/>
        <function-ref name="set" scoped="" ref="0x7f0818607340"/>
        <function-ref name="led0On" scoped="" ref="0x7f08186074d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f0818607660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f0818602550" loc="50:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f0818602550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08186028d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818602a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818602bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818602d80"/>
        <function-ref name="get" scoped="" ref="0x7f0818601020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08186011b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818601340"/>
        <function-ref name="clr" scoped="" ref="0x7f08186014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f08186067c0" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f08186067c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0818606b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f08186017f0" loc="51:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f08186017f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818601b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818601d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818600020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08186001b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818600340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08186004d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818600660"/>
        <function-ref name="clr" scoped="" ref="0x7f08186007f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f0818606dc0" loc="47:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f0818606dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f0818603180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f0818603310"/>
        <function-ref name="led1On" scoped="" ref="0x7f08186034a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f0818603630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f08186037c0"/>
        <function-ref name="get" scoped="" ref="0x7f0818603950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0818603ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f08186021b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818603c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f0818603e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f0818602020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f0818600b10" loc="52:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f0818600b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185ff020"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185ff1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185ff340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185ff4d0"/>
        <function-ref name="get" scoped="" ref="0x7f08185ff660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185ff7f0"/>
        <function-ref name="set" scoped="" ref="0x7f08185ff980"/>
        <function-ref name="clr" scoped="" ref="0x7f08185ffb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f08185e41d0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f08185e41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185e4550"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185e46e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185e4870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185e4a00"/>
        <function-ref name="get" scoped="" ref="0x7f08185e4b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185e4d20"/>
        <function-ref name="set" scoped="" ref="0x7f08185e3020"/>
        <function-ref name="clr" scoped="" ref="0x7f08185e31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f08185e3510" loc="45:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f08185e3510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185e3890"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185e3a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185e3bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185e3d40"/>
        <function-ref name="get" scoped="" ref="0x7f08185e2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185e21b0"/>
        <function-ref name="set" scoped="" ref="0x7f08185e2340"/>
        <function-ref name="clr" scoped="" ref="0x7f08185e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f08185e0ab0" loc="48:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f08185e0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f08185e0e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f08185e2830" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f08185e2830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185e2bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185e2d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185e0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185e01b0"/>
        <function-ref name="get" scoped="" ref="0x7f08185e0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185e04d0"/>
        <function-ref name="set" scoped="" ref="0x7f08185e0660"/>
        <function-ref name="clr" scoped="" ref="0x7f08185e07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f08185d8340" loc="46:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f08185d8340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f08185d86c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f08185d8980" loc="47:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f08185d8980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f08185d8d00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f08185d7020"/>
        <function-ref name="led1On" scoped="" ref="0x7f08185d71b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f08185d7340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f08185d74d0"/>
        <function-ref name="get" scoped="" ref="0x7f08185d7660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f08185d77f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f08185d7e30"/>
        <function-ref name="set" scoped="" ref="0x7f08185d7980"/>
        <function-ref name="led0On" scoped="" ref="0x7f08185d7b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f08185d7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f08185b9b80" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="FMClickC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f08185b9b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f08185b4110"/>
        <function-ref name="fired" scoped="" ref="0x7f08185b75f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f08185b64a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f08185b6020"/>
        <function-ref name="getdt" scoped="" ref="0x7f08185b4a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f08185b4590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f08185b7a70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f08185b8790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f08185b6ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f08185b8c60"/>
        <function-ref name="stop" scoped="" ref="0x7f08185b7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f0818575cb0" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f0818575cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818574610"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185747a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818574930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818574ac0"/>
        <function-ref name="get" scoped="" ref="0x7f0818574c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818574de0"/>
        <function-ref name="set" scoped="" ref="0x7f0818573020"/>
        <function-ref name="clr" scoped="" ref="0x7f08185731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f0818591350" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f0818591350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185916d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818591860"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185919f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818591b80"/>
        <function-ref name="get" scoped="" ref="0x7f0818591d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818590020"/>
        <function-ref name="set" scoped="" ref="0x7f08185901b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818590340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f0818585350" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f0818585350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185856d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818585860"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185859f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818585b80"/>
        <function-ref name="get" scoped="" ref="0x7f0818585d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818584020"/>
        <function-ref name="set" scoped="" ref="0x7f08185841b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818584340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f081857bcb0" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f081857bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081857a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081857a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f081857a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081857a550"/>
        <function-ref name="get" scoped="" ref="0x7f081857a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081857a870"/>
        <function-ref name="set" scoped="" ref="0x7f081857aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f081857ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f081856e060" loc="108:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f081856e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081856e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081856e570"/>
        <function-ref name="toggle" scoped="" ref="0x7f081856e700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081856e890"/>
        <function-ref name="get" scoped="" ref="0x7f081856ea20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081856ebb0"/>
        <function-ref name="set" scoped="" ref="0x7f081856ed40"/>
        <function-ref name="clr" scoped="" ref="0x7f081856d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH2" ref="0x7f081856b990" loc="112:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH2" scoped="" ref="0x7f081856b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081856bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f081856a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f081856a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081856a340"/>
        <function-ref name="get" scoped="" ref="0x7f081856a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081856a660"/>
        <function-ref name="set" scoped="" ref="0x7f081856a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f081856a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH7" ref="0x7f0818564990" loc="117:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH7" scoped="" ref="0x7f0818564990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818564d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818563020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185631b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818563340"/>
        <function-ref name="get" scoped="" ref="0x7f08185634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818563660"/>
        <function-ref name="set" scoped="" ref="0x7f08185637f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818563980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ6" ref="0x7f081855b020" loc="125:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ6" scoped="" ref="0x7f081855b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081855b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081855b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f081855b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081855b850"/>
        <function-ref name="get" scoped="" ref="0x7f081855b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081855bb70"/>
        <function-ref name="set" scoped="" ref="0x7f081855bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f081855a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK0" ref="0x7f0818559670" loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK0" scoped="" ref="0x7f0818559670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185599f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818559b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818559d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818558020"/>
        <function-ref name="get" scoped="" ref="0x7f08185581b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818558340"/>
        <function-ref name="set" scoped="" ref="0x7f08185584d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818558660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL2" ref="0x7f081854d670" loc="139:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL2" scoped="" ref="0x7f081854d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081854d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081854db80"/>
        <function-ref name="toggle" scoped="" ref="0x7f081854dd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081854c020"/>
        <function-ref name="get" scoped="" ref="0x7f081854c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081854c340"/>
        <function-ref name="set" scoped="" ref="0x7f081854c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f081854c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f08185a9350" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f08185a9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185a96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185a9860"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185a99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185a9b80"/>
        <function-ref name="get" scoped="" ref="0x7f08185a9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185a8020"/>
        <function-ref name="set" scoped="" ref="0x7f08185a81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f08185a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f081857d670" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f081857d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081857d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081857db80"/>
        <function-ref name="toggle" scoped="" ref="0x7f081857dd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081857c020"/>
        <function-ref name="get" scoped="" ref="0x7f081857c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081857c340"/>
        <function-ref name="set" scoped="" ref="0x7f081857c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f081857c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f08185a7990" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f08185a7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185a7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185a6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185a61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185a6340"/>
        <function-ref name="get" scoped="" ref="0x7f08185a64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185a6660"/>
        <function-ref name="set" scoped="" ref="0x7f08185a67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f08185a6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f081859a990" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f081859a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081859ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818599020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185991b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818599340"/>
        <function-ref name="get" scoped="" ref="0x7f08185994d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818599660"/>
        <function-ref name="set" scoped="" ref="0x7f08185997f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818599980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f081858ecb0" loc="80:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f081858ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081858d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081858d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f081858d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081858d550"/>
        <function-ref name="get" scoped="" ref="0x7f081858d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081858d870"/>
        <function-ref name="set" scoped="" ref="0x7f081858da00"/>
        <function-ref name="clr" scoped="" ref="0x7f081858db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f0818581cb0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f0818581cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185800a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818580230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185803c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818580550"/>
        <function-ref name="get" scoped="" ref="0x7f08185806e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818580870"/>
        <function-ref name="set" scoped="" ref="0x7f0818580a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818580b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f08185af4e0" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f08185af4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185af860"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185af9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185afb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185afd10"/>
        <function-ref name="get" scoped="" ref="0x7f08185ae020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185ae1b0"/>
        <function-ref name="set" scoped="" ref="0x7f08185ae340"/>
        <function-ref name="clr" scoped="" ref="0x7f08185ae4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f08185a3350" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f08185a3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185a36d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185a3860"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185a39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185a3b80"/>
        <function-ref name="get" scoped="" ref="0x7f08185a3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185a2020"/>
        <function-ref name="set" scoped="" ref="0x7f08185a21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f08185a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f0818596350" loc="72:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f0818596350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185966d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818596860"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185969f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818596b80"/>
        <function-ref name="get" scoped="" ref="0x7f0818596d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818595020"/>
        <function-ref name="set" scoped="" ref="0x7f08185951b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818595340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f081858a670" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f081858a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081858a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081858ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f081858ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818589020"/>
        <function-ref name="get" scoped="" ref="0x7f08185891b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818589340"/>
        <function-ref name="set" scoped="" ref="0x7f08185894d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818589660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f0818577670" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f0818577670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185779f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818577b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818577d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818576020"/>
        <function-ref name="get" scoped="" ref="0x7f08185761b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818576340"/>
        <function-ref name="set" scoped="" ref="0x7f08185764d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818576660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f0818571b20" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f0818571b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818570020"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185701b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818570340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185704d0"/>
        <function-ref name="get" scoped="" ref="0x7f0818570660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185707f0"/>
        <function-ref name="set" scoped="" ref="0x7f0818570980"/>
        <function-ref name="clr" scoped="" ref="0x7f0818570b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH0" ref="0x7f081856d350" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH0" scoped="" ref="0x7f081856d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081856d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081856d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f081856d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081856db80"/>
        <function-ref name="get" scoped="" ref="0x7f081856dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081856c020"/>
        <function-ref name="set" scoped="" ref="0x7f081856c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f081856c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f0818588cb0" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f0818588cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185870a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818587230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185873c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818587550"/>
        <function-ref name="get" scoped="" ref="0x7f08185876e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818587870"/>
        <function-ref name="set" scoped="" ref="0x7f0818587a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818587b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH5" ref="0x7f0818567350" loc="115:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH5" scoped="" ref="0x7f0818567350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185676d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818567860"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185679f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818567b80"/>
        <function-ref name="get" scoped="" ref="0x7f0818567d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818565020"/>
        <function-ref name="set" scoped="" ref="0x7f08185651b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818565340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ1" ref="0x7f0818561020" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ1" scoped="" ref="0x7f0818561020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185613a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818561530"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185616c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818561850"/>
        <function-ref name="get" scoped="" ref="0x7f08185619e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818561b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818561d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818560020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ4" ref="0x7f081855e990" loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ4" scoped="" ref="0x7f081855e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081855ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f081855d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f081855d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081855d340"/>
        <function-ref name="get" scoped="" ref="0x7f081855d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081855d660"/>
        <function-ref name="set" scoped="" ref="0x7f081855d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f081855d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK3" ref="0x7f0818555020" loc="131:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK3" scoped="" ref="0x7f0818555020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185553a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818555530"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185556c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818555850"/>
        <function-ref name="get" scoped="" ref="0x7f08185559e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818555b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818555d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818554020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK6" ref="0x7f0818552990" loc="134:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK6" scoped="" ref="0x7f0818552990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818552d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818551020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185511b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818551340"/>
        <function-ref name="get" scoped="" ref="0x7f08185514d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818551660"/>
        <function-ref name="set" scoped="" ref="0x7f08185517f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818551980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL0" ref="0x7f081854f020" loc="137:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL0" scoped="" ref="0x7f081854f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081854f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081854f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f081854f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081854f850"/>
        <function-ref name="get" scoped="" ref="0x7f081854f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081854fb70"/>
        <function-ref name="set" scoped="" ref="0x7f081854fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f081854e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL5" ref="0x7f0818548020" loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL5" scoped="" ref="0x7f0818548020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185483a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818548530"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185486c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818548850"/>
        <function-ref name="get" scoped="" ref="0x7f08185489e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818548b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818548d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818547020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f08185ace40" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f08185ace40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185ab1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185ab370"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185ab500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185ab690"/>
        <function-ref name="get" scoped="" ref="0x7f08185ab820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185ab9b0"/>
        <function-ref name="set" scoped="" ref="0x7f08185abb40"/>
        <function-ref name="clr" scoped="" ref="0x7f08185abcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f081859fcb0" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f081859fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081859e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081859e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f081859e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081859e550"/>
        <function-ref name="get" scoped="" ref="0x7f081859e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081859e870"/>
        <function-ref name="set" scoped="" ref="0x7f081859ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f081859eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f08185734e0" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f08185734e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818573860"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185739f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818573b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818573d10"/>
        <function-ref name="get" scoped="" ref="0x7f0818572020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185721b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818572340"/>
        <function-ref name="clr" scoped="" ref="0x7f08185724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f081859c350" loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f081859c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081859c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081859c860"/>
        <function-ref name="toggle" scoped="" ref="0x7f081859c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081859cb80"/>
        <function-ref name="get" scoped="" ref="0x7f081859cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081859b020"/>
        <function-ref name="set" scoped="" ref="0x7f081859b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f081859b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f0818590670" loc="78:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f0818590670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185909f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818590b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818590d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081858f020"/>
        <function-ref name="get" scoped="" ref="0x7f081858f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081858f340"/>
        <function-ref name="set" scoped="" ref="0x7f081858f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f081858f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f0818584670" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f0818584670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185849f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818584b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818584d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818582020"/>
        <function-ref name="get" scoped="" ref="0x7f08185821b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818582340"/>
        <function-ref name="set" scoped="" ref="0x7f08185824d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818582660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f0818579020" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f0818579020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185793a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818579530"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185796c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818579850"/>
        <function-ref name="get" scoped="" ref="0x7f08185799e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818579b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818579d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818578020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH3" ref="0x7f081856acb0" loc="113:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH3" scoped="" ref="0x7f081856acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185690a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818569230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185693c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818569550"/>
        <function-ref name="get" scoped="" ref="0x7f08185696e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818569870"/>
        <function-ref name="set" scoped="" ref="0x7f0818569a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818569b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ7" ref="0x7f081855a350" loc="126:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ7" scoped="" ref="0x7f081855a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081855a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081855a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f081855a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081855ab80"/>
        <function-ref name="get" scoped="" ref="0x7f081855ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818559020"/>
        <function-ref name="set" scoped="" ref="0x7f08185591b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818559340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK1" ref="0x7f0818558990" loc="129:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK1" scoped="" ref="0x7f0818558990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818558d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818557020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185571b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818557340"/>
        <function-ref name="get" scoped="" ref="0x7f08185574d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818557660"/>
        <function-ref name="set" scoped="" ref="0x7f08185577f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818557980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL3" ref="0x7f081854c990" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL3" scoped="" ref="0x7f081854c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081854cd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f081854b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f081854b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081854b340"/>
        <function-ref name="get" scoped="" ref="0x7f081854b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081854b660"/>
        <function-ref name="set" scoped="" ref="0x7f081854b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f081854b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ2" ref="0x7f0818560350" loc="121:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ2" scoped="" ref="0x7f0818560350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185606d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818560860"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185609f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818560b80"/>
        <function-ref name="get" scoped="" ref="0x7f0818560d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081855f020"/>
        <function-ref name="set" scoped="" ref="0x7f081855f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f081855f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f08185a8670" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f08185a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185a89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185a8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185a8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185a7020"/>
        <function-ref name="get" scoped="" ref="0x7f08185a71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185a7340"/>
        <function-ref name="set" scoped="" ref="0x7f08185a74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f08185a7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK4" ref="0x7f0818554350" loc="132:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK4" scoped="" ref="0x7f0818554350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185546d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818554860"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185549f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818554b80"/>
        <function-ref name="get" scoped="" ref="0x7f0818554d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818553020"/>
        <function-ref name="set" scoped="" ref="0x7f08185531b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818553340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL6" ref="0x7f0818547350" loc="143:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL6" scoped="" ref="0x7f0818547350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185476d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818547860"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185479f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818547b80"/>
        <function-ref name="get" scoped="" ref="0x7f0818547d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818546020"/>
        <function-ref name="set" scoped="" ref="0x7f08185461b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818546340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f08185a6cb0" loc="59:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f08185a6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185a50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185a5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185a53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185a5550"/>
        <function-ref name="get" scoped="" ref="0x7f08185a56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185a5870"/>
        <function-ref name="set" scoped="" ref="0x7f08185a5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f08185a5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f0818599cb0" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f0818599cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185980a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818598230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185983c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818598550"/>
        <function-ref name="get" scoped="" ref="0x7f08185986e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818598870"/>
        <function-ref name="set" scoped="" ref="0x7f0818598a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818598b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f081858c020" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f081858c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081858c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081858c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f081858c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081858c850"/>
        <function-ref name="get" scoped="" ref="0x7f081858c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081858cb70"/>
        <function-ref name="set" scoped="" ref="0x7f081858cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f081858b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f081857f020" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f081857f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081857f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081857f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f081857f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081857f850"/>
        <function-ref name="get" scoped="" ref="0x7f081857f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081857fb70"/>
        <function-ref name="set" scoped="" ref="0x7f081857fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f081857e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f08185ae800" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f08185ae800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185aeb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185aed10"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185ad020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185ad1b0"/>
        <function-ref name="get" scoped="" ref="0x7f08185ad340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185ad4d0"/>
        <function-ref name="set" scoped="" ref="0x7f08185ad660"/>
        <function-ref name="clr" scoped="" ref="0x7f08185ad7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f08185a2670" loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f08185a2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185a2af0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185a2c80"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185a2e10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185a1020"/>
        <function-ref name="get" scoped="" ref="0x7f08185a11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185a1340"/>
        <function-ref name="set" scoped="" ref="0x7f08185a14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f08185a1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f0818595670" loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f0818595670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185959f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818595b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818595d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818594020"/>
        <function-ref name="get" scoped="" ref="0x7f08185941b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818594340"/>
        <function-ref name="set" scoped="" ref="0x7f08185944d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818594660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f0818576990" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f0818576990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818576d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818575020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185751b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818575340"/>
        <function-ref name="get" scoped="" ref="0x7f08185754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818575660"/>
        <function-ref name="set" scoped="" ref="0x7f08185757f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818575980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH1" ref="0x7f081856c670" loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH1" scoped="" ref="0x7f081856c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081856c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081856cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f081856cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081856b020"/>
        <function-ref name="get" scoped="" ref="0x7f081856b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081856b340"/>
        <function-ref name="set" scoped="" ref="0x7f081856b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f081856b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f0818593cb0" loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f0818593cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818592410"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185925a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818592730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185928c0"/>
        <function-ref name="get" scoped="" ref="0x7f0818592a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818592be0"/>
        <function-ref name="set" scoped="" ref="0x7f0818592d70"/>
        <function-ref name="clr" scoped="" ref="0x7f0818591020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f0818586020" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f0818586020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185863a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818586530"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185866c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818586850"/>
        <function-ref name="get" scoped="" ref="0x7f08185869e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818586b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818586d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818585020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f081857c990" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f081857c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081857cd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f081857b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f081857b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081857b340"/>
        <function-ref name="get" scoped="" ref="0x7f081857b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081857b660"/>
        <function-ref name="set" scoped="" ref="0x7f081857b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f081857b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f0818570e40" loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f0818570e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081856f1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081856f370"/>
        <function-ref name="toggle" scoped="" ref="0x7f081856f500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081856f690"/>
        <function-ref name="get" scoped="" ref="0x7f081856f820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081856f9b0"/>
        <function-ref name="set" scoped="" ref="0x7f081856fb40"/>
        <function-ref name="clr" scoped="" ref="0x7f081856fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH6" ref="0x7f0818565670" loc="116:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH6" scoped="" ref="0x7f0818565670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185659f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818565b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818565d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818564020"/>
        <function-ref name="get" scoped="" ref="0x7f08185641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818564340"/>
        <function-ref name="set" scoped="" ref="0x7f08185644d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818564660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ5" ref="0x7f081855dcb0" loc="124:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ5" scoped="" ref="0x7f081855dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081855c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081855c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f081855c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081855c550"/>
        <function-ref name="get" scoped="" ref="0x7f081855c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081855c870"/>
        <function-ref name="set" scoped="" ref="0x7f081855ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f081855cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK7" ref="0x7f0818551cb0" loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK7" scoped="" ref="0x7f0818551cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185500a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818550230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185503c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818550550"/>
        <function-ref name="get" scoped="" ref="0x7f08185506e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818550870"/>
        <function-ref name="set" scoped="" ref="0x7f0818550a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818550b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL1" ref="0x7f081854e350" loc="138:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL1" scoped="" ref="0x7f081854e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081854e6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081854e860"/>
        <function-ref name="toggle" scoped="" ref="0x7f081854e9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081854eb80"/>
        <function-ref name="get" scoped="" ref="0x7f081854ed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081854d020"/>
        <function-ref name="set" scoped="" ref="0x7f081854d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f081854d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f08185aa060" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f08185aa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185aa3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185aa570"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185aa700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185aa890"/>
        <function-ref name="get" scoped="" ref="0x7f08185aaa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185aabb0"/>
        <function-ref name="set" scoped="" ref="0x7f08185aad40"/>
        <function-ref name="clr" scoped="" ref="0x7f08185a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f081859d020" loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f081859d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081859d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081859d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f081859d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081859d850"/>
        <function-ref name="get" scoped="" ref="0x7f081859d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081859db70"/>
        <function-ref name="set" scoped="" ref="0x7f081859dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f081859c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f081857e350" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f081857e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081857e6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081857e860"/>
        <function-ref name="toggle" scoped="" ref="0x7f081857e9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081857eb80"/>
        <function-ref name="get" scoped="" ref="0x7f081857ed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081857d020"/>
        <function-ref name="set" scoped="" ref="0x7f081857d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f081857d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f081859b670" loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f081859b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081859b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081859bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f081859bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081859a020"/>
        <function-ref name="get" scoped="" ref="0x7f081859a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081859a340"/>
        <function-ref name="set" scoped="" ref="0x7f081859a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f081859a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f081858f990" loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f081858f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081858fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f081858e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f081858e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081858e340"/>
        <function-ref name="get" scoped="" ref="0x7f081858e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081858e660"/>
        <function-ref name="set" scoped="" ref="0x7f081858e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f081858e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f0818582990" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f0818582990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818582d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818581020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185811b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818581340"/>
        <function-ref name="get" scoped="" ref="0x7f08185814d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818581660"/>
        <function-ref name="set" scoped="" ref="0x7f08185817f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818581980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f0818578350" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f0818578350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185786d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818578860"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185789f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818578b80"/>
        <function-ref name="get" scoped="" ref="0x7f0818578d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818577020"/>
        <function-ref name="set" scoped="" ref="0x7f08185771b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818577340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f08185b01e0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f08185b01e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185b0560"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185b06f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185b0880"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185b0a10"/>
        <function-ref name="get" scoped="" ref="0x7f08185b0ba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185b0d30"/>
        <function-ref name="set" scoped="" ref="0x7f08185af020"/>
        <function-ref name="clr" scoped="" ref="0x7f08185af1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f08185a4020" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f08185a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185a43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185a4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185a46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185a4850"/>
        <function-ref name="get" scoped="" ref="0x7f08185a49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185a4b70"/>
        <function-ref name="set" scoped="" ref="0x7f08185a4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f08185a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f0818597020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f0818597020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185973a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818597530"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185976c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818597850"/>
        <function-ref name="get" scoped="" ref="0x7f08185979e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818597b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818597d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818596020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f081858b350" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f081858b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081858b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081858b860"/>
        <function-ref name="toggle" scoped="" ref="0x7f081858b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081858bb80"/>
        <function-ref name="get" scoped="" ref="0x7f081858bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081858a020"/>
        <function-ref name="set" scoped="" ref="0x7f081858a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f081858a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f0818572800" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f0818572800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818572b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818572d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818571020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185711b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818571340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185714d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818571660"/>
        <function-ref name="clr" scoped="" ref="0x7f08185717f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH4" ref="0x7f0818568020" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH4" scoped="" ref="0x7f0818568020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185683a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818568530"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185686c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818568850"/>
        <function-ref name="get" scoped="" ref="0x7f08185689e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818568b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818568d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818567020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ0" ref="0x7f0818563cb0" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ0" scoped="" ref="0x7f0818563cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185620a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818562230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185623c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818562550"/>
        <function-ref name="get" scoped="" ref="0x7f08185626e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818562870"/>
        <function-ref name="set" scoped="" ref="0x7f0818562a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818562b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f0818589990" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f0818589990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818589d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818588020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185881b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818588340"/>
        <function-ref name="get" scoped="" ref="0x7f08185884d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818588660"/>
        <function-ref name="set" scoped="" ref="0x7f08185887f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818588980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ3" ref="0x7f081855f670" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ3" scoped="" ref="0x7f081855f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081855f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081855fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f081855fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081855e020"/>
        <function-ref name="get" scoped="" ref="0x7f081855e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081855e340"/>
        <function-ref name="set" scoped="" ref="0x7f081855e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f081855e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK2" ref="0x7f0818557cb0" loc="130:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK2" scoped="" ref="0x7f0818557cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185560a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818556230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185563c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818556550"/>
        <function-ref name="get" scoped="" ref="0x7f08185566e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818556870"/>
        <function-ref name="set" scoped="" ref="0x7f0818556a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818556b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK5" ref="0x7f0818553670" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK5" scoped="" ref="0x7f0818553670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185539f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818553b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818553d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818552020"/>
        <function-ref name="get" scoped="" ref="0x7f08185521b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818552340"/>
        <function-ref name="set" scoped="" ref="0x7f08185524d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818552660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL4" ref="0x7f081854bcb0" loc="141:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL4" scoped="" ref="0x7f081854bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185490a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818549230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185493c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818549550"/>
        <function-ref name="get" scoped="" ref="0x7f08185496e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818549870"/>
        <function-ref name="set" scoped="" ref="0x7f0818549a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818549b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL7" ref="0x7f0818546670" loc="144:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL7" scoped="" ref="0x7f0818546670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185469f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818546b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818546d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818545020"/>
        <function-ref name="get" scoped="" ref="0x7f08185451b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818545340"/>
        <function-ref name="set" scoped="" ref="0x7f08185454d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818545660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f0818594990" loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f0818594990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818594d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818593020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185931b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818593340"/>
        <function-ref name="get" scoped="" ref="0x7f08185934d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818593660"/>
        <function-ref name="set" scoped="" ref="0x7f08185937f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818593980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f08185adb20" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f08185adb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185ac020"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185ac1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185ac340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185ac4d0"/>
        <function-ref name="get" scoped="" ref="0x7f08185ac660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185ac7f0"/>
        <function-ref name="set" scoped="" ref="0x7f08185ac980"/>
        <function-ref name="clr" scoped="" ref="0x7f08185acb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f08185a1990" loc="63:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f08185a1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185a1d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f081859f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f081859f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081859f340"/>
        <function-ref name="get" scoped="" ref="0x7f081859f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081859f660"/>
        <function-ref name="set" scoped="" ref="0x7f081859f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f081859f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0818540a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0818540a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818540e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f081853f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f081853f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081853f340"/>
        <function-ref name="get" scoped="" ref="0x7f081853f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081853f660"/>
        <function-ref name="set" scoped="" ref="0x7f081853f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f081853f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f081853b020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f081853b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081853b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081853b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f081853b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081853b850"/>
        <function-ref name="get" scoped="" ref="0x7f081853b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081853bb70"/>
        <function-ref name="set" scoped="" ref="0x7f081853bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f081853a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f08185427a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f08185427a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818542b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818542cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818542e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818541020"/>
        <function-ref name="get" scoped="" ref="0x7f08185411b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818541340"/>
        <function-ref name="set" scoped="" ref="0x7f08185414d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818541660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f081853fc10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f081853fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081853d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f081853d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081853d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081853d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f081853d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081853d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f081853d980"/>
        <function-ref name="clr" scoped="" ref="0x7f081853db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f081853a2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f081853a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081853a630"/>
        <function-ref name="isInput" scoped="" ref="0x7f081853a7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081853a950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081853aae0"/>
        <function-ref name="get" scoped="" ref="0x7f081853ac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081853ae00"/>
        <function-ref name="set" scoped="" ref="0x7f0818539020"/>
        <function-ref name="clr" scoped="" ref="0x7f08185391b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f08185418f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f08185418f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818541c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818541e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818540020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185401b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818540340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185404d0"/>
        <function-ref name="set" scoped="" ref="0x7f0818540660"/>
        <function-ref name="clr" scoped="" ref="0x7f08185407f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f081853dda0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f081853dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081853c180"/>
        <function-ref name="isInput" scoped="" ref="0x7f081853c310"/>
        <function-ref name="toggle" scoped="" ref="0x7f081853c4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081853c630"/>
        <function-ref name="get" scoped="" ref="0x7f081853c7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081853c950"/>
        <function-ref name="set" scoped="" ref="0x7f081853cae0"/>
        <function-ref name="clr" scoped="" ref="0x7f081853cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f0818539440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f0818539440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185397c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818539950"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818539ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818539c70"/>
        <function-ref name="get" scoped="" ref="0x7f0818539e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818538020"/>
        <function-ref name="set" scoped="" ref="0x7f08185381b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818538340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817b70b00" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817b70b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817b70e80"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817b6f030"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817b6f1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817b6f350"/>
        <function-ref name="get" scoped="" ref="0x7f0817b6f4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817b6f670"/>
        <function-ref name="set" scoped="" ref="0x7f0817b6f800"/>
        <function-ref name="clr" scoped="" ref="0x7f0817b6f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817b6de20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817b6de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817b6c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817b6c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817b6c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817b6c670"/>
        <function-ref name="get" scoped="" ref="0x7f0817b6c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817b6c990"/>
        <function-ref name="set" scoped="" ref="0x7f0817b6cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817b6ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817b690a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817b690a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817b69420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817b695b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817b69740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817b698d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817b69a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817b69bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817b69d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817b63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817b613f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817b613f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817b61770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817b61900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817b61a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817b61c20"/>
        <function-ref name="get" scoped="" ref="0x7f0817b61db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817b60020"/>
        <function-ref name="set" scoped="" ref="0x7f0817b601b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817b60340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817b5e6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817b5e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817b5ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817b5ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817b5ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817b5c020"/>
        <function-ref name="get" scoped="" ref="0x7f0817b5c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817b5c340"/>
        <function-ref name="set" scoped="" ref="0x7f0817b5c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817b5c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817b5a9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817b5a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817b5ad30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817b59020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817b591b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817b59340"/>
        <function-ref name="get" scoped="" ref="0x7f0817b594d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817b59660"/>
        <function-ref name="set" scoped="" ref="0x7f0817b597f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817b59980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817b57e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817b57e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817b561c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817b56350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817b564e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817b56670"/>
        <function-ref name="get" scoped="" ref="0x7f0817b56800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817b56990"/>
        <function-ref name="set" scoped="" ref="0x7f0817b56b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817b56cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817b530a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817b530a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817b53420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817b535b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817b53740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817b538d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817b53a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817b53bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817b53d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817b52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0818530da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0818530da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081852f180"/>
        <function-ref name="isInput" scoped="" ref="0x7f081852f310"/>
        <function-ref name="toggle" scoped="" ref="0x7f081852f4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081852f630"/>
        <function-ref name="get" scoped="" ref="0x7f081852f7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081852f950"/>
        <function-ref name="set" scoped="" ref="0x7f081852fae0"/>
        <function-ref name="clr" scoped="" ref="0x7f081852fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f081852c440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f081852c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081852c7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081852c950"/>
        <function-ref name="toggle" scoped="" ref="0x7f081852cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081852cc70"/>
        <function-ref name="get" scoped="" ref="0x7f081852ce00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081852b020"/>
        <function-ref name="set" scoped="" ref="0x7f081852b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f081852b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0818533a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0818533a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818533da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818531020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185311b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818531340"/>
        <function-ref name="get" scoped="" ref="0x7f08185314d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818531660"/>
        <function-ref name="set" scoped="" ref="0x7f08185317f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818531980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f081852e020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f081852e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081852e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081852e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f081852e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081852e850"/>
        <function-ref name="get" scoped="" ref="0x7f081852e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081852eb70"/>
        <function-ref name="set" scoped="" ref="0x7f081852ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f081852d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f081852b5d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f081852b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081852b950"/>
        <function-ref name="isInput" scoped="" ref="0x7f081852bae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081852bc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081852be00"/>
        <function-ref name="get" scoped="" ref="0x7f081852a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081852a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f081852a340"/>
        <function-ref name="clr" scoped="" ref="0x7f081852a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0818531c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0818531c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818530020"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185301b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818530340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185304d0"/>
        <function-ref name="get" scoped="" ref="0x7f0818530660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185307f0"/>
        <function-ref name="set" scoped="" ref="0x7f0818530980"/>
        <function-ref name="clr" scoped="" ref="0x7f0818530b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f081852d2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f081852d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081852d630"/>
        <function-ref name="isInput" scoped="" ref="0x7f081852d7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081852d950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081852dae0"/>
        <function-ref name="get" scoped="" ref="0x7f081852dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081852de00"/>
        <function-ref name="set" scoped="" ref="0x7f081852c020"/>
        <function-ref name="clr" scoped="" ref="0x7f081852c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f081852a760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f081852a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081852aae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081852ac70"/>
        <function-ref name="toggle" scoped="" ref="0x7f081852ae00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818529020"/>
        <function-ref name="get" scoped="" ref="0x7f08185291b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818529340"/>
        <function-ref name="set" scoped="" ref="0x7f08185294d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818529660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817b00c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817b00c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817aff0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817aff230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817aff3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817aff550"/>
        <function-ref name="get" scoped="" ref="0x7f0817aff6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817aff870"/>
        <function-ref name="set" scoped="" ref="0x7f0817affa00"/>
        <function-ref name="clr" scoped="" ref="0x7f0817affb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817afde20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817afde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817afc1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817afc350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817afc4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817afc670"/>
        <function-ref name="get" scoped="" ref="0x7f0817afc800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817afc990"/>
        <function-ref name="set" scoped="" ref="0x7f0817afcb20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817afccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817af90a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817af90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817af9420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817af95b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817af9740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817af98d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817af9a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817af9bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817af9d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817af8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817af63f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817af63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817af6770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817af6900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817af6a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817af6c20"/>
        <function-ref name="get" scoped="" ref="0x7f0817af6db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817af5020"/>
        <function-ref name="set" scoped="" ref="0x7f0817af51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817af5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817af36d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817af36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817af3a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817af3be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817af3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817af2020"/>
        <function-ref name="get" scoped="" ref="0x7f0817af21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817af2340"/>
        <function-ref name="set" scoped="" ref="0x7f0817af24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817af2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817af09b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817af09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817af0d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817aee020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817aee1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817aee340"/>
        <function-ref name="get" scoped="" ref="0x7f0817aee4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817aee660"/>
        <function-ref name="set" scoped="" ref="0x7f0817aee7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817aee980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817aece20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817aece20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817aeb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817aeb350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817aeb4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817aeb670"/>
        <function-ref name="get" scoped="" ref="0x7f0817aeb800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817aeb990"/>
        <function-ref name="set" scoped="" ref="0x7f0817aebb20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817aebcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817ae80a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817ae80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817ae8420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817ae85b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817ae8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817ae88d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817ae8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817ae8bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817ae8d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817ae7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0818520020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0818520020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185203a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818520530"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185206c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818520850"/>
        <function-ref name="get" scoped="" ref="0x7f08185209e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818520b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818520d00"/>
        <function-ref name="clr" scoped="" ref="0x7f081851f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f081851d5d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f081851d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081851d950"/>
        <function-ref name="isInput" scoped="" ref="0x7f081851dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081851dc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081851de00"/>
        <function-ref name="get" scoped="" ref="0x7f081851c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081851c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f081851c340"/>
        <function-ref name="clr" scoped="" ref="0x7f081851c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0818523d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0818523d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185220e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818522270"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818522400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818522590"/>
        <function-ref name="get" scoped="" ref="0x7f0818522720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185228b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818522a40"/>
        <function-ref name="clr" scoped="" ref="0x7f0818522bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f081851f2b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f081851f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081851f630"/>
        <function-ref name="isInput" scoped="" ref="0x7f081851f7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081851f950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081851fae0"/>
        <function-ref name="get" scoped="" ref="0x7f081851fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081851fe00"/>
        <function-ref name="set" scoped="" ref="0x7f081851e020"/>
        <function-ref name="clr" scoped="" ref="0x7f081851e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f081851c760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f081851c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081851cae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081851cc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f081851ce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081851b020"/>
        <function-ref name="get" scoped="" ref="0x7f081851b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081851b340"/>
        <function-ref name="set" scoped="" ref="0x7f081851b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f081851b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f0818522e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f0818522e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818521210"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185213a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818521530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08185216c0"/>
        <function-ref name="get" scoped="" ref="0x7f0818521850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185219e0"/>
        <function-ref name="set" scoped="" ref="0x7f0818521b70"/>
        <function-ref name="clr" scoped="" ref="0x7f0818521d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f081851e440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f081851e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081851e7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081851e950"/>
        <function-ref name="toggle" scoped="" ref="0x7f081851eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081851ec70"/>
        <function-ref name="get" scoped="" ref="0x7f081851ee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081851d020"/>
        <function-ref name="set" scoped="" ref="0x7f081851d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f081851d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f081851b8f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f081851b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081851bc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f081851be00"/>
        <function-ref name="toggle" scoped="" ref="0x7f081851a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081851a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f081851a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081851a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f081851a660"/>
        <function-ref name="clr" scoped="" ref="0x7f081851a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a95c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a95c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a940a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a94230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a943c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a94550"/>
        <function-ref name="get" scoped="" ref="0x7f0817a946e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a94870"/>
        <function-ref name="set" scoped="" ref="0x7f0817a94a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a94b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a92e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a92e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a911c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a91350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a914e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a91670"/>
        <function-ref name="get" scoped="" ref="0x7f0817a91800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a91990"/>
        <function-ref name="set" scoped="" ref="0x7f0817a91b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a91cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a8e0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a8e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a8e420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a8e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a8e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a8e8d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817a8ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a8ebf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817a8ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a8d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a8b3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a8b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a8b770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a8b900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a8ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a8bc20"/>
        <function-ref name="get" scoped="" ref="0x7f0817a8bdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a8a020"/>
        <function-ref name="set" scoped="" ref="0x7f0817a8a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a8a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a886d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a886d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a88a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a88be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a88d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a87020"/>
        <function-ref name="get" scoped="" ref="0x7f0817a871b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a87340"/>
        <function-ref name="set" scoped="" ref="0x7f0817a874d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a87660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a859b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a859b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a85d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a83020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a831b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a83340"/>
        <function-ref name="get" scoped="" ref="0x7f0817a834d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a83660"/>
        <function-ref name="set" scoped="" ref="0x7f0817a837f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a83980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a81e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a81e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a801c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a80350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a804e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a80670"/>
        <function-ref name="get" scoped="" ref="0x7f0817a80800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a80990"/>
        <function-ref name="set" scoped="" ref="0x7f0817a80b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a80cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a7d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a7d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a7d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a7d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a7d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a7d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817a7da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a7dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817a7dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0818511440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0818511440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185117c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818511950"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818511ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818511c70"/>
        <function-ref name="get" scoped="" ref="0x7f0818511e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818510020"/>
        <function-ref name="set" scoped="" ref="0x7f08185101b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818510340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f081850e8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f081850e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081850ec70"/>
        <function-ref name="isInput" scoped="" ref="0x7f081850ee00"/>
        <function-ref name="toggle" scoped="" ref="0x7f081850c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081850c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f081850c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081850c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f081850c660"/>
        <function-ref name="clr" scoped="" ref="0x7f081850c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f0818513020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f0818513020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08185133a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818513530"/>
        <function-ref name="toggle" scoped="" ref="0x7f08185136c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818513850"/>
        <function-ref name="get" scoped="" ref="0x7f08185139e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818513b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818513d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818512020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f08185105d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f08185105d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818510950"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818510ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818510c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818510e00"/>
        <function-ref name="get" scoped="" ref="0x7f081850f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081850f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f081850f340"/>
        <function-ref name="clr" scoped="" ref="0x7f081850f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f081850ca80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f081850ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081850ce00"/>
        <function-ref name="isInput" scoped="" ref="0x7f081850b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f081850b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081850b340"/>
        <function-ref name="get" scoped="" ref="0x7f081850b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081850b660"/>
        <function-ref name="set" scoped="" ref="0x7f081850b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f081850b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f08185122b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f08185122b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818512630"/>
        <function-ref name="isInput" scoped="" ref="0x7f08185127c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818512950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818512ae0"/>
        <function-ref name="get" scoped="" ref="0x7f0818512c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818512e00"/>
        <function-ref name="set" scoped="" ref="0x7f0818511020"/>
        <function-ref name="clr" scoped="" ref="0x7f08185111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f081850f760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f081850f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081850fae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081850fc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f081850fe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081850e020"/>
        <function-ref name="get" scoped="" ref="0x7f081850e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081850e340"/>
        <function-ref name="set" scoped="" ref="0x7f081850e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f081850e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f081850bc10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f081850bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081850a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f081850a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081850a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081850a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f081850a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081850a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f081850a980"/>
        <function-ref name="clr" scoped="" ref="0x7f081850ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a2ac90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a2ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a290a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a29230"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a293c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a29550"/>
        <function-ref name="get" scoped="" ref="0x7f0817a296e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a29870"/>
        <function-ref name="set" scoped="" ref="0x7f0817a29a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a29b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a27e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a27e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a261c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a26350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a264e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a26670"/>
        <function-ref name="get" scoped="" ref="0x7f0817a26800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a26990"/>
        <function-ref name="set" scoped="" ref="0x7f0817a26b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a26cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a230a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a230a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a23420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a235b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a23740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a238d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817a23a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a23bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817a23d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a22020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a203f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a203f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a20770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a20900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a20a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a20c20"/>
        <function-ref name="get" scoped="" ref="0x7f0817a20db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a1f020"/>
        <function-ref name="set" scoped="" ref="0x7f0817a1f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a1f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a1d6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a1d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a1da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a1dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a1dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a1c020"/>
        <function-ref name="get" scoped="" ref="0x7f0817a1c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a1c340"/>
        <function-ref name="set" scoped="" ref="0x7f0817a1c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a1c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a1a9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a1a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a1ad30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a19020"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a191b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a19340"/>
        <function-ref name="get" scoped="" ref="0x7f0817a194d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a19660"/>
        <function-ref name="set" scoped="" ref="0x7f0817a197f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a19980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a17e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a17e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a151c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a15350"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a154e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a15670"/>
        <function-ref name="get" scoped="" ref="0x7f0817a15800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a15990"/>
        <function-ref name="set" scoped="" ref="0x7f0817a15b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a15cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817a120a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817a120a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817a12420"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817a125b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817a12740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817a128d0"/>
        <function-ref name="get" scoped="" ref="0x7f0817a12a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817a12bf0"/>
        <function-ref name="set" scoped="" ref="0x7f0817a12d80"/>
        <function-ref name="clr" scoped="" ref="0x7f0817a11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f0818502760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f0818502760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818502ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818502c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818502e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818500020"/>
        <function-ref name="get" scoped="" ref="0x7f08185001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818500340"/>
        <function-ref name="set" scoped="" ref="0x7f08185004d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818500660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f08184fec10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f08184fec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184fd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184fd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184fd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184fd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f08184fd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184fd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f08184fd980"/>
        <function-ref name="clr" scoped="" ref="0x7f08184fdb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f08185043f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f08185043f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818504770"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818504900"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818504a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818504c20"/>
        <function-ref name="get" scoped="" ref="0x7f0818504db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818503020"/>
        <function-ref name="set" scoped="" ref="0x7f08185031b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818503340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f08185008f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f08185008f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818500c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818500e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184ff020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184ff1b0"/>
        <function-ref name="get" scoped="" ref="0x7f08184ff340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184ff4d0"/>
        <function-ref name="set" scoped="" ref="0x7f08184ff660"/>
        <function-ref name="clr" scoped="" ref="0x7f08184ff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f08184fdda0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f08184fdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184fc180"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184fc310"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184fc4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184fc630"/>
        <function-ref name="get" scoped="" ref="0x7f08184fc7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184fc950"/>
        <function-ref name="set" scoped="" ref="0x7f08184fcae0"/>
        <function-ref name="clr" scoped="" ref="0x7f08184fcc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f08185035d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f08185035d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818503950"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818503ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818503c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818503e00"/>
        <function-ref name="get" scoped="" ref="0x7f0818502020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08185021b0"/>
        <function-ref name="set" scoped="" ref="0x7f0818502340"/>
        <function-ref name="clr" scoped="" ref="0x7f08185024d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f08184ffa80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f08184ffa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184ffe00"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184fe020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184fe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184fe340"/>
        <function-ref name="get" scoped="" ref="0x7f08184fe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184fe660"/>
        <function-ref name="set" scoped="" ref="0x7f08184fe7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f08184fe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f08184fb020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f08184fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184fb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184fb530"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184fb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184fb850"/>
        <function-ref name="get" scoped="" ref="0x7f08184fb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184fbb70"/>
        <function-ref name="set" scoped="" ref="0x7f08184fbd00"/>
        <function-ref name="clr" scoped="" ref="0x7f08184fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08179bfc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08179bfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08179be0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08179be230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08179be3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08179be550"/>
        <function-ref name="get" scoped="" ref="0x7f08179be6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08179be870"/>
        <function-ref name="set" scoped="" ref="0x7f08179bea00"/>
        <function-ref name="clr" scoped="" ref="0x7f08179beb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08179bce20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08179bce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08179bb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08179bb350"/>
        <function-ref name="toggle" scoped="" ref="0x7f08179bb4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08179bb670"/>
        <function-ref name="get" scoped="" ref="0x7f08179bb800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08179bb990"/>
        <function-ref name="set" scoped="" ref="0x7f08179bbb20"/>
        <function-ref name="clr" scoped="" ref="0x7f08179bbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08179b80a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08179b80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08179b8420"/>
        <function-ref name="isInput" scoped="" ref="0x7f08179b85b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08179b8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08179b88d0"/>
        <function-ref name="get" scoped="" ref="0x7f08179b8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08179b8bf0"/>
        <function-ref name="set" scoped="" ref="0x7f08179b8d80"/>
        <function-ref name="clr" scoped="" ref="0x7f08179b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08179b53f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08179b53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08179b5770"/>
        <function-ref name="isInput" scoped="" ref="0x7f08179b5900"/>
        <function-ref name="toggle" scoped="" ref="0x7f08179b5a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08179b5c20"/>
        <function-ref name="get" scoped="" ref="0x7f08179b5db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08179b4020"/>
        <function-ref name="set" scoped="" ref="0x7f08179b41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f08179b4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08179b26d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08179b26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08179b2a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f08179b2be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08179b2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08179b1020"/>
        <function-ref name="get" scoped="" ref="0x7f08179b11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08179b1340"/>
        <function-ref name="set" scoped="" ref="0x7f08179b14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f08179b1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08179af9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08179af9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08179afd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f08179ae020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08179ae1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08179ae340"/>
        <function-ref name="get" scoped="" ref="0x7f08179ae4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08179ae660"/>
        <function-ref name="set" scoped="" ref="0x7f08179ae7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f08179ae980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08179ace20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08179ace20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08179aa1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08179aa350"/>
        <function-ref name="toggle" scoped="" ref="0x7f08179aa4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08179aa670"/>
        <function-ref name="get" scoped="" ref="0x7f08179aa800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08179aa990"/>
        <function-ref name="set" scoped="" ref="0x7f08179aab20"/>
        <function-ref name="clr" scoped="" ref="0x7f08179aacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08179a70a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08179a70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08179a7420"/>
        <function-ref name="isInput" scoped="" ref="0x7f08179a75b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08179a7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08179a78d0"/>
        <function-ref name="get" scoped="" ref="0x7f08179a7a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08179a7bf0"/>
        <function-ref name="set" scoped="" ref="0x7f08179a7d80"/>
        <function-ref name="clr" scoped="" ref="0x7f08179a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f08184f2a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f08184f2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184f2e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184f1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184f11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184f1340"/>
        <function-ref name="get" scoped="" ref="0x7f08184f14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184f1660"/>
        <function-ref name="set" scoped="" ref="0x7f08184f17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f08184f1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f08184ee020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f08184ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184ee3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184ee530"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184ee6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184ee850"/>
        <function-ref name="get" scoped="" ref="0x7f08184ee9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184eeb70"/>
        <function-ref name="set" scoped="" ref="0x7f08184eed00"/>
        <function-ref name="clr" scoped="" ref="0x7f08184ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f08184f47a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f08184f47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184f4b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184f4cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184f4e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184f3020"/>
        <function-ref name="get" scoped="" ref="0x7f08184f31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184f3340"/>
        <function-ref name="set" scoped="" ref="0x7f08184f34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f08184f3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f08184f1c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f08184f1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184f0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184f01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184f0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184f04d0"/>
        <function-ref name="get" scoped="" ref="0x7f08184f0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184f07f0"/>
        <function-ref name="set" scoped="" ref="0x7f08184f0980"/>
        <function-ref name="clr" scoped="" ref="0x7f08184f0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f08184ed2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f08184ed2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184ed630"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184ed7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184ed950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184edae0"/>
        <function-ref name="get" scoped="" ref="0x7f08184edc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184ede00"/>
        <function-ref name="set" scoped="" ref="0x7f08184ec020"/>
        <function-ref name="clr" scoped="" ref="0x7f08184ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f08184f38f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f08184f38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184f3c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184f3e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184f2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184f21b0"/>
        <function-ref name="get" scoped="" ref="0x7f08184f2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184f24d0"/>
        <function-ref name="set" scoped="" ref="0x7f08184f2660"/>
        <function-ref name="clr" scoped="" ref="0x7f08184f27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f08184f0da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f08184f0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184ef180"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184ef310"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184ef4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184ef630"/>
        <function-ref name="get" scoped="" ref="0x7f08184ef7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184ef950"/>
        <function-ref name="set" scoped="" ref="0x7f08184efae0"/>
        <function-ref name="clr" scoped="" ref="0x7f08184efc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f08184ec440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f08184ec440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184ec7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184ec950"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184ecae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184ecc70"/>
        <function-ref name="get" scoped="" ref="0x7f08184ece00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184eb020"/>
        <function-ref name="set" scoped="" ref="0x7f08184eb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f08184eb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817954c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817954c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08179530a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817953230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08179533c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817953550"/>
        <function-ref name="get" scoped="" ref="0x7f08179536e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817953870"/>
        <function-ref name="set" scoped="" ref="0x7f0817953a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0817953b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817951e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817951e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08179501c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817950350"/>
        <function-ref name="toggle" scoped="" ref="0x7f08179504e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817950670"/>
        <function-ref name="get" scoped="" ref="0x7f0817950800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817950990"/>
        <function-ref name="set" scoped="" ref="0x7f0817950b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817950cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081794d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081794d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081794d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f081794d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081794d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081794d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f081794da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081794dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f081794dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f081794c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081794a3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081794a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081794a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f081794a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f081794aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081794ac20"/>
        <function-ref name="get" scoped="" ref="0x7f081794adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817949020"/>
        <function-ref name="set" scoped="" ref="0x7f08179491b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817949340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08179476d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08179476d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817947a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817947be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0817947d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817946020"/>
        <function-ref name="get" scoped="" ref="0x7f08179461b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817946340"/>
        <function-ref name="set" scoped="" ref="0x7f08179464d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817946660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08179449b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08179449b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0817944d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817943020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08179431b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817943340"/>
        <function-ref name="get" scoped="" ref="0x7f08179434d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817943660"/>
        <function-ref name="set" scoped="" ref="0x7f08179437f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0817943980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0817941e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0817941e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08179401c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0817940350"/>
        <function-ref name="toggle" scoped="" ref="0x7f08179404e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0817940670"/>
        <function-ref name="get" scoped="" ref="0x7f0817940800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0817940990"/>
        <function-ref name="set" scoped="" ref="0x7f0817940b20"/>
        <function-ref name="clr" scoped="" ref="0x7f0817940cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081793d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081793d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081793d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f081793d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081793d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081793d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f081793da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081793dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f081793dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f081793b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184e5e20" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184e5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184e41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184e4350"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184e44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184e4670"/>
        <function-ref name="get" scoped="" ref="0x7f08184e4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184e4990"/>
        <function-ref name="set" scoped="" ref="0x7f08184e4b20"/>
        <function-ref name="clr" scoped="" ref="0x7f08184e4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184e09b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184e09b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184e0d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184de020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184de1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184de340"/>
        <function-ref name="get" scoped="" ref="0x7f08184de4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184de660"/>
        <function-ref name="set" scoped="" ref="0x7f08184de7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f08184de980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184da6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184da6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184daa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184dabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184dad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184d9020"/>
        <function-ref name="get" scoped="" ref="0x7f08184d91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184d9340"/>
        <function-ref name="set" scoped="" ref="0x7f08184d94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f08184d9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184d4160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184d4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184d44e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184d4670"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184d4800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184d4990"/>
        <function-ref name="get" scoped="" ref="0x7f08184d4b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184d4cb0"/>
        <function-ref name="set" scoped="" ref="0x7f08184d4e40"/>
        <function-ref name="clr" scoped="" ref="0x7f08184d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184d0c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184d0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184cf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184cf230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184cf3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184cf550"/>
        <function-ref name="get" scoped="" ref="0x7f08184cf6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184cf870"/>
        <function-ref name="set" scoped="" ref="0x7f08184cfa00"/>
        <function-ref name="clr" scoped="" ref="0x7f08184cfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184ca6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184ca6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184caa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184cabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184cad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184c9020"/>
        <function-ref name="get" scoped="" ref="0x7f08184c91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184c9340"/>
        <function-ref name="set" scoped="" ref="0x7f08184c94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f08184c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184c4270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184c4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184c45f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184c4780"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184c4910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184c4aa0"/>
        <function-ref name="get" scoped="" ref="0x7f08184c4c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184c4dc0"/>
        <function-ref name="set" scoped="" ref="0x7f08184c3020"/>
        <function-ref name="clr" scoped="" ref="0x7f08184c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184c0d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184c0d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184bf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184bf230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184bf3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184bf550"/>
        <function-ref name="get" scoped="" ref="0x7f08184bf6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184bf870"/>
        <function-ref name="set" scoped="" ref="0x7f08184bfa00"/>
        <function-ref name="clr" scoped="" ref="0x7f08184bfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184ba6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184ba6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184baa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184babe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184bad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184b9020"/>
        <function-ref name="get" scoped="" ref="0x7f08184b91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184b9340"/>
        <function-ref name="set" scoped="" ref="0x7f08184b94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f08184b9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184b4160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184b4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184b44e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184b4670"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184b4800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184b4990"/>
        <function-ref name="get" scoped="" ref="0x7f08184b4b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184b4cb0"/>
        <function-ref name="set" scoped="" ref="0x7f08184b4e40"/>
        <function-ref name="clr" scoped="" ref="0x7f08184b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184b0c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184b0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184af0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184af230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184af3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184af550"/>
        <function-ref name="get" scoped="" ref="0x7f08184af6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184af870"/>
        <function-ref name="set" scoped="" ref="0x7f08184afa00"/>
        <function-ref name="clr" scoped="" ref="0x7f08184afb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184aa6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184aa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184aaa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184aabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184aad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184a9020"/>
        <function-ref name="get" scoped="" ref="0x7f08184a91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184a9340"/>
        <function-ref name="set" scoped="" ref="0x7f08184a94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f08184a9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184a4160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184a4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184a44e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08184a4670"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184a4800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184a4990"/>
        <function-ref name="get" scoped="" ref="0x7f08184a4b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08184a4cb0"/>
        <function-ref name="set" scoped="" ref="0x7f08184a4e40"/>
        <function-ref name="clr" scoped="" ref="0x7f08184a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184a0c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184a0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081849f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081849f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f081849f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081849f550"/>
        <function-ref name="get" scoped="" ref="0x7f081849f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081849f870"/>
        <function-ref name="set" scoped="" ref="0x7f081849fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f081849fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818483020" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818483020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184833a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818483530"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184836c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818483850"/>
        <function-ref name="get" scoped="" ref="0x7f08184839e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818483b70"/>
        <function-ref name="set" scoped="" ref="0x7f0818483d00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818482020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081847f6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081847f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081847fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f081847fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081847fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081847e020"/>
        <function-ref name="get" scoped="" ref="0x7f081847e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081847e340"/>
        <function-ref name="set" scoped="" ref="0x7f081847e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f081847e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081847ac90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081847ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184790a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818479230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184793c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818479550"/>
        <function-ref name="get" scoped="" ref="0x7f08184796e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818479870"/>
        <function-ref name="set" scoped="" ref="0x7f0818479a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818479b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818474180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818474180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818474500"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818474690"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818474820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184749b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818474b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818474cd0"/>
        <function-ref name="set" scoped="" ref="0x7f0818474e60"/>
        <function-ref name="clr" scoped="" ref="0x7f0818473020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818470830" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818470830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818470bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818470d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f081846f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081846f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f081846f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081846f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f081846f660"/>
        <function-ref name="clr" scoped="" ref="0x7f081846f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081846be20" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081846be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081846a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081846a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f081846a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081846a670"/>
        <function-ref name="get" scoped="" ref="0x7f081846a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081846a990"/>
        <function-ref name="set" scoped="" ref="0x7f081846ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f081846acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818466460" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818466460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184667e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818466970"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818466b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818466c90"/>
        <function-ref name="get" scoped="" ref="0x7f0818466e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818464020"/>
        <function-ref name="set" scoped="" ref="0x7f08184641b0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818464340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184619b0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184619b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818461d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818460020"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818460340"/>
        <function-ref name="get" scoped="" ref="0x7f08184604d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818460660"/>
        <function-ref name="set" scoped="" ref="0x7f08184607f0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818460980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081845b160" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081845b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081845b4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f081845b670"/>
        <function-ref name="toggle" scoped="" ref="0x7f081845b800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081845b990"/>
        <function-ref name="get" scoped="" ref="0x7f081845bb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081845bcb0"/>
        <function-ref name="set" scoped="" ref="0x7f081845be40"/>
        <function-ref name="clr" scoped="" ref="0x7f081845a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184576d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184576d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818457a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818457be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818457d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818455020"/>
        <function-ref name="get" scoped="" ref="0x7f08184551b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818455340"/>
        <function-ref name="set" scoped="" ref="0x7f08184554d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818455660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818452c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818452c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184510a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818451230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184513c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818451550"/>
        <function-ref name="get" scoped="" ref="0x7f08184516e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818451870"/>
        <function-ref name="set" scoped="" ref="0x7f0818451a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818451b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081844c180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081844c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081844c500"/>
        <function-ref name="isInput" scoped="" ref="0x7f081844c690"/>
        <function-ref name="toggle" scoped="" ref="0x7f081844c820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081844c9b0"/>
        <function-ref name="get" scoped="" ref="0x7f081844cb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081844ccd0"/>
        <function-ref name="set" scoped="" ref="0x7f081844ce60"/>
        <function-ref name="clr" scoped="" ref="0x7f081844b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184486d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184486d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818448a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818448be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818448d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818447020"/>
        <function-ref name="get" scoped="" ref="0x7f08184471b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818447340"/>
        <function-ref name="set" scoped="" ref="0x7f08184474d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818447660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818443c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818443c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184420a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818442230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184423c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818442550"/>
        <function-ref name="get" scoped="" ref="0x7f08184426e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818442870"/>
        <function-ref name="set" scoped="" ref="0x7f0818442a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818442b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081843d180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081843d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081843d500"/>
        <function-ref name="isInput" scoped="" ref="0x7f081843d690"/>
        <function-ref name="toggle" scoped="" ref="0x7f081843d820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081843d9b0"/>
        <function-ref name="get" scoped="" ref="0x7f081843db40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081843dcd0"/>
        <function-ref name="set" scoped="" ref="0x7f081843de60"/>
        <function-ref name="clr" scoped="" ref="0x7f081843c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08184396d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08184396d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818439a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818439be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818439d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818438020"/>
        <function-ref name="get" scoped="" ref="0x7f08184381b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818438340"/>
        <function-ref name="set" scoped="" ref="0x7f08184384d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818438660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818434c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818434c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184330a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818433230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184333c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818433550"/>
        <function-ref name="get" scoped="" ref="0x7f08184336e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818433870"/>
        <function-ref name="set" scoped="" ref="0x7f0818433a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818433b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081842e180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081842e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081842e500"/>
        <function-ref name="isInput" scoped="" ref="0x7f081842e690"/>
        <function-ref name="toggle" scoped="" ref="0x7f081842e820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081842e9b0"/>
        <function-ref name="get" scoped="" ref="0x7f081842eb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081842ecd0"/>
        <function-ref name="set" scoped="" ref="0x7f081842ee60"/>
        <function-ref name="clr" scoped="" ref="0x7f081842d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081842a6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081842a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081842aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f081842abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081842ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818429020"/>
        <function-ref name="get" scoped="" ref="0x7f08184291b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818429340"/>
        <function-ref name="set" scoped="" ref="0x7f08184294d0"/>
        <function-ref name="clr" scoped="" ref="0x7f0818429660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818425c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818425c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184240a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818424230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184243c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818424550"/>
        <function-ref name="get" scoped="" ref="0x7f08184246e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818424870"/>
        <function-ref name="set" scoped="" ref="0x7f0818424a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818424b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081841f180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081841f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081841f500"/>
        <function-ref name="isInput" scoped="" ref="0x7f081841f690"/>
        <function-ref name="toggle" scoped="" ref="0x7f081841f820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081841f9b0"/>
        <function-ref name="get" scoped="" ref="0x7f081841fb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081841fcd0"/>
        <function-ref name="set" scoped="" ref="0x7f081841fe60"/>
        <function-ref name="clr" scoped="" ref="0x7f081841e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081841b6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081841b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081841ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f081841bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081841bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081841a020"/>
        <function-ref name="get" scoped="" ref="0x7f081841a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081841a340"/>
        <function-ref name="set" scoped="" ref="0x7f081841a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f081841a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818416c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818416c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184150a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818415230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184153c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818415550"/>
        <function-ref name="get" scoped="" ref="0x7f08184156e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818415870"/>
        <function-ref name="set" scoped="" ref="0x7f0818415a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818415b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818410180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818410180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818410500"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818410690"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818410820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184109b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818410b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818410cd0"/>
        <function-ref name="set" scoped="" ref="0x7f0818410e60"/>
        <function-ref name="clr" scoped="" ref="0x7f081840f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f081840c6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f081840c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081840ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f081840cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081840cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081840b020"/>
        <function-ref name="get" scoped="" ref="0x7f081840b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081840b340"/>
        <function-ref name="set" scoped="" ref="0x7f081840b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f081840b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818407c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818407c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08184060a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818406230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08184063c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818406550"/>
        <function-ref name="get" scoped="" ref="0x7f08184066e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818406870"/>
        <function-ref name="set" scoped="" ref="0x7f0818406a00"/>
        <function-ref name="clr" scoped="" ref="0x7f0818406b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f0818401180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f0818401180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818401500"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818401690"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818401820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08184019b0"/>
        <function-ref name="get" scoped="" ref="0x7f0818401b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818401cd0"/>
        <function-ref name="set" scoped="" ref="0x7f0818401e60"/>
        <function-ref name="clr" scoped="" ref="0x7f0818400020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08183fd6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08183fd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08183fda50"/>
        <function-ref name="isInput" scoped="" ref="0x7f08183fdbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08183fdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08183fc020"/>
        <function-ref name="get" scoped="" ref="0x7f08183fc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08183fc340"/>
        <function-ref name="set" scoped="" ref="0x7f08183fc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f08183fc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08183f70a0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08183f70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08183f7420"/>
        <function-ref name="isInput" scoped="" ref="0x7f08183f75b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08183f7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08183f78d0"/>
        <function-ref name="get" scoped="" ref="0x7f08183f7a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08183f7bf0"/>
        <function-ref name="set" scoped="" ref="0x7f08183f7d80"/>
        <function-ref name="clr" scoped="" ref="0x7f08183f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08183f36d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08183f36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08183f3a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f08183f3be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f08183f3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08183f1020"/>
        <function-ref name="get" scoped="" ref="0x7f08183f11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08183f1340"/>
        <function-ref name="set" scoped="" ref="0x7f08183f14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f08183f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08183eec90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08183eec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08183ed0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f08183ed230"/>
        <function-ref name="toggle" scoped="" ref="0x7f08183ed3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08183ed550"/>
        <function-ref name="get" scoped="" ref="0x7f08183ed6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08183ed870"/>
        <function-ref name="set" scoped="" ref="0x7f08183eda00"/>
        <function-ref name="clr" scoped="" ref="0x7f08183edb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f08183e8180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f08183e8180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f08183e8500"/>
        <function-ref name="isInput" scoped="" ref="0x7f08183e8690"/>
        <function-ref name="toggle" scoped="" ref="0x7f08183e8820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08183e89b0"/>
        <function-ref name="get" scoped="" ref="0x7f08183e8b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f08183e8cd0"/>
        <function-ref name="set" scoped="" ref="0x7f08183e8e60"/>
        <function-ref name="clr" scoped="" ref="0x7f08183e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f0818393e60" loc="12:PS2/PS2C.nc">
      <component-ref qname="PS2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f0818393e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0818390210"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f08183903a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockIRQ" ref="0x7f0818362d90" loc="22:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockIRQ" scoped="" ref="0x7f0818362d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f0818368180"/>
        <function-ref name="fired" scoped="" ref="0x7f0818368310"/>
        <function-ref name="disable" scoped="" ref="0x7f08183684a0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f0818368630"/>
        <function-ref name="reset" scoped="" ref="0x7f08183687c0"/>
        <function-ref name="setMask" scoped="" ref="0x7f0818368950"/>
        <function-ref name="enable" scoped="" ref="0x7f0818368ae0"/>
        <function-ref name="getPins" scoped="" ref="0x7f0818368c70"/>
        <function-ref name="getMask" scoped="" ref="0x7f0818368e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockPin" ref="0x7f08183671c0" loc="23:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockPin" scoped="" ref="0x7f08183671c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818367540"/>
        <function-ref name="isInput" scoped="" ref="0x7f08183676d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818367860"/>
        <function-ref name="isOutput" scoped="" ref="0x7f08183679f0"/>
        <function-ref name="get" scoped="" ref="0x7f0818367b80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f0818367d10"/>
        <function-ref name="set" scoped="" ref="0x7f0818360020"/>
        <function-ref name="clr" scoped="" ref="0x7f08183601b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataPin" ref="0x7f08183604f0" loc="24:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPin" scoped="" ref="0x7f08183604f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f0818360870"/>
        <function-ref name="isInput" scoped="" ref="0x7f0818360a00"/>
        <function-ref name="toggle" scoped="" ref="0x7f0818360b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f0818360d20"/>
        <function-ref name="get" scoped="" ref="0x7f081835f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081835f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f081835f340"/>
        <function-ref name="clr" scoped="" ref="0x7f081835f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f081836a860" loc="19:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f081836a860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f081836abe0"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f081836ad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x7f081838eca0" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <component-ref qname="HplAtmegaPinChange2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f081838eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f08183380a0"/>
        <function-ref name="fired" scoped="" ref="0x7f0818338230"/>
        <function-ref name="disable" scoped="" ref="0x7f08183383c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f0818338550"/>
        <function-ref name="reset" scoped="" ref="0x7f08183386e0"/>
        <function-ref name="setMask" scoped="" ref="0x7f0818338870"/>
        <function-ref name="enable" scoped="" ref="0x7f0818338a00"/>
        <function-ref name="getPins" scoped="" ref="0x7f0818338b90"/>
        <function-ref name="getMask" scoped="" ref="0x7f0818338d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f08183234d0" loc="14:VolumeAdc/VolumeAdcC.nc">
      <component-ref qname="VolumeAdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f08183234d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0818320110"/>
        <function-ref name="readDone" scoped="" ref="0x7f0818320590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f081831b020" loc="17:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f081831b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f081831b3a0"/>
        <function-ref name="configure" scoped="" ref="0x7f081831b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumePin" ref="0x7f081831b8e0" loc="19:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumePin" scoped="" ref="0x7f081831b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f081831bc60"/>
        <function-ref name="isInput" scoped="" ref="0x7f081831bdf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f081831a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f081831a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f081831a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f081831a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f081831a660"/>
        <function-ref name="clr" scoped="" ref="0x7f081831a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcConfig" ref="0x7f0818318540" loc="16:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f0818318540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f08183188c0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f0818318a50"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f0818318be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f08181cac10" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f08181cac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f08181c9020"/>
        <function-ref name="configure" scoped="" ref="0x7f08181c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f08181ccbe0" loc="22:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f08181ccbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f08181cb860"/>
        <function-ref name="readDone" scoped="" ref="0x7f08181cbce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f08181ca320" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f08181ca320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f08181ca6a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f08181ca830"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f08181ca9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f081830adf0" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f081830adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0818306a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f0818305020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f0818301e60" loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f0818301e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0818304ac0"/>
        <function-ref name="readDone" scoped="" ref="0x7f0818300020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f08182ffb50" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f08182ffb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f08182fe020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f08182fe1b0"/>
        <function-ref name="request" scoped="" ref="0x7f08182fe340"/>
        <function-ref name="granted" scoped="" ref="0x7f08182fe4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f08182fe660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f0818300c30" loc="23:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f0818300c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f08182ff020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f08182ff1b0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f08182ff340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f08182f7af0" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f08182f7af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f08182f7e70"/>
        <function-ref name="configure" scoped="" ref="0x7f08182f3030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7f08182f4dd0" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f08182f4dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f08182f8180"/>
        <function-ref name="cancel" scoped="" ref="0x7f08182f8310"/>
        <function-ref name="dataReady" scoped="" ref="0x7f08182f84a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f08182fb8c0" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f08182fb8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f08182fbc40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f08182fbdd0"/>
        <function-ref name="request" scoped="" ref="0x7f08182fa020"/>
        <function-ref name="granted" scoped="" ref="0x7f08182fa1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f08182fa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7f08182eec90" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f08182eec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f08182f70a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f08182f7230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm1280Adc" ref="0x7f08182e8020" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f08182e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f08182e83a0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f08182e8530"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f08182e86c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f08182e8850"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f08182e89e0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f08182e8b70"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f08182e8d00"/>
        <function-ref name="isComplete" scoped="" ref="0x7f08182e7020"/>
        <function-ref name="cancel" scoped="" ref="0x7f08182e71b0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f08182e7340"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f08182e74d0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f08182e7660"/>
        <function-ref name="startConversion" scoped="" ref="0x7f08182e77f0"/>
        <function-ref name="isStarted" scoped="" ref="0x7f08182e7a80"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f08182e7c10"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f08182e7da0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f08182d9020"/>
        <function-ref name="getValue" scoped="" ref="0x7f08182d91b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f08182d9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7f08182ea020" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f08182ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f08182ea3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f08182ea530"/>
        <function-ref name="dataReady" scoped="" ref="0x7f08182ea6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f08182eb150" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f08182eb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f08182eb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f08182d9630" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f08182d9630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f08182d99b0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f08182d9b40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f08182d9cd0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f08182d9e60"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f08182d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f08182eb7c0" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f08182eb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f08182ebb40"/>
        <function-ref name="stop" scoped="" ref="0x7f08182ebcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7f08182ea9d0" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f08182ea9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f08182ead50"/>
        <function-ref name="dataReady" scoped="" ref="0x7f08182e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7f08182ecd30" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <component-ref qname="HplAtm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f08182ecd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f08182a60e0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f08182a6270"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f08182a6400"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f08182a6590"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f08182a6720"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f08182a68b0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f08182a6a40"/>
        <function-ref name="isComplete" scoped="" ref="0x7f08182a6bd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f08182a6d60"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f08182a5020"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f08182a51b0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f08182a5340"/>
        <function-ref name="startConversion" scoped="" ref="0x7f08182a54d0"/>
        <function-ref name="isStarted" scoped="" ref="0x7f08182a5760"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f08182a58f0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f08182a5a80"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f08182a5c10"/>
        <function-ref name="getValue" scoped="" ref="0x7f08182a5da0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f08182a4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f081829f7f0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f081829f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f081829fb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7f08182a1200" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f08182a1200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f08182a1580"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f08182a1710"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f08182a18a0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f08182a1a30"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f08182a1bc0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f08182a1d50"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f08182a0020"/>
        <function-ref name="isComplete" scoped="" ref="0x7f08182a01b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f08182a0340"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f08182a04d0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f08182a0660"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f08182a07f0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f08182a0980"/>
        <function-ref name="isStarted" scoped="" ref="0x7f08182a0c10"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f08182a0da0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f081829f020"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f081829f1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f081829f340"/>
        <function-ref name="dataReady" scoped="" ref="0x7f081829f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f0818236c00" loc="92:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f0818236c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f0818234020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f08182341b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f0818233930" loc="96:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f0818233930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f0818233cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f0818233e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f0818234400" loc="93:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f0818234400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0818234780"/>
        <function-ref name="requested" scoped="" ref="0x7f0818234910"/>
        <function-ref name="granted" scoped="" ref="0x7f0818234aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0818234c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0818234dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f0818237e70" loc="91:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f0818237e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0818236240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f08182363d0"/>
        <function-ref name="request" scoped="" ref="0x7f0818236560"/>
        <function-ref name="granted" scoped="" ref="0x7f08182366f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0818236880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f0818233060" loc="94:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0818233060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f08182333e0"/>
        <function-ref name="userId" scoped="" ref="0x7f0818233570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f0817752c00" loc="44:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f0817752c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f0817751020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f08177512b0" loc="45:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f08177512b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f0817751630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f08177517c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f0817751950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f0817751ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f081774e3a0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f081774e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f081774e740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f081774e8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f081774b210" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f081774b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f081774b5b0"/>
        <function-ref name="configure" scoped="" ref="0x7f081774b740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f081774b9d0" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f081774b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f081774bd50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f081774a020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f081774a1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f081774a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f081774eb20" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f081774eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f081774d020"/>
        <function-ref name="requested" scoped="" ref="0x7f081774d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f081774d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f081774d4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f081774d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f081774a590" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f081774a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f081774a910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f081774aaa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f081774ac30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f081774adc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f0817749020"/>
        <function-ref name="get" scoped="" ref="0x7f08177491b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f0817749340"/>
        <function-ref name="led0On" scoped="" ref="0x7f0817749980"/>
        <function-ref name="set" scoped="" ref="0x7f0817749660"/>
        <function-ref name="led2On" scoped="" ref="0x7f08177494d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f08177497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f081774f4d0" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f081774f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f081774f870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f081774fa00"/>
        <function-ref name="request" scoped="" ref="0x7f081774fb90"/>
        <function-ref name="granted" scoped="" ref="0x7f081774fd20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f081774e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f081774d8b0" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f081774d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f081774dc30"/>
        <function-ref name="userId" scoped="" ref="0x7f081774ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f0817749c50" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f0817749c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0817748020"/>
        <function-ref name="runTask" scoped="" ref="0x7f08177481b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f081822f780" loc="72:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f081822f780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f081822fb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f081822fd50" loc="73:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f081822fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0818225100"/>
        <function-ref name="requested" scoped="" ref="0x7f0818225290"/>
        <function-ref name="granted" scoped="" ref="0x7f0818225420"/>
        <function-ref name="isOwner" scoped="" ref="0x7f08182255b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0818225740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f081822f020" loc="70:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f081822f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f081822f3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f081822f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f0818225990" loc="74:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0818225990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f0818225d10"/>
        <function-ref name="userId" scoped="" ref="0x7f0818224020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f0817716dc0" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f0817716dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f0817715180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f08177153d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f08177153d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f0817715750"/>
        <function-ref name="requested" scoped="" ref="0x7f08177158e0"/>
        <function-ref name="granted" scoped="" ref="0x7f0817715a70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f0817715c00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f0817715d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f0817716660" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f0817716660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f08177169e0"/>
        <function-ref name="stop" scoped="" ref="0x7f0817716b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f0817714020" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f0817714020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f08177143a0"/>
        <function-ref name="userId" scoped="" ref="0x7f0817714530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f0818216740" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f0818216740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194825c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f0819482930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f08182145b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcSingle" ref="0x7f08182189f0" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f08182189f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f0818218d70"/>
        <function-ref name="cancel" scoped="" ref="0x7f0818217020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f08182171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f081821c410" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f081821c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f081821b020"/>
        <function-ref name="readDone" scoped="" ref="0x7f081821b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f08182191d0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f08182191d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f0818219e00"/>
        <function-ref name="readDone" scoped="" ref="0x7f0818218340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f0818217a10" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f0818217a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f0818217d90"/>
        <function-ref name="getChannel" scoped="" ref="0x7f0818216020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f08182161b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f0818204820" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f0818204820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f0818204ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f0818204d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f08181ef150" loc="24:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f08181ef150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f08181efd60"/>
        <function-ref name="readDone" scoped="" ref="0x7f08181d6260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f08181d6af0" loc="26:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f08181d6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f08181d5750"/>
        <function-ref name="readDone" scoped="" ref="0x7f08181d5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f08181d4300" loc="27:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f08181d4300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f08181d46a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f08181d4830"/>
        <function-ref name="request" scoped="" ref="0x7f08181d49c0"/>
        <function-ref name="granted" scoped="" ref="0x7f08181d4b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f08181d4ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f0818321b00" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f0818321b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f08194841a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f0819484510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f08181c2110"/>
        <function-ref name="fired" scoped="" ref="0x7f08181c55b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f08181c34a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f08181c3020"/>
        <function-ref name="getdt" scoped="" ref="0x7f08181c2a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f08181c2590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f08181c5a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f08181c6750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f08181c3ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f08181c6c20"/>
        <function-ref name="stop" scoped="" ref="0x7f08181c5130"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../tinyos_ws18/tos/interfaces/Init.nc">
      <documentation loc="34:../tinyos_ws18/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f08193aa740" loc="62:../tinyos_ws18/tos/interfaces/Init.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../tinyos_ws18/tos/interfaces/Boot.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f08193ab350" loc="60:../tinyos_ws18/tos/interfaces/Boot.nc">
        <documentation loc="51:../tinyos_ws18/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f08193a2b70" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f08193a28f0" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f08193a5070" loc="31:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f08193a5af0" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f08193a5870" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f08193a3630" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f08193a33b0" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f08193a2020" loc="53:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../tinyos_ws18/tos/interfaces/Scheduler.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f08195396c0" loc="57:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="54:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f08195386a0" loc="72:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f0819539e30" loc="65:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f0819530a30" loc="67:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f081952e2b0" loc="75:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../tinyos_ws18/tos/interfaces/McuSleep.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f0819436d40" loc="76:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f0819416940" loc="62:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f08194b5470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f08194171f0" loc="52:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Database" loc="23:Database/Database.nc">
      <function command="" provided="0" name="getChannelList" ref="0x7f08193572a0" loc="40:Database/Database.nc">
        <documentation loc="34:Database/Database.nc">
          <short>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10; </short>
          <long>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10; @param onlyFavorites tells server to send only the channels with a&#10;        registered quickDial number, if not zero&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="onlyFavorites" ref="0x7f0819357020" loc="40:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChannelEntry" ref="0x7f0819355360" loc="59:Database/Database.nc">
        <documentation loc="54:Database/Database.nc">
          <short>&#10; Received highscore entry from the server.</short>
          <long>&#10; Received highscore entry from the server.&#10; @param id The channel index from the database store&#10; @param channel The channel information, see channelInfo typedef&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f081935a2b0"/>
              <typename><typedef-ref name="channelInfo" ref="0x7f081935a8e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f0819356d10" loc="59:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f08193550d0" loc="59:Database/Database.nc">
            <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f081935a2b0"/>
              <typename><typedef-ref name="channelInfo" ref="0x7f081935a8e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="saveChannel" ref="0x7f0819359720" loc="31:Database/Database.nc">
        <documentation loc="25:Database/Database.nc">
          <short>&#10; Save a new channel, or change properties of an existing one.</short>
          <long>&#10; Save a new channel, or change properties of an existing one.&#10; @param id The channel index from the database store, 0xFF to autoselect,&#10;           must be between 0 and 15 if passed manually&#10; @param channel The channel information, see channelInfo typedef&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f081935a2b0"/>
                <typename><typedef-ref name="channelInfo" ref="0x7f081935a8e0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f08193590d0" loc="31:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f0819359490" loc="31:Database/Database.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f081935a2b0"/>
                <typename><typedef-ref name="channelInfo" ref="0x7f081935a8e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="savedChannel" ref="0x7f0819354130" loc="67:Database/Database.nc">
        <documentation loc="61:Database/Database.nc">
          <short>&#10; Server proceesed our request to save a Channel&#10; </short>
          <long>&#10; Server proceesed our request to save a Channel&#10; @param id The channel index from the database store, the one we passed&#10;           or the which was choosen if 0xFF was passed.&#10; @param result 0 = OK, 1 = No free index (only ID auto choose), 2 = DB error &#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f0819355b20" loc="67:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="result" ref="0x7f0819355e70" loc="67:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f0819357d60" loc="46:Database/Database.nc">
        <documentation loc="42:Database/Database.nc">
          <short>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10;</short>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f0819357ae0" loc="46:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="purgeChannelList" ref="0x7f0819356550" loc="52:Database/Database.nc">
        <documentation loc="48:Database/Database.nc">
          <short>&#10; Request that the Database purges all channels and their state&#10; Received channels will be signaled through receivedChannelEntry&#10;</short>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f0819352b40" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f0819352b40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f0819344420" loc="55:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="50:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f08193432b0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f0819352b40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f0819344ba0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f0819343020" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f0819352b40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PS2" loc="1:PS2/PS2.nc">
      <function command="" provided="0" name="init" ref="0x7f0819346020" loc="4:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChar" ref="0x7f08193469c0" loc="7:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="chr" ref="0x7f0819346740" loc="7:PS2/PS2.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FMClick" loc="19:FMClick/FMClick.nc">
      <function command="" provided="0" name="seek" ref="0x7f081934fa20" loc="22:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f081935ce40"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7f08193518e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f081934f7a0" loc="22:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f081935ce40"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7f08193518e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x7f081934dde0" loc="30:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="res" ref="0x7f081934db60" loc="30:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setVolume" ref="0x7f081934eac0" loc="26:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f081934e840" loc="26:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rdsReceived" ref="0x7f0819349020" loc="36:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f0819351b70"/>
              <typename><typedef-ref name="RDSType" ref="0x7f0819350600"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f081934a9a0" loc="36:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f0819351b70"/>
              <typename><typedef-ref name="RDSType" ref="0x7f0819350600"/></typename>
            </type-tag>
          </variable>
          <variable name="buf" ref="0x7f081934acc0" loc="36:FMClick/FMClick.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveRDS" ref="0x7f081934d4c0" loc="28:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f081934d240" loc="28:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tuneComplete" ref="0x7f081934b7f0" loc="32:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f081934b570" loc="32:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f081934e1b0" loc="24:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="seekComplete" ref="0x7f081934a2a0" loc="34:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f081934a020" loc="34:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tune" ref="0x7f081934f0b0" loc="20:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f0819350db0" loc="20:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Glcd" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
      <function command="" provided="0" name="drawTextPgm" ref="0x7f081935d620" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="109:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawTextPgm&#10;&#10; </short>
          <long>&#10; drawTextPgm&#10;&#10; @param text stored in program memory&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f081935fbf0" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f081935d020" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f081935d380" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawRect" ref="0x7f08193622d0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw rectangle&#10;&#10; </short>
          <long>&#10; Draw rectangle&#10;&#10; @param upper left x&#10; @param upper left y&#10; @param lower right x&#10; @param lower right y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f0819364560" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f08193648d0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f0819364c60" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f0819362020" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawLine" ref="0x7f0819365d40" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="45:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw line&#10;&#10; </short>
          <long>&#10; Draw line&#10;&#10; @param first point x&#10; @param first point y&#10; @param second point x&#10; @param second point y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f0819365020" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f0819365390" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f0819365720" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f0819365a90" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x7f0819369b60" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="12:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Set pixel&#10;&#10; </short>
          <long>&#10; Set pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f0819369570" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f08193698d0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="invertPixel" ref="0x7f0819366710" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="34:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Invert pixel&#10;&#10; </short>
          <long>&#10; Invert pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f0819366120" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f0819366480" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPixel" ref="0x7f0819367940" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="23:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Clear pixel&#10;&#10; </short>
          <long>&#10; Clear pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f0819367350" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f08193676b0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawEllipse" ref="0x7f08193618a0" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw ellipse&#10;&#10; </short>
          <long>&#10; Draw ellipse&#10;&#10; @param center x&#10; @param center y&#10; @param radius horizontal&#10; @param radius vertical&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f0819362ac0" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f0819362e20" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_h" ref="0x7f0819361240" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_v" ref="0x7f08193615f0" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawText" ref="0x7f081935f450" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="97:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawText&#10;&#10; </short>
          <long>&#10; drawText&#10;&#10; @param text&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f0819360ac0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f0819360e20" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f081935f1b0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x7f0819360350" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="87:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Fill Display with pattern&#10;&#10; </short>
          <long>&#10; Fill Display with pattern&#10;&#10; @param pattern&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x7f08193600d0" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f08193428b0" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f08193428b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f08193397c0" loc="136:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="132:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f081933d020" loc="83:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f081933bda0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f081933b7d0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f081933bb10" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f081933b020" loc="98:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="94:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f08193388a0" loc="151:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="146:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f0819338020" loc="144:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="138:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f081933d800" loc="92:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="86:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f081933f450" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f081933f1d0" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f081933adc0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="116:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f081933a7f0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f081933ab30" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f081933e020" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f081933fc90" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f081933e820" loc="78:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:../tinyos_ws18/tos/interfaces/Queue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f08192a94a0" loc="43:../tinyos_ws18/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f08192a94a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x7f08192a5c20" loc="80:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f08192a94a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x7f08192a46e0" loc="97:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f08192a94a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f08192a4460" loc="97:../tinyos_ws18/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f08192a94a0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x7f0819ee0b50"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x7f0819ee0b50"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x7f08192a1670" loc="108:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f08192a94a0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f08192a13f0" loc="108:../tinyos_ws18/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x7f08192a6500" loc="57:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f08192a54b0" loc="72:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f08192a3870" loc="88:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="82:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f08192a94a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f08192a9d50" loc="50:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="45:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f08192a6c80" loc="65:../tinyos_ws18/tos/interfaces/Queue.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpControl" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="setGateway" ref="0x7f08192b94c0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="gateway" ref="0x7f08192b9240" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGateway" ref="0x7f08192b8d70" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetmask" ref="0x7f08192b9e70" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="netmask" ref="0x7f08192b9bf0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIp" ref="0x7f08192b85f0" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetmask" ref="0x7f08192b6510" loc="15:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setIp" ref="0x7f08192bdac0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x7f08192bd840" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpSend" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
      <function command="" provided="0" name="send" ref="0x7f08192bf990" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
        <interfacedef-ref qname="UdpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f08192c1b70" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dstPort" ref="0x7f08192bf020" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f08192bf3a0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f08192bf6e0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f08192be350" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
        <interfacedef-ref qname="UdpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f08192be0d0" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../tinyos_ws18/tos/interfaces/SplitControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f08192b3020" loc="113:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="106:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f08192b4c50" loc="113:../tinyos_ws18/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f08192b2520" loc="138:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="132:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f08192b22a0" loc="138:../tinyos_ws18/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f08192b4270" loc="104:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="89:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f08192b3870" loc="130:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="115:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpReceive" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f08192bc610" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
        <interfacedef-ref qname="UdpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f08192c57d0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="srcPort" ref="0x7f08192c5b40" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f08192bc020" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f08192bc360" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:../tinyos_ws18/tos/interfaces/Pool.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x7f08192baa90" loc="50:../tinyos_ws18/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f08192baa90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f08192add40" loc="97:../tinyos_ws18/tos/interfaces/Pool.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f08192baa90"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x7f08192ae4b0" loc="80:../tinyos_ws18/tos/interfaces/Pool.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x7f08192b0390" loc="61:../tinyos_ws18/tos/interfaces/Pool.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x7f08192ad020" loc="89:../tinyos_ws18/tos/interfaces/Pool.nc">
        <documentation loc="82:../tinyos_ws18/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f08192baa90"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x7f08192aec70" loc="89:../tinyos_ws18/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x7f08192baa90"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x7f08192b0be0" loc="72:../tinyos_ws18/tos/interfaces/Pool.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketSender" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_type_t" ref="0x7f0819220800" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
          <interfacedef-ref qname="PacketSender"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f0819220800"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7f081921d390" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <interfacedef-ref qname="PacketSender"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f0819220800"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f081921d110" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f0819220800"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f081921dcd0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <interfacedef-ref qname="PacketSender"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f081921da50" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpPacket" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPacket" ref="0x7f081921a850" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
        <interfacedef-ref qname="IpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:540" alignment="I:1"><struct-ref ref="0x7f08192ca0f0"/>
              <typename><typedef-ref name="ip_packet_t" ref="0x7f08192ca510"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpReceive" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f0819218060" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
        <interfacedef-ref qname="IpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f08192196e0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f0819219a60" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0819219da0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcReceive" loc="8:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f0819209d40" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
        <interfacedef-ref qname="LlcReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f0819213b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f0819211020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcMac" ref="0x7f0819209730" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f0819213b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f0819211020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f0819209ab0" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcSend" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0819207980" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
        <interfacedef-ref qname="LlcSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f0819213b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f0819211020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstMac" ref="0x7f0819207020" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f0819213b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f0819211020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f08192073a0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f08192076e0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f08192052e0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
        <interfacedef-ref qname="LlcSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0819205060" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Arp" loc="10:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
      <function command="" provided="0" name="resolve" ref="0x7f08191fcbc0" loc="11:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
        <interfacedef-ref qname="Arp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x7f08191fc940" loc="11:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resolved" ref="0x7f08191fb580" loc="12:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
        <interfacedef-ref qname="Arp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f0819213b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f0819211020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="macPtr" ref="0x7f08191fb300" loc="12:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f0819213b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f0819211020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MacControl" loc="10:../tinyos_ws18/tos/lib_ecs/llc/MacControl.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMac" ref="0x7f08191b8e70" loc="11:../tinyos_ws18/tos/lib_ecs/llc/MacControl.nc">
        <interfacedef-ref qname="MacControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f0819213b30"/>
              <typename><typedef-ref name="mac_addr_t" ref="0x7f0819211020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mac" loc="10:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f08191b6ab0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f0819210830"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f0819210c50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f08191b64e0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f0819210830"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f0819210c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f08191b6820" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="received" ref="0x7f08191b5db0" loc="13:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f0819210830"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f0819210c50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f08191b5b30" loc="13:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f0819210830"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f0819210c50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f08191b5410" loc="12:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f08191b5190" loc="12:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMac" ref="0x7f08191b4550" loc="14:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f0819213b30"/>
              <typename><typedef-ref name="mac_addr_t" ref="0x7f0819211020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcQueue" loc="8:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f08191969d0" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <interfacedef-ref qname="LlcQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f0819213b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f0819211020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstMac" ref="0x7f0819199c80" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f0819213b30"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f0819211020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etherType" ref="0x7f0819196060" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f08191963e0" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0819196720" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0819195350" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <interfacedef-ref qname="LlcQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f08191950d0" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketQueue" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_type" ref="0x7f0819188810" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
          <interfacedef-ref qname="PacketQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_type" scoped="" ref="0x7f0819188810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7f0819185ce0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f0819185a60" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBuffer" ref="0x7f08191853d0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_type" scoped="" ref="0x7f0819188810"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f0819185110" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f08191849b0" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f08191843d0" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f0819184720" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f08190dc100" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f08190dc100"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f08190dca20" loc="61:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f0819e55170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f08190ca020" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f08190ca020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f08190ca260" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190ca260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f08190cab80" loc="64:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190ca260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f08190c9c80" loc="76:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f08190c9420" loc="71:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f08190c8420" loc="82:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="78:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f08190d8690" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f08190d8690"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f08190d88d0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190d88d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f08190d14a0" loc="109:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="105:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190d88d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f08190d34e0" loc="78:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f08190d2ae0" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="90:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190d88d0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190d88d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f08190d2510" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190d88d0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f08190d2850" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190d88d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f08190d3cc0" loc="88:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="81:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f08190d1c90" loc="116:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="111:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190d88d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f08190d44d0" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190d88d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f08190d4250" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190d88d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f08190d4d00" loc="73:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="68:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f081909bb20" loc="89:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f081909c8e0" loc="85:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f081909e5a0" loc="79:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f081909b350" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f081909b0d0" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f081909c110" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f081909de30" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f08190995c0" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f0819099340" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f081909ed40" loc="80:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f081909d710" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f081909d490" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280TimerSync" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
      <documentation loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changedto Sync for Atm1280&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer2Synchronous" ref="0x7f081908c8e0" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Turn on timer 2 synchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBBusy" ref="0x7f08190899c0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f081908b910" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f081908b0e0" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f0819088270" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f0819089190" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f081908d620" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f08194674d0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f08194678f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f081908c0b0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f08194674d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f08194678f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f081908dde0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f08194674d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f08194678f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f08190970d0" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190970d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f08190939f0" loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f0819096bf0" loc="58:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f0819097a10" loc="48:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190970d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f0819095390" loc="62:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f08190921f0" loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f0819096440" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190970d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f08190961c0" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f08190970d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f0819095b00" loc="65:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f0819093270" loc="68:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f08190ae7b0" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f08190ae7b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f08190a6070" loc="98:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f08190a70e0" loc="87:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f08190ab120" loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f08190ae7b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f08190a6a50" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f08190a67d0" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f08190a5270" loc="110:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f08190aaa40" loc="75:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f08190aa2b0" loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f08190a78a0" loc="93:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f08190abad0" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f08190ae7b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f08190ab850" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f08190ae7b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f08190a91f0" loc="78:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f08190a9940" loc="81:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpReceive" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f0818f0b140" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
        <interfacedef-ref qname="IcmpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f0818f0d460" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="code" ref="0x7f0818f0d7a0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0818f0db20" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0818f0de60" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpSend" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0818f0f620" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <interfacedef-ref qname="IcmpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f0818f10490" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x7f0818f107d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="code" ref="0x7f0818f10b10" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0818f0f020" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0818f0f360" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0818f0e020" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <interfacedef-ref qname="IcmpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0818f0fce0" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpSend" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0818f02df0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <interfacedef-ref qname="IpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f0818f02490" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f0818f02810" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0818f02b50" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0818f00770" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <interfacedef-ref qname="IpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0818f004f0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0818efa990" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <interfacedef-ref qname="IpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f0818efdc50" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="protocol" ref="0x7f0818efa020" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0818efa3a0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0818efa6e0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0818ef8350" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <interfacedef-ref qname="IpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0818ef80d0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0818eb26d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <interfacedef-ref qname="IcmpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f0818eb3660" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x7f0818eb39a0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="code" ref="0x7f0818eb3ce0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0818eb20d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0818eb2410" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0818eb1040" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <interfacedef-ref qname="IcmpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0818eb2d90" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplKS0108" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <short>&#10; Hpl interface for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl interface for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="dataWrite" ref="0x7f0818e482b0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="48:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write data&#10;&#10; </short>
          <long>&#10; Write data&#10;&#10; @param The controller to write to&#10; @param data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f0818e49c40" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f0818e48020" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f0818e4b030" loc="15:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="10:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Initialize GLCD&#10; &#10; </short>
          <long>&#10; Initialize GLCD&#10; &#10; @return SUCCESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataRead" ref="0x7f0818e49440" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="38:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read data&#10;&#10; </short>
          <long>&#10; Read data&#10;&#10; @param The controller to be read from&#10; &#10; @return data&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f0818e491c0" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlWrite" ref="0x7f0818e4a940" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write to controller&#10;&#10; </short>
          <long>&#10; Write to controller&#10;&#10; @param The controller to write to&#10; @param controller data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f0818e4a330" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f0818e4a6b0" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlRead" ref="0x7f0818e4bab0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="17:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read controller state&#10;&#10; </short>
          <long>&#10; Read controller state&#10;&#10; @param The controller to be checked&#10; &#10; @return state of the controller&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f0818e4b830" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f0818dd1e80" loc="44:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f0818dd05d0" loc="45:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f0818dd1070" loc="42:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f0818dce480" loc="47:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f0818dd1770" loc="43:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f0818dd0cf0" loc="46:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f0818dd2270" loc="40:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f0818dd2940" loc="41:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f0818dbf5f0" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f0818dbf5f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f0818dbf830" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0818dbf830"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f0818dbe390" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0818dbf830"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f0818dbe110" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f0818dbf830"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIOPort" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f0818dc5c10" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f0818dc5990" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f0818dc2020" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f0818dc4c80" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f0818dc2970" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f0818dc26f0" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f0818dc52a0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f0818dc5020" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f0818dc1a10" loc="13:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f0818dc12e0" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0818dc1060" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f0818dc45b0" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f0818dc4330" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Enc28j60Control" loc="11:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
      <function event="" provided="0" name="linkChange" ref="0x7f0818b76900" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
        <interfacedef-ref qname="Enc28j60Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f0818ba6700"/>
              <typename><typedef-ref name="link_status_t" ref="0x7f0818ba5020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f0818b76680" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f0818ba6700"/>
              <typename><typedef-ref name="link_status_t" ref="0x7f0818ba5020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../tinyos_ws18/tos/interfaces/SpiByte.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f0818b670b0" loc="45:../tinyos_ws18/tos/interfaces/SpiByte.nc">
        <documentation loc="40:../tinyos_ws18/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f0818b6fde0" loc="45:../tinyos_ws18/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f0818b6c830" loc="56:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f0818b6a2b0" loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f0818b6c0e0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f0818b6ba60" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f0818b6b7e0" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f0818b70960" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f0818b6b020" loc="63:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../tinyos_ws18/tos/interfaces/Resource.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f0818b63120" loc="120:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f0818b64120" loc="97:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f0818b65770" loc="88:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f0818b64910" loc="102:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f0818b63b80" loc="128:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="122:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0818af5600" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f0818affbb0" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f0818af5020" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0818af5360" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0818af4b80" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f0818af3e50" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f0818af4220" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0818af4560" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f0818af48d0" loc="83:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f0818afa0b0" loc="62:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0818b00dc0" loc="62:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f0818af94d0" loc="74:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0818af9250" loc="74:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f0818afa920" loc="68:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f0818af7020" loc="81:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0818af9ce0" loc="81:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiControl" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
      <function command="" provided="0" name="setClock" ref="0x7f0818afc020" loc="26:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
        <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
          <short>&#10; Control Spi speed&#10; &#10; IMPORTANT NOTE: Speed is reset to default after each resource release.</short>
          <long>&#10; Control Spi speed&#10; &#10; IMPORTANT NOTE: Speed is reset to default after each resource release.&#10; &#10;&#10; @param speed Spi speed in Fosc/speed&#10;&#10;    SPI_SPEED_4   - Set to Fosc/4&#10;    SPI_SPEED_16  - Set to Fosc/16&#10;    SPI_SPEED_64  - Set to Fosc/64&#10;    SPI_SPEED_128 - Set to Fosc/128&#10;    SPI_SPEED_2   - Set to Fosc/2&#10;    SPI_SPEED_8   - Set to Fosc/8&#10;    SPI_SPEED_32  - Set to Fosc/32&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f0818b01d10"/>
              <typename><typedef-ref name="spi_speed_t" ref="0x7f0818afd540"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f0818afdd60" loc="26:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f0818b01d10"/>
              <typename><typedef-ref name="spi_speed_t" ref="0x7f0818afd540"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f0818adfcc0" loc="86:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f0818ad4a70" loc="126:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f0818ad84a0" loc="117:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f0818ad3530" loc="128:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f0818ad32b0" loc="128:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f0818adf510" loc="83:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f0818ad6020" loc="122:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f0818ad7d50" loc="122:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f0818adbb50" loc="113:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f0818adb8d0" loc="113:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f0818addc70" loc="97:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f0818ace020" loc="141:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f0818acfd00" loc="141:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f0818ada350" loc="114:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f0818ad2690" loc="131:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f0818ad2410" loc="131:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f0818ad1610" loc="136:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f0818ad42e0" loc="125:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f0818ad4060" loc="125:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f0818acf5d0" loc="140:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f0818ad8e60" loc="119:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f0818ad8be0" loc="119:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f0818adc680" loc="103:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0818adc400" loc="103:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f0818adacd0" loc="116:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f0818adaa50" loc="116:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f0818ad6890" loc="123:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f0818ad3ca0" loc="129:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f0818ad2df0" loc="132:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f0818ad1dc0" loc="138:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f0818ad7610" loc="120:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f0818add4a0" loc="89:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f0818adb0b0" loc="109:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f0818adce00" loc="109:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f0818ac90e0" loc="90:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f0818ac9940" loc="98:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f0818a70ab0" loc="95:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f0818a6d350" loc="105:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f0818a18270" loc="53:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f0818a18ba0" loc="61:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f0818a15b70" loc="65:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f0818a15350" loc="59:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f0818a0cc10" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f0818a16cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f0818a0c990" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f0818a16cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f0818a10c50" loc="53:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f0818a0d7a0" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f0818a16cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f0818a0d520" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f0818a16cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f0818a0c0e0" loc="70:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f0818a16cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f08189a8680" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f0818916620" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <interfacedef-ref qname="UdpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f08189174d0" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f08192ce2b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f08192ce6d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="srcPort" ref="0x7f0818917840" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
          <variable name="dstPort" ref="0x7f0818917bb0" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0818916020" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f0818916360" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f0818915020" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <interfacedef-ref qname="UdpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0818916ce0" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f081888a790" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f081888a790"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f0818889da0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f081888c6c0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f08188890d0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f081888c6c0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f0818889420" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f0818889770" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0818889af0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f08188839a0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0818882c70" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f0818883020" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f0818883370" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f08188836f0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f0818887cf0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f081888c6c0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f0818887020" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f081888c6c0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f0818887370" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f08188876c0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0818887a40" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f0818884cf0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f0818884020" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f0818884370" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f08188846c0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f0818884a40" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f08187836c0" loc="56:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f0818782850" loc="73:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f0818787dd0" loc="46:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f0818782020" loc="65:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f08187811f0" loc="81:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../tinyos_ws18/tos/interfaces/Leds.nc">
      <documentation loc="33:../tinyos_ws18/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f081876d390" loc="61:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f081876db40" loc="67:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f081876c350" loc="72:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f081876b2b0" loc="83:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="79:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f081876aa20" loc="100:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="96:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f0818768270" loc="117:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="103:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f081876cae0" loc="77:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f0818768de0" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="120:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f0818768b60" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f081876ebd0" loc="56:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f081876ba90" loc="89:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="86:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f081876a270" loc="94:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f0818718770" loc="62:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f08186fc2b0" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f08186bbbc0" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f08186ba350" loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f08186b84a0" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f08186b8220" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f08186bb4a0" loc="52:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f08186b6da0" loc="65:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f08186b1b30" loc="84:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f08186b4790" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f08186b4510" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f08186ae420" loc="89:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f08186bc660" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f08186bc3e0" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f08186b6670" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f08186b63f0" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f08186b3070" loc="68:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f08186b8be0" loc="61:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f08186b2070" loc="75:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f08186baaa0" loc="56:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f08186b13f0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f08186b1170" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f08186afcc0" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f08186afa40" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f08186b3870" loc="72:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f08186bcd30" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f08186b7580" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f08186b7300" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f08186b2a90" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f08186b2810" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f08186af350" loc="85:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f08186b7cb0" loc="63:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x7f0818365270" loc="43:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f0818369ad0" loc="40:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f0818364800" loc="54:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f0818363020" loc="57:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f0818365980" loc="46:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x7f08183622a0" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f0818362020" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f08183640e0" loc="51:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x7f0818362a30" loc="70:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x7f08183637b0" loc="62:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcConfig" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
      <documentation loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f0818319940" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM1280_ADC_VREF_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f08183190e0" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM1280_ADC_SNGL_xxx&#10;   or ATM1280_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f08183181f0" loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM1280_ADC_PRESCALE_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f0818305d30" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f0818305d30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f0818302660" loc="58:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f0818301400" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f0818305d30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f0818302e20" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f08195323a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f0818301170" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f0818305d30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcSingle" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f08182f5020" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega1280 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f08182f6270" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f08182f65f0" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f08182f6970" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f08182f6ce0" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f08182f49a0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f08182f40c0" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f08182f5aa0" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f08182f5de0" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcMultiple" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm1280ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f08182f1830" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f08182f2ad0" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f08182f2e50" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f08182f1210" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f08182f1580" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f08182ee6c0" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f08182ef4b0" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f08182ef7f0" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f08182efb50" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f08182ee020" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f08182ee400" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280Adc" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <short>&#10; HPL interface to the Atmega1280 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega1280 A/D conversion subsystem. Please see the&#10; Atmega1280 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega1280 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f08182de480" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f08182e5020" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0819490eb0"/>
            <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f081948f3a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f08182db850" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM1280_ADC_PRESCALE_xxx&#10;   values from Atm1280Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f08182db5d0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f0819e57ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f08182ded20" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="118:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f08182e3de0" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f08182e5a80" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0819490eb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f081948f3a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f08182e5800" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f0819490eb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f081948f3a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f08182e2d20" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f08182ddd40" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f08182da070" loc="150:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f08182e2570" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f08182e0ca0" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f08182e0520" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f08182df4c0" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f08182dd530" loc="127:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f081953c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f08182e4dc0" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f0819489cb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f0819488440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f08182e4b40" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f0819489cb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f0819488440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f08182dfcf0" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f08182e4350" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f0819489cb0"/>
            <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f0819488440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f08182e3620" loc="75:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f08182dac00" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="152:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f08182da980" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f0819e56610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
