<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="23:RadioScannerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f4025e8c4a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f4025edb720"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f4025edb720"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f4025ed9e20"/></to>
    </wire>
    <wire loc="24:RadioScannerAppC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f4025e7bce0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f40253383a0"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f40253383a0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f4025304e10"/></to>
    </wire>
    <wire loc="25:RadioScannerAppC.nc">
      <from><interface-ref name="Lcd" scoped="" ref="0x7f4025e736b0"/></from>
      <to><interface-ref name="BufferedLcd" scoped="" ref="0x7f4024d62590"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="BufferedLcd" scoped="" ref="0x7f4024d62590"/></from>
      <to><interface-ref name="BufferedLcd" scoped="" ref="0x7f4024bcd020"/></to>
    </wire>
    <wire loc="26:RadioScannerAppC.nc">
      <from><interface-ref name="DBInit" scoped="" ref="0x7f4025e79640"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4025cf5690"/></to>
    </wire>
    <wire loc="26:Database/DatabaseC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4025cf5690"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4025cdd5f0"/></to>
    </wire>
    <wire loc="27:RadioScannerAppC.nc">
      <from><interface-ref name="DB" scoped="" ref="0x7f4025e78020"/></from>
      <to><interface-ref name="Database" scoped="" ref="0x7f4025cf5cc0"/></to>
    </wire>
    <wire loc="27:Database/DatabaseC.nc">
      <from><interface-ref name="Database" scoped="" ref="0x7f4025cf5cc0"/></from>
      <to><interface-ref name="Database" scoped="" ref="0x7f4025cddc20"/></to>
    </wire>
    <wire loc="28:RadioScannerAppC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x7f4025e72020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f402543ce40"/></to>
    </wire>
    <wire loc="26:FMClick/FMClickC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f402543ce40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40254350c0"/></to>
    </wire>
    <wire loc="29:RadioScannerAppC.nc">
      <from><interface-ref name="Radio" scoped="" ref="0x7f4025e60d60"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f4025439480"/></to>
    </wire>
    <wire loc="27:FMClick/FMClickC.nc">
      <from><interface-ref name="FMClick" scoped="" ref="0x7f4025439480"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f40254356e0"/></to>
    </wire>
    <wire loc="30:RadioScannerAppC.nc">
      <from><interface-ref name="Keyboard" scoped="" ref="0x7f4025e5c600"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f4024dd4e60"/></to>
    </wire>
    <wire loc="20:PS2/PS2C.nc">
      <from><interface-ref name="PS2" scoped="" ref="0x7f4024dd4e60"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f4024daa7e0"/></to>
    </wire>
    <wire loc="31:RadioScannerAppC.nc">
      <from><interface-ref name="volumeKnob" scoped="" ref="0x7f4025e59340"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f4024d61020"/></to>
    </wire>
    <wire loc="22:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f4024d61020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f4024c0ebe0"/></to>
    </wire>
    <wire loc="32:RadioScannerAppC.nc">
      <from><interface-ref name="VolumeTimer" scoped="" ref="0x7f4025e4e820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4024ba7d00"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4024ba7d00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4025aed1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:RadioScannerAppC.nc">
      <from><interface-ref name="ErrorTimer" scoped="" ref="0x7f4025e4bca0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4024b9f750"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4024b9f750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4025aed1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:RadioScannerAppC.nc">
      <from><interface-ref name="RDSTimer" scoped="" ref="0x7f4025e44120"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4024b98060"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4024b98060"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4025aed1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4025edabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4024bc07c0"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4025edabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4024bc7c30"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4025edabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4024147c00"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4025edabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40246431e0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4025edabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4025302150"/></to>
    </wire>
    <wire loc="96:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4025edabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40247476b0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4025edabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4025ae8e60"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4025edabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4025b2c4e0"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4025edabf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4025c087f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f4025eab4b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f4026068a20"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f4026068a20"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f4025f69990"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f4025eaa020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4025eddd00"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4025eddd00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4025ecf0c0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f4025eaa720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f4025edabf0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f4025ed7d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4024d2e830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f4025ed7020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f4025ebd020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f4025ece020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4025ebe860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f4025ecf7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4025022ab0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f4025ecf7a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f4025ec7020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f4025ec76f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f4025ed7d50"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f4025f689e0"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f4025f630d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f4025f81080"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4025f46de0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4025a344c0"/></to>
    </wire>
    <wire loc="129:RadioScannerP.nc">
      <from><interface-ref name="inputTuneChannel" scoped="" ref="0x7f4025e33e30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:RadioScannerP.nc">
      <from><interface-ref name="handleChar" scoped="" ref="0x7f4025e1d020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:RadioScannerP.nc">
      <from><interface-ref name="setVolume" scoped="" ref="0x7f4025e2d020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:RadioScannerP.nc">
      <from><interface-ref name="startSeekUp" scoped="" ref="0x7f4025e2c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:RadioScannerP.nc">
      <from><interface-ref name="displayHardError" scoped="" ref="0x7f4025e26020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:RadioScannerP.nc">
      <from><interface-ref name="inputNote" scoped="" ref="0x7f4025e31080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:RadioScannerP.nc">
      <from><interface-ref name="startTune" scoped="" ref="0x7f4025e28020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:RadioScannerP.nc">
      <from><interface-ref name="displayChannelInfo" scoped="" ref="0x7f4025e30020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:RadioScannerP.nc">
      <from><interface-ref name="addChannel" scoped="" ref="0x7f4025e27020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:RadioScannerP.nc">
      <from><interface-ref name="displayRDS" scoped="" ref="0x7f4025e2e020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:RadioScannerP.nc">
      <from><interface-ref name="startSeekDown" scoped="" ref="0x7f4025e2b020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:RadioScannerP.nc">
      <from><interface-ref name="displaySoftError" scoped="" ref="0x7f4025e25020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:RadioScannerP.nc">
      <from><interface-ref name="startSeekBand" scoped="" ref="0x7f4025e2a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f4025bab100"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f4025bb2430"/></to>
    </wire>
    <wire loc="29:Database/DatabaseC.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f4025bab100"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f40258814a0"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7f40258814a0"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7f402587d750"/></to>
    </wire>
    <wire loc="31:Database/DatabaseC.nc">
      <from><interface-ref name="UdpSend" scoped="" ref="0x7f4025cdb020"/></from>
      <to><interface-ref name="UdpSend" scoped="" ref="0x7f40254931f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpSend" scoped="" ref="0x7f40254931f0"/></from>
      <to><interface-ref name="UdpSend" scoped="" ref="0x7f40246da0e0"/></to>
    </wire>
    <wire loc="32:Database/DatabaseC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f4025cd0140"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f4025493990"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f4025493990"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f402548c330"/>
      <arguments>
        <value cst="I:50000">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:Database/DatabaseC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f4025cda080"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f4025c196c0"/></to>
    </wire>
    <wire loc="28:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f4025c196c0"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f4025c0bb80"/></to>
    </wire>
    <wire loc="34:Database/DatabaseC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7f4025cc6180"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f402587e020"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f402587e020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f402583dcf0"/></to>
    </wire>
    <wire loc="71:Database/DatabaseP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7f4025cc0e00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:Database/DatabaseP.nc">
      <from><interface-ref name="recvTask" scoped="" ref="0x7f4025cbece0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:Database/DatabaseP.nc">
      <from><interface-ref name="fetchList" scoped="" ref="0x7f4025cbdbc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f4025c1bde0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f4025c0d950"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpPacket" scoped="" ref="0x7f4025c142c0"/></from>
      <to><interface-ref name="IpPacket" scoped="" ref="0x7f4025c08e60"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f4025c19050"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f4025c0b510"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f4025c059d0"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f4025c13db0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f4025c13db0"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f4024b79e20"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f4025c03590"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f4025bc05a0"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f4025bc05a0"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f4025bb8020"/>
      <arguments>
        <value cst="I:2048">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="Arp" scoped="" ref="0x7f4025c08020"/></from>
      <to><interface-ref name="Arp" scoped="" ref="0x7f4025b45820"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="Arp" scoped="" ref="0x7f4025b45820"/></from>
      <to><interface-ref name="Arp" scoped="" ref="0x7f4025b416e0"/></to>
    </wire>
    <wire loc="30:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f4025b42080"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f4025c0bb80"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f4024b785e0"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f4025b8c7e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f4025bbb2f0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f4025bb6dd0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f4025bb8020"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f4025badaa0"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="MacControl" scoped="" ref="0x7f4025bb7be0"/></from>
      <to><interface-ref name="MacControl" scoped="" ref="0x7f4025babc30"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f4025b8c7e0"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f4025b54210"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f4025b5a880"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f4025bbb2f0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f4025b54bf0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f4025b87930"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f4025b87930"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f4024b6fe30"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f4024b6dbd0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f4025b5a880"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f4024b6a290"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="Timeout" scoped="" ref="0x7f4025b3a810"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4025938140"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4025938140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4025aed1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="ClearCacheTimeout" scoped="" ref="0x7f4025b35d20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4025932b00"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4025932b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4025aed1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f4025b2e020"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f402592b700"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7f402592b700"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7f4024adf020"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f4025b2e830"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f402592a020"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7f402592a020"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7f4025bb8020"/>
      <arguments>
        <value cst="I:2054">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7f4025b2d020"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7f4025b42080"/></to>
    </wire>
    <wire loc="28:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="MacControl" scoped="" ref="0x7f4025b2de70"/></from>
      <to><interface-ref name="MacControl" scoped="" ref="0x7f4025bb7be0"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f4025b3c8f0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f40259284a0"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f40259284a0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f4024ad8cd0"/></to>
    </wire>
    <wire loc="30:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f4025925360"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f4025b3e110"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f4025aed1d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4025ae5c30"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f4025ae5c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4025959150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4025ae8e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4025adac80"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f4025adb500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f402594a790"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4025adac80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40259d8ba0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f4025953640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f40259a8830"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f40259a3cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f4025acf960"/></to>
    </wire>
    <wire loc="35:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f4025acf960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f40259d74b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f4025940a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f4025acc020"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f4025acc020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f40259d38d0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f40259d38d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f4024b47d50"/></to>
    </wire>
    <wire loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f40259d8ba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f4024b4b1b0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f40259d74b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f4024b4b9c0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4024b44020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4025a508f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4025a508f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4025a3fa10"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f4024b3f190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f4025a49c10"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f4025a49c10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f4025a3adb0"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f4024b3e3e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4025a47060"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f4025a47060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f4025a371a0"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f4024b3a780"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f4025a43570"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f4025a43570"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f4025a34bf0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f402599e020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f402594ea00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7f4024adf7c0"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7f4025b8c7e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f4024ad5a30"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f4025925360"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f4024ad30a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/ping/PingC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f402588b7c0"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f40259185f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f40259185f0"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f4024ac1020"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/ping/PingC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f402588b150"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f4025918d90"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f4025918d90"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f4025908610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f4024ac17c0"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f40258a8410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f40259129e0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f40258d4290"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f4025908610"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f40258d3df0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f40258d1c90"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f4025905bd0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f4025905bd0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f4025c19050"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f40258d1490"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f4025905430"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f4025905430"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f4024abbe80"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f4024aba640"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f40258f4d60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f40258f4d60"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f40258e99f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f40258e54e0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f40258ee060"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f40258ee060"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f4024ab2320"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f40258eb020"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f4025c1bde0"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f4024aaf140"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f40258eb020"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f4024aae720"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f40258a8410"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f402589d450"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f402589de30"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f40258a6ae0"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f40258a6ae0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f4024a968f0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f40258a39d0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f40259129e0"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f4024a94700"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f40258a39d0"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f4024a93d60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Enc28j60Control" scoped="" ref="0x7f40258498a0"/></from>
      <to><interface-ref name="Enc28j60Control" scoped="" ref="0x7f4025837880"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f40258363a0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f4025655020"/></to>
    </wire>
    <wire loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f4025655020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f402563c900"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f402583d020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f402564f1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="ssETH" scoped="" ref="0x7f40258401e0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f40257c6670"/></to>
    </wire>
    <wire loc="146:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f40257c6670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f40257347a0"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="rstETH" scoped="" ref="0x7f4025846520"/></from>
      <to><interface-ref name="PortB4" scoped="" ref="0x7f40257c1350"/></to>
    </wire>
    <wire loc="150:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f40257c1350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4025730da0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="intETH" scoped="" ref="0x7f4025838390"/></from>
      <to><interface-ref name="Int2" scoped="" ref="0x7f4025502850"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f4025502850"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f40254bbc90"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="intPin" scoped="" ref="0x7f4025845840"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f40257b0060"/></to>
    </wire>
    <wire loc="166:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f40257b0060"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4025713020"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <from><interface-ref name="checkInterruptflag" scoped="" ref="0x7f40258005d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f4025795670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40256a5160"/></to>
    </wire>
    <wire loc="165:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f40257b2e40"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f4025715e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f4025715e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024904e20"/></to>
    </wire>
    <wire loc="176:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f40257a5cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f40257025d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f40257025d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40248923f0"/></to>
    </wire>
    <wire loc="185:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f402579b670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f40256f38f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f40256f38f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40248243f0"/></to>
    </wire>
    <wire loc="196:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f402578e990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402568b6d0"/></to>
    </wire>
    <wire loc="143:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f40257c8020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f402573dda0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f402573dda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024a3e6d0"/></to>
    </wire>
    <wire loc="183:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f402579d020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f40256f55d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f40256f55d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402482be20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f40257347a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40249dda60"/></to>
    </wire>
    <wire loc="157:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f40257ba670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4025723da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4025723da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402496b0a0"/></to>
    </wire>
    <wire loc="168:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f40257ae670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4025711440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4025711440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40248fa6d0"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f40257a1670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f40256ffa80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f40256ffa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024889e20"/></to>
    </wire>
    <wire loc="138:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f40257cf020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f40257435d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f40257435d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024a4e6d0"/></to>
    </wire>
    <wire loc="149:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f40257c2020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f4025731c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f4025731c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40249d33f0"/></to>
    </wire>
    <wire loc="160:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f40257b6020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f402571f440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f402571f440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40249629b0"/></to>
    </wire>
    <wire loc="171:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f40257a9020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f402570d8f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f402570d8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40248f00a0"/></to>
    </wire>
    <wire loc="188:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f4025797020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f40256f0da0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f40256f0da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402481be20"/></to>
    </wire>
    <wire loc="194:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f4025791350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4025695160"/></to>
    </wire>
    <wire loc="174:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f40257a7670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f40257052b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f40257052b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024899e20"/></to>
    </wire>
    <wire loc="141:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f40257cc990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f402573fa80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f402573fa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024a440a0"/></to>
    </wire>
    <wire loc="152:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f40257bf990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f402572d2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f402572d2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40249cae20"/></to>
    </wire>
    <wire loc="192:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f4025794cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40256a1c90"/></to>
    </wire>
    <wire loc="155:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f40257bc020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4025725a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4025725a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024972c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4025713020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40249000a0"/></to>
    </wire>
    <wire loc="177:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f40257a3020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4025701760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4025701760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402488f6d0"/></to>
    </wire>
    <wire loc="186:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f402579a990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f40256f2a80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f40256f2a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40248216d0"/></to>
    </wire>
    <wire loc="144:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f40257c7350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f402573b020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f402573b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024a329b0"/></to>
    </wire>
    <wire loc="147:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f40257c5990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f40257338f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f40257338f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40249dae20"/></to>
    </wire>
    <wire loc="158:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f40257b9990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f4025721020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f4025721020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40249683f0"/></to>
    </wire>
    <wire loc="169:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f40257ac990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f402570f5d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f402570f5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40248f79b0"/></to>
    </wire>
    <wire loc="180:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f40257a0990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f40256fec10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f40256fec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40248850a0"/></to>
    </wire>
    <wire loc="139:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f40257ce350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4025741760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4025741760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024a4b9b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4025730da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40249d06d0"/></to>
    </wire>
    <wire loc="161:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f40257b5350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f402571e5d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f402571e5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402495fe20"/></to>
    </wire>
    <wire loc="189:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f4025796350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f40256ee020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f40256ee020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40248170a0"/></to>
    </wire>
    <wire loc="164:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f40257b3990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4025716d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4025716d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024907c90"/></to>
    </wire>
    <wire loc="175:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f40257a6990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4025703440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4025703440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40248950a0"/></to>
    </wire>
    <wire loc="184:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f402579c350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f40256f4760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f40256f4760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40248270a0"/></to>
    </wire>
    <wire loc="195:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f402578f670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4025691c90"/></to>
    </wire>
    <wire loc="142:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f40257cbcb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f402573ec10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f402573ec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024a413f0"/></to>
    </wire>
    <wire loc="153:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f40257becb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f402572c440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f402572c440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40249c60a0"/></to>
    </wire>
    <wire loc="182:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f402579fcb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f40256f63f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f40256f63f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402482ec90"/></to>
    </wire>
    <wire loc="156:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f40257bb350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f4025724c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f4025724c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402496fe20"/></to>
    </wire>
    <wire loc="167:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f40257af350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f40257122b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f40257122b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40248fd3f0"/></to>
    </wire>
    <wire loc="178:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f40257a2350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f40257008f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f40257008f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402488c9b0"/></to>
    </wire>
    <wire loc="187:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f4025799cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f40256f1c10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f40256f1c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402481e9b0"/></to>
    </wire>
    <wire loc="137:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f40257d3cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f40257443f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f40257443f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024a513f0"/></to>
    </wire>
    <wire loc="148:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f40257c4cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4025732a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4025732a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40249d60a0"/></to>
    </wire>
    <wire loc="159:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f40257b8cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f40257202b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f40257202b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40249656d0"/></to>
    </wire>
    <wire loc="170:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f40257abcb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f402570e760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f402570e760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40248f4e20"/></to>
    </wire>
    <wire loc="193:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f4025792020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402569b6d0"/></to>
    </wire>
    <wire loc="173:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f40257a8350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4025706020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4025706020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402489cc90"/></to>
    </wire>
    <wire loc="162:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f40257b4670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f402571d760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f402571d760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402495b0a0"/></to>
    </wire>
    <wire loc="140:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f40257cd670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f40257408f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f40257408f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024a48e20"/></to>
    </wire>
    <wire loc="151:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f40257c0670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f402572e020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f402572e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40249cd9b0"/></to>
    </wire>
    <wire loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f402563e370"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f402563bb00"/></to>
    </wire>
    <wire loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4025659820"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f402564bc10"/></to>
    </wire>
    <wire loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f402564c8b0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f402563b020"/></to>
    </wire>
    <wire loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f402564f1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f402563a820"/></to>
    </wire>
    <wire loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiControl" scoped="" ref="0x7f4025652980"/></from>
      <to><interface-ref name="SpiControl" scoped="" ref="0x7f402563c2e0"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f402561cda0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4025510390"/></to>
    </wire>
    <wire loc="98:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4025510390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4024745c30"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40256173b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f402550f8d0"/></to>
    </wire>
    <wire loc="100:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f402550f8d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4024742270"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f402561da40"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f40255ca4f0"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f40255ca4f0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f40255c24e0"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f4025617ba0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f4025f475a0"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f40255f4190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f40255b8020"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f4025f475a0"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f40255be5a0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f40257c6670"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f40255bd7e0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f40257c5990"/></to>
    </wire>
    <wire loc="88:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f40255bb990"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f40257c4cb0"/></to>
    </wire>
    <wire loc="89:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f40255baca0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f40257c2020"/></to>
    </wire>
    <wire loc="99:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f402550f150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f40247439e0"/></to>
    </wire>
    <wire loc="101:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024742b60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f402550d1f0"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f4024741440"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f4024747cc0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f4024740020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f40254fe850"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f40254aac90"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f4025503850"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f40254c0da0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f4025500850"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f40254b3c90"/></to>
    </wire>
    <wire loc="78:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f40254fd850"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f40254a5c90"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f40254ff850"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f40254aec90"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f40255067f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f40254d7060"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f4025501850"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f40254b7c90"/></to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f40254d7e80"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f40254f6710"/></to>
    </wire>
    <wire loc="81:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f40254bfc20"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f40254f8020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f40254bab40"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f40254f87a0"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f40254b6b40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f40254f7020"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f40254b1b40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f40254f77a0"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f40254adb40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f40254f5020"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f40254a9b40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f40254f57a0"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f40254a4b40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f40254f4020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpQueue" scoped="" ref="0x7f40246da880"/></from>
      <to><interface-ref name="UdpQueue" scoped="" ref="0x7f40254581d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f402548f710"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f4025489b70"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7f402548c330"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7f4025485730"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f4025483c70"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f4025488e60"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7f4025488e60"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7f40246cce20"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f4025483600"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f402548a2b0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7f402548a2b0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7f4025c19050"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f4025485d80"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f402548b9d0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7f402548b9d0"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7f40246d4380"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IpPacket" scoped="" ref="0x7f40254824a0"/></from>
      <to><interface-ref name="IpPacket" scoped="" ref="0x7f4025c142c0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7f40246d4b20"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7f40258f4d60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7f4025487630"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7f4025908610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7f40246cb5e0"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7f40258a8410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="UdpQueue" scoped="" ref="0x7f40254581d0"/></from>
      <to><interface-ref name="UdpQueue" scoped="" ref="0x7f402544e1d0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f402544ebb0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f4025456790"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7f4025456790"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7f40246bf0b0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f4025453620"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f402548f710"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7f40246bedd0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7f4025453620"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7f40246bb4e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:FMClick/FMClickC.nc">
      <from><interface-ref name="Int" scoped="" ref="0x7f4025434c00"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f4025501850"/></to>
    </wire>
    <wire loc="31:FMClick/FMClickC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f4025433b50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f40251e3af0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f40251e3af0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f40251d89b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:FMClick/FMClickC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f40254237d0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f4025001890"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f4025001890"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f40251d3020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:FMClick/FMClickC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f40254216d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4024ffbb80"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4024ffbb80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4025aed1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:FMClick/FMClickC.nc">
      <from><interface-ref name="RSTPin" scoped="" ref="0x7f402541ca60"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f4024fd2670"/></to>
    </wire>
    <wire loc="250:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f4024fd2670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4024f53440"/></to>
    </wire>
    <wire loc="37:FMClick/FMClickC.nc">
      <from><interface-ref name="SDIOPin" scoped="" ref="0x7f402541bcc0"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f4024fd3350"/></to>
    </wire>
    <wire loc="249:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f4024fd3350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f4024f542b0"/></to>
    </wire>
    <wire loc="38:FMClick/FMClickC.nc">
      <from><interface-ref name="INTPin" scoped="" ref="0x7f4025419020"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7f4024fd1990"/></to>
    </wire>
    <wire loc="251:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f4024fd1990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f4024f525d0"/></to>
    </wire>
    <wire loc="40:FMClick/FMClickC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f40254182a0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f40253383a0"/></to>
    </wire>
    <wire loc="174:FMClick/FMClickP.nc">
      <from><interface-ref name="seek" scoped="" ref="0x7f40254073c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:FMClick/FMClickP.nc">
      <from><interface-ref name="writeI2C" scoped="" ref="0x7f40254015d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:FMClick/FMClickP.nc">
      <from><interface-ref name="registerWriteback" scoped="" ref="0x7f40253ff500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:FMClick/FMClickP.nc">
      <from><interface-ref name="readRegisters" scoped="" ref="0x7f40254042b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:FMClick/FMClickP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7f40254096a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:FMClick/FMClickP.nc">
      <from><interface-ref name="decodeRDS" scoped="" ref="0x7f40254053c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:FMClick/FMClickP.nc">
      <from><interface-ref name="writeRegisters" scoped="" ref="0x7f40254026a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:FMClick/FMClickP.nc">
      <from><interface-ref name="readI2C" scoped="" ref="0x7f40254032a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:FMClick/FMClickP.nc">
      <from><interface-ref name="tune" scoped="" ref="0x7f4025408530"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Hpl" scoped="" ref="0x7f40252fb7f0"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f4025334640"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="HplKS0108" scoped="" ref="0x7f4025334640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f402528cbe0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_0" scoped="" ref="0x7f40252899c0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x7f40257a6990"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_1" scoped="" ref="0x7f4025288ce0"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x7f40257a5cb0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RS" scoped="" ref="0x7f4025286020"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f40257a3020"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RW" scoped="" ref="0x7f4025285370"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f40257a2350"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="EN" scoped="" ref="0x7f4025284690"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f40257a1670"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RST" scoped="" ref="0x7f40252839b0"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f40257a0990"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="Data" scoped="" ref="0x7f4025279410"/></from>
      <to><interface-ref name="PortA" scoped="" ref="0x7f402524f3a0"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortA" scoped="" ref="0x7f402524f3a0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f402523f390"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f4025280200"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f40251f0810"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortL" scoped="" ref="0x7f4025244100"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f40251fb390"/></to>
    </wire>
    <wire loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortD" scoped="" ref="0x7f402524c870"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f402521c390"/></to>
    </wire>
    <wire loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortG" scoped="" ref="0x7f4025249d20"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f402520d390"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortJ" scoped="" ref="0x7f4025247e80"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f4025204390"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortB" scoped="" ref="0x7f402524e550"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f4025227910"/></to>
    </wire>
    <wire loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortE" scoped="" ref="0x7f402524ba00"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f4025218910"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortH" scoped="" ref="0x7f4025248de0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f4025209390"/></to>
    </wire>
    <wire loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortK" scoped="" ref="0x7f4025245020"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f40251ff390"/></to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortC" scoped="" ref="0x7f402524d6e0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f4025222cd0"/></to>
    </wire>
    <wire loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortF" scoped="" ref="0x7f402524ab90"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f4025213cd0"/></to>
    </wire>
    <wire loc="60:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f40251d89b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4025118020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f40251d3020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f4025117020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f4025113e40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4025166e60"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4025166e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4024641b20"/></to>
    </wire>
    <wire loc="64:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f4025112c40"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f402509dc00"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f402510d8e0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f40250988e0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f402515e550"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f402509d340"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f40251522f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4025163400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4025163400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f402463e270"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f4025097020"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f402508c0e0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f402508c0e0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f4025089a70"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f4025095ac0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f402501a980"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f4025093160"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f402501a980"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4025164bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f402463f9e0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4025162060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f402463ee80"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f402463d790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4025162930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f402463c020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f40246437f0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f402463a160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f40250927a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f4025084540"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7f40257b3990"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f4025083810"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f40257b2e40"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f402504c4a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f4025048dc0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f4025022ab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f40250487c0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f4025044550"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f40250251d0"/></to>
    </wire>
    <wire loc="57:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f40250251d0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f40257d3cb0"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f40250437f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f4025024510"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f4025024510"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f40257cf020"/></to>
    </wire>
    <wire loc="56:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f4025042b10"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f4025023830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f4025023830"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f40257ce350"/></to>
    </wire>
    <wire loc="275:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f4024fb7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024efc6d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f4024f542b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402441be20"/></to>
    </wire>
    <wire loc="260:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f4024fc6350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f4024f428f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f4024f428f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40243a93f0"/></to>
    </wire>
    <wire loc="269:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f4024fbdcb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f4024f33c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f4024f33c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402433e3f0"/></to>
    </wire>
    <wire loc="280:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f4024fb0060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024ee2c90"/></to>
    </wire>
    <wire loc="284:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH2" scoped="" ref="0x7f4024fac990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024ebbc90"/></to>
    </wire>
    <wire loc="289:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH7" scoped="" ref="0x7f4024fa6990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024ea29b0"/></to>
    </wire>
    <wire loc="297:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ6" scoped="" ref="0x7f4024f9d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e7e180"/></to>
    </wire>
    <wire loc="300:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK0" scoped="" ref="0x7f4024f9b670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e75c90"/></to>
    </wire>
    <wire loc="311:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL2" scoped="" ref="0x7f4024f8e670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e42180"/></to>
    </wire>
    <wire loc="227:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f4024feb350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f4024f7c2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f4024f7c2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024551e20"/></to>
    </wire>
    <wire loc="267:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f4024fbf670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f4024f358f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f4024f358f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024345e20"/></to>
    </wire>
    <wire loc="230:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f4024fe9990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4024f74a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4024f74a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244f4c90"/></to>
    </wire>
    <wire loc="241:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f4024fdc990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4024f62020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4024f62020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244820a0"/></to>
    </wire>
    <wire loc="252:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f4024fd0cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4024f50760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4024f50760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244116d0"/></to>
    </wire>
    <wire loc="263:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f4024fc3cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f4024f3fda0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f4024f3fda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40243a0e20"/></to>
    </wire>
    <wire loc="222:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f4024ff14e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f4024f828f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f4024f828f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024561e20"/></to>
    </wire>
    <wire loc="233:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f4024fe4350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f4024f70020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f4024f70020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244ea3f0"/></to>
    </wire>
    <wire loc="244:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f4024fd8350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f4024f5f5d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f4024f5f5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244799b0"/></to>
    </wire>
    <wire loc="255:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f4024fcc670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f4024f4dc10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f4024f4dc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244070a0"/></to>
    </wire>
    <wire loc="272:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f4024fb9670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f4024f2f2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f4024f2f2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024335e20"/></to>
    </wire>
    <wire loc="278:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f4024fb3b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024eec6d0"/></to>
    </wire>
    <wire loc="282:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH0" scoped="" ref="0x7f4024faf350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024ec4020"/></to>
    </wire>
    <wire loc="258:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f4024fc9cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f4024f445d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f4024f445d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40243b0e20"/></to>
    </wire>
    <wire loc="287:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH5" scoped="" ref="0x7f4024fa8350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024eace20"/></to>
    </wire>
    <wire loc="292:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ1" scoped="" ref="0x7f4024fa3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e976d0"/></to>
    </wire>
    <wire loc="295:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ4" scoped="" ref="0x7f4024fa0990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e886d0"/></to>
    </wire>
    <wire loc="303:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK3" scoped="" ref="0x7f4024f97020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e66c90"/></to>
    </wire>
    <wire loc="306:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK6" scoped="" ref="0x7f4024f94990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e57c90"/></to>
    </wire>
    <wire loc="309:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL0" scoped="" ref="0x7f4024f90020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e4d6d0"/></to>
    </wire>
    <wire loc="314:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL5" scoped="" ref="0x7f4024f8a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e336d0"/></to>
    </wire>
    <wire loc="225:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f4024feee40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4024f7fda0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4024f7fda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40245576d0"/></to>
    </wire>
    <wire loc="236:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f4024fe1cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f4024f6d5d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f4024f6d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244e1e20"/></to>
    </wire>
    <wire loc="276:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f4024fb54e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024ef6160"/></to>
    </wire>
    <wire loc="239:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f4024fde350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4024f65d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4024f65d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024489c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4024f53440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244170a0"/></to>
    </wire>
    <wire loc="261:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f4024fc5670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4024f41a80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4024f41a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40243a66d0"/></to>
    </wire>
    <wire loc="270:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f4024fbb020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4024f32da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4024f32da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402433b6d0"/></to>
    </wire>
    <wire loc="285:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH3" scoped="" ref="0x7f4024fabcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024eb5180"/></to>
    </wire>
    <wire loc="298:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ7" scoped="" ref="0x7f4024f9c350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e796d0"/></to>
    </wire>
    <wire loc="301:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK1" scoped="" ref="0x7f4024f9a990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e6f180"/></to>
    </wire>
    <wire loc="312:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL3" scoped="" ref="0x7f4024f8d990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e3e6d0"/></to>
    </wire>
    <wire loc="293:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ2" scoped="" ref="0x7f4024fa2350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e93c90"/></to>
    </wire>
    <wire loc="228:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f4024fea670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f4024f7b440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f4024f7b440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402454d0a0"/></to>
    </wire>
    <wire loc="304:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK4" scoped="" ref="0x7f4024f96350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e60180"/></to>
    </wire>
    <wire loc="315:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL6" scoped="" ref="0x7f4024f89350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e2fc90"/></to>
    </wire>
    <wire loc="231:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f4024fe7cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f4024f73c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f4024f73c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244f1e20"/></to>
    </wire>
    <wire loc="242:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f4024fdbcb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f4024f612b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f4024f612b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402447f3f0"/></to>
    </wire>
    <wire loc="253:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f4024fce020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f4024f4f8f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f4024f4f8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402440e9b0"/></to>
    </wire>
    <wire loc="264:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f4024fc1020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f4024f3d020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f4024f3d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402439c0a0"/></to>
    </wire>
    <wire loc="223:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f4024ff0800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4024f81a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4024f81a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402455d0a0"/></to>
    </wire>
    <wire loc="234:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f4024fe3670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4024f6f2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4024f6f2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244e76d0"/></to>
    </wire>
    <wire loc="245:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f4024fd7670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f4024f5e760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f4024f5e760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024476e20"/></to>
    </wire>
    <wire loc="273:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f4024fb8990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f4024f2e440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f4024f2e440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40243310a0"/></to>
    </wire>
    <wire loc="283:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH1" scoped="" ref="0x7f4024fad670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024ec06d0"/></to>
    </wire>
    <wire loc="248:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f4024fd5cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4024f55020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4024f55020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402441ec90"/></to>
    </wire>
    <wire loc="259:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f4024fc7020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4024f43760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4024f43760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40243ac0a0"/></to>
    </wire>
    <wire loc="268:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f4024fbe990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4024f34a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4024f34a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40243410a0"/></to>
    </wire>
    <wire loc="279:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f4024fb2e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024ee6160"/></to>
    </wire>
    <wire loc="288:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH6" scoped="" ref="0x7f4024fa7670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024ea6460"/></to>
    </wire>
    <wire loc="296:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ5" scoped="" ref="0x7f4024f9fcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e84c90"/></to>
    </wire>
    <wire loc="307:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK7" scoped="" ref="0x7f4024f93cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e51180"/></to>
    </wire>
    <wire loc="310:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL1" scoped="" ref="0x7f4024f8f350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e48c90"/></to>
    </wire>
    <wire loc="226:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f4024fec060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f4024f7d020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f4024f7d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40245549b0"/></to>
    </wire>
    <wire loc="237:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f4024fdf020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f4024f6c760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f4024f6c760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244dd0a0"/></to>
    </wire>
    <wire loc="266:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f4024fc0350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4024f367a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4024f367a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024348c90"/></to>
    </wire>
    <wire loc="240:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f4024fdd670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f4024f64e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f4024f64e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024486e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f4024f525d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244143f0"/></to>
    </wire>
    <wire loc="262:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f4024fc4990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f4024f40c10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f4024f40c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40243a39b0"/></to>
    </wire>
    <wire loc="271:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f4024fba350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f4024f30020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f4024f30020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40243389b0"/></to>
    </wire>
    <wire loc="221:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f4024ff21e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4024f847a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4024f847a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024564c90"/></to>
    </wire>
    <wire loc="232:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f4024fe5020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f4024f72da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f4024f72da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244ed0a0"/></to>
    </wire>
    <wire loc="243:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f4024fd9020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f4024f60440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f4024f60440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402447c6d0"/></to>
    </wire>
    <wire loc="254:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f4024fcd350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f4024f4ea80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f4024f4ea80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402440be20"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f4024fb4800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024ef1c90"/></to>
    </wire>
    <wire loc="286:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH4" scoped="" ref="0x7f4024fa9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024eb1830"/></to>
    </wire>
    <wire loc="291:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ0" scoped="" ref="0x7f4024fa5cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e9c160"/></to>
    </wire>
    <wire loc="257:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f4024fca990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f4024f463f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f4024f463f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40243b3c90"/></to>
    </wire>
    <wire loc="294:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ3" scoped="" ref="0x7f4024fa1670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e8d180"/></to>
    </wire>
    <wire loc="302:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK2" scoped="" ref="0x7f4024f99cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e6a6d0"/></to>
    </wire>
    <wire loc="305:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK5" scoped="" ref="0x7f4024f95670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e5c6d0"/></to>
    </wire>
    <wire loc="313:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL4" scoped="" ref="0x7f4024f8ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e380a0"/></to>
    </wire>
    <wire loc="316:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL7" scoped="" ref="0x7f4024f88670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f4024e29180"/></to>
    </wire>
    <wire loc="246:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f4024fd6990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f4024f5c8f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f4024f5c8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244720a0"/></to>
    </wire>
    <wire loc="224:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f4024fefb20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f4024f80c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f4024f80c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f402455a3f0"/></to>
    </wire>
    <wire loc="235:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f4024fe2990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f4024f6e440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f4024f6e440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f40244e49b0"/></to>
    </wire>
    <wire loc="21:PS2/PS2C.nc">
      <from><interface-ref name="ClockIRQ" scoped="" ref="0x7f4024da2d90"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f4024dcfa30"/></to>
    </wire>
    <wire loc="23:PS2/PS2C.nc">
      <from><interface-ref name="ClockPin" scoped="" ref="0x7f4024da71c0"/></from>
      <to><interface-ref name="PortK7" scoped="" ref="0x7f4024f93cb0"/></to>
    </wire>
    <wire loc="24:PS2/PS2C.nc">
      <from><interface-ref name="DataPin" scoped="" ref="0x7f4024da14f0"/></from>
      <to><interface-ref name="PortK6" scoped="" ref="0x7f4024f94990"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f4024c0ebe0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f4024d49920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="VolumePin" scoped="" ref="0x7f4024d5b3d0"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x7f4024fc0350"/></to>
    </wire>
    <wire loc="26:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f4024c0c320"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f4024d5c080"/></to>
    </wire>
    <wire loc="27:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024c0cc10"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024d5ca20"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f4024d456d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f4024c0c320"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4024d415e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4024d3c280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024d35210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024c0cc10"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f4024d49920"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f4024c19150"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f4024d428f0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f4024c5b1d0"/></to>
    </wire>
    <wire loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4024c15300"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4024d415e0"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f4024c58a10"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f4024d456d0"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f4024c18af0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f4024c5d410"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f4024c5a9f0"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f4024d36780"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f4024d36780"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f4024d2c830"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f4024c57740"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f40251f0810"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4024d3c280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f4024c78e70"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f4024c78e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f40241434d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f4024d30420"/></from>
      <to><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f4024d2b330"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024c75930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024d35210"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f4024d1c710"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f4024ce9460"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f4024ce9460"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f4024ce37d0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f4024d29be0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f4025ed7020"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4024c71020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4024d2c020"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4024c71d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4024c76400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4024c76400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4024142b20"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f4024ce1c10"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f4025f475a0"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f4024c77c00"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f40241423a0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4024c75060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40241418b0"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024140210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024c75930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f40241409d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f40241452b0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f402413ec50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f402410b660"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4024c71020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f402410bdc0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4024c71780"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f40241093d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4024c71d50"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4024108020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4024c67990"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f4024c46820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4024bcc020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f4024c04560"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f4024c04560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f4025aed1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="Lcd" scoped="" ref="0x7f4024bc7490"/></from>
      <to><interface-ref name="HplLcd" scoped="" ref="0x7f4024bc1100"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="HplLcd" scoped="" ref="0x7f4024bc1100"/></from>
      <to><interface-ref name="HplLcd" scoped="" ref="0x7f4024bc0e10"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <from><interface-ref name="refresh" scoped="" ref="0x7f4024bc62f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="Port" scoped="" ref="0x7f4024bbd6e0"/></from>
      <to><interface-ref name="PortC" scoped="" ref="0x7f402524d6e0"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f4024bbcaa0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f40251f0810"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../tinyos_ws18/tos/system/MainC.nc">
      <documentation loc="45:../tinyos_ws18/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <documentation loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../tinyos_ws18/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../tinyos_ws18/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../tinyos_ws18/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc" safe="">
      <documentation loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioScannerP" loc="25:RadioScannerP.nc">
      <module/>
    </component>
    <component qname="DatabaseC" loc="13:Database/DatabaseC.nc">
      <configuration/>
    </component>
    <component qname="DatabaseP" loc="18:Database/DatabaseP.nc">
      <module/>
    </component>
    <component qname="IpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IpTransceiverP" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <module/>
    </component>
    <component qname="IpTransceiverC.LlcC" loc="10(IpTransceiverC.LlcC):../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LlcC"/>
        <arguments>
          <value cst="I:2048">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LlcTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IpTransceiverC.LlcC.LlcP" loc="10(IpTransceiverC.LlcC.LlcP):../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LlcP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LlcQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LlcQueueC.PacketQueueC" loc="8(LlcQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025c0fd70"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f4025c0d390"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcQueueC.PacketQueueC.PacketQueueP" loc="11(LlcQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="0">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f4025b897e0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LlcQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArpC" loc="8:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ArpP" loc="11:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArpC.TimerMilliC" loc="44(ArpC.TimerMilliC):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <documentation loc="11:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC" loc="32(AlarmCounterMilliP.Atm1280AlarmSyncC):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:124">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP" loc="33(AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f4025ac3160"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280Timer2SyncC" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <documentation loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280Timer2SyncP" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc" safe="">
      <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changed to sync mode&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArpC.ClearCacheTimeoutC" loc="44(ArpC.ClearCacheTimeoutC):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.LlcC" loc="10(ArpC.LlcC):../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LlcC"/>
        <arguments>
          <value cst="I:2054">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.LlcC.LlcP" loc="10(ArpC.LlcC.LlcP):../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LlcP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArpC.PacketQueueC" loc="8(ArpC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f4025bfd340"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f4025bfdc30"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.PacketQueueC.PacketQueueP" loc="11(ArpC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="1">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f4025b897e0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PingC.IcmpC" loc="10(PingC.IcmpC):../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <instance number="0">
        <component-ref qname="IcmpC"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC.IpC" loc="10(IcmpTransceiverC.IpC):../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IpC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC.IpC.IpP" loc="10(IcmpTransceiverC.IpC.IpP):../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IpQueueC.PacketQueueC" loc="8(IpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f4025ceb080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f4025ceb600"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IpQueueC.PacketQueueC.PacketQueueP" loc="11(IpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="2">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f4025b897e0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IcmpTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PingC.IcmpC.IcmpP" loc="10(PingC.IcmpC.IcmpP):../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IcmpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IcmpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IcmpQueueC.PacketQueueC" loc="8(IcmpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f4025915b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f4025914230"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpQueueC.PacketQueueC.PacketQueueP" loc="11(IcmpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="3">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f4025b897e0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IcmpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PingP" loc="12:PingP.nc">
      <documentation loc="1:PingP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Enc28j60C" loc="7:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Harald Glanzer, 0727156 TU Wien&#10;&#10; overhauled by Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Enc28j60P" loc="9:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/enc28j60/enc28j60.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Harald Glanzer, 0727156 TU Wien&#10;&#10; overhauled by Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280SpiC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <documentation loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280SpiP" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc" safe="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.h">
        <short>&#10; </short>
        <long>&#10; @author Markus Hartmann e988811@student.tuwien.ac.at&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280SpiC.Arbiter" loc="83(Atm1280SpiC.Arbiter):../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280SpiC.Arbiter.Queue" loc="42(Atm1280SpiC.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280SpiC.Arbiter.Arbiter" loc="49(Atm1280SpiC.Arbiter.Arbiter):../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpC" loc="10(DatabaseC.UdpC):../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UdpC"/>
        <arguments>
          <value cst="I:50000">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IpC" loc="10(UdpTransceiverC.IpC):../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IpC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IpC.IpP" loc="10(UdpTransceiverC.IpC.IpP):../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpTransceiverP" loc="14:UdpTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UdpTransceiverC.IcmpC" loc="10(UdpTransceiverC.IcmpC):../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <instance number="1">
        <component-ref qname="IcmpC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IcmpC.IcmpP" loc="10(UdpTransceiverC.IcmpC.IcmpP):../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IcmpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpC.UdpP" loc="10(DatabaseC.UdpC.UdpP):../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UdpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UdpQueueC.PacketQueueC" loc="8(UdpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025cd6770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f4025cd6da0"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpQueueC.PacketQueueC.PacketQueueP" loc="11(UdpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="4">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f4025b897e0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC" loc="11:FMClick/FMClickC.nc">
      <documentation loc="1:FMClick/FMClickC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; Configuration of the FMClick module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FMClickP" loc="14:FMClick/FMClickP.nc">
      <documentation loc="1:FMClick/FMClickP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; FMClick module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="GlcdC" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
        <short>&#10; High level implementation for KS0108 Glcd&#10; </short>
        <long>&#10; High level implementation for KS0108 Glcd&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="GlcdP" loc="41:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <module/>
    </component>
    <component qname="HplKS0108C" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
        <short>&#10; Configuration for KS0108 GLCD Display&#10; </short>
        <long>&#10; Configuration for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplKS0108P" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
        <short>&#10; Hpl implementation for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl implementation for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10; Based on an implementation of Andreas Hagmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC" loc="6:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortAP" loc="6(HplAtm128GeneralIOFastPortC.PortAP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortBP" loc="6(HplAtm128GeneralIOFastPortC.PortBP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortCP" loc="6(HplAtm128GeneralIOFastPortC.PortCP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortDP" loc="6(HplAtm128GeneralIOFastPortC.PortDP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortEP" loc="6(HplAtm128GeneralIOFastPortC.PortEP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortFP" loc="6(HplAtm128GeneralIOFastPortC.PortFP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortGP" loc="6(HplAtm128GeneralIOFastPortC.PortGP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortHP" loc="6(HplAtm128GeneralIOFastPortC.PortHP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortJP" loc="6(HplAtm128GeneralIOFastPortC.PortJP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortKP" loc="6(HplAtm128GeneralIOFastPortC.PortKP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortLP" loc="6(HplAtm128GeneralIOFastPortC.PortLP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:9">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="38:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc" safe="">
      <documentation loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.I2C" loc="43(FMClickC.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../tinyos_ws18/tos/system/LedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc" safe="">
      <documentation loc="35:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../tinyos_ws18/tos/system/NoLedsC.nc">
      <documentation loc="35:../tinyos_ws18/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.Timer" loc="44(FMClickC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; Changed for Atm1280&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA" loc="40(HplAtm1280GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit0" loc="41(HplAtm1280GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="48">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit1" loc="41(HplAtm1280GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="49">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit2" loc="41(HplAtm1280GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="50">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit3" loc="41(HplAtm1280GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="51">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit4" loc="41(HplAtm1280GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="52">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit5" loc="41(HplAtm1280GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="53">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit6" loc="41(HplAtm1280GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="54">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit7" loc="41(HplAtm1280GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="55">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB" loc="40(HplAtm1280GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit0" loc="41(HplAtm1280GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="56">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit1" loc="41(HplAtm1280GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="57">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit2" loc="41(HplAtm1280GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="58">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit3" loc="41(HplAtm1280GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="59">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit4" loc="41(HplAtm1280GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="60">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit5" loc="41(HplAtm1280GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="61">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit6" loc="41(HplAtm1280GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="62">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit7" loc="41(HplAtm1280GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="63">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC" loc="40(HplAtm1280GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit0" loc="41(HplAtm1280GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="64">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit1" loc="41(HplAtm1280GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="65">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit2" loc="41(HplAtm1280GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="66">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit3" loc="41(HplAtm1280GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="67">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit4" loc="41(HplAtm1280GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="68">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit5" loc="41(HplAtm1280GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="69">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit6" loc="41(HplAtm1280GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="70">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit7" loc="41(HplAtm1280GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="71">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD" loc="40(HplAtm1280GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit0" loc="41(HplAtm1280GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="72">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit1" loc="41(HplAtm1280GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="73">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit2" loc="41(HplAtm1280GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="74">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit3" loc="41(HplAtm1280GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="75">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit4" loc="41(HplAtm1280GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="76">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit5" loc="41(HplAtm1280GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="77">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit6" loc="41(HplAtm1280GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="78">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit7" loc="41(HplAtm1280GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="79">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE" loc="40(HplAtm1280GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit0" loc="41(HplAtm1280GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="80">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit1" loc="41(HplAtm1280GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="81">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit2" loc="41(HplAtm1280GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="82">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit3" loc="41(HplAtm1280GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="83">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit4" loc="41(HplAtm1280GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="84">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit5" loc="41(HplAtm1280GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="85">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit6" loc="41(HplAtm1280GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="86">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit7" loc="41(HplAtm1280GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="87">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF" loc="40(HplAtm1280GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit0" loc="41(HplAtm1280GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="88">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit1" loc="41(HplAtm1280GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="89">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit2" loc="41(HplAtm1280GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="90">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit3" loc="41(HplAtm1280GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="91">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit4" loc="41(HplAtm1280GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="92">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit5" loc="41(HplAtm1280GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="93">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit6" loc="41(HplAtm1280GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="94">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit7" loc="41(HplAtm1280GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="95">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F0" loc="42(HplAtm1280GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F1" loc="42(HplAtm1280GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F2" loc="42(HplAtm1280GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F3" loc="42(HplAtm1280GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F4" loc="42(HplAtm1280GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F5" loc="42(HplAtm1280GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F6" loc="42(HplAtm1280GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F7" loc="42(HplAtm1280GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G0" loc="42(HplAtm1280GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G1" loc="42(HplAtm1280GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G2" loc="42(HplAtm1280GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G3" loc="42(HplAtm1280GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G4" loc="42(HplAtm1280GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G5" loc="42(HplAtm1280GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H0" loc="42(HplAtm1280GeneralIOC.H0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H1" loc="42(HplAtm1280GeneralIOC.H1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H2" loc="42(HplAtm1280GeneralIOC.H2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H3" loc="42(HplAtm1280GeneralIOC.H3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H4" loc="42(HplAtm1280GeneralIOC.H4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H5" loc="42(HplAtm1280GeneralIOC.H5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H6" loc="42(HplAtm1280GeneralIOC.H6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H7" loc="42(HplAtm1280GeneralIOC.H7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J0" loc="42(HplAtm1280GeneralIOC.J0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J1" loc="42(HplAtm1280GeneralIOC.J1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J2" loc="42(HplAtm1280GeneralIOC.J2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J3" loc="42(HplAtm1280GeneralIOC.J3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J4" loc="42(HplAtm1280GeneralIOC.J4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J5" loc="42(HplAtm1280GeneralIOC.J5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J6" loc="42(HplAtm1280GeneralIOC.J6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J7" loc="42(HplAtm1280GeneralIOC.J7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K0" loc="42(HplAtm1280GeneralIOC.K0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K1" loc="42(HplAtm1280GeneralIOC.K1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K2" loc="42(HplAtm1280GeneralIOC.K2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K3" loc="42(HplAtm1280GeneralIOC.K3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K4" loc="42(HplAtm1280GeneralIOC.K4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K5" loc="42(HplAtm1280GeneralIOC.K5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K6" loc="42(HplAtm1280GeneralIOC.K6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K7" loc="42(HplAtm1280GeneralIOC.K7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L0" loc="42(HplAtm1280GeneralIOC.L0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L1" loc="42(HplAtm1280GeneralIOC.L1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L2" loc="42(HplAtm1280GeneralIOC.L2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L3" loc="42(HplAtm1280GeneralIOC.L3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L4" loc="42(HplAtm1280GeneralIOC.L4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L5" loc="42(HplAtm1280GeneralIOC.L5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L6" loc="42(HplAtm1280GeneralIOC.L6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L7" loc="42(HplAtm1280GeneralIOC.L7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PS2C" loc="11:PS2/PS2C.nc">
      <documentation loc="1:PS2/PS2C.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file    PS2C.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the PS2 module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PS2P" loc="15:PS2/PS2P.nc">
      <module/>
    </component>
    <component qname="HplAtmegaPinChange2C" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <module/>
    </component>
    <component qname="VolumeAdcC" loc="13:VolumeAdc/VolumeAdcC.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the VolumeAdc module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="VolumeAdcP" loc="13:VolumeAdc/VolumeAdcP.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; VolumeAdc module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="VolumeAdcC.Adc" loc="21(VolumeAdcC.Adc):../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <documentation loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcP" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc" safe="">
      <documentation loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
        <short>&#10; Internal component of the Atmega1280 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1280 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm1280AdcC" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280AdcP" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc" safe="">
      <documentation loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter" loc="89(Atm1280AdcC.AdcArbiter):../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Queue" loc="42(Atm1280AdcC.AdcArbiter.Queue):../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Arbiter" loc="52(Atm1280AdcC.AdcArbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.PM" loc="67(Atm1280AdcC.PM):../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.PM.PowerManager" loc="58(Atm1280AdcC.PM.PowerManager):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc" safe="">
      <documentation loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
        <short>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BufferedLcdC" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BufferedLcdC.Timer" loc="44(BufferedLcdC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BufferedLcdC.BufferedLcdP" loc="6(BufferedLcdC.BufferedLcdP):../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BufferedLcdP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplLcdC" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplLcdP" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioScannerAppC.VolumeTimer" loc="44(RadioScannerAppC.VolumeTimer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioScannerAppC.ErrorTimer" loc="44(RadioScannerAppC.ErrorTimer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioScannerAppC.RDSTimer" loc="44(RadioScannerAppC.RDSTimer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="ETHER_TYPE" ref="0x7f4025bbf020" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
          <component-ref qname="LlcC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LlcP" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="ETHER_TYPE" ref="0x7f4025b980d0" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
          <component-ref qname="LlcP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketQueueC" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="ITEM_TYPE" ref="0x7f4025b897e0" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
          <component-ref qname="PacketQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f4025b897e0"/></type-var>
        </typedef>
        <constant name="LEN" ref="0x7f4025b89b10" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
          <component-ref qname="PacketQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc" abstract="">
      <parameters>
        <typedef name="ITEM_TYPE" ref="0x7f4025b7a840" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
          <component-ref qname="PacketQueueP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7f4025b7a840"/></type-var>
        </typedef>
        <constant name="QUEUE_LEN" ref="0x7f4025b7abb0" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
          <component-ref qname="PacketQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../tinyos_ws18/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncC" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc" abstract="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f4025ac3160" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f4025ac3160"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f4025ac34f0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f4025ac3880" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncP" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f4025ab6200" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f4025ab6200"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f4025ab6590" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f4025ab6920" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f40259cc160" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f40259cc160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4025999230" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4025999230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f4025999560" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f402594bde0" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f402594bde0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="IcmpC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc" abstract="">
      <parameters>
        <constant name="TYPE" ref="0x7f4025914650" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
          <component-ref qname="IcmpC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IpC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PROTOCOL" ref="0x7f40259076b0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
          <component-ref qname="IpC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IpP" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PROTOCOL" ref="0x7f4025903650" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
          <component-ref qname="IpP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="IcmpP" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="TYPE" ref="0x7f40258b5020" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
          <component-ref qname="IcmpP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f4025788020" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f4025788390" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f4025788700" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f402577a3a0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f402577a730" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f402577aac0" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f402577ae10" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f40256e8e30" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f40256e5200" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f40256e5590" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f40256e58e0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f402556c690" loc="83:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f4025562910" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../tinyos_ws18/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f40254d63d0" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f40254d6760" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f40254d6af0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f40254d6e40" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="UdpC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PORT" ref="0x7f4025495450" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
          <component-ref qname="UdpC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="UdpP" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PORT" ref="0x7f4025490e70" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
          <component-ref qname="UdpP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortP" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f402523e3b0" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f402523e720" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f402523ea90" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f40251cdc20" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f40251bda00" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f4024eda4c0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f4024eda860" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f4024edac00" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f4024ed9020" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f4024ca65c0" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f4024ca0e80" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadC" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f4024c301f0" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f4024c301f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="BufferedLcdP" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="LINES" ref="0x7f4024bfeb70" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
          <component-ref qname="BufferedLcdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
        <constant name="LINE_WIDTH" ref="0x7f4024bfb020" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
          <component-ref qname="BufferedLcdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f4025edabf0" loc="58:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f4025edabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025edd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f4025edb720" loc="57:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f4025edb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4025edbaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f4025ed7d50" loc="52:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f4025ed7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025ed6100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4025eddd00" loc="46:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4025eddd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025ed80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f4025ed7020" loc="50:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f4025ed7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f4025ed73a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f4025ed7530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f4025ed76c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f4025ed7850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f4025ed79e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f4025ecf7a0" loc="45:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f4025ecf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025ecfb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4025ecf0c0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4025ecf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025ecf440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f4025ece020" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f4025ece020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025ece3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f4025ec76f0" loc="4:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f4025ec76f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025ec7a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f4025ec7020" loc="3:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f4025ec7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025ec73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4025ebe860" loc="51:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4025ebe860"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025ebebe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f4025ebd020" loc="52:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f4025ebd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f4025ebd3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f4025ebd530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f4025ebd6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f4025ebd850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f4025ebd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f4025eaa720" loc="60:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f4025eaa720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025eaaaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f4025ed9e20" loc="57:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f4025ed9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4025eab1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f4025eaa020" loc="59:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f4025eaa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025eaa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f4025eab4b0" loc="58:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f4025eab4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025eab830"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4025eab9c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4025eabb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f402605ebd0" loc="48:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f402605ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4026092020"/>
        <function-ref name="runTask" scoped="" ref="0x7f40260921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f4026068a20" loc="47:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f4026068a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4026068da0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4026a16020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4026a161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f4025f689e0" loc="56:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f4025f689e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025f68d60"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025f66020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f4025f630d0" loc="57:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f4025f630d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f4025f63450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f4025f69990" loc="55:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f4025f69990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025f69d10"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f4025f68020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f4025f681b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f4025f46de0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4025f46de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f4025f49180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f4025f81080" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f4025f81080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f4025f81400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f4025f475a0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f4025f475a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f4025f47920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RDSTimer" ref="0x7f4025e44120" loc="39:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RDSTimer" scoped="" ref="0x7f4025e44120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4025e41630"/>
        <function-ref name="fired" scoped="" ref="0x7f4025e43b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4025e42920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4025e424a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4025e40020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4025e41ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4025e42020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4025e44d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4025e41020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4025e43220"/>
        <function-ref name="stop" scoped="" ref="0x7f4025e436f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DB" ref="0x7f4025e78020" loc="32:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DB" scoped="" ref="0x7f4025e78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f4025e783a0"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f4025e78530"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f4025e786c0"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f4025e78850"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4025e789e0"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f4025e78b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x7f4025e72020" loc="33:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x7f4025e72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025e723a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f4025e8c4a0" loc="28:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f4025e8c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f4025e8c820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="volumeKnob" ref="0x7f4025e59340" loc="36:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="volumeKnob" scoped="" ref="0x7f4025e59340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4025e5e020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4025e5e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inputTuneChannel" ref="0x7f4025e33e30" loc="129:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inputTuneChannel" scoped="" ref="0x7f4025e33e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025e32310"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025e324a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="handleChar" ref="0x7f4025e1d020" loc="156:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="handleChar" scoped="" ref="0x7f4025e1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025e1d5a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025e1d730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Keyboard" ref="0x7f4025e5c600" loc="35:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Keyboard" scoped="" ref="0x7f4025e5c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025e5c980"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f4025e5cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setVolume" ref="0x7f4025e2d020" loc="133:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setVolume" scoped="" ref="0x7f4025e2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025e2d3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025e2d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeTimer" ref="0x7f4025e4e820" loc="37:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeTimer" scoped="" ref="0x7f4025e4e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4025e4ccf0"/>
        <function-ref name="fired" scoped="" ref="0x7f4025e4d300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4025e4c0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4025e4dc00"/>
        <function-ref name="getdt" scoped="" ref="0x7f4025e4b660"/>
        <function-ref name="gett0" scoped="" ref="0x7f4025e4b1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4025e4d780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4025e58480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4025e4c6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4025e58950"/>
        <function-ref name="stop" scoped="" ref="0x7f4025e58e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startSeekUp" ref="0x7f4025e2c020" loc="134:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startSeekUp" scoped="" ref="0x7f4025e2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025e2c3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025e2c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DBInit" ref="0x7f4025e79640" loc="31:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DBInit" scoped="" ref="0x7f4025e79640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025e799c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="displayHardError" ref="0x7f4025e26020" loc="139:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="displayHardError" scoped="" ref="0x7f4025e26020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025e263a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025e26530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inputNote" ref="0x7f4025e31080" loc="130:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inputNote" scoped="" ref="0x7f4025e31080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025e31400"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025e31590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lcd" ref="0x7f4025e736b0" loc="30:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lcd" scoped="" ref="0x7f4025e736b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferedLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4025e73a30"/>
        <function-ref name="forceRefresh" scoped="" ref="0x7f4025e73bc0"/>
        <function-ref name="goTo" scoped="" ref="0x7f4025e73d50"/>
        <function-ref name="write" scoped="" ref="0x7f4025e79020"/>
        <function-ref name="autoRefresh" scoped="" ref="0x7f4025e791b0"/>
        <function-ref name="write_P" scoped="" ref="0x7f4025e79340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ErrorTimer" ref="0x7f4025e4bca0" loc="38:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ErrorTimer" scoped="" ref="0x7f4025e4bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4025e46170"/>
        <function-ref name="fired" scoped="" ref="0x7f4025e48720"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4025e47510"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4025e47090"/>
        <function-ref name="getdt" scoped="" ref="0x7f4025e46a70"/>
        <function-ref name="gett0" scoped="" ref="0x7f4025e465f0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4025e48ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4025e4a8c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4025e47b20"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4025e4ad90"/>
        <function-ref name="stop" scoped="" ref="0x7f4025e482a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTune" ref="0x7f4025e28020" loc="137:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTune" scoped="" ref="0x7f4025e28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025e283a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025e28530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Radio" ref="0x7f4025e60d60" loc="34:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Radio" scoped="" ref="0x7f4025e60d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f4025e6ae00"/>
        <function-ref name="initDone" scoped="" ref="0x7f4025e6a310"/>
        <function-ref name="setVolume" scoped="" ref="0x7f4025e6a4a0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f4025e6a630"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f4025e6a7c0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f4025e6a950"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4025e6aae0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f4025e6ac70"/>
        <function-ref name="seek" scoped="" ref="0x7f4025e6a180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="displayChannelInfo" ref="0x7f4025e30020" loc="131:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="displayChannelInfo" scoped="" ref="0x7f4025e30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025e303a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025e30530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="addChannel" ref="0x7f4025e27020" loc="138:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="addChannel" scoped="" ref="0x7f4025e27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025e273a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025e27530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="displayRDS" ref="0x7f4025e2e020" loc="132:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="displayRDS" scoped="" ref="0x7f4025e2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025e2e3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025e2e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startSeekDown" ref="0x7f4025e2b020" loc="135:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startSeekDown" scoped="" ref="0x7f4025e2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025e2b3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025e2b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="displaySoftError" ref="0x7f4025e25020" loc="140:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="displaySoftError" scoped="" ref="0x7f4025e25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025e253a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025e25530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f4025e7bce0" loc="29:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f4025e7bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f4025e8ad20"/>
        <function-ref name="drawRect" scoped="" ref="0x7f4025e8a230"/>
        <function-ref name="drawLine" scoped="" ref="0x7f4025e8a3c0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f4025e8a550"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f4025e8a6e0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f4025e8a870"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f4025e8aa00"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f4025e8a0a0"/>
        <function-ref name="drawText" scoped="" ref="0x7f4025e8ab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startSeekBand" ref="0x7f4025e2a020" loc="136:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startSeekBand" scoped="" ref="0x7f4025e2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025e2a3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025e2a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4025cf5690" loc="16:Database/DatabaseC.nc">
      <component-ref qname="DatabaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4025cf5690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025cf5a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Database" ref="0x7f4025cf5cc0" loc="17:Database/DatabaseC.nc">
      <component-ref qname="DatabaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Database" scoped="" ref="0x7f4025cf5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f4025cf40a0"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f4025cf4230"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f4025cf43c0"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f4025cf4550"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4025cf46e0"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f4025cf4870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f4025cda080" loc="28:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f4025cda080"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f4025cda400"/>
        <function-ref name="getGateway" scoped="" ref="0x7f4025cda590"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f4025cda720"/>
        <function-ref name="getIp" scoped="" ref="0x7f4025cda8b0"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f4025cdaa40"/>
        <function-ref name="setIp" scoped="" ref="0x7f4025cdabd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7f4025cc0e00" loc="71:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7f4025cc0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025cbe1c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025cbe350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4025cdd5f0" loc="21:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4025cdd5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025cdd970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Database" ref="0x7f4025cddc20" loc="22:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Database" scoped="" ref="0x7f4025cddc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7f4025cdc020"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7f4025cdc1b0"/>
        <function-ref name="saveChannel" scoped="" ref="0x7f4025cdc340"/>
        <function-ref name="savedChannel" scoped="" ref="0x7f4025cdc4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4025cdc660"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7f4025cdc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpSend" ref="0x7f4025cdb020" loc="26:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f4025cdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025cdb3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025cdb530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Control" ref="0x7f4025cc6180" loc="29:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Control" scoped="" ref="0x7f4025cc6180"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f4025cc6500"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4025cc6690"/>
        <function-ref name="start" scoped="" ref="0x7f4025cc6820"/>
        <function-ref name="stop" scoped="" ref="0x7f4025cc69b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpReceive" ref="0x7f4025cd0140" loc="27:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f4025cd0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f4025cd04c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="recvTask" ref="0x7f4025cbece0" loc="72:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="recvTask" scoped="" ref="0x7f4025cbece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025cbd0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025cbd230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fetchList" ref="0x7f4025cbdbc0" loc="73:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fetchList" scoped="" ref="0x7f4025cbdbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025cbc020"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025cbc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f4025c1bde0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f4025c1bde0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f4025ceb080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f4025ceb600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025c1ea80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025c1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpControl" ref="0x7f4025c196c0" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f4025c196c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f4025c19a40"/>
        <function-ref name="getGateway" scoped="" ref="0x7f4025c19bd0"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f4025c19d60"/>
        <function-ref name="getIp" scoped="" ref="0x7f4025c18020"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f4025c181b0"/>
        <function-ref name="setIp" scoped="" ref="0x7f4025c18340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpPacket" ref="0x7f4025c142c0" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f4025c142c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f4025c14640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f4025c19050" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f4025c19050"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f4025c193d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f4025c0d950" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f4025c0d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f4025ceb080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f4025ceb600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025c0c560"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025c0ca70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcReceive" ref="0x7f4025c03590" loc="16:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f4025c03590"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f4025c03910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpControl" ref="0x7f4025c0bb80" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f4025c0bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f4025c0a020"/>
        <function-ref name="getGateway" scoped="" ref="0x7f4025c0a1b0"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f4025c0a340"/>
        <function-ref name="getIp" scoped="" ref="0x7f4025c0a4d0"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f4025c0a660"/>
        <function-ref name="setIp" scoped="" ref="0x7f4025c0a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcSend" ref="0x7f4025c059d0" loc="15:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f4025c059d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025c05d50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025c09020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Arp" ref="0x7f4025c08020" loc="17:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f4025c08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f4025c083a0"/>
        <function-ref name="resolved" scoped="" ref="0x7f4025c08530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4025c087f0" loc="18:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4025c087f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025c08b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpPacket" ref="0x7f4025c08e60" loc="19:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f4025c08e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f4025c04210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f4025c0b510" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f4025c0b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f4025c0b890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f4025bc05a0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="IpTransceiverC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f4025bc05a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f4025bc0920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f4025c13db0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="IpTransceiverC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f4025c13db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025bc0180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025bc0310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f4025bbb2f0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f4025bbb2f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025c0fd70"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f4025c0d390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025bba020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025bba530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f4025bb8020" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f4025bb8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f4025bb83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacControl" ref="0x7f4025bb7be0" loc="14:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f4025bb7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f4025bb6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mac" ref="0x7f4025bb2430" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f4025bb2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025bb27b0"/>
        <function-ref name="received" scoped="" ref="0x7f4025bb2940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025bb2ad0"/>
        <function-ref name="getMac" scoped="" ref="0x7f4025bb2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f4025bb6dd0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f4025bb6dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025c0fd70"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f4025c0d390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025baea80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025bad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f4025badaa0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f4025badaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f4025bade20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacControl" ref="0x7f4025babc30" loc="14:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f4025babc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f4025baa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mac" ref="0x7f4025bab100" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f4025bab100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025bab480"/>
        <function-ref name="received" scoped="" ref="0x7f4025bab610"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025bab7a0"/>
        <function-ref name="getMac" scoped="" ref="0x7f4025bab930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f4024b79e20" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="IpTransceiverC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f4024b79e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024b781c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024b78350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcQueue" ref="0x7f4024b785e0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="IpTransceiverC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f4024b785e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024b78960"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024b78af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcQueue" ref="0x7f4025b8c7e0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <component-ref qname="LlcQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f4025b8c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025b8cb60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025b8ccf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f4025b5a880" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="LlcQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f4025b5a880"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025c0fd70"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f4025c0d390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025b584c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025b589d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f4025b87930" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="LlcQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f4025b87930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025c0fd70"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f4025c0d390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025b5ba70"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f4025b5b560"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025b5a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f4024b6dbd0" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f4024b6dbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025c0fd70"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f4025c0d390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024b6b860"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024b6bd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f4024b6fe30" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f4024b6fe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025c0fd70"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f4025c0d390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024b6d020"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f4024b6ea80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024b6d4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f4024b6a290" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f4024b6a290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4024b6a610"/>
        <function-ref name="runTask" scoped="" ref="0x7f4024b6a7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f4025b54bf0" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <component-ref qname="LlcQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f4025b54bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025c0fd70"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7f4025c0d390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025b53d70"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f4025b53860"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025b512a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcQueue" ref="0x7f4025b54210" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <component-ref qname="LlcQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f4025b54210"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025b54590"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025b54720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f4025b42080" loc="10:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <component-ref qname="ArpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f4025b42080"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f4025b42400"/>
        <function-ref name="getGateway" scoped="" ref="0x7f4025b42590"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f4025b42720"/>
        <function-ref name="getIp" scoped="" ref="0x7f4025b428b0"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f4025b42a40"/>
        <function-ref name="setIp" scoped="" ref="0x7f4025b42bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Arp" ref="0x7f4025b45820" loc="9:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <component-ref qname="ArpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f4025b45820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f4025b45ba0"/>
        <function-ref name="resolved" scoped="" ref="0x7f4025b45d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f4025b3e110" loc="13:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f4025b3e110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f4025bfd340"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f4025bfdc30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025b3ed00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025b3c260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timeout" ref="0x7f4025b3a810" loc="15:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timeout" scoped="" ref="0x7f4025b3a810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4025b36cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f4025b37300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4025b360d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4025b37c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f4025b35660"/>
        <function-ref name="gett0" scoped="" ref="0x7f4025b351e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4025b37780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4025b39480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4025b366e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4025b39950"/>
        <function-ref name="stop" scoped="" ref="0x7f4025b39e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClearCacheTimeout" ref="0x7f4025b35d20" loc="16:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClearCacheTimeout" scoped="" ref="0x7f4025b35d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4025b30220"/>
        <function-ref name="fired" scoped="" ref="0x7f4025b327c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4025b31590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4025b31110"/>
        <function-ref name="getdt" scoped="" ref="0x7f4025b30b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f4025b306a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4025b32c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4025b34940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4025b31ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4025b34e10"/>
        <function-ref name="stop" scoped="" ref="0x7f4025b32340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcReceive" ref="0x7f4025b2e830" loc="18:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f4025b2e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f4025b2ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f4025b3c8f0" loc="14:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f4025b3c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f4025bfd340"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f4025bfdc30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025b3ba70"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f4025b3b560"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025b3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Arp" ref="0x7f4025b416e0" loc="12:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7f4025b416e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7f4025b41a60"/>
        <function-ref name="resolved" scoped="" ref="0x7f4025b41bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcSend" ref="0x7f4025b2e020" loc="17:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f4025b2e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025b2e3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025b2e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7f4025b2d020" loc="19:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7f4025b2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7f4025b2d3a0"/>
        <function-ref name="getGateway" scoped="" ref="0x7f4025b2d530"/>
        <function-ref name="setNetmask" scoped="" ref="0x7f4025b2d6c0"/>
        <function-ref name="getIp" scoped="" ref="0x7f4025b2d850"/>
        <function-ref name="getNetmask" scoped="" ref="0x7f4025b2d9e0"/>
        <function-ref name="setIp" scoped="" ref="0x7f4025b2db70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MacControl" ref="0x7f4025b2de70" loc="20:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7f4025b2de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7f4025b2c220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4025b2c4e0" loc="21:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4025b2c4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025b2c860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4025938140" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="ArpC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4025938140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4025934630"/>
        <function-ref name="fired" scoped="" ref="0x7f4025937b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4025936920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f40259364a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4025933020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4025934ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4025936020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4025938d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4025934020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4025937220"/>
        <function-ref name="stop" scoped="" ref="0x7f40259376f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f4025aed1d0" loc="49:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f4025aed1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4025aea630"/>
        <function-ref name="fired" scoped="" ref="0x7f4025aecc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4025aeb9d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4025aeb550"/>
        <function-ref name="getdt" scoped="" ref="0x7f4025ae8020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4025aeaab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4025aeb0d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4025aeddc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4025aea020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4025aec2e0"/>
        <function-ref name="stop" scoped="" ref="0x7f4025aec7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f4025ae5c30" loc="46:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f4025ae5c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4025ae0110"/>
        <function-ref name="fired" scoped="" ref="0x7f4025ae26a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4025ae14a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4025ae1020"/>
        <function-ref name="getdt" scoped="" ref="0x7f4025ae0a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f4025ae0590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4025ae2b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4025ae4860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4025ae1ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4025ae4d30"/>
        <function-ref name="stop" scoped="" ref="0x7f4025ae2220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f4025adb500" loc="47:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f4025adb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4025add170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4025ae8e60" loc="45:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4025ae8e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025ae5210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f4025acc020" loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f4025acc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4025acce30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4025ac7800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4025ac7340"/>
        <function-ref name="overflow" scoped="" ref="0x7f4025ac7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4025adac80" loc="27:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4025adac80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025ad70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f4025acf960" loc="28:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f4025acf960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4025ace1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f4025ad51b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f4025ad5b30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4025ad5670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4025ace670"/>
        <function-ref name="start" scoped="" ref="0x7f4025ad67c0"/>
        <function-ref name="stop" scoped="" ref="0x7f4025ad6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f40259d74b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f40259d74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40259d4db0"/>
        <function-ref name="fired" scoped="" ref="0x7f40259d5da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f40259d4760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40259d42a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f40259d32a0"/>
        <function-ref name="start" scoped="" ref="0x7f40259d53d0"/>
        <function-ref name="stop" scoped="" ref="0x7f40259d58e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40259d8ba0" loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f40259d8ba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f402606a020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f402606a020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40259d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f40259d38d0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f40259d38d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f40259d2780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f40259d0150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f40259d2c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f40259d0610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f4024b3f190" loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f4024b3f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f4024b3f510"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f4024b3f6a0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f4024b3f830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f4024b3f9c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f4024b3fb50"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f4024b3fce0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f4024b3fe70"/>
        <function-ref name="setControlA" scoped="" ref="0x7f4024b3e030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f4024b4b9c0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f4024b4b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4024b47260"/>
        <function-ref name="fired" scoped="" ref="0x7f4024b49220"/>
        <function-ref name="startAt" scoped="" ref="0x7f4024b49ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4024b496e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f4024b47720"/>
        <function-ref name="start" scoped="" ref="0x7f4024b4a810"/>
        <function-ref name="stop" scoped="" ref="0x7f4024b4ad20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4024b4b1b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4024b4b1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4024b4b530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f4024b47d50" loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f4024b47d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f4024b46ba0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f4024b45550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f4024b45090"/>
        <function-ref name="overflow" scoped="" ref="0x7f4024b45a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x7f4024b3a780" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f4024b3a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f4024b3ab00"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f4024b3ac90"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f4024b3ae20"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f4024b39020"/>
        <function-ref name="countBusy" scoped="" ref="0x7f4024b391b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f4024b39340"/>
        <function-ref name="getAssr" scoped="" ref="0x7f4024b394d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f4024b39660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f4024b3e3e0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f4024b3e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f4024b3be60"/>
        <function-ref name="fired" scoped="" ref="0x7f4024b3da60"/>
        <function-ref name="get" scoped="" ref="0x7f4024b3d090"/>
        <function-ref name="reset" scoped="" ref="0x7f4024b3b020"/>
        <function-ref name="isOn" scoped="" ref="0x7f4024b3a350"/>
        <function-ref name="set" scoped="" ref="0x7f4024b3d550"/>
        <function-ref name="start" scoped="" ref="0x7f4024b3b4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f4024b3b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4024b44020" loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4024b44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f4024b40350"/>
        <function-ref name="test" scoped="" ref="0x7f4024b419a0"/>
        <function-ref name="get" scoped="" ref="0x7f4024b44c50"/>
        <function-ref name="setScale" scoped="" ref="0x7f4024b40810"/>
        <function-ref name="getScale" scoped="" ref="0x7f4024b40d20"/>
        <function-ref name="reset" scoped="" ref="0x7f4024b43b20"/>
        <function-ref name="overflow" scoped="" ref="0x7f4024b43660"/>
        <function-ref name="isOn" scoped="" ref="0x7f4024b41e60"/>
        <function-ref name="set" scoped="" ref="0x7f4024b43150"/>
        <function-ref name="start" scoped="" ref="0x7f4024b41020"/>
        <function-ref name="stop" scoped="" ref="0x7f4024b414e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f4025a49c10" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f4025a49c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f4025a48020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f4025a481b0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f4025a48340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f4025a484d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f4025a48660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f4025a487f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f4025a48980"/>
        <function-ref name="setControlA" scoped="" ref="0x7f4025a48b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f4025a43570" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f4025a43570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f4025a438f0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f4025a43a80"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f4025a43c10"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f4025a43da0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f4025a42020"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f4025a421b0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f4025a42340"/>
        <function-ref name="setAssr" scoped="" ref="0x7f4025a424d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4025a47060" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f4025a47060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f4025a44a10"/>
        <function-ref name="fired" scoped="" ref="0x7f4025a456c0"/>
        <function-ref name="get" scoped="" ref="0x7f4025a47c90"/>
        <function-ref name="reset" scoped="" ref="0x7f4025a45b80"/>
        <function-ref name="isOn" scoped="" ref="0x7f4025a43020"/>
        <function-ref name="set" scoped="" ref="0x7f4025a451b0"/>
        <function-ref name="start" scoped="" ref="0x7f4025a44090"/>
        <function-ref name="stop" scoped="" ref="0x7f4025a44550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4025a508f0" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4025a508f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f4025a4acd0"/>
        <function-ref name="test" scoped="" ref="0x7f4025a4a350"/>
        <function-ref name="get" scoped="" ref="0x7f4025a4d5a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f4025a491b0"/>
        <function-ref name="getScale" scoped="" ref="0x7f4025a496c0"/>
        <function-ref name="reset" scoped="" ref="0x7f4025a4c4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f4025a4c020"/>
        <function-ref name="isOn" scoped="" ref="0x7f4025a4a810"/>
        <function-ref name="set" scoped="" ref="0x7f4025a4da60"/>
        <function-ref name="start" scoped="" ref="0x7f4025a4c9a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4025a4ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f4025a3adb0" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f4025a3adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f4025a39180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f4025a39310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f4025a394a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f4025a39630"/>
        <function-ref name="setControlB" scoped="" ref="0x7f4025a397c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f4025a39950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f4025a39ae0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f4025a39c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f4025a344c0" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f4025a344c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f4025a34840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f4025a34bf0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f4025a34bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f4025a33020"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f4025a331b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f4025a33340"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f4025a334d0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f4025a33660"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f4025a337f0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f4025a33980"/>
        <function-ref name="setAssr" scoped="" ref="0x7f4025a33b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f4025a371a0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f4025a371a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f4025a35b30"/>
        <function-ref name="fired" scoped="" ref="0x7f4025a367f0"/>
        <function-ref name="get" scoped="" ref="0x7f4025a37dd0"/>
        <function-ref name="reset" scoped="" ref="0x7f4025a36cb0"/>
        <function-ref name="isOn" scoped="" ref="0x7f4025a34020"/>
        <function-ref name="set" scoped="" ref="0x7f4025a362e0"/>
        <function-ref name="start" scoped="" ref="0x7f4025a351b0"/>
        <function-ref name="stop" scoped="" ref="0x7f4025a35670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4025a3fa10" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4025a3fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f4025a3be60"/>
        <function-ref name="test" scoped="" ref="0x7f4025a3b4e0"/>
        <function-ref name="get" scoped="" ref="0x7f4025a3e6b0"/>
        <function-ref name="setScale" scoped="" ref="0x7f4025a3a350"/>
        <function-ref name="getScale" scoped="" ref="0x7f4025a3a860"/>
        <function-ref name="reset" scoped="" ref="0x7f4025a3c590"/>
        <function-ref name="overflow" scoped="" ref="0x7f4025a3c0d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f4025a3b9a0"/>
        <function-ref name="set" scoped="" ref="0x7f4025a3eb70"/>
        <function-ref name="start" scoped="" ref="0x7f4025a3ca50"/>
        <function-ref name="stop" scoped="" ref="0x7f4025a3b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f402599e020" loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f402599e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f402599e3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f402599e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f40259a3cd0" loc="49:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f40259a3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f402599f670"/>
        <function-ref name="fired" scoped="" ref="0x7f40259a0550"/>
        <function-ref name="startAt" scoped="" ref="0x7f402599f020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40259a0a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f402599fb30"/>
        <function-ref name="start" scoped="" ref="0x7f40259a1b60"/>
        <function-ref name="stop" scoped="" ref="0x7f40259a0090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f40259a8830" loc="48:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f40259a8830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f40259a4cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f40259a5300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f40259a40d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f40259a5c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f40259a3660"/>
        <function-ref name="gett0" scoped="" ref="0x7f40259a31e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f40259a5780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f40259a6480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f40259a46e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f40259a6950"/>
        <function-ref name="stop" scoped="" ref="0x7f40259a6e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f402594ea00" loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f402594ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f402594ed80"/>
        <function-ref name="runTask" scoped="" ref="0x7f402594c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f4025953640" loc="49:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f4025953640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f402594fc40"/>
        <function-ref name="fired" scoped="" ref="0x7f40259501e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f402594f020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4025950ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f402594e590"/>
        <function-ref name="gett0" scoped="" ref="0x7f402594e110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4025950660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4025951390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f402594f630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4025951860"/>
        <function-ref name="stop" scoped="" ref="0x7f4025951d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4025959150" loc="48:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4025959150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4025954700"/>
        <function-ref name="fired" scoped="" ref="0x7f4025957c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4025956a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f40259565b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4025953090"/>
        <function-ref name="gett0" scoped="" ref="0x7f4025954ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4025956110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4025959d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f40259540d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f40259572a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4025957790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f402594a790" loc="48:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f402594a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f40259403f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f4025940a60" loc="49:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f4025940a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f402593f890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f402593e260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f402593fd50"/>
        <function-ref name="overflow" scoped="" ref="0x7f402593e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4025932b00" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="ArpC.ClearCacheTimeoutC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4025932b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f402592d110"/>
        <function-ref name="fired" scoped="" ref="0x7f40259305b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f402592e4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f402592e020"/>
        <function-ref name="getdt" scoped="" ref="0x7f402592da10"/>
        <function-ref name="gett0" scoped="" ref="0x7f402592d590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4025930a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4025931750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f402592eab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4025931c20"/>
        <function-ref name="stop" scoped="" ref="0x7f4025930130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7f402592a020" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="ArpC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7f402592a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f402592a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f402592b700" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="ArpC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f402592b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f402592ba80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f402592bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7f4024adf020" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="ArpC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7f4024adf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024adf3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024adf530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcQueue" ref="0x7f4024adf7c0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="ArpC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7f4024adf7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024adfb40"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024adfcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f4025925360" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="ArpC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f4025925360"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f4025bfd340"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f4025bfdc30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025924020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025924530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f40259284a0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="ArpC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f40259284a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f4025bfd340"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f4025bfdc30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40259265e0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f40259260d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025926ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f4024ad5a30" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f4024ad5a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f4025bfd340"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f4025bfdc30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024ad4670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024ad4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f4024ad8cd0" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f4024ad8cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7f4025bfd340"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7f4025bfdc30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024ad7e50"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f4024ad7940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024ad5350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f4024ad30a0" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f4024ad30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4024ad3420"/>
        <function-ref name="runTask" scoped="" ref="0x7f4024ad35b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f4025918d90" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="PingC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f4025918d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f402588e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f40259185f0" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="PingC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f40259185f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025918970"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025918b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f40259129e0" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <component-ref qname="IcmpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f40259129e0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f4025915b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f4025914230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025909670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025909b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f4025908610" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <component-ref qname="IcmpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f4025908610"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f4025908990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f4025905430" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="IcmpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f4025905430"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40259057b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025905940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f4025905bd0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="IcmpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f4025905bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f40258d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f4024abbe80" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="IcmpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f4024abbe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024aba220"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024aba3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpQueue" ref="0x7f4024aba640" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="IcmpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f4024aba640"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024aba9c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024abab50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpQueue" ref="0x7f40258f4d60" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <component-ref qname="IpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f40258f4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40258f1180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40258f1310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f40258eb020" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f40258eb020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f4025ceb080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f4025ceb600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40258ebc10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40258ea170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f40258ee060" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f40258ee060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f4025ceb080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f4025ceb600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40258ed1b0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f40258eec50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40258ed680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f4024aaf140" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f4024aaf140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f4025ceb080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f4025ceb600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024aafd30"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024aae260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f4024ab2320" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f4024ab2320"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f4025ceb080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f4025ceb600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024ab1530"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f4024ab1020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024ab1a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f4024aae720" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f4024aae720"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4024aaeaa0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4024aaec30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpQueue" ref="0x7f40258e99f0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <component-ref qname="IpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f40258e99f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40258e9d70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40258e5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f40258e54e0" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <component-ref qname="IpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f40258e54e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7f4025ceb080"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7f4025ceb600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40258e4620"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f40258e4110"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40258e4af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f40258d4290" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f40258d4290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f4025915b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f4025914230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40258d4e80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40258d33b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpSend" ref="0x7f40258d1490" loc="13:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f40258d1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40258d1810"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40258d19a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f40258d3df0" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f40258d3df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f40258d11c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpReceive" ref="0x7f40258d1c90" loc="14:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f40258d1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f40258d00a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpQueue" ref="0x7f4024ac17c0" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="PingC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f4024ac17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024ac1b40"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024ac1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f4024ac1020" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="PingC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f4024ac1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024ac13a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024ac1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpQueue" ref="0x7f40258a8410" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <component-ref qname="IcmpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f40258a8410"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40258a8790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40258a8920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f40258a39d0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f40258a39d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f4025915b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f4025914230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40258a25f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40258a2b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f40258a6ae0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f40258a6ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f4025915b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f4025914230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40258a4c60"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f40258a4750"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40258a3170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f4024a94700" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f4024a94700"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f4025915b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f4025914230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024a93390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024a938a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f4024a968f0" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f4024a968f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f4025915b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f4025914230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4024a95a70"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f4024a95560"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4024a94020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f4024a93d60" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f4024a93d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4024a91180"/>
        <function-ref name="runTask" scoped="" ref="0x7f4024a91310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpQueue" ref="0x7f402589d450" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <component-ref qname="IcmpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f402589d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f402589d7d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f402589d960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f402589de30" loc="13:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <component-ref qname="IcmpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f402589de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7f4025915b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7f4025914230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f402589b020"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f402589ca80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f402589b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpReceive" ref="0x7f402588b150" loc="13:PingP.nc">
      <component-ref qname="PingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f402588b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f402588b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpSend" ref="0x7f402588b7c0" loc="14:PingP.nc">
      <component-ref qname="PingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f402588b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f402588bb40"/>
        <function-ref name="sendDone" scoped="" ref="0x7f402588bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f402587e020" loc="9:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f402587e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f402587e3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f402587e530"/>
        <function-ref name="start" scoped="" ref="0x7f402587e6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f402587e850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Enc28j60Control" ref="0x7f40258498a0" loc="10:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Enc28j60Control" scoped="" ref="0x7f40258498a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Enc28j60Control"/>
      </instance>
      <interface-functions>
        <function-ref name="linkChange" scoped="" ref="0x7f4025849c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mac" ref="0x7f40258814a0" loc="8:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f40258814a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025881820"/>
        <function-ref name="received" scoped="" ref="0x7f40258819b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025881b40"/>
        <function-ref name="getMac" scoped="" ref="0x7f4025881cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="intPin" ref="0x7f4025845840" loc="13:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="intPin" scoped="" ref="0x7f4025845840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025845bc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025845d50"/>
        <function-ref name="toggle" scoped="" ref="0x7f402583f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402583f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f402583f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402583f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f402583f660"/>
        <function-ref name="clr" scoped="" ref="0x7f402583f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f402583dcf0" loc="17:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f402583dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f40258370a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f4025837230"/>
        <function-ref name="start" scoped="" ref="0x7f40258373c0"/>
        <function-ref name="stop" scoped="" ref="0x7f4025837550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Enc28j60Control" ref="0x7f4025837880" loc="18:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Enc28j60Control" scoped="" ref="0x7f4025837880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Enc28j60Control"/>
      </instance>
      <interface-functions>
        <function-ref name="linkChange" scoped="" ref="0x7f4025837c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f40258363a0" loc="15:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f40258363a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f4025836720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mac" ref="0x7f402587d750" loc="10:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7f402587d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f402587dad0"/>
        <function-ref name="received" scoped="" ref="0x7f402587dc60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f402587ddf0"/>
        <function-ref name="getMac" scoped="" ref="0x7f4025847020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ssETH" ref="0x7f40258401e0" loc="11:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ssETH" scoped="" ref="0x7f40258401e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025840560"/>
        <function-ref name="isInput" scoped="" ref="0x7f40258406f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025840880"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025840a10"/>
        <function-ref name="get" scoped="" ref="0x7f4025840ba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025840d30"/>
        <function-ref name="set" scoped="" ref="0x7f4025846020"/>
        <function-ref name="clr" scoped="" ref="0x7f40258461b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="rstETH" ref="0x7f4025846520" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="rstETH" scoped="" ref="0x7f4025846520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40258468a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025846a30"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025846bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025846d50"/>
        <function-ref name="get" scoped="" ref="0x7f4025845020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40258451b0"/>
        <function-ref name="set" scoped="" ref="0x7f4025845340"/>
        <function-ref name="clr" scoped="" ref="0x7f40258454d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="intETH" ref="0x7f4025838390" loc="14:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="intETH" scoped="" ref="0x7f4025838390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4025838710"/>
        <function-ref name="fired" scoped="" ref="0x7f40258388a0"/>
        <function-ref name="disable" scoped="" ref="0x7f4025838a30"/>
        <function-ref name="edge" scoped="" ref="0x7f4025838bc0"/>
        <function-ref name="enable" scoped="" ref="0x7f4025838d50"/>
        <function-ref name="getValue" scoped="" ref="0x7f402583e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="checkInterruptflag" ref="0x7f40258005d0" loc="179:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="checkInterruptflag" scoped="" ref="0x7f40258005d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025800950"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025800ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f402583d020" loc="16:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f402583d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f402583d3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f402583d530"/>
        <function-ref name="request" scoped="" ref="0x7f402583d6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f402583d850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f402583d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f4025795670" loc="98:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f4025795670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025795df0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025794020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257941b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025794340"/>
        <function-ref name="get" scoped="" ref="0x7f40257944d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025794660"/>
        <function-ref name="set" scoped="" ref="0x7f40257947f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025794980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f40257b2e40" loc="72:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f40257b2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257b11e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257b1370"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257b1500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257b1690"/>
        <function-ref name="get" scoped="" ref="0x7f40257b1820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257b19b0"/>
        <function-ref name="set" scoped="" ref="0x7f40257b1b40"/>
        <function-ref name="clr" scoped="" ref="0x7f40257b1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f40257a5cb0" loc="83:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f40257a5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257a40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257a4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257a43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257a4550"/>
        <function-ref name="get" scoped="" ref="0x7f40257a46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257a4870"/>
        <function-ref name="set" scoped="" ref="0x7f40257a4a00"/>
        <function-ref name="clr" scoped="" ref="0x7f40257a4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f402579b670" loc="92:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f402579b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402579b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402579bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f402579bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402579a020"/>
        <function-ref name="get" scoped="" ref="0x7f402579a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402579a340"/>
        <function-ref name="set" scoped="" ref="0x7f402579a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f402579a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f402578e990" loc="103:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f402578e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402578ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f402578d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f402578d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402578d340"/>
        <function-ref name="get" scoped="" ref="0x7f402578d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402578d660"/>
        <function-ref name="set" scoped="" ref="0x7f402578d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f402578d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f40257c8020" loc="50:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f40257c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257c83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257c8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257c86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257c8850"/>
        <function-ref name="get" scoped="" ref="0x7f40257c89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257c8b70"/>
        <function-ref name="set" scoped="" ref="0x7f40257c8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f40257c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f402579d020" loc="90:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f402579d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402579d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402579d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f402579d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402579d850"/>
        <function-ref name="get" scoped="" ref="0x7f402579d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402579db70"/>
        <function-ref name="set" scoped="" ref="0x7f402579dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f402579c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f40257c6670" loc="53:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f40257c6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257c69f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257c6b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257c6d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257c5020"/>
        <function-ref name="get" scoped="" ref="0x7f40257c51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257c5340"/>
        <function-ref name="set" scoped="" ref="0x7f40257c54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f40257ba670" loc="64:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f40257ba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257ba9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257bab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257bad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257b9020"/>
        <function-ref name="get" scoped="" ref="0x7f40257b91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257b9340"/>
        <function-ref name="set" scoped="" ref="0x7f40257b94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257b9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f40257ae670" loc="75:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f40257ae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257ae9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257aeb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257aed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257ac020"/>
        <function-ref name="get" scoped="" ref="0x7f40257ac1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257ac340"/>
        <function-ref name="set" scoped="" ref="0x7f40257ac4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257ac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f40257a1670" loc="86:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f40257a1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257a19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257a1b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257a1d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257a0020"/>
        <function-ref name="get" scoped="" ref="0x7f40257a01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257a0340"/>
        <function-ref name="set" scoped="" ref="0x7f40257a04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257a0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f40257cf020" loc="45:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f40257cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257cf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257cf530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257cf6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257cf850"/>
        <function-ref name="get" scoped="" ref="0x7f40257cf9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257cfb70"/>
        <function-ref name="set" scoped="" ref="0x7f40257cfd00"/>
        <function-ref name="clr" scoped="" ref="0x7f40257ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f40257c2020" loc="56:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f40257c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257c23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257c2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257c26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257c2850"/>
        <function-ref name="get" scoped="" ref="0x7f40257c29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257c2b70"/>
        <function-ref name="set" scoped="" ref="0x7f40257c2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f40257c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f40257b6020" loc="67:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f40257b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257b63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257b6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257b66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257b6850"/>
        <function-ref name="get" scoped="" ref="0x7f40257b69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257b6b70"/>
        <function-ref name="set" scoped="" ref="0x7f40257b6d00"/>
        <function-ref name="clr" scoped="" ref="0x7f40257b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f40257a9020" loc="78:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f40257a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257a93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257a9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257a96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257a9850"/>
        <function-ref name="get" scoped="" ref="0x7f40257a99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257a9b70"/>
        <function-ref name="set" scoped="" ref="0x7f40257a9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f40257a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f4025797020" loc="95:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f4025797020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257973a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025797530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257976c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025797850"/>
        <function-ref name="get" scoped="" ref="0x7f40257979e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025797b70"/>
        <function-ref name="set" scoped="" ref="0x7f4025797d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4025796020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f4025791350" loc="101:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f4025791350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257916d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025791860"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257919f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025791b80"/>
        <function-ref name="get" scoped="" ref="0x7f4025791d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402578f020"/>
        <function-ref name="set" scoped="" ref="0x7f402578f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f402578f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f40257a7670" loc="81:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f40257a7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257a79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257a7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257a7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257a6020"/>
        <function-ref name="get" scoped="" ref="0x7f40257a61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257a6340"/>
        <function-ref name="set" scoped="" ref="0x7f40257a64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257a6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f40257cc990" loc="48:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f40257cc990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257ccd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257cb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257cb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257cb340"/>
        <function-ref name="get" scoped="" ref="0x7f40257cb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257cb660"/>
        <function-ref name="set" scoped="" ref="0x7f40257cb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257cb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f40257bf990" loc="59:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f40257bf990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257bfd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257be020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257be1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257be340"/>
        <function-ref name="get" scoped="" ref="0x7f40257be4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257be660"/>
        <function-ref name="set" scoped="" ref="0x7f40257be7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257be980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f4025794cb0" loc="99:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f4025794cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257930a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025793230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257933c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025793550"/>
        <function-ref name="get" scoped="" ref="0x7f40257936e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025793870"/>
        <function-ref name="set" scoped="" ref="0x7f4025793a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4025793b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f40257bc020" loc="62:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f40257bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257bc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257bc530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257bc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257bc850"/>
        <function-ref name="get" scoped="" ref="0x7f40257bc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257bcb70"/>
        <function-ref name="set" scoped="" ref="0x7f40257bcd00"/>
        <function-ref name="clr" scoped="" ref="0x7f40257bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f40257b0060" loc="73:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f40257b0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257b03e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257b0570"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257b0700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257b0890"/>
        <function-ref name="get" scoped="" ref="0x7f40257b0a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257b0bb0"/>
        <function-ref name="set" scoped="" ref="0x7f40257b0d40"/>
        <function-ref name="clr" scoped="" ref="0x7f40257af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f40257a3020" loc="84:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f40257a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257a33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257a3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257a36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257a3850"/>
        <function-ref name="get" scoped="" ref="0x7f40257a39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257a3b70"/>
        <function-ref name="set" scoped="" ref="0x7f40257a3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f40257a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f402579a990" loc="93:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f402579a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402579ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025799020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257991b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025799340"/>
        <function-ref name="get" scoped="" ref="0x7f40257994d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025799660"/>
        <function-ref name="set" scoped="" ref="0x7f40257997f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025799980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f40257c7350" loc="51:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f40257c7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257c76d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257c7860"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257c79f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257c7b80"/>
        <function-ref name="get" scoped="" ref="0x7f40257c7d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257c6020"/>
        <function-ref name="set" scoped="" ref="0x7f40257c61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257c6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f40257c5990" loc="54:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f40257c5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257c5d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257c4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257c41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257c4340"/>
        <function-ref name="get" scoped="" ref="0x7f40257c44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257c4660"/>
        <function-ref name="set" scoped="" ref="0x7f40257c47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257c4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f40257b9990" loc="65:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f40257b9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257b9d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257b8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257b81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257b8340"/>
        <function-ref name="get" scoped="" ref="0x7f40257b84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257b8660"/>
        <function-ref name="set" scoped="" ref="0x7f40257b87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257b8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f40257ac990" loc="76:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f40257ac990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257acd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257ab020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257ab1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257ab340"/>
        <function-ref name="get" scoped="" ref="0x7f40257ab4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257ab660"/>
        <function-ref name="set" scoped="" ref="0x7f40257ab7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257ab980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f40257a0990" loc="87:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f40257a0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257a0d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f402579f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f402579f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402579f340"/>
        <function-ref name="get" scoped="" ref="0x7f402579f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402579f660"/>
        <function-ref name="set" scoped="" ref="0x7f402579f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f402579f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f40257ce350" loc="46:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f40257ce350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257ce6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257ce860"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257ce9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257ceb80"/>
        <function-ref name="get" scoped="" ref="0x7f40257ced10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257cd020"/>
        <function-ref name="set" scoped="" ref="0x7f40257cd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257cd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f40257c1350" loc="57:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f40257c1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257c17d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257c1960"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257c1af0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257c1c80"/>
        <function-ref name="get" scoped="" ref="0x7f40257c1e10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257c0020"/>
        <function-ref name="set" scoped="" ref="0x7f40257c01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257c0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f40257b5350" loc="68:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f40257b5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257b56d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257b5860"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257b59f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257b5b80"/>
        <function-ref name="get" scoped="" ref="0x7f40257b5d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257b4020"/>
        <function-ref name="set" scoped="" ref="0x7f40257b41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257b4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f4025796350" loc="96:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f4025796350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257966d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025796860"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257969f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025796b80"/>
        <function-ref name="get" scoped="" ref="0x7f4025796d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025795020"/>
        <function-ref name="set" scoped="" ref="0x7f40257951b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025795340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f40257b3990" loc="71:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f40257b3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257b2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257b21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257b2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257b24d0"/>
        <function-ref name="get" scoped="" ref="0x7f40257b2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257b27f0"/>
        <function-ref name="set" scoped="" ref="0x7f40257b2980"/>
        <function-ref name="clr" scoped="" ref="0x7f40257b2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f40257a6990" loc="82:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f40257a6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257a6d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257a5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257a51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257a5340"/>
        <function-ref name="get" scoped="" ref="0x7f40257a54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257a5660"/>
        <function-ref name="set" scoped="" ref="0x7f40257a57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257a5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f402579c350" loc="91:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f402579c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402579c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402579c860"/>
        <function-ref name="toggle" scoped="" ref="0x7f402579c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402579cb80"/>
        <function-ref name="get" scoped="" ref="0x7f402579cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402579b020"/>
        <function-ref name="set" scoped="" ref="0x7f402579b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f402579b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f402578f670" loc="102:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f402578f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402578f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402578fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f402578fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402578e020"/>
        <function-ref name="get" scoped="" ref="0x7f402578e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402578e340"/>
        <function-ref name="set" scoped="" ref="0x7f402578e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f402578e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f40257cbcb0" loc="49:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f40257cbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257c90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257c9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257c93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257c9550"/>
        <function-ref name="get" scoped="" ref="0x7f40257c96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257c9870"/>
        <function-ref name="set" scoped="" ref="0x7f40257c9a00"/>
        <function-ref name="clr" scoped="" ref="0x7f40257c9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f40257becb0" loc="60:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f40257becb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257bd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257bd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257bd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257bd550"/>
        <function-ref name="get" scoped="" ref="0x7f40257bd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257bd870"/>
        <function-ref name="set" scoped="" ref="0x7f40257bda00"/>
        <function-ref name="clr" scoped="" ref="0x7f40257bdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f402579fcb0" loc="89:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f402579fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402579e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402579e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f402579e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402579e550"/>
        <function-ref name="get" scoped="" ref="0x7f402579e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402579e870"/>
        <function-ref name="set" scoped="" ref="0x7f402579ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f402579eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f40257bb350" loc="63:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f40257bb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257bb6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257bb860"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257bb9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257bbb80"/>
        <function-ref name="get" scoped="" ref="0x7f40257bbd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257ba020"/>
        <function-ref name="set" scoped="" ref="0x7f40257ba1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257ba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f40257af350" loc="74:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f40257af350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257af6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257af860"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257af9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257afb80"/>
        <function-ref name="get" scoped="" ref="0x7f40257afd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257ae020"/>
        <function-ref name="set" scoped="" ref="0x7f40257ae1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257ae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f40257a2350" loc="85:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f40257a2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257a26d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257a2860"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257a29f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257a2b80"/>
        <function-ref name="get" scoped="" ref="0x7f40257a2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257a1020"/>
        <function-ref name="set" scoped="" ref="0x7f40257a11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257a1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f4025799cb0" loc="94:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f4025799cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257980a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025798230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257983c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025798550"/>
        <function-ref name="get" scoped="" ref="0x7f40257986e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025798870"/>
        <function-ref name="set" scoped="" ref="0x7f4025798a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4025798b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f40257d3cb0" loc="44:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f40257d3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257d00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257d0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257d03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257d0550"/>
        <function-ref name="get" scoped="" ref="0x7f40257d06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257d0870"/>
        <function-ref name="set" scoped="" ref="0x7f40257d0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f40257d0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f40257c4cb0" loc="55:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f40257c4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257c30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257c3230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257c33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257c3550"/>
        <function-ref name="get" scoped="" ref="0x7f40257c36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257c3870"/>
        <function-ref name="set" scoped="" ref="0x7f40257c3a00"/>
        <function-ref name="clr" scoped="" ref="0x7f40257c3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f40257b8cb0" loc="66:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f40257b8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257b70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257b7230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257b73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257b7550"/>
        <function-ref name="get" scoped="" ref="0x7f40257b76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257b7870"/>
        <function-ref name="set" scoped="" ref="0x7f40257b7a00"/>
        <function-ref name="clr" scoped="" ref="0x7f40257b7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f40257abcb0" loc="77:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f40257abcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257aa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257aa230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257aa3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257aa550"/>
        <function-ref name="get" scoped="" ref="0x7f40257aa6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257aa870"/>
        <function-ref name="set" scoped="" ref="0x7f40257aaa00"/>
        <function-ref name="clr" scoped="" ref="0x7f40257aab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f4025792020" loc="100:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f4025792020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257923a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025792530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257926c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025792850"/>
        <function-ref name="get" scoped="" ref="0x7f40257929e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025792b70"/>
        <function-ref name="set" scoped="" ref="0x7f4025792d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4025791020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f40257a8350" loc="80:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f40257a8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257a86d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257a8860"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257a89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257a8b80"/>
        <function-ref name="get" scoped="" ref="0x7f40257a8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257a7020"/>
        <function-ref name="set" scoped="" ref="0x7f40257a71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257a7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f40257b4670" loc="69:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f40257b4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257b49f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257b4b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257b4d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257b3020"/>
        <function-ref name="get" scoped="" ref="0x7f40257b31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257b3340"/>
        <function-ref name="set" scoped="" ref="0x7f40257b34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257b3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f40257cd670" loc="47:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f40257cd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257cd9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257cdb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257cdd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257cc020"/>
        <function-ref name="get" scoped="" ref="0x7f40257cc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257cc340"/>
        <function-ref name="set" scoped="" ref="0x7f40257cc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257cc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f40257c0670" loc="58:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f40257c0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257c09f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257c0b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257c0d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257bf020"/>
        <function-ref name="get" scoped="" ref="0x7f40257bf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257bf340"/>
        <function-ref name="set" scoped="" ref="0x7f40257bf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40257bf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4025741760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4025741760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025741ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025741c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025741e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025740020"/>
        <function-ref name="get" scoped="" ref="0x7f40257401b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025740340"/>
        <function-ref name="set" scoped="" ref="0x7f40257404d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025740660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f402573ec10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f402573ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402573d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f402573d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402573d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402573d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f402573d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402573d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f402573d980"/>
        <function-ref name="clr" scoped="" ref="0x7f402573db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f40257443f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f40257443f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025744770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025744900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025744a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025744c20"/>
        <function-ref name="get" scoped="" ref="0x7f4025744db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025743020"/>
        <function-ref name="set" scoped="" ref="0x7f40257431b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025743340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f40257408f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f40257408f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025740c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025740e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f402573f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402573f1b0"/>
        <function-ref name="get" scoped="" ref="0x7f402573f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402573f4d0"/>
        <function-ref name="set" scoped="" ref="0x7f402573f660"/>
        <function-ref name="clr" scoped="" ref="0x7f402573f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f402573dda0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f402573dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402573c180"/>
        <function-ref name="isInput" scoped="" ref="0x7f402573c310"/>
        <function-ref name="toggle" scoped="" ref="0x7f402573c4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402573c630"/>
        <function-ref name="get" scoped="" ref="0x7f402573c7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402573c950"/>
        <function-ref name="set" scoped="" ref="0x7f402573cae0"/>
        <function-ref name="clr" scoped="" ref="0x7f402573cc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f40257435d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f40257435d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025743950"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025743ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025743c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025743e00"/>
        <function-ref name="get" scoped="" ref="0x7f4025741020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257411b0"/>
        <function-ref name="set" scoped="" ref="0x7f4025741340"/>
        <function-ref name="clr" scoped="" ref="0x7f40257414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f402573fa80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f402573fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402573fe00"/>
        <function-ref name="isInput" scoped="" ref="0x7f402573e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f402573e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402573e340"/>
        <function-ref name="get" scoped="" ref="0x7f402573e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402573e660"/>
        <function-ref name="set" scoped="" ref="0x7f402573e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f402573e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f402573b020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f402573b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402573b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402573b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f402573b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402573b850"/>
        <function-ref name="get" scoped="" ref="0x7f402573b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402573bb70"/>
        <function-ref name="set" scoped="" ref="0x7f402573bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f402573a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024a513f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024a513f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024a51770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024a51900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024a51a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024a51c20"/>
        <function-ref name="get" scoped="" ref="0x7f4024a51db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024a50020"/>
        <function-ref name="set" scoped="" ref="0x7f4024a501b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024a50340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024a4e6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024a4e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024a4ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024a4ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024a4ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024a4d020"/>
        <function-ref name="get" scoped="" ref="0x7f4024a4d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024a4d340"/>
        <function-ref name="set" scoped="" ref="0x7f4024a4d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024a4d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024a4b9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024a4b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024a4bd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024a4a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024a4a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024a4a340"/>
        <function-ref name="get" scoped="" ref="0x7f4024a4a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024a4a660"/>
        <function-ref name="set" scoped="" ref="0x7f4024a4a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024a4a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024a48e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024a48e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024a471c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024a47350"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024a474e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024a47670"/>
        <function-ref name="get" scoped="" ref="0x7f4024a47800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024a47990"/>
        <function-ref name="set" scoped="" ref="0x7f4024a47b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4024a47cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024a440a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024a440a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024a44420"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024a445b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024a44740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024a448d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024a44a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024a44bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4024a44d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4024a43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024a413f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024a413f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024a41770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024a41900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024a41a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024a41c20"/>
        <function-ref name="get" scoped="" ref="0x7f4024a41db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024a40020"/>
        <function-ref name="set" scoped="" ref="0x7f4024a401b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024a40340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024a3e6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024a3e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024a3ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024a3ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024a3ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024a3d020"/>
        <function-ref name="get" scoped="" ref="0x7f4024a3d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024a3d340"/>
        <function-ref name="set" scoped="" ref="0x7f4024a3d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024a3d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024a329b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024a329b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024a32d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024a31020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024a311b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024a31340"/>
        <function-ref name="get" scoped="" ref="0x7f4024a314d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024a31660"/>
        <function-ref name="set" scoped="" ref="0x7f4024a317f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024a31980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4025732a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4025732a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025732e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025731020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257311b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025731340"/>
        <function-ref name="get" scoped="" ref="0x7f40257314d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025731660"/>
        <function-ref name="set" scoped="" ref="0x7f40257317f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025731980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f402572e020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f402572e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402572e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402572e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f402572e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402572e850"/>
        <function-ref name="get" scoped="" ref="0x7f402572e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402572eb70"/>
        <function-ref name="set" scoped="" ref="0x7f402572ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f402572d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f40257347a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f40257347a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025734b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025734cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025734e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025733020"/>
        <function-ref name="get" scoped="" ref="0x7f40257331b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025733340"/>
        <function-ref name="set" scoped="" ref="0x7f40257334d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025733660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f4025731c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f4025731c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025730020"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257301b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025730340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257304d0"/>
        <function-ref name="get" scoped="" ref="0x7f4025730660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257307f0"/>
        <function-ref name="set" scoped="" ref="0x7f4025730980"/>
        <function-ref name="clr" scoped="" ref="0x7f4025730b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f402572d2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f402572d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402572d630"/>
        <function-ref name="isInput" scoped="" ref="0x7f402572d7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402572d950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402572dae0"/>
        <function-ref name="get" scoped="" ref="0x7f402572dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402572de00"/>
        <function-ref name="set" scoped="" ref="0x7f402572c020"/>
        <function-ref name="clr" scoped="" ref="0x7f402572c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f40257338f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f40257338f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025733c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025733e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025732020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257321b0"/>
        <function-ref name="get" scoped="" ref="0x7f4025732340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257324d0"/>
        <function-ref name="set" scoped="" ref="0x7f4025732660"/>
        <function-ref name="clr" scoped="" ref="0x7f40257327f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4025730da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4025730da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402572f180"/>
        <function-ref name="isInput" scoped="" ref="0x7f402572f310"/>
        <function-ref name="toggle" scoped="" ref="0x7f402572f4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402572f630"/>
        <function-ref name="get" scoped="" ref="0x7f402572f7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402572f950"/>
        <function-ref name="set" scoped="" ref="0x7f402572fae0"/>
        <function-ref name="clr" scoped="" ref="0x7f402572fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f402572c440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f402572c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402572c7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402572c950"/>
        <function-ref name="toggle" scoped="" ref="0x7f402572cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402572cc70"/>
        <function-ref name="get" scoped="" ref="0x7f402572ce00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402572b020"/>
        <function-ref name="set" scoped="" ref="0x7f402572b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f402572b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40249dda60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40249dda60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40249ddde0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40249dc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40249dc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40249dc340"/>
        <function-ref name="get" scoped="" ref="0x7f40249dc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40249dc660"/>
        <function-ref name="set" scoped="" ref="0x7f40249dc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40249dc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40249dae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40249dae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40249d91c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40249d9350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40249d94e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40249d9670"/>
        <function-ref name="get" scoped="" ref="0x7f40249d9800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40249d9990"/>
        <function-ref name="set" scoped="" ref="0x7f40249d9b20"/>
        <function-ref name="clr" scoped="" ref="0x7f40249d9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40249d60a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40249d60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40249d6420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40249d65b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40249d6740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40249d68d0"/>
        <function-ref name="get" scoped="" ref="0x7f40249d6a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40249d6bf0"/>
        <function-ref name="set" scoped="" ref="0x7f40249d6d80"/>
        <function-ref name="clr" scoped="" ref="0x7f40249d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40249d33f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40249d33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40249d3770"/>
        <function-ref name="isInput" scoped="" ref="0x7f40249d3900"/>
        <function-ref name="toggle" scoped="" ref="0x7f40249d3a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40249d3c20"/>
        <function-ref name="get" scoped="" ref="0x7f40249d3db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40249d2020"/>
        <function-ref name="set" scoped="" ref="0x7f40249d21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40249d2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40249d06d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40249d06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40249d0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f40249d0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40249d0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40249cf020"/>
        <function-ref name="get" scoped="" ref="0x7f40249cf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40249cf340"/>
        <function-ref name="set" scoped="" ref="0x7f40249cf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40249cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40249cd9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40249cd9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40249cdd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f40249cc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40249cc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40249cc340"/>
        <function-ref name="get" scoped="" ref="0x7f40249cc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40249cc660"/>
        <function-ref name="set" scoped="" ref="0x7f40249cc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40249cc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40249cae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40249cae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40249c91c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40249c9350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40249c94e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40249c9670"/>
        <function-ref name="get" scoped="" ref="0x7f40249c9800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40249c9990"/>
        <function-ref name="set" scoped="" ref="0x7f40249c9b20"/>
        <function-ref name="clr" scoped="" ref="0x7f40249c9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40249c60a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40249c60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40249c6420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40249c65b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40249c6740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40249c68d0"/>
        <function-ref name="get" scoped="" ref="0x7f40249c6a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40249c6bf0"/>
        <function-ref name="set" scoped="" ref="0x7f40249c6d80"/>
        <function-ref name="clr" scoped="" ref="0x7f40249c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4025723da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4025723da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025722180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025722310"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257224a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025722630"/>
        <function-ref name="get" scoped="" ref="0x7f40257227c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025722950"/>
        <function-ref name="set" scoped="" ref="0x7f4025722ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025722c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f402571f440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f402571f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402571f7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402571f950"/>
        <function-ref name="toggle" scoped="" ref="0x7f402571fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402571fc70"/>
        <function-ref name="get" scoped="" ref="0x7f402571fe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402571e020"/>
        <function-ref name="set" scoped="" ref="0x7f402571e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f402571e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4025725a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4025725a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025725da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025724020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257241b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025724340"/>
        <function-ref name="get" scoped="" ref="0x7f40257244d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025724660"/>
        <function-ref name="set" scoped="" ref="0x7f40257247f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025724980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f4025721020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f4025721020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025721530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257216c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025721850"/>
        <function-ref name="get" scoped="" ref="0x7f40257219e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025721b70"/>
        <function-ref name="set" scoped="" ref="0x7f4025721d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4025720020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f402571e5d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f402571e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402571e950"/>
        <function-ref name="isInput" scoped="" ref="0x7f402571eae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402571ec70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402571ee00"/>
        <function-ref name="get" scoped="" ref="0x7f402571d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402571d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f402571d340"/>
        <function-ref name="clr" scoped="" ref="0x7f402571d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f4025724c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f4025724c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025723020"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257231b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025723340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257234d0"/>
        <function-ref name="get" scoped="" ref="0x7f4025723660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257237f0"/>
        <function-ref name="set" scoped="" ref="0x7f4025723980"/>
        <function-ref name="clr" scoped="" ref="0x7f4025723b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f40257202b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f40257202b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025720630"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257207c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025720950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025720ae0"/>
        <function-ref name="get" scoped="" ref="0x7f4025720c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025720e00"/>
        <function-ref name="set" scoped="" ref="0x7f402571f020"/>
        <function-ref name="clr" scoped="" ref="0x7f402571f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f402571d760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f402571d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402571dae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402571dc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f402571de00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402571b020"/>
        <function-ref name="get" scoped="" ref="0x7f402571b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402571b340"/>
        <function-ref name="set" scoped="" ref="0x7f402571b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f402571b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024972c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024972c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40249710a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024971230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40249713c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024971550"/>
        <function-ref name="get" scoped="" ref="0x7f40249716e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024971870"/>
        <function-ref name="set" scoped="" ref="0x7f4024971a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024971b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402496fe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402496fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402496e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402496e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f402496e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402496e670"/>
        <function-ref name="get" scoped="" ref="0x7f402496e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402496e990"/>
        <function-ref name="set" scoped="" ref="0x7f402496eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f402496ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402496b0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402496b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402496b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f402496b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402496b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402496b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f402496ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402496bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f402496bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f402496a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40249683f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40249683f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024968770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024968900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024968a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024968c20"/>
        <function-ref name="get" scoped="" ref="0x7f4024968db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024967020"/>
        <function-ref name="set" scoped="" ref="0x7f40249671b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024967340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40249656d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40249656d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024965a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024965be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024965d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024964020"/>
        <function-ref name="get" scoped="" ref="0x7f40249641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024964340"/>
        <function-ref name="set" scoped="" ref="0x7f40249644d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024964660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40249629b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40249629b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024962d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024961020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40249611b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024961340"/>
        <function-ref name="get" scoped="" ref="0x7f40249614d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024961660"/>
        <function-ref name="set" scoped="" ref="0x7f40249617f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024961980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402495fe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402495fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402495e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402495e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f402495e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402495e670"/>
        <function-ref name="get" scoped="" ref="0x7f402495e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402495e990"/>
        <function-ref name="set" scoped="" ref="0x7f402495eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f402495ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402495b0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402495b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402495b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f402495b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402495b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402495b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f402495ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402495bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f402495bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f402495a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4025713020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4025713020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257133a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025713530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257136c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025713850"/>
        <function-ref name="get" scoped="" ref="0x7f40257139e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025713b70"/>
        <function-ref name="set" scoped="" ref="0x7f4025713d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4025712020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f402570f5d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f402570f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402570f950"/>
        <function-ref name="isInput" scoped="" ref="0x7f402570fae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402570fc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402570fe00"/>
        <function-ref name="get" scoped="" ref="0x7f402570e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402570e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f402570e340"/>
        <function-ref name="clr" scoped="" ref="0x7f402570e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4025716d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4025716d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257150e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025715270"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025715400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025715590"/>
        <function-ref name="get" scoped="" ref="0x7f4025715720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257158b0"/>
        <function-ref name="set" scoped="" ref="0x7f4025715a40"/>
        <function-ref name="clr" scoped="" ref="0x7f4025715bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f40257122b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f40257122b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025712630"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257127c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025712950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025712ae0"/>
        <function-ref name="get" scoped="" ref="0x7f4025712c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025712e00"/>
        <function-ref name="set" scoped="" ref="0x7f4025711020"/>
        <function-ref name="clr" scoped="" ref="0x7f40257111b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f402570e760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f402570e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402570eae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402570ec70"/>
        <function-ref name="toggle" scoped="" ref="0x7f402570ee00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402570d020"/>
        <function-ref name="get" scoped="" ref="0x7f402570d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402570d340"/>
        <function-ref name="set" scoped="" ref="0x7f402570d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f402570d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f4025715e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f4025715e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025714210"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257143a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025714530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40257146c0"/>
        <function-ref name="get" scoped="" ref="0x7f4025714850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257149e0"/>
        <function-ref name="set" scoped="" ref="0x7f4025714b70"/>
        <function-ref name="clr" scoped="" ref="0x7f4025714d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4025711440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4025711440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257117c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025711950"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025711ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025711c70"/>
        <function-ref name="get" scoped="" ref="0x7f4025711e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402570f020"/>
        <function-ref name="set" scoped="" ref="0x7f402570f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f402570f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f402570d8f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f402570d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402570dc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f402570de00"/>
        <function-ref name="toggle" scoped="" ref="0x7f402570c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402570c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f402570c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402570c4d0"/>
        <function-ref name="set" scoped="" ref="0x7f402570c660"/>
        <function-ref name="clr" scoped="" ref="0x7f402570c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024907c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024907c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40249060a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024906230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40249063c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024906550"/>
        <function-ref name="get" scoped="" ref="0x7f40249066e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024906870"/>
        <function-ref name="set" scoped="" ref="0x7f4024906a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024906b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024904e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024904e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40249031c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024903350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40249034e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024903670"/>
        <function-ref name="get" scoped="" ref="0x7f4024903800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024903990"/>
        <function-ref name="set" scoped="" ref="0x7f4024903b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4024903cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40249000a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40249000a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024900420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40249005b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024900740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40249008d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024900a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024900bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4024900d80"/>
        <function-ref name="clr" scoped="" ref="0x7f40248ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40248fd3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40248fd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40248fd770"/>
        <function-ref name="isInput" scoped="" ref="0x7f40248fd900"/>
        <function-ref name="toggle" scoped="" ref="0x7f40248fda90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40248fdc20"/>
        <function-ref name="get" scoped="" ref="0x7f40248fddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40248fc020"/>
        <function-ref name="set" scoped="" ref="0x7f40248fc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40248fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40248fa6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40248fa6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40248faa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f40248fabe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40248fad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40248f9020"/>
        <function-ref name="get" scoped="" ref="0x7f40248f91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40248f9340"/>
        <function-ref name="set" scoped="" ref="0x7f40248f94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40248f9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40248f79b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40248f79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40248f7d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f40248f6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40248f61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40248f6340"/>
        <function-ref name="get" scoped="" ref="0x7f40248f64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40248f6660"/>
        <function-ref name="set" scoped="" ref="0x7f40248f67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40248f6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40248f4e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40248f4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40248f31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40248f3350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40248f34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40248f3670"/>
        <function-ref name="get" scoped="" ref="0x7f40248f3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40248f3990"/>
        <function-ref name="set" scoped="" ref="0x7f40248f3b20"/>
        <function-ref name="clr" scoped="" ref="0x7f40248f3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40248f00a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40248f00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40248f0420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40248f05b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40248f0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40248f08d0"/>
        <function-ref name="get" scoped="" ref="0x7f40248f0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40248f0bf0"/>
        <function-ref name="set" scoped="" ref="0x7f40248f0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f40248ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4025703440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4025703440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257037c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025703950"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025703ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025703c70"/>
        <function-ref name="get" scoped="" ref="0x7f4025703e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025702020"/>
        <function-ref name="set" scoped="" ref="0x7f40257021b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025702340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f40257008f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f40257008f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025700c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025700e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256ff020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256ff1b0"/>
        <function-ref name="get" scoped="" ref="0x7f40256ff340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256ff4d0"/>
        <function-ref name="set" scoped="" ref="0x7f40256ff660"/>
        <function-ref name="clr" scoped="" ref="0x7f40256ff7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4025706020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4025706020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40257063a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025706530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40257066c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025706850"/>
        <function-ref name="get" scoped="" ref="0x7f40257069e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025706b70"/>
        <function-ref name="set" scoped="" ref="0x7f4025706d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4025705020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f40257025d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f40257025d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025702950"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025702ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025702c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025702e00"/>
        <function-ref name="get" scoped="" ref="0x7f4025701020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40257011b0"/>
        <function-ref name="set" scoped="" ref="0x7f4025701340"/>
        <function-ref name="clr" scoped="" ref="0x7f40257014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f40256ffa80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f40256ffa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256ffe00"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256fe020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256fe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256fe340"/>
        <function-ref name="get" scoped="" ref="0x7f40256fe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256fe660"/>
        <function-ref name="set" scoped="" ref="0x7f40256fe7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40256fe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f40257052b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f40257052b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025705630"/>
        <function-ref name="isInput" scoped="" ref="0x7f40257057c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025705950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025705ae0"/>
        <function-ref name="get" scoped="" ref="0x7f4025705c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025705e00"/>
        <function-ref name="set" scoped="" ref="0x7f4025703020"/>
        <function-ref name="clr" scoped="" ref="0x7f40257031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4025701760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4025701760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025701ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025701c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025701e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025700020"/>
        <function-ref name="get" scoped="" ref="0x7f40257001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025700340"/>
        <function-ref name="set" scoped="" ref="0x7f40257004d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025700660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f40256fec10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f40256fec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256fd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256fd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256fd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256fd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f40256fd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256fd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f40256fd980"/>
        <function-ref name="clr" scoped="" ref="0x7f40256fdb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402489cc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402489cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402489b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402489b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f402489b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402489b550"/>
        <function-ref name="get" scoped="" ref="0x7f402489b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402489b870"/>
        <function-ref name="set" scoped="" ref="0x7f402489ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f402489bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024899e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024899e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40248981c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024898350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40248984e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024898670"/>
        <function-ref name="get" scoped="" ref="0x7f4024898800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024898990"/>
        <function-ref name="set" scoped="" ref="0x7f4024898b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4024898cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40248950a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40248950a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024895420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40248955b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024895740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40248958d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024895a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024895bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4024895d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4024894020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40248923f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40248923f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024892770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024892900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024892a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024892c20"/>
        <function-ref name="get" scoped="" ref="0x7f4024892db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024891020"/>
        <function-ref name="set" scoped="" ref="0x7f40248911b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024891340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402488f6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402488f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402488fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f402488fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402488fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402488e020"/>
        <function-ref name="get" scoped="" ref="0x7f402488e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402488e340"/>
        <function-ref name="set" scoped="" ref="0x7f402488e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f402488e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402488c9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402488c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402488cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f402488b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f402488b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402488b340"/>
        <function-ref name="get" scoped="" ref="0x7f402488b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402488b660"/>
        <function-ref name="set" scoped="" ref="0x7f402488b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f402488b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024889e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024889e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40248881c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024888350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40248884e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024888670"/>
        <function-ref name="get" scoped="" ref="0x7f4024888800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024888990"/>
        <function-ref name="set" scoped="" ref="0x7f4024888b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4024888cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40248850a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40248850a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024885420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40248855b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024885740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40248858d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024885a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024885bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4024885d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4024884020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f40256f4760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f40256f4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256f4ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256f4c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256f4e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256f3020"/>
        <function-ref name="get" scoped="" ref="0x7f40256f31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256f3340"/>
        <function-ref name="set" scoped="" ref="0x7f40256f34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40256f3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f40256f1c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f40256f1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256f0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256f01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256f0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256f04d0"/>
        <function-ref name="get" scoped="" ref="0x7f40256f0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256f07f0"/>
        <function-ref name="set" scoped="" ref="0x7f40256f0980"/>
        <function-ref name="clr" scoped="" ref="0x7f40256f0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f40256f63f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f40256f63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256f6770"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256f6900"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256f6a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256f6c20"/>
        <function-ref name="get" scoped="" ref="0x7f40256f6db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256f5020"/>
        <function-ref name="set" scoped="" ref="0x7f40256f51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40256f5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f40256f38f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f40256f38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256f3c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256f3e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256f2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256f21b0"/>
        <function-ref name="get" scoped="" ref="0x7f40256f2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256f24d0"/>
        <function-ref name="set" scoped="" ref="0x7f40256f2660"/>
        <function-ref name="clr" scoped="" ref="0x7f40256f27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f40256f0da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f40256f0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256ef180"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256ef310"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256ef4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256ef630"/>
        <function-ref name="get" scoped="" ref="0x7f40256ef7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256ef950"/>
        <function-ref name="set" scoped="" ref="0x7f40256efae0"/>
        <function-ref name="clr" scoped="" ref="0x7f40256efc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f40256f55d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f40256f55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256f5950"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256f5ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256f5c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256f5e00"/>
        <function-ref name="get" scoped="" ref="0x7f40256f4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256f41b0"/>
        <function-ref name="set" scoped="" ref="0x7f40256f4340"/>
        <function-ref name="clr" scoped="" ref="0x7f40256f44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f40256f2a80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f40256f2a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256f2e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256f1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256f11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256f1340"/>
        <function-ref name="get" scoped="" ref="0x7f40256f14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256f1660"/>
        <function-ref name="set" scoped="" ref="0x7f40256f17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40256f1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f40256ee020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f40256ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256ee3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256ee530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256ee6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256ee850"/>
        <function-ref name="get" scoped="" ref="0x7f40256ee9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256eeb70"/>
        <function-ref name="set" scoped="" ref="0x7f40256eed00"/>
        <function-ref name="clr" scoped="" ref="0x7f40256ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402482ec90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402482ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402482d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402482d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f402482d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402482d550"/>
        <function-ref name="get" scoped="" ref="0x7f402482d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402482d870"/>
        <function-ref name="set" scoped="" ref="0x7f402482da00"/>
        <function-ref name="clr" scoped="" ref="0x7f402482db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402482be20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402482be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402482a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402482a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f402482a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402482a670"/>
        <function-ref name="get" scoped="" ref="0x7f402482a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402482a990"/>
        <function-ref name="set" scoped="" ref="0x7f402482ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f402482acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40248270a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40248270a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024827420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40248275b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024827740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40248278d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024827a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024827bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4024827d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4024826020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40248243f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40248243f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024824770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024824900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024824a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024824c20"/>
        <function-ref name="get" scoped="" ref="0x7f4024824db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024823020"/>
        <function-ref name="set" scoped="" ref="0x7f40248231b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024823340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40248216d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40248216d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024821a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024821be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024821d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024820020"/>
        <function-ref name="get" scoped="" ref="0x7f40248201b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024820340"/>
        <function-ref name="set" scoped="" ref="0x7f40248204d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024820660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402481e9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402481e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402481ed30"/>
        <function-ref name="isInput" scoped="" ref="0x7f402481d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f402481d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402481d340"/>
        <function-ref name="get" scoped="" ref="0x7f402481d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402481d660"/>
        <function-ref name="set" scoped="" ref="0x7f402481d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f402481d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402481be20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402481be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402481a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402481a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f402481a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402481a670"/>
        <function-ref name="get" scoped="" ref="0x7f402481a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402481a990"/>
        <function-ref name="set" scoped="" ref="0x7f402481ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f402481acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40248170a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40248170a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024817420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40248175b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024817740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40248178d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024817a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024817bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4024817d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4024816020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40256e6a20" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40256e6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256e6da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256cf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256cf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256cf340"/>
        <function-ref name="get" scoped="" ref="0x7f40256cf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256cf660"/>
        <function-ref name="set" scoped="" ref="0x7f40256cf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40256cf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40256cb6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40256cb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256cba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256cbbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256cbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256ca020"/>
        <function-ref name="get" scoped="" ref="0x7f40256ca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256ca340"/>
        <function-ref name="set" scoped="" ref="0x7f40256ca4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40256ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40256c5160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40256c5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256c54e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256c5670"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256c5800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256c5990"/>
        <function-ref name="get" scoped="" ref="0x7f40256c5b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256c5cb0"/>
        <function-ref name="set" scoped="" ref="0x7f40256c5e40"/>
        <function-ref name="clr" scoped="" ref="0x7f40256c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40256c0c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40256c0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256bf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256bf230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256bf3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256bf550"/>
        <function-ref name="get" scoped="" ref="0x7f40256bf6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256bf870"/>
        <function-ref name="set" scoped="" ref="0x7f40256bfa00"/>
        <function-ref name="clr" scoped="" ref="0x7f40256bfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40256bb6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40256bb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256bba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256bbbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256bbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256ba020"/>
        <function-ref name="get" scoped="" ref="0x7f40256ba1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256ba340"/>
        <function-ref name="set" scoped="" ref="0x7f40256ba4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40256ba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40256b5160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40256b5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256b54e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256b5670"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256b5800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256b5990"/>
        <function-ref name="get" scoped="" ref="0x7f40256b5b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256b5cb0"/>
        <function-ref name="set" scoped="" ref="0x7f40256b5e40"/>
        <function-ref name="clr" scoped="" ref="0x7f40256b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40256b1c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40256b1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256af0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256af230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256af3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256af550"/>
        <function-ref name="get" scoped="" ref="0x7f40256af6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256af870"/>
        <function-ref name="set" scoped="" ref="0x7f40256afa00"/>
        <function-ref name="clr" scoped="" ref="0x7f40256afb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40256ab6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40256ab6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256aba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256abbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256abd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256aa020"/>
        <function-ref name="get" scoped="" ref="0x7f40256aa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256aa340"/>
        <function-ref name="set" scoped="" ref="0x7f40256aa4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40256aa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40256a5160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40256a5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256a54e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40256a5670"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256a5800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40256a5990"/>
        <function-ref name="get" scoped="" ref="0x7f40256a5b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40256a5cb0"/>
        <function-ref name="set" scoped="" ref="0x7f40256a5e40"/>
        <function-ref name="clr" scoped="" ref="0x7f40256a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40256a1c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40256a1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402569f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402569f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f402569f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402569f550"/>
        <function-ref name="get" scoped="" ref="0x7f402569f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402569f870"/>
        <function-ref name="set" scoped="" ref="0x7f402569fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f402569fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402569b6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402569b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402569ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f402569bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402569bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402569a020"/>
        <function-ref name="get" scoped="" ref="0x7f402569a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402569a340"/>
        <function-ref name="set" scoped="" ref="0x7f402569a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f402569a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4025695160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4025695160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256954e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025695670"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025695800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025695990"/>
        <function-ref name="get" scoped="" ref="0x7f4025695b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025695cb0"/>
        <function-ref name="set" scoped="" ref="0x7f4025695e40"/>
        <function-ref name="clr" scoped="" ref="0x7f4025694020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4025691c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4025691c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40256900a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025690230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40256903c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025690550"/>
        <function-ref name="get" scoped="" ref="0x7f40256906e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025690870"/>
        <function-ref name="set" scoped="" ref="0x7f4025690a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4025690b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402568b6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402568b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402568ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f402568bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402568bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402568a020"/>
        <function-ref name="get" scoped="" ref="0x7f402568a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402568a340"/>
        <function-ref name="set" scoped="" ref="0x7f402568a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f402568a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f402563e370" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f402563e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f402563e6f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f402563e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f4025655020" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f4025655020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f40256553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4025659820" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4025659820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025659ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f402564c8b0" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f402564c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f402564cc30"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f402564cdc0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f4025654020"/>
        <function-ref name="write" scoped="" ref="0x7f40256541b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f402564f1d0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f402564f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f402564f550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f402564f6e0"/>
        <function-ref name="request" scoped="" ref="0x7f402564f870"/>
        <function-ref name="granted" scoped="" ref="0x7f402564fa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f402564fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiControl" ref="0x7f4025652980" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiControl" scoped="" ref="0x7f4025652980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setClock" scoped="" ref="0x7f4025652d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f4025617ba0" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f4025617ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f402561a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f40255f4190" loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f40255f4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40255f4510"/>
        <function-ref name="runTask" scoped="" ref="0x7f40255f46a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f402563bb00" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f402563bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f402563be80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f402563a030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f402561cda0" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f402561cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f402561b180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f402561b310"/>
        <function-ref name="request" scoped="" ref="0x7f402561b4a0"/>
        <function-ref name="granted" scoped="" ref="0x7f402561b630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f402561b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f402563c900" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f402563c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f402563cc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f402564bc10" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f402564bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f402563c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f402561da40" loc="102:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f402561da40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f402561ddc0"/>
        <function-ref name="sleep" scoped="" ref="0x7f402561c340"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f40256371b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f402561c4d0"/>
        <function-ref name="initMaster" scoped="" ref="0x7f40256374d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f4025637660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f40256377f0"/>
        <function-ref name="read" scoped="" ref="0x7f4025637980"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f4025637b10"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f4025637ca0"/>
        <function-ref name="setClock" scoped="" ref="0x7f4025637e30"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f4025636020"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f40256361b0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f4025636440"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f40256365d0"/>
        <function-ref name="write" scoped="" ref="0x7f4025636760"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f40256368f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f4025636a80"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f4025636c10"/>
        <function-ref name="getClock" scoped="" ref="0x7f4025636da0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f402561c020"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f4025637020"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f4025637340"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f402561c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f402563b020" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f402563b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f402563b3a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f402563b530"/>
        <function-ref name="splitRead" scoped="" ref="0x7f402563b6c0"/>
        <function-ref name="write" scoped="" ref="0x7f402563b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f402563a820" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f402563a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f402563aba0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f402563ad30"/>
        <function-ref name="request" scoped="" ref="0x7f4025639020"/>
        <function-ref name="granted" scoped="" ref="0x7f40256391b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4025639340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f40256173b0" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40256173b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4025617730"/>
        <function-ref name="userId" scoped="" ref="0x7f40256178c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiControl" ref="0x7f402563c2e0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiControl" scoped="" ref="0x7f402563c2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setClock" scoped="" ref="0x7f402563c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f40255ca4f0" loc="76:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f40255ca4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f40255ca870"/>
        <function-ref name="sleep" scoped="" ref="0x7f40255c6e30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f40255cab90"/>
        <function-ref name="dataReady" scoped="" ref="0x7f40255c5020"/>
        <function-ref name="initMaster" scoped="" ref="0x7f40255c7020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f40255c71b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f40255c7340"/>
        <function-ref name="read" scoped="" ref="0x7f40255c74d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f40255c7660"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f40255c77f0"/>
        <function-ref name="setClock" scoped="" ref="0x7f40255c7980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40255c7b10"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f40255c7ca0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f40255c6020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f40255c61b0"/>
        <function-ref name="write" scoped="" ref="0x7f40255c6340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f40255c64d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f40255c6660"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f40255c67f0"/>
        <function-ref name="getClock" scoped="" ref="0x7f40255c6980"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f40255c6b10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f40255caa00"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f40255cad20"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f40255c6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f40255baca0" loc="81:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f40255baca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40255b90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40255b9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40255b93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40255b9550"/>
        <function-ref name="get" scoped="" ref="0x7f40255b96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40255b9870"/>
        <function-ref name="set" scoped="" ref="0x7f40255b9a00"/>
        <function-ref name="clr" scoped="" ref="0x7f40255b9b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f40255bd7e0" loc="79:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f40255bd7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40255bdb60"/>
        <function-ref name="isInput" scoped="" ref="0x7f40255bdcf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40255bde80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40255bb030"/>
        <function-ref name="get" scoped="" ref="0x7f40255bb1c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40255bb350"/>
        <function-ref name="set" scoped="" ref="0x7f40255bb4e0"/>
        <function-ref name="clr" scoped="" ref="0x7f40255bb670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f40255be5a0" loc="78:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f40255be5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40255be920"/>
        <function-ref name="isInput" scoped="" ref="0x7f40255beab0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40255bec40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40255bedd0"/>
        <function-ref name="get" scoped="" ref="0x7f40255bd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40255bd1b0"/>
        <function-ref name="set" scoped="" ref="0x7f40255bd340"/>
        <function-ref name="clr" scoped="" ref="0x7f40255bd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f40255bcc90" loc="75:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f40255bcc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f40255be0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f40255be230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f40255b8020" loc="82:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f40255b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f40255b83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f40255c24e0" loc="74:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f40255c24e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f40255c2860"/>
        <function-ref name="sleep" scoped="" ref="0x7f40255c0e30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f40255c2b80"/>
        <function-ref name="dataReady" scoped="" ref="0x7f40255bf020"/>
        <function-ref name="initMaster" scoped="" ref="0x7f40255c1020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f40255c11b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f40255c1340"/>
        <function-ref name="read" scoped="" ref="0x7f40255c14d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f40255c1660"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f40255c17f0"/>
        <function-ref name="setClock" scoped="" ref="0x7f40255c1980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40255c1b10"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f40255c1ca0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f40255c0020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f40255c01b0"/>
        <function-ref name="write" scoped="" ref="0x7f40255c0340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f40255c04d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f40255c0660"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f40255c07f0"/>
        <function-ref name="getClock" scoped="" ref="0x7f40255c0980"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f40255c0b10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f40255c29f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f40255c2d10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f40255c0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f40255bb990" loc="80:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f40255bb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40255bbd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f40255ba020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40255ba1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40255ba340"/>
        <function-ref name="get" scoped="" ref="0x7f40255ba4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40255ba660"/>
        <function-ref name="set" scoped="" ref="0x7f40255ba7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40255ba980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f402550f150" loc="86:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f402550f150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f402550f4f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f402550f680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f402550d1f0" loc="89:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f402550d1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f402550d590"/>
        <function-ref name="configure" scoped="" ref="0x7f402550d720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4025510390" loc="85:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4025510390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4025510730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40255108c0"/>
        <function-ref name="request" scoped="" ref="0x7f4025510a50"/>
        <function-ref name="granted" scoped="" ref="0x7f4025510be0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4025510d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f402550f8d0" loc="87:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f402550f8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f402550fc50"/>
        <function-ref name="userId" scoped="" ref="0x7f402550fde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40247476b0" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f40247476b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4024747a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f4024747cc0" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f4024747cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f40247460a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4024746230"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f40247463c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4024746550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f40247439e0" loc="52:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f40247439e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4024743d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4024742020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4024742b60" loc="56:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024742b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4024741020"/>
        <function-ref name="configure" scoped="" ref="0x7f40247411b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f4024741440" loc="57:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f4024741440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f40247417c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4024741950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4024741ae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4024741c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4024745c30" loc="51:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4024745c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4024743020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40247431b0"/>
        <function-ref name="request" scoped="" ref="0x7f4024743340"/>
        <function-ref name="granted" scoped="" ref="0x7f40247434d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4024743660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4024742270" loc="53:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4024742270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f40247425f0"/>
        <function-ref name="userId" scoped="" ref="0x7f4024742780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f4024740020" loc="68:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f4024740020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40247403a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4024740530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f40254fe850" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f40254fe850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40254febd0"/>
        <function-ref name="fired" scoped="" ref="0x7f40254fed60"/>
        <function-ref name="disable" scoped="" ref="0x7f40254fd020"/>
        <function-ref name="edge" scoped="" ref="0x7f40254fd1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f40254fd340"/>
        <function-ref name="getValue" scoped="" ref="0x7f40254fd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f4025503850" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f4025503850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4025503bd0"/>
        <function-ref name="fired" scoped="" ref="0x7f4025503d60"/>
        <function-ref name="disable" scoped="" ref="0x7f4025502020"/>
        <function-ref name="edge" scoped="" ref="0x7f40255021b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4025502340"/>
        <function-ref name="getValue" scoped="" ref="0x7f40255024d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f4025500850" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f4025500850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4025500bd0"/>
        <function-ref name="fired" scoped="" ref="0x7f4025500d60"/>
        <function-ref name="disable" scoped="" ref="0x7f40254ff020"/>
        <function-ref name="edge" scoped="" ref="0x7f40254ff1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f40254ff340"/>
        <function-ref name="getValue" scoped="" ref="0x7f40254ff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f40254fd850" loc="52:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f40254fd850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40254fdbd0"/>
        <function-ref name="fired" scoped="" ref="0x7f40254fdd60"/>
        <function-ref name="disable" scoped="" ref="0x7f40254fc020"/>
        <function-ref name="edge" scoped="" ref="0x7f40254fc1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f40254fc340"/>
        <function-ref name="getValue" scoped="" ref="0x7f40254fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f4025502850" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f4025502850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4025502bd0"/>
        <function-ref name="fired" scoped="" ref="0x7f4025502d60"/>
        <function-ref name="disable" scoped="" ref="0x7f4025501020"/>
        <function-ref name="edge" scoped="" ref="0x7f40255011b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4025501340"/>
        <function-ref name="getValue" scoped="" ref="0x7f40255014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f40254ff850" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f40254ff850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40254ffbd0"/>
        <function-ref name="fired" scoped="" ref="0x7f40254ffd60"/>
        <function-ref name="disable" scoped="" ref="0x7f40254fe020"/>
        <function-ref name="edge" scoped="" ref="0x7f40254fe1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f40254fe340"/>
        <function-ref name="getValue" scoped="" ref="0x7f40254fe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f40255067f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f40255067f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4025506b70"/>
        <function-ref name="fired" scoped="" ref="0x7f4025506d00"/>
        <function-ref name="disable" scoped="" ref="0x7f4025503020"/>
        <function-ref name="edge" scoped="" ref="0x7f40255031b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4025503340"/>
        <function-ref name="getValue" scoped="" ref="0x7f40255034d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f4025501850" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f4025501850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4025501bd0"/>
        <function-ref name="fired" scoped="" ref="0x7f4025501d60"/>
        <function-ref name="disable" scoped="" ref="0x7f4025500020"/>
        <function-ref name="edge" scoped="" ref="0x7f40255001b0"/>
        <function-ref name="enable" scoped="" ref="0x7f4025500340"/>
        <function-ref name="getValue" scoped="" ref="0x7f40255004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f40254f57a0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f40254f57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254f5b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f40254f8020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f40254f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f40254f77a0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f40254f77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254f7b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f40254f4020" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f40254f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254f43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f40254f87a0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f40254f87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254f8b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f40254f5020" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f40254f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254f53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f40254f6710" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f40254f6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254f6a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f40254f7020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f40254f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254f73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f40254d7060" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f40254d7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40254d73e0"/>
        <function-ref name="fired" scoped="" ref="0x7f40254d7570"/>
        <function-ref name="disable" scoped="" ref="0x7f40254d7700"/>
        <function-ref name="edge" scoped="" ref="0x7f40254d7890"/>
        <function-ref name="enable" scoped="" ref="0x7f40254d7a20"/>
        <function-ref name="getValue" scoped="" ref="0x7f40254d7bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f40254d7e80" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f40254d7e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254c2220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f40254c0da0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f40254c0da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40254bf180"/>
        <function-ref name="fired" scoped="" ref="0x7f40254bf310"/>
        <function-ref name="disable" scoped="" ref="0x7f40254bf4a0"/>
        <function-ref name="edge" scoped="" ref="0x7f40254bf630"/>
        <function-ref name="enable" scoped="" ref="0x7f40254bf7c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f40254bf950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f40254bfc20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f40254bfc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f40254bbc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f40254bbc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40254ba0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f40254ba230"/>
        <function-ref name="disable" scoped="" ref="0x7f40254ba3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f40254ba550"/>
        <function-ref name="enable" scoped="" ref="0x7f40254ba6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f40254ba870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f40254bab40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f40254bab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f40254b7c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f40254b7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40254b60a0"/>
        <function-ref name="fired" scoped="" ref="0x7f40254b6230"/>
        <function-ref name="disable" scoped="" ref="0x7f40254b63c0"/>
        <function-ref name="edge" scoped="" ref="0x7f40254b6550"/>
        <function-ref name="enable" scoped="" ref="0x7f40254b66e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f40254b6870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f40254b6b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f40254b6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f40254b3c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f40254b3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40254b10a0"/>
        <function-ref name="fired" scoped="" ref="0x7f40254b1230"/>
        <function-ref name="disable" scoped="" ref="0x7f40254b13c0"/>
        <function-ref name="edge" scoped="" ref="0x7f40254b1550"/>
        <function-ref name="enable" scoped="" ref="0x7f40254b16e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f40254b1870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f40254b1b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f40254b1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f40254aec90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f40254aec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40254ad0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f40254ad230"/>
        <function-ref name="disable" scoped="" ref="0x7f40254ad3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f40254ad550"/>
        <function-ref name="enable" scoped="" ref="0x7f40254ad6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f40254ad870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f40254adb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f40254adb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f40254aac90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f40254aac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40254a90a0"/>
        <function-ref name="fired" scoped="" ref="0x7f40254a9230"/>
        <function-ref name="disable" scoped="" ref="0x7f40254a93c0"/>
        <function-ref name="edge" scoped="" ref="0x7f40254a9550"/>
        <function-ref name="enable" scoped="" ref="0x7f40254a96e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f40254a9870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f40254a9b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f40254a9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f40254a5c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f40254a5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f40254a40a0"/>
        <function-ref name="fired" scoped="" ref="0x7f40254a4230"/>
        <function-ref name="disable" scoped="" ref="0x7f40254a43c0"/>
        <function-ref name="edge" scoped="" ref="0x7f40254a4550"/>
        <function-ref name="enable" scoped="" ref="0x7f40254a46e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f40254a4870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f40254a4b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f40254a4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f40254a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpSend" ref="0x7f40254931f0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <component-ref qname="DatabaseC.UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f40254931f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025493570"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025493700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f4025493990" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <component-ref qname="DatabaseC.UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f4025493990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f4025493d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f402548f710" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <component-ref qname="UdpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f402548f710"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025cd6770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f4025cd6da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f402548e390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f402548e8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f402548c330" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <component-ref qname="UdpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f402548c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f402548c6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f402548b9d0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="UdpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f402548b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f402548bd50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f402548a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7f402548a2b0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="UdpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f402548a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f402548a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7f40246d4380" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="UdpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f40246d4380"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40246d4700"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40246d4890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpQueue" ref="0x7f40246d4b20" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="UdpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7f40246d4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40246d3020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40246d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7f4025489b70" loc="15:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f4025489b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025cd6770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f4025cd6da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025486790"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025486ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpSend" ref="0x7f4025485d80" loc="17:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7f4025485d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025483180"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025483310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpPacket" ref="0x7f40254824a0" loc="20:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7f40254824a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7f4025482820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7f4025485730" loc="16:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7f4025485730"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f4025485ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpSend" ref="0x7f4025483c70" loc="19:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f4025483c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025482020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40254821b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpReceive" ref="0x7f4025483600" loc="18:UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7f4025483600"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f4025483980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7f4025487630" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="UdpTransceiverC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7f4025487630"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7f40254879b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f4025488e60" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="UdpTransceiverC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f4025488e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025487210"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40254873a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpQueue" ref="0x7f40246cb5e0" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="UdpTransceiverC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7f40246cb5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40246cb960"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40246cbaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7f40246cce20" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="UdpTransceiverC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7f40246cce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40246cb1c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40246cb350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpSend" ref="0x7f40246da0e0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <component-ref qname="DatabaseC.UdpC.UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7f40246da0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40246da460"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40246da5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpQueue" ref="0x7f40246da880" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <component-ref qname="DatabaseC.UdpC.UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f40246da880"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40246dac00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40246dad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpQueue" ref="0x7f40254581d0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <component-ref qname="UdpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f40254581d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025458550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40254586e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f4025453620" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="UdpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f4025453620"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f402606a3a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025cd6770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f4025cd6da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f4025452390"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40254528a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f4025456790" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="UdpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f4025456790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025cd6770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f4025cd6da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40254558c0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f40254553b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f4025455d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7f40246bedd0" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7f40246bedd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025cd6770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f4025cd6da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40246bda80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40246bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7f40246bf0b0" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f40246bf0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025cd6770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f4025cd6da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f40246be220"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f40246bfca0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f40246be6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7f40246bb4e0" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7f40246bb4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40246bb860"/>
        <function-ref name="runTask" scoped="" ref="0x7f40246bb9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7f402544ebb0" loc="13:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <component-ref qname="UdpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7f402544ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7f4025cd6770"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7f4025cd6da0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f402544dcf0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7f402544d7e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f402544b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpQueue" ref="0x7f402544e1d0" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <component-ref qname="UdpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7f402544e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f402544e550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f402544e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f402543ce40" loc="14:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f402543ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40254391e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f4025439480" loc="15:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f4025439480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f40254384d0"/>
        <function-ref name="initDone" scoped="" ref="0x7f4025439990"/>
        <function-ref name="setVolume" scoped="" ref="0x7f4025439b20"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f4025439cb0"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f4025439e40"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f4025438020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f40254381b0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f4025438340"/>
        <function-ref name="seek" scoped="" ref="0x7f4025439800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seek" ref="0x7f40254073c0" loc="174:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seek" scoped="" ref="0x7f40254073c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025407840"/>
        <function-ref name="runTask" scoped="" ref="0x7f40254079d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeI2C" ref="0x7f40254015d0" loc="179:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeI2C" scoped="" ref="0x7f40254015d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025401950"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025401ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDIOPin" ref="0x7f402541bcc0" loc="27:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SDIOPin" scoped="" ref="0x7f402541bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402541a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402541a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f402541a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402541a550"/>
        <function-ref name="get" scoped="" ref="0x7f402541a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402541a870"/>
        <function-ref name="set" scoped="" ref="0x7f402541aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f402541ab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="INTPin" ref="0x7f4025419020" loc="28:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="INTPin" scoped="" ref="0x7f4025419020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40254193a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025419530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40254196c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025419850"/>
        <function-ref name="get" scoped="" ref="0x7f40254199e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025419b70"/>
        <function-ref name="set" scoped="" ref="0x7f4025419d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4025418020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Int" ref="0x7f4025434c00" loc="22:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int" scoped="" ref="0x7f4025434c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4025433020"/>
        <function-ref name="fired" scoped="" ref="0x7f40254331b0"/>
        <function-ref name="disable" scoped="" ref="0x7f4025433340"/>
        <function-ref name="edge" scoped="" ref="0x7f40254334d0"/>
        <function-ref name="enable" scoped="" ref="0x7f4025433660"/>
        <function-ref name="getValue" scoped="" ref="0x7f40254337f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f40254237d0" loc="24:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f40254237d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f402542f400"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f402542f6c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4025431440"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4025422930"/>
        <function-ref name="write" scoped="" ref="0x7f4025424090"/>
        <function-ref name="readDone" scoped="" ref="0x7f4025424ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="registerWriteback" ref="0x7f40253ff500" loc="180:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="registerWriteback" scoped="" ref="0x7f40253ff500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40253ff880"/>
        <function-ref name="runTask" scoped="" ref="0x7f40253ffa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readRegisters" ref="0x7f40254042b0" loc="176:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readRegisters" scoped="" ref="0x7f40254042b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025404630"/>
        <function-ref name="runTask" scoped="" ref="0x7f40254047c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7f40254096a0" loc="172:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init" scoped="" ref="0x7f40254096a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025409a20"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025409bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="decodeRDS" ref="0x7f40254053c0" loc="175:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="decodeRDS" scoped="" ref="0x7f40254053c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025405740"/>
        <function-ref name="runTask" scoped="" ref="0x7f40254058d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeRegisters" ref="0x7f40254026a0" loc="178:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeRegisters" scoped="" ref="0x7f40254026a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025402a20"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025402bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40254350c0" loc="17:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f40254350c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025435440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f4025433b50" loc="23:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f4025433b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4025432020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40254321b0"/>
        <function-ref name="request" scoped="" ref="0x7f4025432340"/>
        <function-ref name="granted" scoped="" ref="0x7f40254324d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4025432660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTPin" ref="0x7f402541ca60" loc="26:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTPin" scoped="" ref="0x7f402541ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402541cde0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402541b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f402541b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402541b340"/>
        <function-ref name="get" scoped="" ref="0x7f402541b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402541b660"/>
        <function-ref name="set" scoped="" ref="0x7f402541b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f402541b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f40254356e0" loc="18:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f40254356e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f40254347f0"/>
        <function-ref name="initDone" scoped="" ref="0x7f4025435bf0"/>
        <function-ref name="setVolume" scoped="" ref="0x7f4025435d80"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f4025434020"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f40254341b0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f4025434340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f40254344d0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f4025434660"/>
        <function-ref name="seek" scoped="" ref="0x7f4025435a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f40254182a0" loc="29:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f40254182a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f4025417340"/>
        <function-ref name="drawRect" scoped="" ref="0x7f40254187b0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f4025418940"/>
        <function-ref name="setPixel" scoped="" ref="0x7f4025418ad0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f4025418c60"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f4025418df0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f4025417020"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f4025418620"/>
        <function-ref name="drawText" scoped="" ref="0x7f40254171b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readI2C" ref="0x7f40254032a0" loc="177:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readI2C" scoped="" ref="0x7f40254032a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025403620"/>
        <function-ref name="runTask" scoped="" ref="0x7f40254037b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f40254216d0" loc="25:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f40254216d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f402541dc40"/>
        <function-ref name="fired" scoped="" ref="0x7f402541e1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f402541d020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f402541eae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f402541c590"/>
        <function-ref name="gett0" scoped="" ref="0x7f402541c110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f402541e660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4025420390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f402541d630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4025420860"/>
        <function-ref name="stop" scoped="" ref="0x7f4025420d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune" ref="0x7f4025408530" loc="173:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune" scoped="" ref="0x7f4025408530"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f40254088b0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025408a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f40253383a0" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <component-ref qname="GlcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f40253383a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f40253354d0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f40253388b0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f4025338a40"/>
        <function-ref name="setPixel" scoped="" ref="0x7f4025338bd0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f4025338d60"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f4025335020"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f40253351b0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f4025338720"/>
        <function-ref name="drawText" scoped="" ref="0x7f4025335340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4025302150" loc="44:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4025302150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f40253024d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hpl" ref="0x7f40252fb7f0" loc="45:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hpl" scoped="" ref="0x7f40252fb7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f40252fbb70"/>
        <function-ref name="init" scoped="" ref="0x7f40252fbd00"/>
        <function-ref name="dataRead" scoped="" ref="0x7f4025301020"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f40253011b0"/>
        <function-ref name="controlRead" scoped="" ref="0x7f4025301340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f4025304e10" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f4025304e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f4025303e40"/>
        <function-ref name="drawRect" scoped="" ref="0x7f4025303350"/>
        <function-ref name="drawLine" scoped="" ref="0x7f40253034e0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f4025303670"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f4025303800"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f4025303990"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f4025303b20"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f40253031c0"/>
        <function-ref name="drawText" scoped="" ref="0x7f4025303cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f4025334640" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <component-ref qname="HplKS0108C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f4025334640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f40253349c0"/>
        <function-ref name="init" scoped="" ref="0x7f4025334b50"/>
        <function-ref name="dataRead" scoped="" ref="0x7f4025334ce0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f4025334e70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f402528c030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EN" ref="0x7f4025284690" loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EN" scoped="" ref="0x7f4025284690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025284a10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025284ba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025284d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025283020"/>
        <function-ref name="get" scoped="" ref="0x7f40252831b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025283340"/>
        <function-ref name="set" scoped="" ref="0x7f40252834d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025283660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f4025280200" loc="34:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f4025280200"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb25c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4025fb2930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4025278090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_0" ref="0x7f40252899c0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_0" scoped="" ref="0x7f40252899c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025289d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025288020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40252881b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025288340"/>
        <function-ref name="get" scoped="" ref="0x7f40252884d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025288660"/>
        <function-ref name="set" scoped="" ref="0x7f40252887f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025288980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RST" ref="0x7f40252839b0" loc="30:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RST" scoped="" ref="0x7f40252839b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025283d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025282020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40252821b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025282340"/>
        <function-ref name="get" scoped="" ref="0x7f40252824d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025282660"/>
        <function-ref name="set" scoped="" ref="0x7f40252827f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025282980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RS" ref="0x7f4025286020" loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RS" scoped="" ref="0x7f4025286020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40252863a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025286530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40252866c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025286850"/>
        <function-ref name="get" scoped="" ref="0x7f40252869e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025286b70"/>
        <function-ref name="set" scoped="" ref="0x7f4025286d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4025285020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_1" ref="0x7f4025288ce0" loc="26:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_1" scoped="" ref="0x7f4025288ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40252870a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025287230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40252873c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025287550"/>
        <function-ref name="get" scoped="" ref="0x7f40252876e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025287870"/>
        <function-ref name="set" scoped="" ref="0x7f4025287a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4025287b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f402528cbe0" loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f402528cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f4025289020"/>
        <function-ref name="init" scoped="" ref="0x7f40252891b0"/>
        <function-ref name="dataRead" scoped="" ref="0x7f4025289340"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f40252894d0"/>
        <function-ref name="controlRead" scoped="" ref="0x7f4025289660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RW" ref="0x7f4025285370" loc="28:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RW" scoped="" ref="0x7f4025285370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40252856f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025285880"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025285a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025285ba0"/>
        <function-ref name="get" scoped="" ref="0x7f4025285d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025284020"/>
        <function-ref name="set" scoped="" ref="0x7f40252841b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4025284340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Data" ref="0x7f4025279410" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Data" scoped="" ref="0x7f4025279410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025279790"/>
        <function-ref name="clear" scoped="" ref="0x7f4025279920"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025279ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025279c40"/>
        <function-ref name="read" scoped="" ref="0x7f4025279dd0"/>
        <function-ref name="write" scoped="" ref="0x7f4025281020"/>
        <function-ref name="set" scoped="" ref="0x7f40252811b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA" ref="0x7f402524f3a0" loc="7:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA" scoped="" ref="0x7f402524f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402524f720"/>
        <function-ref name="clear" scoped="" ref="0x7f402524f8b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402524fa40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402524fbd0"/>
        <function-ref name="read" scoped="" ref="0x7f402524fd60"/>
        <function-ref name="write" scoped="" ref="0x7f402524e020"/>
        <function-ref name="set" scoped="" ref="0x7f402524e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL" ref="0x7f4025244100" loc="18:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL" scoped="" ref="0x7f4025244100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025244480"/>
        <function-ref name="clear" scoped="" ref="0x7f4025244610"/>
        <function-ref name="toggle" scoped="" ref="0x7f40252447a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025244930"/>
        <function-ref name="read" scoped="" ref="0x7f4025244ac0"/>
        <function-ref name="write" scoped="" ref="0x7f4025244c50"/>
        <function-ref name="set" scoped="" ref="0x7f4025244de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD" ref="0x7f402524c870" loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD" scoped="" ref="0x7f402524c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402524cbf0"/>
        <function-ref name="clear" scoped="" ref="0x7f402524cd80"/>
        <function-ref name="toggle" scoped="" ref="0x7f402524b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402524b1b0"/>
        <function-ref name="read" scoped="" ref="0x7f402524b340"/>
        <function-ref name="write" scoped="" ref="0x7f402524b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f402524b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG" ref="0x7f4025249d20" loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG" scoped="" ref="0x7f4025249d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40252480e0"/>
        <function-ref name="clear" scoped="" ref="0x7f4025248270"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025248400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025248590"/>
        <function-ref name="read" scoped="" ref="0x7f4025248720"/>
        <function-ref name="write" scoped="" ref="0x7f40252488b0"/>
        <function-ref name="set" scoped="" ref="0x7f4025248a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ" ref="0x7f4025247e80" loc="16:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ" scoped="" ref="0x7f4025247e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025246220"/>
        <function-ref name="clear" scoped="" ref="0x7f40252463b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025246540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40252466d0"/>
        <function-ref name="read" scoped="" ref="0x7f4025246860"/>
        <function-ref name="write" scoped="" ref="0x7f40252469f0"/>
        <function-ref name="set" scoped="" ref="0x7f4025246b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB" ref="0x7f402524e550" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB" scoped="" ref="0x7f402524e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402524e8d0"/>
        <function-ref name="clear" scoped="" ref="0x7f402524ea60"/>
        <function-ref name="toggle" scoped="" ref="0x7f402524ebf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402524ed80"/>
        <function-ref name="read" scoped="" ref="0x7f402524d020"/>
        <function-ref name="write" scoped="" ref="0x7f402524d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f402524d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE" ref="0x7f402524ba00" loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE" scoped="" ref="0x7f402524ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402524bd80"/>
        <function-ref name="clear" scoped="" ref="0x7f402524a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f402524a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402524a340"/>
        <function-ref name="read" scoped="" ref="0x7f402524a4d0"/>
        <function-ref name="write" scoped="" ref="0x7f402524a660"/>
        <function-ref name="set" scoped="" ref="0x7f402524a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH" ref="0x7f4025248de0" loc="15:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH" scoped="" ref="0x7f4025248de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025247180"/>
        <function-ref name="clear" scoped="" ref="0x7f4025247310"/>
        <function-ref name="toggle" scoped="" ref="0x7f40252474a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025247630"/>
        <function-ref name="read" scoped="" ref="0x7f40252477c0"/>
        <function-ref name="write" scoped="" ref="0x7f4025247950"/>
        <function-ref name="set" scoped="" ref="0x7f4025247ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK" ref="0x7f4025245020" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK" scoped="" ref="0x7f4025245020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40252453a0"/>
        <function-ref name="clear" scoped="" ref="0x7f4025245530"/>
        <function-ref name="toggle" scoped="" ref="0x7f40252456c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025245850"/>
        <function-ref name="read" scoped="" ref="0x7f40252459e0"/>
        <function-ref name="write" scoped="" ref="0x7f4025245b70"/>
        <function-ref name="set" scoped="" ref="0x7f4025245d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC" ref="0x7f402524d6e0" loc="9:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC" scoped="" ref="0x7f402524d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402524da60"/>
        <function-ref name="clear" scoped="" ref="0x7f402524dbf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402524dd80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402524c020"/>
        <function-ref name="read" scoped="" ref="0x7f402524c1b0"/>
        <function-ref name="write" scoped="" ref="0x7f402524c340"/>
        <function-ref name="set" scoped="" ref="0x7f402524c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF" ref="0x7f402524ab90" loc="12:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF" scoped="" ref="0x7f402524ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025249020"/>
        <function-ref name="clear" scoped="" ref="0x7f40252491b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025249340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40252494d0"/>
        <function-ref name="read" scoped="" ref="0x7f4025249660"/>
        <function-ref name="write" scoped="" ref="0x7f40252497f0"/>
        <function-ref name="set" scoped="" ref="0x7f4025249980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f402523f390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortAP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f402523f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402523f710"/>
        <function-ref name="clear" scoped="" ref="0x7f402523f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402523fa30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402523fbc0"/>
        <function-ref name="read" scoped="" ref="0x7f402523fd50"/>
        <function-ref name="write" scoped="" ref="0x7f402522a020"/>
        <function-ref name="set" scoped="" ref="0x7f402522a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f4025227910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortBP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f4025227910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025227c90"/>
        <function-ref name="clear" scoped="" ref="0x7f4025227e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025226020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40252261b0"/>
        <function-ref name="read" scoped="" ref="0x7f4025226340"/>
        <function-ref name="write" scoped="" ref="0x7f40252264d0"/>
        <function-ref name="set" scoped="" ref="0x7f4025226660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f4025222cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f4025222cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40252210a0"/>
        <function-ref name="clear" scoped="" ref="0x7f4025221230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40252213c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025221550"/>
        <function-ref name="read" scoped="" ref="0x7f40252216e0"/>
        <function-ref name="write" scoped="" ref="0x7f4025221870"/>
        <function-ref name="set" scoped="" ref="0x7f4025221a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f402521c390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f402521c390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402521c710"/>
        <function-ref name="clear" scoped="" ref="0x7f402521c8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402521ca30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402521cbc0"/>
        <function-ref name="read" scoped="" ref="0x7f402521cd50"/>
        <function-ref name="write" scoped="" ref="0x7f402521b020"/>
        <function-ref name="set" scoped="" ref="0x7f402521b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f4025218910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortEP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f4025218910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025218c90"/>
        <function-ref name="clear" scoped="" ref="0x7f4025218e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025217020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40252171b0"/>
        <function-ref name="read" scoped="" ref="0x7f4025217340"/>
        <function-ref name="write" scoped="" ref="0x7f40252174d0"/>
        <function-ref name="set" scoped="" ref="0x7f4025217660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f4025213cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortFP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f4025213cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40252120a0"/>
        <function-ref name="clear" scoped="" ref="0x7f4025212230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40252123c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025212550"/>
        <function-ref name="read" scoped="" ref="0x7f40252126e0"/>
        <function-ref name="write" scoped="" ref="0x7f4025212870"/>
        <function-ref name="set" scoped="" ref="0x7f4025212a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f402520d390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortGP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f402520d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402520d710"/>
        <function-ref name="clear" scoped="" ref="0x7f402520d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402520da30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402520dbc0"/>
        <function-ref name="read" scoped="" ref="0x7f402520dd50"/>
        <function-ref name="write" scoped="" ref="0x7f402520c020"/>
        <function-ref name="set" scoped="" ref="0x7f402520c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f4025209390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortHP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f4025209390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025209710"/>
        <function-ref name="clear" scoped="" ref="0x7f40252098a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025209a30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025209bc0"/>
        <function-ref name="read" scoped="" ref="0x7f4025209d50"/>
        <function-ref name="write" scoped="" ref="0x7f4025208020"/>
        <function-ref name="set" scoped="" ref="0x7f40252081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f4025204390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortJP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f4025204390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025204710"/>
        <function-ref name="clear" scoped="" ref="0x7f40252048a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025204a30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025204bc0"/>
        <function-ref name="read" scoped="" ref="0x7f4025204d50"/>
        <function-ref name="write" scoped="" ref="0x7f4025203020"/>
        <function-ref name="set" scoped="" ref="0x7f40252031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f40251ff390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortKP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f40251ff390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40251ff710"/>
        <function-ref name="clear" scoped="" ref="0x7f40251ff8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40251ffa30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40251ffbc0"/>
        <function-ref name="read" scoped="" ref="0x7f40251ffd50"/>
        <function-ref name="write" scoped="" ref="0x7f40251fe020"/>
        <function-ref name="set" scoped="" ref="0x7f40251fe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f40251fb390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortLP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f40251fb390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40251fb710"/>
        <function-ref name="clear" scoped="" ref="0x7f40251fb8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40251fba30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40251fbbc0"/>
        <function-ref name="read" scoped="" ref="0x7f40251fbd50"/>
        <function-ref name="write" scoped="" ref="0x7f40251fa020"/>
        <function-ref name="set" scoped="" ref="0x7f40251fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f40251f0810" loc="40:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f40251f0810"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb25c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4025fb2930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f40251ef6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f40251e3af0" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f40251e3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40251e3e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4025001030"/>
        <function-ref name="request" scoped="" ref="0x7f40250011c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4025001350"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40250014e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f4025001890" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f4025001890"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f402542f400"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f402542f6c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4025000500"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4024ffd9b0"/>
        <function-ref name="write" scoped="" ref="0x7f4024ffe150"/>
        <function-ref name="readDone" scoped="" ref="0x7f4024ffed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f40251d89b0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f40251d89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40251d8d30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40251d5020"/>
        <function-ref name="request" scoped="" ref="0x7f40251d51b0"/>
        <function-ref name="granted" scoped="" ref="0x7f40251d5340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40251d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f40251d3020" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f40251d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f402542f400"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f402542f6c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f40251d3c50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f40251d0150"/>
        <function-ref name="write" scoped="" ref="0x7f40251d28c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f40251d1510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4025164bf0" loc="92:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4025164bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4025163020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f40251631b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4025162930" loc="96:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4025162930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4025162cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f4025162e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4025163400" loc="93:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4025163400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4025163780"/>
        <function-ref name="requested" scoped="" ref="0x7f4025163910"/>
        <function-ref name="granted" scoped="" ref="0x7f4025163aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4025163c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4025163dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4025166e60" loc="91:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4025166e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4025164230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40251643c0"/>
        <function-ref name="request" scoped="" ref="0x7f4025164550"/>
        <function-ref name="granted" scoped="" ref="0x7f40251646e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4025164870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4025162060" loc="94:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4025162060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f40251623e0"/>
        <function-ref name="userId" scoped="" ref="0x7f4025162570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40246431e0" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f40246431e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4024643560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f40246437f0" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f40246437f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4024643b70"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f4024643d00"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4024642020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f40246421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f402463f9e0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f402463f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f402463fd80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f402463e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f402463d790" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f402463d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f402463db30"/>
        <function-ref name="configure" scoped="" ref="0x7f402463dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f402463c020" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f402463c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f402463c3a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f402463c530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f402463c6c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f402463c850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f402463e270" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f402463e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f402463e5f0"/>
        <function-ref name="requested" scoped="" ref="0x7f402463e780"/>
        <function-ref name="granted" scoped="" ref="0x7f402463e910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f402463eaa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f402463ec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f402463caa0" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f402463caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f402463ce20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f402463b020"/>
        <function-ref name="led1On" scoped="" ref="0x7f402463b1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f402463b340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f402463b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f402463b660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f402463b7f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f402463be30"/>
        <function-ref name="set" scoped="" ref="0x7f402463bb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f402463b980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f402463bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4024641b20" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4024641b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f402463f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f402463f1b0"/>
        <function-ref name="request" scoped="" ref="0x7f402463f340"/>
        <function-ref name="granted" scoped="" ref="0x7f402463f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f402463f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f402463ee80" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f402463ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f402463d220"/>
        <function-ref name="userId" scoped="" ref="0x7f402463d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f402463a160" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f402463a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f402463a4e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f402463a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f402515ecb0" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f402515ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f40251520a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f40251522f0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f40251522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4025152670"/>
        <function-ref name="requested" scoped="" ref="0x7f4025152800"/>
        <function-ref name="granted" scoped="" ref="0x7f4025152990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4025152b20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4025152cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f402515e550" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f402515e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f402515e8d0"/>
        <function-ref name="stop" scoped="" ref="0x7f402515ea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4025151020" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4025151020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f40251513a0"/>
        <function-ref name="userId" scoped="" ref="0x7f4025151530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f402510d8e0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f402510d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f402510dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f4025112c40" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f4025112c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f402542f400"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f402542f6c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f40251118a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f402510ed20"/>
        <function-ref name="write" scoped="" ref="0x7f40251104d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f402510e110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f402510c020" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f402510c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f402510c3a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f402510c530"/>
        <function-ref name="led1On" scoped="" ref="0x7f402510c6c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f402510c850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f402510c9e0"/>
        <function-ref name="get" scoped="" ref="0x7f402510cb70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f402510cd00"/>
        <function-ref name="led2On" scoped="" ref="0x7f402510b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f402510b1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f402510b020"/>
        <function-ref name="led0On" scoped="" ref="0x7f402510b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4025118020" loc="41:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4025118020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f40251183c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4025118550"/>
        <function-ref name="request" scoped="" ref="0x7f40251186e0"/>
        <function-ref name="granted" scoped="" ref="0x7f4025118870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4025118a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f4025117020" loc="42:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f4025117020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f402542f400"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f402542f6c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4025117c70"/>
        <function-ref name="writeDone" scoped="" ref="0x7f4025113170"/>
        <function-ref name="write" scoped="" ref="0x7f40251168c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4025114510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f4025113e40" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f4025113e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4025112210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f40251123a0"/>
        <function-ref name="request" scoped="" ref="0x7f4025112530"/>
        <function-ref name="granted" scoped="" ref="0x7f40251126c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4025112850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f40250988e0" loc="79:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f40250988e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f4025098c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f4025097020" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f4025097020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f40250973a0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f4025097530"/>
        <function-ref name="setStart" scoped="" ref="0x7f40250976c0"/>
        <function-ref name="status" scoped="" ref="0x7f4025097850"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f40250979e0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f4025097b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f4025097d00"/>
        <function-ref name="read" scoped="" ref="0x7f4025096020"/>
        <function-ref name="init" scoped="" ref="0x7f40250961b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f4025096340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f40250964d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f4025096660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40250967f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f4025096a80"/>
        <function-ref name="enable" scoped="" ref="0x7f4025096c10"/>
        <function-ref name="write" scoped="" ref="0x7f4025096da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f4025095020"/>
        <function-ref name="off" scoped="" ref="0x7f40250951b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f4025095340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f40250954d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f4025095660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f40250957f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f4025095ac0" loc="82:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f4025095ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4025095e40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4025094020"/>
        <function-ref name="led1On" scoped="" ref="0x7f40250941b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4025094340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f40250944d0"/>
        <function-ref name="get" scoped="" ref="0x7f4025094660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f40250947f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4025094e30"/>
        <function-ref name="set" scoped="" ref="0x7f4025094b10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4025094980"/>
        <function-ref name="led0On" scoped="" ref="0x7f4025094ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f4025093160" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f4025093160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f40250934e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4025093670"/>
        <function-ref name="led1On" scoped="" ref="0x7f4025093800"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4025093990"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f4025093b20"/>
        <function-ref name="get" scoped="" ref="0x7f4025093cb0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4025093e40"/>
        <function-ref name="led2On" scoped="" ref="0x7f40250924d0"/>
        <function-ref name="set" scoped="" ref="0x7f40250921b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4025092020"/>
        <function-ref name="led0On" scoped="" ref="0x7f4025092340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f40250927a0" loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f40250927a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4025092b20"/>
        <function-ref name="runTask" scoped="" ref="0x7f4025092cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f402509d340" loc="77:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f402509d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f402509d6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f402509d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f402509dc00" loc="78:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f402509dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f402542f400"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f402542f6c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f402509c8a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f402509ad20"/>
        <function-ref name="write" scoped="" ref="0x7f402509b4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f402509a110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f402508c0e0" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f402508c0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f402508c460"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f402508c5f0"/>
        <function-ref name="setStart" scoped="" ref="0x7f402508c780"/>
        <function-ref name="status" scoped="" ref="0x7f402508c910"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f402508caa0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f402508cc30"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f402508cdc0"/>
        <function-ref name="read" scoped="" ref="0x7f402508b020"/>
        <function-ref name="init" scoped="" ref="0x7f402508b1b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f402508b340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f402508b4d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f402508b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f402508b7f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f402508ba80"/>
        <function-ref name="enable" scoped="" ref="0x7f402508bc10"/>
        <function-ref name="write" scoped="" ref="0x7f402508bda0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f402508a020"/>
        <function-ref name="off" scoped="" ref="0x7f402508a1b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f402508a340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f402508a4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f402508a660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f402508a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f4025089a70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f4025089a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f4025089df0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f4025086020"/>
        <function-ref name="setStart" scoped="" ref="0x7f40250861b0"/>
        <function-ref name="status" scoped="" ref="0x7f4025086340"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f40250864d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f4025086660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f40250867f0"/>
        <function-ref name="read" scoped="" ref="0x7f4025086980"/>
        <function-ref name="init" scoped="" ref="0x7f4025086b10"/>
        <function-ref name="enableAck" scoped="" ref="0x7f4025086ca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f4025086e30"/>
        <function-ref name="hasStart" scoped="" ref="0x7f4025085020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f40250851b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f4025085440"/>
        <function-ref name="enable" scoped="" ref="0x7f40250855d0"/>
        <function-ref name="write" scoped="" ref="0x7f4025085760"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f40250858f0"/>
        <function-ref name="off" scoped="" ref="0x7f4025085a80"/>
        <function-ref name="setStop" scoped="" ref="0x7f4025085c10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f4025085da0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f4025084020"/>
        <function-ref name="hasStop" scoped="" ref="0x7f40250841b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f4025084540" loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f4025084540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40250848c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025084a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025084be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025084d70"/>
        <function-ref name="get" scoped="" ref="0x7f4025083020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40250831b0"/>
        <function-ref name="set" scoped="" ref="0x7f4025083340"/>
        <function-ref name="clr" scoped="" ref="0x7f40250834d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f4025083810" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f4025083810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025083b90"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025083d20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025082020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40250821b0"/>
        <function-ref name="get" scoped="" ref="0x7f4025082340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40250824d0"/>
        <function-ref name="set" scoped="" ref="0x7f4025082660"/>
        <function-ref name="clr" scoped="" ref="0x7f40250827f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f402504c4a0" loc="46:../tinyos_ws18/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f402504c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f402504c820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f402504c9b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f402504cb40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f402504ccd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f402504ce60"/>
        <function-ref name="get" scoped="" ref="0x7f4025049020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f40250491b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f40250497f0"/>
        <function-ref name="set" scoped="" ref="0x7f4025049340"/>
        <function-ref name="led0On" scoped="" ref="0x7f40250494d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f4025049660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f4025044550" loc="50:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f4025044550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40250448d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025044a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025044bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025044d80"/>
        <function-ref name="get" scoped="" ref="0x7f4025043020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40250431b0"/>
        <function-ref name="set" scoped="" ref="0x7f4025043340"/>
        <function-ref name="clr" scoped="" ref="0x7f40250434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f40250487c0" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f40250487c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025048b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f40250437f0" loc="51:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f40250437f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025043b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025043d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025042020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40250421b0"/>
        <function-ref name="get" scoped="" ref="0x7f4025042340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40250424d0"/>
        <function-ref name="set" scoped="" ref="0x7f4025042660"/>
        <function-ref name="clr" scoped="" ref="0x7f40250427f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f4025048dc0" loc="47:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f4025048dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f4025045180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4025045310"/>
        <function-ref name="led1On" scoped="" ref="0x7f40250454a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4025045630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f40250457c0"/>
        <function-ref name="get" scoped="" ref="0x7f4025045950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f4025045ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f40250441b0"/>
        <function-ref name="set" scoped="" ref="0x7f4025045c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f4025045e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f4025044020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f4025042b10" loc="52:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f4025042b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025041020"/>
        <function-ref name="isInput" scoped="" ref="0x7f40250411b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025041340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40250414d0"/>
        <function-ref name="get" scoped="" ref="0x7f4025041660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40250417f0"/>
        <function-ref name="set" scoped="" ref="0x7f4025041980"/>
        <function-ref name="clr" scoped="" ref="0x7f4025041b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f40250251d0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f40250251d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025025550"/>
        <function-ref name="isInput" scoped="" ref="0x7f40250256e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025025870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025025a00"/>
        <function-ref name="get" scoped="" ref="0x7f4025025b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4025025d20"/>
        <function-ref name="set" scoped="" ref="0x7f4025024020"/>
        <function-ref name="clr" scoped="" ref="0x7f40250241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f4025024510" loc="45:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f4025024510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025024890"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025024a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025024bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4025024d40"/>
        <function-ref name="get" scoped="" ref="0x7f4025023020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40250231b0"/>
        <function-ref name="set" scoped="" ref="0x7f4025023340"/>
        <function-ref name="clr" scoped="" ref="0x7f40250234d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f4025022ab0" loc="48:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4025022ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4025022e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f4025023830" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f4025023830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4025023bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4025023d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f4025022020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40250221b0"/>
        <function-ref name="get" scoped="" ref="0x7f4025022340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40250224d0"/>
        <function-ref name="set" scoped="" ref="0x7f4025022660"/>
        <function-ref name="clr" scoped="" ref="0x7f40250227f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f402501a340" loc="46:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f402501a340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f402501a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f402501a980" loc="47:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f402501a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f402501ad00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f4025019020"/>
        <function-ref name="led1On" scoped="" ref="0x7f40250191b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f4025019340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f40250194d0"/>
        <function-ref name="get" scoped="" ref="0x7f4025019660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f40250197f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f4025019e30"/>
        <function-ref name="set" scoped="" ref="0x7f4025019980"/>
        <function-ref name="led0On" scoped="" ref="0x7f4025019b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f4025019ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4024ffbb80" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="FMClickC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4024ffbb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4024ff6110"/>
        <function-ref name="fired" scoped="" ref="0x7f4024ff95f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4024ff74a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4024ff7020"/>
        <function-ref name="getdt" scoped="" ref="0x7f4024ff6a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f4024ff6590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4024ff9a70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4024ffa790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4024ff7ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4024ffac60"/>
        <function-ref name="stop" scoped="" ref="0x7f4024ff9170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f4024fb7cb0" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f4024fb7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fb6610"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fb67a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fb6930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fb6ac0"/>
        <function-ref name="get" scoped="" ref="0x7f4024fb6c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fb6de0"/>
        <function-ref name="set" scoped="" ref="0x7f4024fb5020"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f4024fd3350" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f4024fd3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fd36d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fd3860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fd39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fd3b80"/>
        <function-ref name="get" scoped="" ref="0x7f4024fd3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fd2020"/>
        <function-ref name="set" scoped="" ref="0x7f4024fd21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fd2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f4024fc6350" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f4024fc6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fc66d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fc6860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fc69f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fc6b80"/>
        <function-ref name="get" scoped="" ref="0x7f4024fc6d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fc5020"/>
        <function-ref name="set" scoped="" ref="0x7f4024fc51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fc5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f4024fbdcb0" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f4024fbdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fbc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fbc230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fbc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fbc550"/>
        <function-ref name="get" scoped="" ref="0x7f4024fbc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fbc870"/>
        <function-ref name="set" scoped="" ref="0x7f4024fbca00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fbcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f4024fb0060" loc="108:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f4024fb0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fb03e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fb0570"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fb0700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fb0890"/>
        <function-ref name="get" scoped="" ref="0x7f4024fb0a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fb0bb0"/>
        <function-ref name="set" scoped="" ref="0x7f4024fb0d40"/>
        <function-ref name="clr" scoped="" ref="0x7f4024faf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH2" ref="0x7f4024fac990" loc="112:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH2" scoped="" ref="0x7f4024fac990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024facd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fab020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fab1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fab340"/>
        <function-ref name="get" scoped="" ref="0x7f4024fab4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fab660"/>
        <function-ref name="set" scoped="" ref="0x7f4024fab7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fab980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH7" ref="0x7f4024fa6990" loc="117:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH7" scoped="" ref="0x7f4024fa6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fa6d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fa5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fa51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fa5340"/>
        <function-ref name="get" scoped="" ref="0x7f4024fa54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fa5660"/>
        <function-ref name="set" scoped="" ref="0x7f4024fa57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fa5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ6" ref="0x7f4024f9d020" loc="125:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ6" scoped="" ref="0x7f4024f9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f9d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f9d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f9d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f9d850"/>
        <function-ref name="get" scoped="" ref="0x7f4024f9d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f9db70"/>
        <function-ref name="set" scoped="" ref="0x7f4024f9dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK0" ref="0x7f4024f9b670" loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK0" scoped="" ref="0x7f4024f9b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f9b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f9bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f9bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f9a020"/>
        <function-ref name="get" scoped="" ref="0x7f4024f9a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f9a340"/>
        <function-ref name="set" scoped="" ref="0x7f4024f9a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f9a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL2" ref="0x7f4024f8e670" loc="139:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL2" scoped="" ref="0x7f4024f8e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f8e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f8eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f8ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f8d020"/>
        <function-ref name="get" scoped="" ref="0x7f4024f8d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f8d340"/>
        <function-ref name="set" scoped="" ref="0x7f4024f8d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f8d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f4024feb350" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f4024feb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024feb6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024feb860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024feb9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024febb80"/>
        <function-ref name="get" scoped="" ref="0x7f4024febd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fea020"/>
        <function-ref name="set" scoped="" ref="0x7f4024fea1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f4024fbf670" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f4024fbf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fbf9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fbfb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fbfd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fbe020"/>
        <function-ref name="get" scoped="" ref="0x7f4024fbe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fbe340"/>
        <function-ref name="set" scoped="" ref="0x7f4024fbe4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fbe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f4024fe9990" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f4024fe9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fe9d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fe7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fe71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fe7340"/>
        <function-ref name="get" scoped="" ref="0x7f4024fe74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fe7660"/>
        <function-ref name="set" scoped="" ref="0x7f4024fe77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fe7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f4024fdc990" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f4024fdc990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fdcd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fdb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fdb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fdb340"/>
        <function-ref name="get" scoped="" ref="0x7f4024fdb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fdb660"/>
        <function-ref name="set" scoped="" ref="0x7f4024fdb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fdb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f4024fd0cb0" loc="80:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f4024fd0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fcf0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fcf230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fcf3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fcf550"/>
        <function-ref name="get" scoped="" ref="0x7f4024fcf6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fcf870"/>
        <function-ref name="set" scoped="" ref="0x7f4024fcfa00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fcfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f4024fc3cb0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f4024fc3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fc20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fc2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fc23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fc2550"/>
        <function-ref name="get" scoped="" ref="0x7f4024fc26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fc2870"/>
        <function-ref name="set" scoped="" ref="0x7f4024fc2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fc2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f4024ff14e0" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f4024ff14e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024ff1860"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024ff19f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024ff1b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024ff1d10"/>
        <function-ref name="get" scoped="" ref="0x7f4024ff0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024ff01b0"/>
        <function-ref name="set" scoped="" ref="0x7f4024ff0340"/>
        <function-ref name="clr" scoped="" ref="0x7f4024ff04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f4024fe4350" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f4024fe4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fe46d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fe4860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fe49f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fe4b80"/>
        <function-ref name="get" scoped="" ref="0x7f4024fe4d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fe3020"/>
        <function-ref name="set" scoped="" ref="0x7f4024fe31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fe3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f4024fd8350" loc="72:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f4024fd8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fd86d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fd8860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fd89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fd8b80"/>
        <function-ref name="get" scoped="" ref="0x7f4024fd8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fd7020"/>
        <function-ref name="set" scoped="" ref="0x7f4024fd71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fd7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f4024fcc670" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f4024fcc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fcc9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fccb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fccd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fca020"/>
        <function-ref name="get" scoped="" ref="0x7f4024fca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fca340"/>
        <function-ref name="set" scoped="" ref="0x7f4024fca4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f4024fb9670" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f4024fb9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fb99f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fb9b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fb9d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fb8020"/>
        <function-ref name="get" scoped="" ref="0x7f4024fb81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fb8340"/>
        <function-ref name="set" scoped="" ref="0x7f4024fb84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fb8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f4024fb3b20" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f4024fb3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fb2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fb21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fb2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fb24d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024fb2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fb27f0"/>
        <function-ref name="set" scoped="" ref="0x7f4024fb2980"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fb2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH0" ref="0x7f4024faf350" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH0" scoped="" ref="0x7f4024faf350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024faf6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024faf860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024faf9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fafb80"/>
        <function-ref name="get" scoped="" ref="0x7f4024fafd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fad020"/>
        <function-ref name="set" scoped="" ref="0x7f4024fad1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fad340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f4024fc9cb0" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f4024fc9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fc80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fc8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fc83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fc8550"/>
        <function-ref name="get" scoped="" ref="0x7f4024fc86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fc8870"/>
        <function-ref name="set" scoped="" ref="0x7f4024fc8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fc8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH5" ref="0x7f4024fa8350" loc="115:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH5" scoped="" ref="0x7f4024fa8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fa86d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fa8860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fa89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fa8b80"/>
        <function-ref name="get" scoped="" ref="0x7f4024fa8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fa7020"/>
        <function-ref name="set" scoped="" ref="0x7f4024fa71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fa7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ1" ref="0x7f4024fa3020" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ1" scoped="" ref="0x7f4024fa3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fa33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fa3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fa36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fa3850"/>
        <function-ref name="get" scoped="" ref="0x7f4024fa39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fa3b70"/>
        <function-ref name="set" scoped="" ref="0x7f4024fa3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fa2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ4" ref="0x7f4024fa0990" loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ4" scoped="" ref="0x7f4024fa0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fa0d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f9f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f9f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f9f340"/>
        <function-ref name="get" scoped="" ref="0x7f4024f9f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f9f660"/>
        <function-ref name="set" scoped="" ref="0x7f4024f9f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f9f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK3" ref="0x7f4024f97020" loc="131:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK3" scoped="" ref="0x7f4024f97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f973a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f97530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f976c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f97850"/>
        <function-ref name="get" scoped="" ref="0x7f4024f979e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f97b70"/>
        <function-ref name="set" scoped="" ref="0x7f4024f97d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK6" ref="0x7f4024f94990" loc="134:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK6" scoped="" ref="0x7f4024f94990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f94d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f93020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f931b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f93340"/>
        <function-ref name="get" scoped="" ref="0x7f4024f934d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f93660"/>
        <function-ref name="set" scoped="" ref="0x7f4024f937f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f93980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL0" ref="0x7f4024f90020" loc="137:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL0" scoped="" ref="0x7f4024f90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f903a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f90530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f906c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f90850"/>
        <function-ref name="get" scoped="" ref="0x7f4024f909e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f90b70"/>
        <function-ref name="set" scoped="" ref="0x7f4024f90d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL5" ref="0x7f4024f8a020" loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL5" scoped="" ref="0x7f4024f8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f8a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f8a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f8a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f8a850"/>
        <function-ref name="get" scoped="" ref="0x7f4024f8a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f8ab70"/>
        <function-ref name="set" scoped="" ref="0x7f4024f8ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f4024feee40" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f4024feee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fed1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fed370"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fed500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fed690"/>
        <function-ref name="get" scoped="" ref="0x7f4024fed820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fed9b0"/>
        <function-ref name="set" scoped="" ref="0x7f4024fedb40"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fedcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f4024fe1cb0" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f4024fe1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fe00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fe0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fe03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fe0550"/>
        <function-ref name="get" scoped="" ref="0x7f4024fe06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fe0870"/>
        <function-ref name="set" scoped="" ref="0x7f4024fe0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fe0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f4024fb54e0" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f4024fb54e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fb5860"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fb59f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fb5b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fb5d10"/>
        <function-ref name="get" scoped="" ref="0x7f4024fb4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fb41b0"/>
        <function-ref name="set" scoped="" ref="0x7f4024fb4340"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fb44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f4024fde350" loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f4024fde350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fde6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fde860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fde9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fdeb80"/>
        <function-ref name="get" scoped="" ref="0x7f4024fded10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fdd020"/>
        <function-ref name="set" scoped="" ref="0x7f4024fdd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fdd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f4024fd2670" loc="78:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f4024fd2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fd29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fd2b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fd2d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fd1020"/>
        <function-ref name="get" scoped="" ref="0x7f4024fd11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fd1340"/>
        <function-ref name="set" scoped="" ref="0x7f4024fd14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fd1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f4024fc5670" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f4024fc5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fc59f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fc5b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fc5d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fc4020"/>
        <function-ref name="get" scoped="" ref="0x7f4024fc41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fc4340"/>
        <function-ref name="set" scoped="" ref="0x7f4024fc44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fc4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f4024fbb020" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f4024fbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fbb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fbb530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fbb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fbb850"/>
        <function-ref name="get" scoped="" ref="0x7f4024fbb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fbbb70"/>
        <function-ref name="set" scoped="" ref="0x7f4024fbbd00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH3" ref="0x7f4024fabcb0" loc="113:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH3" scoped="" ref="0x7f4024fabcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024faa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024faa230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024faa3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024faa550"/>
        <function-ref name="get" scoped="" ref="0x7f4024faa6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024faa870"/>
        <function-ref name="set" scoped="" ref="0x7f4024faaa00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024faab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ7" ref="0x7f4024f9c350" loc="126:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ7" scoped="" ref="0x7f4024f9c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f9c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f9c860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f9c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f9cb80"/>
        <function-ref name="get" scoped="" ref="0x7f4024f9cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f9b020"/>
        <function-ref name="set" scoped="" ref="0x7f4024f9b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f9b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK1" ref="0x7f4024f9a990" loc="129:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK1" scoped="" ref="0x7f4024f9a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f9ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f99020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f991b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f99340"/>
        <function-ref name="get" scoped="" ref="0x7f4024f994d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f99660"/>
        <function-ref name="set" scoped="" ref="0x7f4024f997f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f99980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL3" ref="0x7f4024f8d990" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL3" scoped="" ref="0x7f4024f8d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f8dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f8c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f8c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f8c340"/>
        <function-ref name="get" scoped="" ref="0x7f4024f8c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f8c660"/>
        <function-ref name="set" scoped="" ref="0x7f4024f8c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f8c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ2" ref="0x7f4024fa2350" loc="121:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ2" scoped="" ref="0x7f4024fa2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fa26d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fa2860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fa29f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fa2b80"/>
        <function-ref name="get" scoped="" ref="0x7f4024fa2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fa1020"/>
        <function-ref name="set" scoped="" ref="0x7f4024fa11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fa1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f4024fea670" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f4024fea670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fea9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024feab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fead10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fe9020"/>
        <function-ref name="get" scoped="" ref="0x7f4024fe91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fe9340"/>
        <function-ref name="set" scoped="" ref="0x7f4024fe94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fe9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK4" ref="0x7f4024f96350" loc="132:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK4" scoped="" ref="0x7f4024f96350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f966d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f96860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f969f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f96b80"/>
        <function-ref name="get" scoped="" ref="0x7f4024f96d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f95020"/>
        <function-ref name="set" scoped="" ref="0x7f4024f951b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f95340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL6" ref="0x7f4024f89350" loc="143:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL6" scoped="" ref="0x7f4024f89350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f896d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f89860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f899f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f89b80"/>
        <function-ref name="get" scoped="" ref="0x7f4024f89d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f88020"/>
        <function-ref name="set" scoped="" ref="0x7f4024f881b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f88340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f4024fe7cb0" loc="59:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f4024fe7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fe60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fe6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fe63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fe6550"/>
        <function-ref name="get" scoped="" ref="0x7f4024fe66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fe6870"/>
        <function-ref name="set" scoped="" ref="0x7f4024fe6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fe6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f4024fdbcb0" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f4024fdbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fda0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fda230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fda3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fda550"/>
        <function-ref name="get" scoped="" ref="0x7f4024fda6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fda870"/>
        <function-ref name="set" scoped="" ref="0x7f4024fdaa00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fdab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f4024fce020" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f4024fce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fce3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fce530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fce6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fce850"/>
        <function-ref name="get" scoped="" ref="0x7f4024fce9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fceb70"/>
        <function-ref name="set" scoped="" ref="0x7f4024fced00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fcd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f4024fc1020" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f4024fc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fc13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fc1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fc16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fc1850"/>
        <function-ref name="get" scoped="" ref="0x7f4024fc19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fc1b70"/>
        <function-ref name="set" scoped="" ref="0x7f4024fc1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f4024ff0800" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f4024ff0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024ff0b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024ff0d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fef020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fef1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024fef340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fef4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4024fef660"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f4024fe3670" loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f4024fe3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fe3af0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fe3c80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fe3e10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fe2020"/>
        <function-ref name="get" scoped="" ref="0x7f4024fe21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fe2340"/>
        <function-ref name="set" scoped="" ref="0x7f4024fe24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fe2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f4024fd7670" loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f4024fd7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fd79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fd7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fd7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fd6020"/>
        <function-ref name="get" scoped="" ref="0x7f4024fd61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fd6340"/>
        <function-ref name="set" scoped="" ref="0x7f4024fd64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fd6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f4024fb8990" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f4024fb8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fb8d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fb7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fb71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fb7340"/>
        <function-ref name="get" scoped="" ref="0x7f4024fb74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fb7660"/>
        <function-ref name="set" scoped="" ref="0x7f4024fb77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fb7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH1" ref="0x7f4024fad670" loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH1" scoped="" ref="0x7f4024fad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fad9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fadb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fadd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fac020"/>
        <function-ref name="get" scoped="" ref="0x7f4024fac1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fac340"/>
        <function-ref name="set" scoped="" ref="0x7f4024fac4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f4024fd5cb0" loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f4024fd5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fd4410"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fd45a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fd4730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fd48c0"/>
        <function-ref name="get" scoped="" ref="0x7f4024fd4a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fd4be0"/>
        <function-ref name="set" scoped="" ref="0x7f4024fd4d70"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fd3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f4024fc7020" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f4024fc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fc73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fc7530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fc76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fc7850"/>
        <function-ref name="get" scoped="" ref="0x7f4024fc79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fc7b70"/>
        <function-ref name="set" scoped="" ref="0x7f4024fc7d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f4024fbe990" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f4024fbe990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fbed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fbd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fbd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fbd340"/>
        <function-ref name="get" scoped="" ref="0x7f4024fbd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fbd660"/>
        <function-ref name="set" scoped="" ref="0x7f4024fbd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fbd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f4024fb2e40" loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f4024fb2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fb11e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fb1370"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fb1500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fb1690"/>
        <function-ref name="get" scoped="" ref="0x7f4024fb1820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fb19b0"/>
        <function-ref name="set" scoped="" ref="0x7f4024fb1b40"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fb1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH6" ref="0x7f4024fa7670" loc="116:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH6" scoped="" ref="0x7f4024fa7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fa79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fa7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fa7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fa6020"/>
        <function-ref name="get" scoped="" ref="0x7f4024fa61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fa6340"/>
        <function-ref name="set" scoped="" ref="0x7f4024fa64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fa6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ5" ref="0x7f4024f9fcb0" loc="124:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ5" scoped="" ref="0x7f4024f9fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f9e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f9e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f9e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f9e550"/>
        <function-ref name="get" scoped="" ref="0x7f4024f9e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f9e870"/>
        <function-ref name="set" scoped="" ref="0x7f4024f9ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f9eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK7" ref="0x7f4024f93cb0" loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK7" scoped="" ref="0x7f4024f93cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f910a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f91230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f913c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f91550"/>
        <function-ref name="get" scoped="" ref="0x7f4024f916e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f91870"/>
        <function-ref name="set" scoped="" ref="0x7f4024f91a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f91b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL1" ref="0x7f4024f8f350" loc="138:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL1" scoped="" ref="0x7f4024f8f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f8f6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f8f860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f8f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f8fb80"/>
        <function-ref name="get" scoped="" ref="0x7f4024f8fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f8e020"/>
        <function-ref name="set" scoped="" ref="0x7f4024f8e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f8e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f4024fec060" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f4024fec060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fec3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fec570"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fec700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fec890"/>
        <function-ref name="get" scoped="" ref="0x7f4024feca20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fecbb0"/>
        <function-ref name="set" scoped="" ref="0x7f4024fecd40"/>
        <function-ref name="clr" scoped="" ref="0x7f4024feb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f4024fdf020" loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f4024fdf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fdf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fdf530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fdf6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fdf850"/>
        <function-ref name="get" scoped="" ref="0x7f4024fdf9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fdfb70"/>
        <function-ref name="set" scoped="" ref="0x7f4024fdfd00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fde020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f4024fc0350" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f4024fc0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fc06d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fc0860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fc09f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fc0b80"/>
        <function-ref name="get" scoped="" ref="0x7f4024fc0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fbf020"/>
        <function-ref name="set" scoped="" ref="0x7f4024fbf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fbf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f4024fdd670" loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f4024fdd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fdd9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fddb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fddd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fdc020"/>
        <function-ref name="get" scoped="" ref="0x7f4024fdc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fdc340"/>
        <function-ref name="set" scoped="" ref="0x7f4024fdc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fdc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f4024fd1990" loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f4024fd1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fd1d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fd0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fd01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fd0340"/>
        <function-ref name="get" scoped="" ref="0x7f4024fd04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fd0660"/>
        <function-ref name="set" scoped="" ref="0x7f4024fd07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fd0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f4024fc4990" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f4024fc4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fc4d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fc3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fc31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fc3340"/>
        <function-ref name="get" scoped="" ref="0x7f4024fc34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fc3660"/>
        <function-ref name="set" scoped="" ref="0x7f4024fc37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fc3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f4024fba350" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f4024fba350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fba6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fba860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fba9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fbab80"/>
        <function-ref name="get" scoped="" ref="0x7f4024fbad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fb9020"/>
        <function-ref name="set" scoped="" ref="0x7f4024fb91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fb9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f4024ff21e0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f4024ff21e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024ff2560"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024ff26f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024ff2880"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024ff2a10"/>
        <function-ref name="get" scoped="" ref="0x7f4024ff2ba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024ff2d30"/>
        <function-ref name="set" scoped="" ref="0x7f4024ff1020"/>
        <function-ref name="clr" scoped="" ref="0x7f4024ff11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f4024fe5020" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f4024fe5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fe53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fe5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fe56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fe5850"/>
        <function-ref name="get" scoped="" ref="0x7f4024fe59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fe5b70"/>
        <function-ref name="set" scoped="" ref="0x7f4024fe5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fe4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f4024fd9020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f4024fd9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fd93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fd9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fd96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fd9850"/>
        <function-ref name="get" scoped="" ref="0x7f4024fd99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fd9b70"/>
        <function-ref name="set" scoped="" ref="0x7f4024fd9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f4024fcd350" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f4024fcd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fcd6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fcd860"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fcd9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fcdb80"/>
        <function-ref name="get" scoped="" ref="0x7f4024fcdd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fcc020"/>
        <function-ref name="set" scoped="" ref="0x7f4024fcc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fcc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f4024fb4800" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f4024fb4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fb4b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fb4d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fb3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fb31b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024fb3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fb34d0"/>
        <function-ref name="set" scoped="" ref="0x7f4024fb3660"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fb37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH4" ref="0x7f4024fa9020" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH4" scoped="" ref="0x7f4024fa9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fa93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fa9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fa96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fa9850"/>
        <function-ref name="get" scoped="" ref="0x7f4024fa99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fa9b70"/>
        <function-ref name="set" scoped="" ref="0x7f4024fa9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fa8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ0" ref="0x7f4024fa5cb0" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ0" scoped="" ref="0x7f4024fa5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fa40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fa4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fa43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fa4550"/>
        <function-ref name="get" scoped="" ref="0x7f4024fa46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fa4870"/>
        <function-ref name="set" scoped="" ref="0x7f4024fa4a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fa4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f4024fca990" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f4024fca990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fcad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fc9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fc91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fc9340"/>
        <function-ref name="get" scoped="" ref="0x7f4024fc94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fc9660"/>
        <function-ref name="set" scoped="" ref="0x7f4024fc97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fc9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ3" ref="0x7f4024fa1670" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ3" scoped="" ref="0x7f4024fa1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fa19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fa1b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fa1d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fa0020"/>
        <function-ref name="get" scoped="" ref="0x7f4024fa01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fa0340"/>
        <function-ref name="set" scoped="" ref="0x7f4024fa04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fa0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK2" ref="0x7f4024f99cb0" loc="130:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK2" scoped="" ref="0x7f4024f99cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f980a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f98230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f983c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f98550"/>
        <function-ref name="get" scoped="" ref="0x7f4024f986e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f98870"/>
        <function-ref name="set" scoped="" ref="0x7f4024f98a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f98b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK5" ref="0x7f4024f95670" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK5" scoped="" ref="0x7f4024f95670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f959f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f95b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f95d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f94020"/>
        <function-ref name="get" scoped="" ref="0x7f4024f941b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f94340"/>
        <function-ref name="set" scoped="" ref="0x7f4024f944d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f94660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL4" ref="0x7f4024f8ccb0" loc="141:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL4" scoped="" ref="0x7f4024f8ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f8b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f8b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f8b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f8b550"/>
        <function-ref name="get" scoped="" ref="0x7f4024f8b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f8b870"/>
        <function-ref name="set" scoped="" ref="0x7f4024f8ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f8bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL7" ref="0x7f4024f88670" loc="144:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL7" scoped="" ref="0x7f4024f88670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f889f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f88b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f88d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f87020"/>
        <function-ref name="get" scoped="" ref="0x7f4024f871b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f87340"/>
        <function-ref name="set" scoped="" ref="0x7f4024f874d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f87660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f4024fd6990" loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f4024fd6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fd6d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fd5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fd51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fd5340"/>
        <function-ref name="get" scoped="" ref="0x7f4024fd54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fd5660"/>
        <function-ref name="set" scoped="" ref="0x7f4024fd57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fd5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f4024fefb20" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f4024fefb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fee020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fee1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fee340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fee4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024fee660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fee7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4024fee980"/>
        <function-ref name="clr" scoped="" ref="0x7f4024feeb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f4024fe2990" loc="63:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f4024fe2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024fe2d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024fe1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024fe11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024fe1340"/>
        <function-ref name="get" scoped="" ref="0x7f4024fe14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024fe1660"/>
        <function-ref name="set" scoped="" ref="0x7f4024fe17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024fe1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4024f81a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4024f81a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f81e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f80020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f801b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f80340"/>
        <function-ref name="get" scoped="" ref="0x7f4024f804d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f80660"/>
        <function-ref name="set" scoped="" ref="0x7f4024f807f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f80980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f4024f7d020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f4024f7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f7d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f7d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f7d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f7d850"/>
        <function-ref name="get" scoped="" ref="0x7f4024f7d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f7db70"/>
        <function-ref name="set" scoped="" ref="0x7f4024f7dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4024f847a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4024f847a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f84b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f84cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f84e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f82020"/>
        <function-ref name="get" scoped="" ref="0x7f4024f821b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f82340"/>
        <function-ref name="set" scoped="" ref="0x7f4024f824d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f82660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f4024f80c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f4024f80c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f7f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f7f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f7f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f7f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f7f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f7f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f7f980"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f7fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f4024f7c2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f4024f7c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f7c630"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f7c7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f7c950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f7cae0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f7cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f7ce00"/>
        <function-ref name="set" scoped="" ref="0x7f4024f7b020"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f7b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f4024f828f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f4024f828f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f82c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f82e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f81020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f811b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f81340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f814d0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f81660"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f817f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4024f7fda0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4024f7fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f7e180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f7e310"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f7e4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f7e630"/>
        <function-ref name="get" scoped="" ref="0x7f4024f7e7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f7e950"/>
        <function-ref name="set" scoped="" ref="0x7f4024f7eae0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f7ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f4024f7b440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f4024f7b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f7b7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f7b950"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f7bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f7bc70"/>
        <function-ref name="get" scoped="" ref="0x7f4024f7be00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f7a020"/>
        <function-ref name="set" scoped="" ref="0x7f4024f7a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f7a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024564c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024564c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40245630a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024563230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40245633c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024563550"/>
        <function-ref name="get" scoped="" ref="0x7f40245636e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024563870"/>
        <function-ref name="set" scoped="" ref="0x7f4024563a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024563b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024561e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024561e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40245601c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024560350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40245604e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024560670"/>
        <function-ref name="get" scoped="" ref="0x7f4024560800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024560990"/>
        <function-ref name="set" scoped="" ref="0x7f4024560b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4024560cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402455d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402455d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402455d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f402455d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402455d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402455d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f402455da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402455dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f402455dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f402455c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402455a3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402455a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402455a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f402455a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f402455aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402455ac20"/>
        <function-ref name="get" scoped="" ref="0x7f402455adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024559020"/>
        <function-ref name="set" scoped="" ref="0x7f40245591b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024559340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40245576d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40245576d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024557a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024557be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024557d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024556020"/>
        <function-ref name="get" scoped="" ref="0x7f40245561b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024556340"/>
        <function-ref name="set" scoped="" ref="0x7f40245564d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024556660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40245549b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40245549b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024554d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024553020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40245531b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024553340"/>
        <function-ref name="get" scoped="" ref="0x7f40245534d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024553660"/>
        <function-ref name="set" scoped="" ref="0x7f40245537f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024553980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024551e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024551e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40245501c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024550350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40245504e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024550670"/>
        <function-ref name="get" scoped="" ref="0x7f4024550800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024550990"/>
        <function-ref name="set" scoped="" ref="0x7f4024550b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4024550cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402454d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402454d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402454d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f402454d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402454d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402454d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f402454da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402454dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f402454dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f402454c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4024f72da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4024f72da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f71180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f71310"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f714a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f71630"/>
        <function-ref name="get" scoped="" ref="0x7f4024f717c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f71950"/>
        <function-ref name="set" scoped="" ref="0x7f4024f71ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f71c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f4024f6e440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f4024f6e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f6e7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f6e950"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f6eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f6ec70"/>
        <function-ref name="get" scoped="" ref="0x7f4024f6ee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f6d020"/>
        <function-ref name="set" scoped="" ref="0x7f4024f6d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f6d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4024f74a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4024f74a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f74da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f73020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f73340"/>
        <function-ref name="get" scoped="" ref="0x7f4024f734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f73660"/>
        <function-ref name="set" scoped="" ref="0x7f4024f737f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f73980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f4024f70020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f4024f70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f703a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f70530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f706c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f70850"/>
        <function-ref name="get" scoped="" ref="0x7f4024f709e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f70b70"/>
        <function-ref name="set" scoped="" ref="0x7f4024f70d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f4024f6d5d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f4024f6d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f6d950"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f6dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f6dc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f6de00"/>
        <function-ref name="get" scoped="" ref="0x7f4024f6c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f6c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f6c340"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f6c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f4024f73c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f4024f73c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f72020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f721b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f72340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f724d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f72660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f727f0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f72980"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f72b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4024f6f2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4024f6f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f6f630"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f6f7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f6f950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f6fae0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f6fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f6fe00"/>
        <function-ref name="set" scoped="" ref="0x7f4024f6e020"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f4024f6c760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f4024f6c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f6cae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f6cc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f6ce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f6b020"/>
        <function-ref name="get" scoped="" ref="0x7f4024f6b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f6b340"/>
        <function-ref name="set" scoped="" ref="0x7f4024f6b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f6b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244f4c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244f4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40244f30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40244f3230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40244f33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40244f3550"/>
        <function-ref name="get" scoped="" ref="0x7f40244f36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40244f3870"/>
        <function-ref name="set" scoped="" ref="0x7f40244f3a00"/>
        <function-ref name="clr" scoped="" ref="0x7f40244f3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244f1e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244f1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40244f01c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40244f0350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40244f04e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40244f0670"/>
        <function-ref name="get" scoped="" ref="0x7f40244f0800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40244f0990"/>
        <function-ref name="set" scoped="" ref="0x7f40244f0b20"/>
        <function-ref name="clr" scoped="" ref="0x7f40244f0cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244ed0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244ed0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40244ed420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40244ed5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40244ed740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40244ed8d0"/>
        <function-ref name="get" scoped="" ref="0x7f40244eda60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40244edbf0"/>
        <function-ref name="set" scoped="" ref="0x7f40244edd80"/>
        <function-ref name="clr" scoped="" ref="0x7f40244ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244ea3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244ea3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40244ea770"/>
        <function-ref name="isInput" scoped="" ref="0x7f40244ea900"/>
        <function-ref name="toggle" scoped="" ref="0x7f40244eaa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40244eac20"/>
        <function-ref name="get" scoped="" ref="0x7f40244eadb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40244e9020"/>
        <function-ref name="set" scoped="" ref="0x7f40244e91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40244e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244e76d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244e76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40244e7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f40244e7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40244e7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40244e6020"/>
        <function-ref name="get" scoped="" ref="0x7f40244e61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40244e6340"/>
        <function-ref name="set" scoped="" ref="0x7f40244e64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40244e6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244e49b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244e49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40244e4d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f40244e3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40244e31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40244e3340"/>
        <function-ref name="get" scoped="" ref="0x7f40244e34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40244e3660"/>
        <function-ref name="set" scoped="" ref="0x7f40244e37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40244e3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244e1e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244e1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40244e01c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40244e0350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40244e04e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40244e0670"/>
        <function-ref name="get" scoped="" ref="0x7f40244e0800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40244e0990"/>
        <function-ref name="set" scoped="" ref="0x7f40244e0b20"/>
        <function-ref name="clr" scoped="" ref="0x7f40244e0cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244dd0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244dd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40244dd420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40244dd5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40244dd740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40244dd8d0"/>
        <function-ref name="get" scoped="" ref="0x7f40244dda60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40244ddbf0"/>
        <function-ref name="set" scoped="" ref="0x7f40244ddd80"/>
        <function-ref name="clr" scoped="" ref="0x7f40244dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4024f62020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4024f62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f623a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f62530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f626c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f62850"/>
        <function-ref name="get" scoped="" ref="0x7f4024f629e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f62b70"/>
        <function-ref name="set" scoped="" ref="0x7f4024f62d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f4024f5f5d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f4024f5f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f5f950"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f5fae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f5fc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f5fe00"/>
        <function-ref name="get" scoped="" ref="0x7f4024f5e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f5e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f5e340"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f5e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4024f65d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4024f65d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f640e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f64270"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f64400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f64590"/>
        <function-ref name="get" scoped="" ref="0x7f4024f64720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f648b0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f64a40"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f64bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f4024f612b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f4024f612b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f61630"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f617c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f61950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f61ae0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f61c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f61e00"/>
        <function-ref name="set" scoped="" ref="0x7f4024f60020"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f4024f5e760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f4024f5e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f5eae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f5ec70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f5ee00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f5c020"/>
        <function-ref name="get" scoped="" ref="0x7f4024f5c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f5c340"/>
        <function-ref name="set" scoped="" ref="0x7f4024f5c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f5c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f4024f64e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f4024f64e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f63210"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f633a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f63530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f636c0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f63850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f639e0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f63b70"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f63d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4024f60440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4024f60440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f607c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f60950"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f60ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f60c70"/>
        <function-ref name="get" scoped="" ref="0x7f4024f60e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f5f020"/>
        <function-ref name="set" scoped="" ref="0x7f4024f5f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f5f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f4024f5c8f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f4024f5c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f5cc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f5ce00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f5b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f5b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f5b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f5b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f5b660"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f5b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024489c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024489c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40244880a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024488230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40244883c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024488550"/>
        <function-ref name="get" scoped="" ref="0x7f40244886e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024488870"/>
        <function-ref name="set" scoped="" ref="0x7f4024488a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024488b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024486e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024486e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40244851c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024485350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40244854e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024485670"/>
        <function-ref name="get" scoped="" ref="0x7f4024485800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024485990"/>
        <function-ref name="set" scoped="" ref="0x7f4024485b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4024485cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244820a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244820a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024482420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40244825b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024482740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40244828d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024482a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024482bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4024482d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4024481020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402447f3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402447f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402447f770"/>
        <function-ref name="isInput" scoped="" ref="0x7f402447f900"/>
        <function-ref name="toggle" scoped="" ref="0x7f402447fa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402447fc20"/>
        <function-ref name="get" scoped="" ref="0x7f402447fdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402447e020"/>
        <function-ref name="set" scoped="" ref="0x7f402447e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f402447e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402447c6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402447c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402447ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f402447cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402447cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402447b020"/>
        <function-ref name="get" scoped="" ref="0x7f402447b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402447b340"/>
        <function-ref name="set" scoped="" ref="0x7f402447b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f402447b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244799b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244799b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024479d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024478020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40244781b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024478340"/>
        <function-ref name="get" scoped="" ref="0x7f40244784d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024478660"/>
        <function-ref name="set" scoped="" ref="0x7f40244787f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024478980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024476e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024476e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40244751c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024475350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40244754e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024475670"/>
        <function-ref name="get" scoped="" ref="0x7f4024475800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024475990"/>
        <function-ref name="set" scoped="" ref="0x7f4024475b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4024475cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244720a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244720a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024472420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40244725b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024472740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40244728d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024472a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024472bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4024472d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4024471020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4024f53440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4024f53440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f537c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f53950"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f53ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f53c70"/>
        <function-ref name="get" scoped="" ref="0x7f4024f53e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f52020"/>
        <function-ref name="set" scoped="" ref="0x7f4024f521b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f52340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f4024f4f8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f4024f4f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f4fc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f4fe00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f4e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f4e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f4e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f4e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f4e660"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f4e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4024f55020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4024f55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f553a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f55530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f556c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f55850"/>
        <function-ref name="get" scoped="" ref="0x7f4024f559e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f55b70"/>
        <function-ref name="set" scoped="" ref="0x7f4024f55d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f4024f525d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f4024f525d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f52950"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f52ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f52c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f52e00"/>
        <function-ref name="get" scoped="" ref="0x7f4024f50020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f501b0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f50340"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f4024f4ea80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f4024f4ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f4ee00"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f4d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f4d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f4d340"/>
        <function-ref name="get" scoped="" ref="0x7f4024f4d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f4d660"/>
        <function-ref name="set" scoped="" ref="0x7f4024f4d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f4d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f4024f542b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f4024f542b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f54630"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f547c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f54950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f54ae0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f54c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f54e00"/>
        <function-ref name="set" scoped="" ref="0x7f4024f53020"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4024f50760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4024f50760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f50ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f50c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f50e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f4f020"/>
        <function-ref name="get" scoped="" ref="0x7f4024f4f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f4f340"/>
        <function-ref name="set" scoped="" ref="0x7f4024f4f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f4f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f4024f4dc10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f4024f4dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f4c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f4c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f4c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f4c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f4c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f4c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f4c980"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f4cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402441ec90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402441ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402441d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402441d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f402441d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402441d550"/>
        <function-ref name="get" scoped="" ref="0x7f402441d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402441d870"/>
        <function-ref name="set" scoped="" ref="0x7f402441da00"/>
        <function-ref name="clr" scoped="" ref="0x7f402441db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402441be20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402441be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402441a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402441a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f402441a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402441a670"/>
        <function-ref name="get" scoped="" ref="0x7f402441a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402441a990"/>
        <function-ref name="set" scoped="" ref="0x7f402441ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f402441acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244170a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244170a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024417420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40244175b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024417740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40244178d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024417a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024417bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4024417d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4024416020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244143f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244143f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024414770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024414900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024414a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024414c20"/>
        <function-ref name="get" scoped="" ref="0x7f4024414db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024413020"/>
        <function-ref name="set" scoped="" ref="0x7f40244131b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024413340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244116d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244116d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024411a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024411be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024411d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024410020"/>
        <function-ref name="get" scoped="" ref="0x7f40244101b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024410340"/>
        <function-ref name="set" scoped="" ref="0x7f40244104d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024410660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402440e9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402440e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402440ed30"/>
        <function-ref name="isInput" scoped="" ref="0x7f402440d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f402440d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402440d340"/>
        <function-ref name="get" scoped="" ref="0x7f402440d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402440d660"/>
        <function-ref name="set" scoped="" ref="0x7f402440d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f402440d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402440be20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402440be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402440a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402440a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f402440a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402440a670"/>
        <function-ref name="get" scoped="" ref="0x7f402440a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402440a990"/>
        <function-ref name="set" scoped="" ref="0x7f402440ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f402440acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40244070a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40244070a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024407420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40244075b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024407740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40244078d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024407a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024407bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4024407d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4024406020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4024f43760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4024f43760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f43ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f43c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f43e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f42020"/>
        <function-ref name="get" scoped="" ref="0x7f4024f421b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f42340"/>
        <function-ref name="set" scoped="" ref="0x7f4024f424d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f42660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f4024f40c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f4024f40c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f3f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f3f1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f3f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f3f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f3f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f3f7f0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f3f980"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f3fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4024f463f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4024f463f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f46770"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f46900"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f46a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f46c20"/>
        <function-ref name="get" scoped="" ref="0x7f4024f46db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f44020"/>
        <function-ref name="set" scoped="" ref="0x7f4024f441b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f44340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f4024f428f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f4024f428f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f42c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f42e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f41020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f411b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f41340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f414d0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f41660"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f417f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f4024f3fda0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f4024f3fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f3e180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f3e310"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f3e4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f3e630"/>
        <function-ref name="get" scoped="" ref="0x7f4024f3e7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f3e950"/>
        <function-ref name="set" scoped="" ref="0x7f4024f3eae0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f3ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f4024f445d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f4024f445d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f44950"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f44ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f44c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f44e00"/>
        <function-ref name="get" scoped="" ref="0x7f4024f43020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f431b0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f43340"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4024f41a80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4024f41a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f41e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f40020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f401b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f40340"/>
        <function-ref name="get" scoped="" ref="0x7f4024f404d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f40660"/>
        <function-ref name="set" scoped="" ref="0x7f4024f407f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f40980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f4024f3d020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f4024f3d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f3d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f3d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f3d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f3d850"/>
        <function-ref name="get" scoped="" ref="0x7f4024f3d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f3db70"/>
        <function-ref name="set" scoped="" ref="0x7f4024f3dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40243b3c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40243b3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40243b20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40243b2230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40243b23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40243b2550"/>
        <function-ref name="get" scoped="" ref="0x7f40243b26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40243b2870"/>
        <function-ref name="set" scoped="" ref="0x7f40243b2a00"/>
        <function-ref name="clr" scoped="" ref="0x7f40243b2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40243b0e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40243b0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40243af1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f40243af350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40243af4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40243af670"/>
        <function-ref name="get" scoped="" ref="0x7f40243af800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40243af990"/>
        <function-ref name="set" scoped="" ref="0x7f40243afb20"/>
        <function-ref name="clr" scoped="" ref="0x7f40243afcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40243ac0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40243ac0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40243ac420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40243ac5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40243ac740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40243ac8d0"/>
        <function-ref name="get" scoped="" ref="0x7f40243aca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40243acbf0"/>
        <function-ref name="set" scoped="" ref="0x7f40243acd80"/>
        <function-ref name="clr" scoped="" ref="0x7f40243ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40243a93f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40243a93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40243a9770"/>
        <function-ref name="isInput" scoped="" ref="0x7f40243a9900"/>
        <function-ref name="toggle" scoped="" ref="0x7f40243a9a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40243a9c20"/>
        <function-ref name="get" scoped="" ref="0x7f40243a9db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40243a8020"/>
        <function-ref name="set" scoped="" ref="0x7f40243a81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f40243a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40243a66d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40243a66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40243a6a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f40243a6be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f40243a6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40243a5020"/>
        <function-ref name="get" scoped="" ref="0x7f40243a51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40243a5340"/>
        <function-ref name="set" scoped="" ref="0x7f40243a54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f40243a5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40243a39b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40243a39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40243a3d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f40243a2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40243a21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40243a2340"/>
        <function-ref name="get" scoped="" ref="0x7f40243a24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f40243a2660"/>
        <function-ref name="set" scoped="" ref="0x7f40243a27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f40243a2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40243a0e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40243a0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402439f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f402439f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f402439f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402439f670"/>
        <function-ref name="get" scoped="" ref="0x7f402439f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402439f990"/>
        <function-ref name="set" scoped="" ref="0x7f402439fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f402439fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402439c0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402439c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402439c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f402439c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402439c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402439c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f402439ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402439cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f402439cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f402439b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f4024f34a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f4024f34a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f34e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f33020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f331b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f33340"/>
        <function-ref name="get" scoped="" ref="0x7f4024f334d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f33660"/>
        <function-ref name="set" scoped="" ref="0x7f4024f337f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f33980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f4024f30020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f4024f30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f303a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f30530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f306c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f30850"/>
        <function-ref name="get" scoped="" ref="0x7f4024f309e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f30b70"/>
        <function-ref name="set" scoped="" ref="0x7f4024f30d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f4024f367a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f4024f367a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f36b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f36cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f36e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f35020"/>
        <function-ref name="get" scoped="" ref="0x7f4024f351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f35340"/>
        <function-ref name="set" scoped="" ref="0x7f4024f354d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f35660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f4024f33c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f4024f33c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f32020"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f321b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f32340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f324d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f32660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f327f0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f32980"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f32b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f4024f2f2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f4024f2f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f2f630"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f2f7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f2f950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f2fae0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f2fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f2fe00"/>
        <function-ref name="set" scoped="" ref="0x7f4024f2e020"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f2e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f4024f358f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f4024f358f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f35c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f35e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f34020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f341b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f34340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f344d0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f34660"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f347f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f4024f32da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f4024f32da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f31180"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f31310"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f314a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f31630"/>
        <function-ref name="get" scoped="" ref="0x7f4024f317c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f31950"/>
        <function-ref name="set" scoped="" ref="0x7f4024f31ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f31c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f4024f2e440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f4024f2e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f2e7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f2e950"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f2eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f2ec70"/>
        <function-ref name="get" scoped="" ref="0x7f4024f2ee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f2d020"/>
        <function-ref name="set" scoped="" ref="0x7f4024f2d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f2d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024348c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024348c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40243470a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024347230"/>
        <function-ref name="toggle" scoped="" ref="0x7f40243473c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024347550"/>
        <function-ref name="get" scoped="" ref="0x7f40243476e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024347870"/>
        <function-ref name="set" scoped="" ref="0x7f4024347a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024347b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024345e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024345e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40243441c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024344350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40243444e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024344670"/>
        <function-ref name="get" scoped="" ref="0x7f4024344800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024344990"/>
        <function-ref name="set" scoped="" ref="0x7f4024344b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4024344cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40243410a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40243410a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024341420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40243415b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024341740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40243418d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024341a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024341bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4024341d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4024340020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402433e3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402433e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402433e770"/>
        <function-ref name="isInput" scoped="" ref="0x7f402433e900"/>
        <function-ref name="toggle" scoped="" ref="0x7f402433ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402433ec20"/>
        <function-ref name="get" scoped="" ref="0x7f402433edb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402433d020"/>
        <function-ref name="set" scoped="" ref="0x7f402433d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f402433d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f402433b6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f402433b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f402433ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f402433bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f402433bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f402433a020"/>
        <function-ref name="get" scoped="" ref="0x7f402433a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f402433a340"/>
        <function-ref name="set" scoped="" ref="0x7f402433a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f402433a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40243389b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40243389b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024338d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024337020"/>
        <function-ref name="toggle" scoped="" ref="0x7f40243371b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024337340"/>
        <function-ref name="get" scoped="" ref="0x7f40243374d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024337660"/>
        <function-ref name="set" scoped="" ref="0x7f40243377f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024337980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024335e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024335e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f40243341c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024334350"/>
        <function-ref name="toggle" scoped="" ref="0x7f40243344e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024334670"/>
        <function-ref name="get" scoped="" ref="0x7f4024334800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024334990"/>
        <function-ref name="set" scoped="" ref="0x7f4024334b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4024334cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f40243310a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f40243310a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024331420"/>
        <function-ref name="isInput" scoped="" ref="0x7f40243315b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024331740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f40243318d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024331a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024331bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4024331d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4024330020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024f27e20" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024f27e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f261c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f26350"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f264e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f26670"/>
        <function-ref name="get" scoped="" ref="0x7f4024f26800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f26990"/>
        <function-ref name="set" scoped="" ref="0x7f4024f26b20"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f26cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024f219b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024f219b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f21d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f20020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f201b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f20340"/>
        <function-ref name="get" scoped="" ref="0x7f4024f204d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f20660"/>
        <function-ref name="set" scoped="" ref="0x7f4024f207f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f20980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024f1c6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024f1c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f1ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f1cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f1cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f1b020"/>
        <function-ref name="get" scoped="" ref="0x7f4024f1b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f1b340"/>
        <function-ref name="set" scoped="" ref="0x7f4024f1b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f1b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024f16160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024f16160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f164e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f16670"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f16800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f16990"/>
        <function-ref name="get" scoped="" ref="0x7f4024f16b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f16cb0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f16e40"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f15020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024f11c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024f11c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f100a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f10230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f103c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f10550"/>
        <function-ref name="get" scoped="" ref="0x7f4024f106e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f10870"/>
        <function-ref name="set" scoped="" ref="0x7f4024f10a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f10b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024f0c6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024f0c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f0ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f0cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f0cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f0b020"/>
        <function-ref name="get" scoped="" ref="0x7f4024f0b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f0b340"/>
        <function-ref name="set" scoped="" ref="0x7f4024f0b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f0b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024f06270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024f06270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f065f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f06780"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f06910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f06aa0"/>
        <function-ref name="get" scoped="" ref="0x7f4024f06c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f06dc0"/>
        <function-ref name="set" scoped="" ref="0x7f4024f05020"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024f01d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024f01d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024f000a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024f00230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024f003c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024f00550"/>
        <function-ref name="get" scoped="" ref="0x7f4024f006e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024f00870"/>
        <function-ref name="set" scoped="" ref="0x7f4024f00a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024f00b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024efc6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024efc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024efca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024efcbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024efcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024efb020"/>
        <function-ref name="get" scoped="" ref="0x7f4024efb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024efb340"/>
        <function-ref name="set" scoped="" ref="0x7f4024efb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024efb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024ef6160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024ef6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024ef64e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024ef6670"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024ef6800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024ef6990"/>
        <function-ref name="get" scoped="" ref="0x7f4024ef6b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024ef6cb0"/>
        <function-ref name="set" scoped="" ref="0x7f4024ef6e40"/>
        <function-ref name="clr" scoped="" ref="0x7f4024ef5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024ef1c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024ef1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024ef00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024ef0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024ef03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024ef0550"/>
        <function-ref name="get" scoped="" ref="0x7f4024ef06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024ef0870"/>
        <function-ref name="set" scoped="" ref="0x7f4024ef0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024ef0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024eec6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024eec6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024eeca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024eecbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024eecd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024eeb020"/>
        <function-ref name="get" scoped="" ref="0x7f4024eeb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024eeb340"/>
        <function-ref name="set" scoped="" ref="0x7f4024eeb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024eeb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024ee6160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024ee6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024ee64e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024ee6670"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024ee6800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024ee6990"/>
        <function-ref name="get" scoped="" ref="0x7f4024ee6b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024ee6cb0"/>
        <function-ref name="set" scoped="" ref="0x7f4024ee6e40"/>
        <function-ref name="clr" scoped="" ref="0x7f4024ee5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024ee2c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024ee2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024ee00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024ee0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024ee03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024ee0550"/>
        <function-ref name="get" scoped="" ref="0x7f4024ee06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024ee0870"/>
        <function-ref name="set" scoped="" ref="0x7f4024ee0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024ee0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024ec4020" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024ec4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024ec43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024ec4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024ec46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024ec4850"/>
        <function-ref name="get" scoped="" ref="0x7f4024ec49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024ec4b70"/>
        <function-ref name="set" scoped="" ref="0x7f4024ec4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024ec3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024ec06d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024ec06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024ec0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024ec0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024ec0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024ebe020"/>
        <function-ref name="get" scoped="" ref="0x7f4024ebe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024ebe340"/>
        <function-ref name="set" scoped="" ref="0x7f4024ebe4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024ebe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024ebbc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024ebbc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024eba0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024eba230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024eba3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024eba550"/>
        <function-ref name="get" scoped="" ref="0x7f4024eba6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024eba870"/>
        <function-ref name="set" scoped="" ref="0x7f4024ebaa00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024ebab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024eb5180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024eb5180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024eb5500"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024eb5690"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024eb5820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024eb59b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024eb5b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024eb5cd0"/>
        <function-ref name="set" scoped="" ref="0x7f4024eb5e60"/>
        <function-ref name="clr" scoped="" ref="0x7f4024eb4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024eb1830" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024eb1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024eb1bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024eb1d40"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024eb0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024eb01b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024eb0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024eb04d0"/>
        <function-ref name="set" scoped="" ref="0x7f4024eb0660"/>
        <function-ref name="clr" scoped="" ref="0x7f4024eb07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024eace20" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024eace20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024eab1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024eab350"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024eab4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024eab670"/>
        <function-ref name="get" scoped="" ref="0x7f4024eab800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024eab990"/>
        <function-ref name="set" scoped="" ref="0x7f4024eabb20"/>
        <function-ref name="clr" scoped="" ref="0x7f4024eabcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024ea6460" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024ea6460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024ea67e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024ea6970"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024ea6b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024ea6c90"/>
        <function-ref name="get" scoped="" ref="0x7f4024ea6e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024ea5020"/>
        <function-ref name="set" scoped="" ref="0x7f4024ea51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024ea5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024ea29b0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024ea29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024ea2d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024ea1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024ea11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024ea1340"/>
        <function-ref name="get" scoped="" ref="0x7f4024ea14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024ea1660"/>
        <function-ref name="set" scoped="" ref="0x7f4024ea17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024ea1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e9c160" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e9c160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e9c4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e9c670"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e9c800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e9c990"/>
        <function-ref name="get" scoped="" ref="0x7f4024e9cb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e9ccb0"/>
        <function-ref name="set" scoped="" ref="0x7f4024e9ce40"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e976d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e976d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e97a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e97be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e97d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e96020"/>
        <function-ref name="get" scoped="" ref="0x7f4024e961b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e96340"/>
        <function-ref name="set" scoped="" ref="0x7f4024e964d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e96660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e93c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e93c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e920a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e92230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e923c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e92550"/>
        <function-ref name="get" scoped="" ref="0x7f4024e926e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e92870"/>
        <function-ref name="set" scoped="" ref="0x7f4024e92a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e92b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e8d180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e8d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e8d500"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e8d690"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e8d820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e8d9b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024e8db40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e8dcd0"/>
        <function-ref name="set" scoped="" ref="0x7f4024e8de60"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e886d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e886d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e88a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e88be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e88d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e87020"/>
        <function-ref name="get" scoped="" ref="0x7f4024e871b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e87340"/>
        <function-ref name="set" scoped="" ref="0x7f4024e874d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e87660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e84c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e84c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e830a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e83230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e833c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e83550"/>
        <function-ref name="get" scoped="" ref="0x7f4024e836e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e83870"/>
        <function-ref name="set" scoped="" ref="0x7f4024e83a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e83b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e7e180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e7e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e7e500"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e7e690"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e7e820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e7e9b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024e7eb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e7ecd0"/>
        <function-ref name="set" scoped="" ref="0x7f4024e7ee60"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e796d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e796d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e79a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e79be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e79d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e78020"/>
        <function-ref name="get" scoped="" ref="0x7f4024e781b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e78340"/>
        <function-ref name="set" scoped="" ref="0x7f4024e784d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e78660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e75c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e75c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e740a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e74230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e743c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e74550"/>
        <function-ref name="get" scoped="" ref="0x7f4024e746e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e74870"/>
        <function-ref name="set" scoped="" ref="0x7f4024e74a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e74b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e6f180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e6f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e6f500"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e6f690"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e6f820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e6f9b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024e6fb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e6fcd0"/>
        <function-ref name="set" scoped="" ref="0x7f4024e6fe60"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e6a6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e6a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e6aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e6abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e6ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e69020"/>
        <function-ref name="get" scoped="" ref="0x7f4024e691b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e69340"/>
        <function-ref name="set" scoped="" ref="0x7f4024e694d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e69660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e66c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e66c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e650a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e65230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e653c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e65550"/>
        <function-ref name="get" scoped="" ref="0x7f4024e656e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e65870"/>
        <function-ref name="set" scoped="" ref="0x7f4024e65a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e65b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e60180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e60180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e60500"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e60690"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e60820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e609b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024e60b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e60cd0"/>
        <function-ref name="set" scoped="" ref="0x7f4024e60e60"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e5c6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e5c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e5ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e5cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e5cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e5a020"/>
        <function-ref name="get" scoped="" ref="0x7f4024e5a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e5a340"/>
        <function-ref name="set" scoped="" ref="0x7f4024e5a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e5a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e57c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e57c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e560a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e56230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e563c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e56550"/>
        <function-ref name="get" scoped="" ref="0x7f4024e566e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e56870"/>
        <function-ref name="set" scoped="" ref="0x7f4024e56a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e56b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e51180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e51180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e51500"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e51690"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e51820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e519b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024e51b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e51cd0"/>
        <function-ref name="set" scoped="" ref="0x7f4024e51e60"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e4d6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e4d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e4da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e4dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e4dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e4b020"/>
        <function-ref name="get" scoped="" ref="0x7f4024e4b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e4b340"/>
        <function-ref name="set" scoped="" ref="0x7f4024e4b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e4b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e48c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e48c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e470a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e47230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e473c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e47550"/>
        <function-ref name="get" scoped="" ref="0x7f4024e476e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e47870"/>
        <function-ref name="set" scoped="" ref="0x7f4024e47a00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e47b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e42180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e42180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e42500"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e42690"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e42820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e429b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024e42b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e42cd0"/>
        <function-ref name="set" scoped="" ref="0x7f4024e42e60"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e3e6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e3e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e3ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e3ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e3ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e3d020"/>
        <function-ref name="get" scoped="" ref="0x7f4024e3d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e3d340"/>
        <function-ref name="set" scoped="" ref="0x7f4024e3d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e3d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e380a0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e380a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e38420"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e385b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e38740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e388d0"/>
        <function-ref name="get" scoped="" ref="0x7f4024e38a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e38bf0"/>
        <function-ref name="set" scoped="" ref="0x7f4024e38d80"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e336d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e336d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e33a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e33be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e33d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e32020"/>
        <function-ref name="get" scoped="" ref="0x7f4024e321b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e32340"/>
        <function-ref name="set" scoped="" ref="0x7f4024e324d0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e32660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e2fc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e2fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e2e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e2e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e2e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e2e550"/>
        <function-ref name="get" scoped="" ref="0x7f4024e2e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e2e870"/>
        <function-ref name="set" scoped="" ref="0x7f4024e2ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e2eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f4024e29180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f4024e29180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024e29500"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024e29690"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024e29820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024e299b0"/>
        <function-ref name="get" scoped="" ref="0x7f4024e29b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024e29cd0"/>
        <function-ref name="set" scoped="" ref="0x7f4024e29e60"/>
        <function-ref name="clr" scoped="" ref="0x7f4024e28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f4024dd4e60" loc="12:PS2/PS2C.nc">
      <component-ref qname="PS2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f4024dd4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4024dd1210"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f4024dd13a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockIRQ" ref="0x7f4024da2d90" loc="19:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockIRQ" scoped="" ref="0x7f4024da2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f4024da8180"/>
        <function-ref name="fired" scoped="" ref="0x7f4024da8310"/>
        <function-ref name="disable" scoped="" ref="0x7f4024da84a0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f4024da8630"/>
        <function-ref name="reset" scoped="" ref="0x7f4024da87c0"/>
        <function-ref name="setMask" scoped="" ref="0x7f4024da8950"/>
        <function-ref name="enable" scoped="" ref="0x7f4024da8ae0"/>
        <function-ref name="getPins" scoped="" ref="0x7f4024da8c70"/>
        <function-ref name="getMask" scoped="" ref="0x7f4024da8e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockPin" ref="0x7f4024da71c0" loc="20:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockPin" scoped="" ref="0x7f4024da71c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024da7540"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024da76d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024da7860"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024da79f0"/>
        <function-ref name="get" scoped="" ref="0x7f4024da7b80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024da7d10"/>
        <function-ref name="set" scoped="" ref="0x7f4024da1020"/>
        <function-ref name="clr" scoped="" ref="0x7f4024da11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataPin" ref="0x7f4024da14f0" loc="21:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPin" scoped="" ref="0x7f4024da14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024da1870"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024da1a00"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024da1b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024da1d20"/>
        <function-ref name="get" scoped="" ref="0x7f4024da0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024da01b0"/>
        <function-ref name="set" scoped="" ref="0x7f4024da0340"/>
        <function-ref name="clr" scoped="" ref="0x7f4024da04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f4024daa7e0" loc="16:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f4024daa7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4024daab60"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f4024daacf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x7f4024dcfa30" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <component-ref qname="HplAtmegaPinChange2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f4024dcfa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f4024dcfdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f4024d79020"/>
        <function-ref name="disable" scoped="" ref="0x7f4024d791b0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f4024d79340"/>
        <function-ref name="reset" scoped="" ref="0x7f4024d794d0"/>
        <function-ref name="setMask" scoped="" ref="0x7f4024d79660"/>
        <function-ref name="enable" scoped="" ref="0x7f4024d797f0"/>
        <function-ref name="getPins" scoped="" ref="0x7f4024d79980"/>
        <function-ref name="getMask" scoped="" ref="0x7f4024d79b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f4024d61020" loc="14:VolumeAdc/VolumeAdcC.nc">
      <component-ref qname="VolumeAdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f4024d61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4024d61c10"/>
        <function-ref name="readDone" scoped="" ref="0x7f4024d600d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f4024d5ca20" loc="17:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024d5ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4024d5cda0"/>
        <function-ref name="configure" scoped="" ref="0x7f4024d5b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumePin" ref="0x7f4024d5b3d0" loc="19:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumePin" scoped="" ref="0x7f4024d5b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024d5b750"/>
        <function-ref name="isInput" scoped="" ref="0x7f4024d5b8e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024d5ba70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f4024d5bc00"/>
        <function-ref name="get" scoped="" ref="0x7f4024d5bd90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024d59020"/>
        <function-ref name="set" scoped="" ref="0x7f4024d591b0"/>
        <function-ref name="clr" scoped="" ref="0x7f4024d59340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcConfig" ref="0x7f4024d5c080" loc="16:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f4024d5c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f4024d5c400"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4024d5c590"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f4024d5c720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4024c0cc10" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024c0cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4024c0b020"/>
        <function-ref name="configure" scoped="" ref="0x7f4024c0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f4024c0ebe0" loc="22:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f4024c0ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4024c0d860"/>
        <function-ref name="readDone" scoped="" ref="0x7f4024c0dce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f4024c0c320" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f4024c0c320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f4024c0c6a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4024c0c830"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f4024c0c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f4024d49920" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f4024d49920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4024d48560"/>
        <function-ref name="readDone" scoped="" ref="0x7f4024d489e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f4024d428f0" loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f4024d428f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4024d465a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f4024d46a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f4024d415e0" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4024d415e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4024d41960"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4024d41af0"/>
        <function-ref name="request" scoped="" ref="0x7f4024d41c80"/>
        <function-ref name="granted" scoped="" ref="0x7f4024d41e10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4024d40020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f4024d456d0" loc="23:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f4024d456d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f4024d45a50"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4024d45be0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f4024d45d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4024d35210" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024d35210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4024d35590"/>
        <function-ref name="configure" scoped="" ref="0x7f4024d35720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7f4024d36780" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f4024d36780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f4024d36b00"/>
        <function-ref name="cancel" scoped="" ref="0x7f4024d36c90"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4024d36e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4024d3c280" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4024d3c280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4024d3c600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4024d3c790"/>
        <function-ref name="request" scoped="" ref="0x7f4024d3c920"/>
        <function-ref name="granted" scoped="" ref="0x7f4024d3cab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4024d3cc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7f4024d30420" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f4024d30420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f4024d307a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4024d30930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm1280Adc" ref="0x7f4024d1c710" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f4024d1c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f4024d1ca90"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f4024d1cc20"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f4024d1cdb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f4024d2a020"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f4024d2a1b0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f4024d2a340"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f4024d2a4d0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f4024d2a660"/>
        <function-ref name="cancel" scoped="" ref="0x7f4024d2a7f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f4024d2a980"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f4024d2ab10"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f4024d2aca0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f4024d2ae30"/>
        <function-ref name="isStarted" scoped="" ref="0x7f4024d29120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f4024d292b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f4024d29440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f4024d295d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4024d29760"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4024d298f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7f4024d2c830" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f4024d2c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f4024d2cbb0"/>
        <function-ref name="cancel" scoped="" ref="0x7f4024d2cd40"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4024d2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4024d2e830" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4024d2e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4024d2ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f4024d29be0" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f4024d29be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f4024d1b020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f4024d1b1b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f4024d1b340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f4024d1b4d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f4024d1b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f4024d2c020" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4024d2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4024d2c3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4024d2c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7f4024d2b330" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f4024d2b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f4024d2b6b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4024d2b840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7f4024ce9460" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <component-ref qname="HplAtm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f4024ce9460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f4024ce97e0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f4024ce9970"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f4024ce9b00"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f4024ce9c90"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f4024ce9e20"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f4024ce7020"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f4024ce71b0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f4024ce7340"/>
        <function-ref name="cancel" scoped="" ref="0x7f4024ce74d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f4024ce7660"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f4024ce77f0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f4024ce7980"/>
        <function-ref name="startConversion" scoped="" ref="0x7f4024ce7b10"/>
        <function-ref name="isStarted" scoped="" ref="0x7f4024ce7da0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f4024ce6020"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f4024ce61b0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f4024ce6340"/>
        <function-ref name="getValue" scoped="" ref="0x7f4024ce64d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4024ce6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f4024ce1c10" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f4024ce1c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f4024ce0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7f4024ce37d0" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f4024ce37d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f4024ce3b50"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f4024ce3ce0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f4024ce3e70"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f4024ce2030"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f4024ce21c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f4024ce2350"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f4024ce24e0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f4024ce2670"/>
        <function-ref name="cancel" scoped="" ref="0x7f4024ce2800"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f4024ce2990"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f4024ce2b20"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f4024ce2cb0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f4024ce2e40"/>
        <function-ref name="isStarted" scoped="" ref="0x7f4024ce1120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f4024ce12b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f4024ce1440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f4024ce15d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f4024ce1760"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4024ce18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f4024c77c00" loc="92:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f4024c77c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4024c76020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4024c761b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4024c75930" loc="96:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024c75930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f4024c75cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f4024c75e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4024c76400" loc="93:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4024c76400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4024c76780"/>
        <function-ref name="requested" scoped="" ref="0x7f4024c76910"/>
        <function-ref name="granted" scoped="" ref="0x7f4024c76aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4024c76c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4024c76dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f4024c78e70" loc="91:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4024c78e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4024c77240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4024c773d0"/>
        <function-ref name="request" scoped="" ref="0x7f4024c77560"/>
        <function-ref name="granted" scoped="" ref="0x7f4024c776f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4024c77880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f4024c75060" loc="94:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4024c75060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4024c753e0"/>
        <function-ref name="userId" scoped="" ref="0x7f4024c75570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4024147c00" loc="44:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4024147c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4024145020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f40241452b0" loc="45:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f40241452b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4024145630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f40241457c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f4024145950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f4024145ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f40241423a0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f40241423a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f4024142740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f40241428d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f4024140210" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f4024140210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f40241405b0"/>
        <function-ref name="configure" scoped="" ref="0x7f4024140740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f40241409d0" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f40241409d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f4024140d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f402413f020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f402413f1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f402413f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f4024142b20" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4024142b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4024141020"/>
        <function-ref name="requested" scoped="" ref="0x7f40241411b0"/>
        <function-ref name="granted" scoped="" ref="0x7f4024141340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f40241414d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4024141660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f402413f590" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f402413f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f402413f910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f402413faa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f402413fc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f402413fdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f402413e020"/>
        <function-ref name="get" scoped="" ref="0x7f402413e1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f402413e340"/>
        <function-ref name="led0On" scoped="" ref="0x7f402413e980"/>
        <function-ref name="set" scoped="" ref="0x7f402413e660"/>
        <function-ref name="led2On" scoped="" ref="0x7f402413e4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f402413e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f40241434d0" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f40241434d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4024143870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4024143a00"/>
        <function-ref name="request" scoped="" ref="0x7f4024143b90"/>
        <function-ref name="granted" scoped="" ref="0x7f4024143d20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4024142020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f40241418b0" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f40241418b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4024141c30"/>
        <function-ref name="userId" scoped="" ref="0x7f4024141dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f402413ec50" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f402413ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f402413c020"/>
        <function-ref name="runTask" scoped="" ref="0x7f402413c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f4024c71780" loc="72:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f4024c71780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f4024c71b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f4024c71d50" loc="73:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f4024c71d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4024c67100"/>
        <function-ref name="requested" scoped="" ref="0x7f4024c67290"/>
        <function-ref name="granted" scoped="" ref="0x7f4024c67420"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4024c675b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4024c67740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f4024c71020" loc="70:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f4024c71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f4024c713a0"/>
        <function-ref name="stop" scoped="" ref="0x7f4024c71530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4024c67990" loc="74:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4024c67990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f4024c67d10"/>
        <function-ref name="userId" scoped="" ref="0x7f4024c66020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f402410bdc0" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f402410bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f4024109180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f40241093d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f40241093d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4024109750"/>
        <function-ref name="requested" scoped="" ref="0x7f40241098e0"/>
        <function-ref name="granted" scoped="" ref="0x7f4024109a70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4024109c00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f4024109d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f402410b660" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f402410b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f402410b9e0"/>
        <function-ref name="stop" scoped="" ref="0x7f402410bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f4024108020" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f4024108020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f40241083a0"/>
        <function-ref name="userId" scoped="" ref="0x7f4024108530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f4024c57740" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f4024c57740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb25c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4025fb2930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4024c565b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcSingle" ref="0x7f4024c5a9f0" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f4024c5a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f4024c5ad70"/>
        <function-ref name="cancel" scoped="" ref="0x7f4024c58020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f4024c581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f4024c5d410" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f4024c5d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4024c5c020"/>
        <function-ref name="readDone" scoped="" ref="0x7f4024c5c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f4024c5b1d0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f4024c5b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4024c5be00"/>
        <function-ref name="readDone" scoped="" ref="0x7f4024c5a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f4024c58a10" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f4024c58a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f4024c58d90"/>
        <function-ref name="getChannel" scoped="" ref="0x7f4024c57020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f4024c571b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f4024c46820" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f4024c46820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4024c46ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f4024c46d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f4024c19150" loc="24:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f4024c19150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4024c19d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f4024c18260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f4024c18af0" loc="26:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f4024c18af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f4024c17750"/>
        <function-ref name="readDone" scoped="" ref="0x7f4024c17bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f4024c15300" loc="27:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f4024c15300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f4024c156a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f4024c15830"/>
        <function-ref name="request" scoped="" ref="0x7f4024c159c0"/>
        <function-ref name="granted" scoped="" ref="0x7f4024c15b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f4024c15ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BufferedLcd" ref="0x7f4024d62590" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <component-ref qname="BufferedLcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BufferedLcd" scoped="" ref="0x7f4024d62590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferedLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4024d62910"/>
        <function-ref name="forceRefresh" scoped="" ref="0x7f4024d62aa0"/>
        <function-ref name="goTo" scoped="" ref="0x7f4024d62c30"/>
        <function-ref name="write" scoped="" ref="0x7f4024d62dc0"/>
        <function-ref name="autoRefresh" scoped="" ref="0x7f4024c06020"/>
        <function-ref name="write_P" scoped="" ref="0x7f4024c061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4024c04560" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="BufferedLcdC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4024c04560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4024c01a20"/>
        <function-ref name="fired" scoped="" ref="0x7f4024c02020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4024c02da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4024c02920"/>
        <function-ref name="getdt" scoped="" ref="0x7f4024c004a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f4024c00020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4024c024a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4024c031b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4024c01410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4024c03680"/>
        <function-ref name="stop" scoped="" ref="0x7f4024c03b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BufferedLcd" ref="0x7f4024bcd020" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BufferedLcd" scoped="" ref="0x7f4024bcd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferedLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f4024bcd3a0"/>
        <function-ref name="forceRefresh" scoped="" ref="0x7f4024bcd530"/>
        <function-ref name="goTo" scoped="" ref="0x7f4024bcd6c0"/>
        <function-ref name="write" scoped="" ref="0x7f4024bcd850"/>
        <function-ref name="autoRefresh" scoped="" ref="0x7f4024bcd9e0"/>
        <function-ref name="write_P" scoped="" ref="0x7f4024bcdb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4024bc7c30" loc="10:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4024bc7c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4024bc6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lcd" ref="0x7f4024bc7490" loc="9:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lcd" scoped="" ref="0x7f4024bc7490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="writeData" scoped="" ref="0x7f4024bc7810"/>
        <function-ref name="writeCommand" scoped="" ref="0x7f4024bc79a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="refresh" ref="0x7f4024bc62f0" loc="34:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="refresh" scoped="" ref="0x7f4024bc62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f4024bc6670"/>
        <function-ref name="runTask" scoped="" ref="0x7f4024bc6800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f4024bcc020" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4024bcc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4024bc8630"/>
        <function-ref name="fired" scoped="" ref="0x7f4024bcba60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4024bc9920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4024bc94a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4024bc7020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4024bc8ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4024bc9020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4024bccc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4024bc8020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4024bcb110"/>
        <function-ref name="stop" scoped="" ref="0x7f4024bcb5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplLcd" ref="0x7f4024bc1100" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <component-ref qname="HplLcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplLcd" scoped="" ref="0x7f4024bc1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="writeData" scoped="" ref="0x7f4024bc1480"/>
        <function-ref name="writeCommand" scoped="" ref="0x7f4024bc1610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f4024bbcaa0" loc="10:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f4024bbcaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb25c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f4025fb2930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f4024bbb8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f4024bc07c0" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f4024bc07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f4024bc0b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplLcd" ref="0x7f4024bc0e10" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplLcd" scoped="" ref="0x7f4024bc0e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="writeData" scoped="" ref="0x7f4024bbd1c0"/>
        <function-ref name="writeCommand" scoped="" ref="0x7f4024bbd350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port" ref="0x7f4024bbd6e0" loc="9:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Port" scoped="" ref="0x7f4024bbd6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f4024bbda60"/>
        <function-ref name="clear" scoped="" ref="0x7f4024bbdbf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f4024bbdd80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f4024bbc020"/>
        <function-ref name="read" scoped="" ref="0x7f4024bbc1b0"/>
        <function-ref name="write" scoped="" ref="0x7f4024bbc340"/>
        <function-ref name="set" scoped="" ref="0x7f4024bbc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4024ba7d00" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.VolumeTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4024ba7d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4024ba2220"/>
        <function-ref name="fired" scoped="" ref="0x7f4024ba47c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4024ba3590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4024ba3110"/>
        <function-ref name="getdt" scoped="" ref="0x7f4024ba2b20"/>
        <function-ref name="gett0" scoped="" ref="0x7f4024ba26a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4024ba4c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4024ba5940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4024ba3ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4024ba5e10"/>
        <function-ref name="stop" scoped="" ref="0x7f4024ba4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4024b9f750" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.ErrorTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4024b9f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4024b9cc40"/>
        <function-ref name="fired" scoped="" ref="0x7f4024b9d1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4024b9c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4024b9dae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4024b9b590"/>
        <function-ref name="gett0" scoped="" ref="0x7f4024b9b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4024b9d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4024b9e390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4024b9c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4024b9e860"/>
        <function-ref name="stop" scoped="" ref="0x7f4024b9ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f4024b98060" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.RDSTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f4024b98060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fb41a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f4025fb4510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f4024b95630"/>
        <function-ref name="fired" scoped="" ref="0x7f4024b97ac0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f4024b96920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f4024b964a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f4024b93020"/>
        <function-ref name="gett0" scoped="" ref="0x7f4024b95ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f4024b96020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f4024b98c50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f4024b95020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f4024b97170"/>
        <function-ref name="stop" scoped="" ref="0x7f4024b97640"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../tinyos_ws18/tos/interfaces/Init.nc">
      <documentation loc="34:../tinyos_ws18/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f4025eda740" loc="62:../tinyos_ws18/tos/interfaces/Init.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../tinyos_ws18/tos/interfaces/Boot.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f4025edb350" loc="60:../tinyos_ws18/tos/interfaces/Boot.nc">
        <documentation loc="51:../tinyos_ws18/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f4025ed2b70" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f4025ed28f0" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f4025ed5070" loc="31:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f4025ed5af0" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f4025ed5870" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f4025ed3630" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f4025ed33b0" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f4025ed2020" loc="53:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../tinyos_ws18/tos/interfaces/Scheduler.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f40260696c0" loc="57:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="54:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f40260686a0" loc="72:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f4026069e30" loc="65:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f4026060a30" loc="67:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f402605e2b0" loc="75:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../tinyos_ws18/tos/interfaces/McuSleep.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f4025f66d40" loc="76:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f4025f46940" loc="62:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f4025fe5470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f4025f471f0" loc="52:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4025e56350" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4025e56350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f4025e4f1f0" loc="136:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="132:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4025e54a60" loc="83:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f4025e52820" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4025e52250" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f4025e52590" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f4025e53a60" loc="98:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="94:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f4025e4e270" loc="151:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="146:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f4025e4f980" loc="144:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="138:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f4025e53270" loc="92:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="86:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f4025e55020" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4025e56c40" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f4025e50820" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="116:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4025e50250" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f4025e50590" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f4025e55ae0" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4025e55860" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4025e54350" loc="78:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Database" loc="23:Database/Database.nc">
      <function command="" provided="0" name="getChannelList" ref="0x7f4025e6fb50" loc="40:Database/Database.nc">
        <documentation loc="34:Database/Database.nc">
          <short>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10; </short>
          <long>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10; @param onlyFavorites tells server to send only the channels with a&#10;        registered quickDial number, if not zero&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="onlyFavorites" ref="0x7f4025e6f8d0" loc="40:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChannelEntry" ref="0x7f4025e6cc60" loc="59:Database/Database.nc">
        <documentation loc="54:Database/Database.nc">
          <short>&#10; Received highscore entry from the server.</short>
          <long>&#10; Received highscore entry from the server.&#10; @param id The channel index from the database store&#10; @param channel The channel information, see channelInfo typedef&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f4025e71ab0"/>
              <typename><typedef-ref name="channelInfo" ref="0x7f4025e70180"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4025e6c650" loc="59:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f4025e6c9d0" loc="59:Database/Database.nc">
            <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f4025e71ab0"/>
              <typename><typedef-ref name="channelInfo" ref="0x7f4025e70180"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="saveChannel" ref="0x7f4025e6f020" loc="31:Database/Database.nc">
        <documentation loc="25:Database/Database.nc">
          <short>&#10; Save a new channel, or change properties of an existing one.</short>
          <long>&#10; Save a new channel, or change properties of an existing one.&#10; @param id The channel index from the database store, 0xFF to autoselect,&#10;           must be between 0 and 15 if passed manually&#10; @param channel The channel information, see channelInfo typedef&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f4025e71ab0"/>
                <typename><typedef-ref name="channelInfo" ref="0x7f4025e70180"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4025e70930" loc="31:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f4025e70cf0" loc="31:Database/Database.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7f4025e71ab0"/>
                <typename><typedef-ref name="channelInfo" ref="0x7f4025e70180"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="savedChannel" ref="0x7f4025e6ba50" loc="67:Database/Database.nc">
        <documentation loc="61:Database/Database.nc">
          <short>&#10; Server proceesed our request to save a Channel&#10; </short>
          <long>&#10; Server proceesed our request to save a Channel&#10; @param id The channel index from the database store, the one we passed&#10;           or the which was choosen if 0xFF was passed.&#10; @param result 0 = OK, 1 = No free index (only ID auto choose), 2 = DB error &#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4025e6b470" loc="67:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="result" ref="0x7f4025e6b7c0" loc="67:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f4025e6d670" loc="46:Database/Database.nc">
        <documentation loc="42:Database/Database.nc">
          <short>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10;</short>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f4025e6d3f0" loc="46:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="purgeChannelList" ref="0x7f4025e6de30" loc="52:Database/Database.nc">
        <documentation loc="48:Database/Database.nc">
          <short>&#10; Request that the Database purges all channels and their state&#10; Received channels will be signaled through receivedChannelEntry&#10;</short>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f4025e5f620" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4025e5f620"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f4025e5a020" loc="55:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="50:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f4025e5ad50" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4025e5f620"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f4025e5a7a0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f4025e5aac0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4025e5f620"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PS2" loc="1:PS2/PS2.nc">
      <function command="" provided="0" name="init" ref="0x7f4025e69890" loc="4:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChar" ref="0x7f4025e5c2a0" loc="7:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="chr" ref="0x7f4025e5c020" loc="7:PS2/PS2.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BufferedLcd" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
      <documentation loc="44:/usr/lib/gcc/avr/4.9.1/../../../../avr/include/avr/pgmspace.h">
        <short> \defgroup avr_pgmspace &#60;avr/pgmspace.h>: Program Space Utilities&#10;\code&#10;#include &#60;avr/io.h>&#10;#include &#60;avr/pgmspace.h>&#10;\endcode&#10;The functions in this module provide interfaces for a program to access&#10;data stored in program space (flash memory) of the device.</short>
        <long> \defgroup avr_pgmspace &#60;avr/pgmspace.h>: Program Space Utilities&#10;\code&#10;#include &#60;avr/io.h>&#10;#include &#60;avr/pgmspace.h>&#10;\endcode&#10;The functions in this module provide interfaces for a program to access&#10;data stored in program space (flash memory) of the device.  In order to&#10;use these functions, the target device must support either the \c LPM or&#10;\c ELPM instructions.&#10;\note These functions are an attempt to provide some compatibility with&#10;header files that come with IAR C, to make porting applications between&#10;different compilers easier.  This is not 100% compatibility though (GCC&#10;does not have full support for multiple address spaces yet).&#10;\note If you are working with strings which are completely based in ram,&#10;use the standard string functions described in \ref avr_string.&#10;\note If possible, put your constant tables in the lower 64 KB and use&#10;pgm_read_byte_near() or pgm_read_word_near() instead of&#10;pgm_read_byte_far() or pgm_read_word_far() since it is more efficient that&#10;way, and you can still use the upper 64K for executable code.&#10;All functions that are suffixed with a \c _P \e require their&#10;arguments to be in the lower 64 KB of the flash ROM, as they do&#10;not use ELPM instructions.  This is normally not a big concern as&#10;the linker setup arranges any program space constants declared&#10;using the macros from this header file so they are placed right after&#10;the interrupt vectors, and in front of any executable code.  However,&#10;it can become a problem if there are too many of these constants, or&#10;for bootloaders on devices with more than 64 KB of ROM.&#10;&#60;em>All these functions will not work in that situation.&#60;/em>&#10;\note For &#60;b>Xmega&#60;/b> devices, make sure the NVM controller&#10;command register (\c NVM.CMD or \c NVM_CMD) is set to 0x00 (NOP)&#10;before using any of these functions.&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f4025e77c00" loc="13:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="forceRefresh" ref="0x7f4025e73390" loc="17:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="goTo" ref="0x7f4025e75c60" loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="line" ref="0x7f4025e756a0" loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="col" ref="0x7f4025e759d0" loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4025e765b0" loc="14:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="string" ref="0x7f4025e76330" loc="14:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="autoRefresh" ref="0x7f4025e774f0" loc="12:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <documentation loc="9:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
          <short>&#10; </short>
          <long>&#10; @param period&#9;refresh period in ms, set to 0 to disable auto refresh&#10;</long>
        </documentation>
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="period" ref="0x7f4025e77270" loc="12:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write_P" ref="0x7f4025e75020" loc="15:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="string" ref="0x7f4025e76c90" loc="15:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FMClick" loc="19:FMClick/FMClick.nc">
      <function command="" provided="0" name="seek" ref="0x7f4025e654f0" loc="22:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f4025e72990"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7f4025e68420"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f4025e65270" loc="22:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f4025e72990"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7f4025e68420"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x7f4025e62940" loc="30:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="res" ref="0x7f4025e626c0" loc="30:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setVolume" ref="0x7f4025e64580" loc="26:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f4025e64300" loc="26:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rdsReceived" ref="0x7f4025e60a20" loc="36:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f4025e686b0"/>
              <typename><typedef-ref name="RDSType" ref="0x7f4025e66110"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f4025e60470" loc="36:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f4025e686b0"/>
              <typename><typedef-ref name="RDSType" ref="0x7f4025e66110"/></typename>
            </type-tag>
          </variable>
          <variable name="buf" ref="0x7f4025e60790" loc="36:FMClick/FMClick.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveRDS" ref="0x7f4025e62020" loc="28:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f4025e64c80" loc="28:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tuneComplete" ref="0x7f4025e61350" loc="32:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f4025e610d0" loc="32:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f4025e65c30" loc="24:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="seekComplete" ref="0x7f4025e61d10" loc="34:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f4025e61a90" loc="34:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tune" ref="0x7f4025e66b40" loc="20:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f4025e668c0" loc="20:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Glcd" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
      <function command="" provided="0" name="drawTextPgm" ref="0x7f4025e7b980" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="109:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawTextPgm&#10;&#10; </short>
          <long>&#10; drawTextPgm&#10;&#10; @param text stored in program memory&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f4025e7b020" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f4025e7b380" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f4025e7b6e0" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawRect" ref="0x7f4025e80680" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw rectangle&#10;&#10; </short>
          <long>&#10; Draw rectangle&#10;&#10; @param upper left x&#10; @param upper left y&#10; @param lower right x&#10; @param lower right y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f4025e81920" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f4025e81c90" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f4025e80060" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f4025e803d0" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawLine" ref="0x7f4025e81140" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="45:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw line&#10;&#10; </short>
          <long>&#10; Draw line&#10;&#10; @param first point x&#10; @param first point y&#10; @param second point x&#10; @param second point y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f4025e823c0" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f4025e82730" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f4025e82ac0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f4025e82e30" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x7f4025e85020" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="12:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Set pixel&#10;&#10; </short>
          <long>&#10; Set pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f4025e86970" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f4025e86cd0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="invertPixel" ref="0x7f4025e83bd0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="34:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Invert pixel&#10;&#10; </short>
          <long>&#10; Invert pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f4025e835e0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f4025e83940" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPixel" ref="0x7f4025e85dc0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="23:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Clear pixel&#10;&#10; </short>
          <long>&#10; Clear pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f4025e857d0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f4025e85b30" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawEllipse" ref="0x7f4025e7ec30" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw ellipse&#10;&#10; </short>
          <long>&#10; Draw ellipse&#10;&#10; @param center x&#10; @param center y&#10; @param radius horizontal&#10; @param radius vertical&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f4025e80e70" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f4025e7e200" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_h" ref="0x7f4025e7e5d0" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_v" ref="0x7f4025e7e980" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawText" ref="0x7f4025e7c7b0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="97:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawText&#10;&#10; </short>
          <long>&#10; drawText&#10;&#10; @param text&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f4025e7de10" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f4025e7c1b0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f4025e7c510" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x7f4025e7d6a0" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="87:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Fill Display with pattern&#10;&#10; </short>
          <long>&#10; Fill Display with pattern&#10;&#10; @param pattern&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x7f4025e7d420" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpControl" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="setGateway" ref="0x7f4025ccfd00" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="gateway" ref="0x7f4025ccfa80" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGateway" ref="0x7f4025ccc610" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetmask" ref="0x7f4025ccd6f0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="netmask" ref="0x7f4025ccd470" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIp" ref="0x7f4025ccde40" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetmask" ref="0x7f4025cccd90" loc="15:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setIp" ref="0x7f4025ccf350" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x7f4025ccf0d0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpSend" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
      <function command="" provided="0" name="send" ref="0x7f4025cd42d0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
        <interfacedef-ref qname="UdpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f4025cd55c0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dstPort" ref="0x7f4025cd5930" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f4025cd5cb0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4025cd4020" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4025cd4c10" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
        <interfacedef-ref qname="UdpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4025cd4990" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../tinyos_ws18/tos/interfaces/SplitControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f4025cc87f0" loc="113:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="106:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4025cc8570" loc="113:../tinyos_ws18/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f4025cc7cd0" loc="138:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="132:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4025cc7a50" loc="138:../tinyos_ws18/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4025cd2b60" loc="104:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="89:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4025cc7070" loc="130:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="115:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpReceive" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f4025cd1e70" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
        <interfacedef-ref qname="UdpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f4025cd1190" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="srcPort" ref="0x7f4025cd1500" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f4025cd1880" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4025cd1bc0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketSender" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_type_t" ref="0x7f4025c1c020" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
          <interfacedef-ref qname="PacketSender"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f4025c1c020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7f4025c1cb80" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <interfacedef-ref qname="PacketSender"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f4025c1c020"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7f4025c1c900" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7f4025c1c020"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4025c1b4e0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <interfacedef-ref qname="PacketSender"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4025c1b260" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpPacket" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPacket" ref="0x7f4025c14020" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
        <interfacedef-ref qname="IpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:540" alignment="I:1"><struct-ref ref="0x7f4025cec0f0"/>
              <typename><typedef-ref name="ip_packet_t" ref="0x7f4025cec510"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpReceive" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f4025c177f0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
        <interfacedef-ref qname="IpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f4025c1ae40" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f4025c17210" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4025c17550" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcReceive" loc="8:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f4025c032f0" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
        <interfacedef-ref qname="LlcReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f4025c11350"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f4025c116c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcMac" ref="0x7f4025c09c80" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f4025c11350"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f4025c116c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f4025c03060" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcSend" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4025c07dd0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
        <interfacedef-ref qname="LlcSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f4025c11350"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f4025c116c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstMac" ref="0x7f4025c07470" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f4025c11350"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f4025c116c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f4025c077f0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4025c07b30" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4025c05730" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
        <interfacedef-ref qname="LlcSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4025c054b0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Arp" loc="10:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
      <function command="" provided="0" name="resolve" ref="0x7f4025bfb2a0" loc="11:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
        <interfacedef-ref qname="Arp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x7f4025bfb020" loc="11:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resolved" ref="0x7f4025bfbc40" loc="12:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
        <interfacedef-ref qname="Arp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f4025c11350"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f4025c116c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="macPtr" ref="0x7f4025bfb9c0" loc="12:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f4025c11350"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f4025c116c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MacControl" loc="10:../tinyos_ws18/tos/lib_ecs/llc/MacControl.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMac" ref="0x7f4025bb7940" loc="11:../tinyos_ws18/tos/lib_ecs/llc/MacControl.nc">
        <interfacedef-ref qname="MacControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f4025c11350"/>
              <typename><typedef-ref name="mac_addr_t" ref="0x7f4025c116c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mac" loc="10:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4025bb55f0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f4025c10de0"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f4025c0f230"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4025bb5020" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f4025c10de0"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f4025c0f230"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4025bb5360" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="received" ref="0x7f4025bb49c0" loc="13:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f4025c10de0"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f4025c0f230"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4025bb4740" loc="13:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7f4025c10de0"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7f4025c0f230"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4025bb4020" loc="12:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4025bb5cb0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMac" ref="0x7f4025bb2190" loc="14:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f4025c11350"/>
              <typename><typedef-ref name="mac_addr_t" ref="0x7f4025c116c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcQueue" loc="8:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4025b94420" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <interfacedef-ref qname="LlcQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f4025c11350"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f4025c116c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstMac" ref="0x7f4025b95710" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7f4025c11350"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7f4025c116c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etherType" ref="0x7f4025b95a90" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f4025b95e10" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4025b94170" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4025b94d60" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <interfacedef-ref qname="LlcQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4025b94ae0" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketQueue" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_type" ref="0x7f4025b86550" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
          <interfacedef-ref qname="PacketQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_type" scoped="" ref="0x7f4025b86550"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7f4025b83a60" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f4025b837e0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBuffer" ref="0x7f4025b83150" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_type" scoped="" ref="0x7f4025b86550"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f4025b86e20" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4025b82730" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7f4025b82150" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4025b824a0" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4025ade6d0" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4025ade6d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4025adb020" loc="61:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f4026985170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4025aca410" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4025aca410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4025aca650" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025aca650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f4025ac9020" loc="64:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025aca650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f4025ac8120" loc="76:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f4025ac98a0" loc="71:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f4025ac8880" loc="82:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="78:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4025ad7ba0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4025ad7ba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4025ad7de0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025ad7de0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f4025ad19c0" loc="109:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="105:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025ad7de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4025ad39b0" loc="78:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f4025ad1020" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="90:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025ad7de0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025ad7de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f4025ad2a10" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025ad7de0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f4025ad2d50" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025ad7de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f4025ad21f0" loc="88:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="81:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f4025acf1f0" loc="116:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="111:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025ad7de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4025ad4960" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025ad7de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f4025ad46e0" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025ad7de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4025ad31f0" loc="73:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="68:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f4025a9ae50" loc="89:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f4025a9bc40" loc="85:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f4025a9d8c0" loc="79:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f4025a9a680" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f4025a9a400" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f4025a9b470" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4025a9b1f0" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f4025a98890" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f4025a98610" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f4025a9c0e0" loc="80:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f4025a9ca80" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f4025a9c800" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280TimerSync" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
      <documentation loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changedto Sync for Atm1280&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer2Synchronous" ref="0x7f4025a8a020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Turn on timer 2 synchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBBusy" ref="0x7f4025a870e0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f4025a88020" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f4025a8a7a0" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f4025a878f0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f4025a88850" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f4025a8ebe0" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f4025f974d0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f4025f978f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f4025a8b660" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f4025f974d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f4025f978f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f4025a8b3e0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f4025f974d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f4025f978f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f4025a9e3d0" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025a9e3d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f4025a91020" loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4025a94020" loc="58:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4025a9ed10" loc="48:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025a9e3d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f4025a94790" loc="62:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f4025a917e0" loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4025a95710" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025a9e3d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f4025a95490" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025a9e3d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4025a92020" loc="65:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4025a92770" loc="68:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f4025aada20" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f4025aada20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f4025aa52d0" loc="98:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f4025aa6350" loc="87:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4025aaa390" loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f4025aada20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f4025aa5cb0" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f4025aa5a30" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f4025aa4510" loc="110:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f4025aa9c90" loc="75:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f4025aa9500" loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f4025aa6b10" loc="93:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4025aaad40" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f4025aada20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f4025aaaac0" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f4025aada20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f4025aa8420" loc="78:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f4025aa8b70" loc="81:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpReceive" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7f402590b140" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
        <interfacedef-ref qname="IcmpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7f402590d460" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="code" ref="0x7f402590d7a0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f402590db20" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f402590de60" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpSend" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f402590f620" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <interfacedef-ref qname="IcmpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f4025910490" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x7f40259107d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="code" ref="0x7f4025910b10" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f402590f020" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f402590f360" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f402590e020" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <interfacedef-ref qname="IcmpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f402590fce0" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpSend" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4025902df0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <interfacedef-ref qname="IpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f4025902490" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7f4025902810" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4025902b50" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4025900770" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <interfacedef-ref qname="IpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f40259004f0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f40258fa990" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <interfacedef-ref qname="IpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f40258fdc50" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="protocol" ref="0x7f40258fa020" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f40258fa3a0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f40258fa6e0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f40258f8350" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <interfacedef-ref qname="IpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f40258f80d0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f40258b16d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <interfacedef-ref qname="IcmpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f40258b2660" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x7f40258b29a0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="code" ref="0x7f40258b2ce0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f40258b10d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f40258b1410" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f40258b0040" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <interfacedef-ref qname="IcmpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f40258b1d90" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Enc28j60Control" loc="11:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
      <function event="" provided="0" name="linkChange" ref="0x7f4025849600" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
        <interfacedef-ref qname="Enc28j60Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f40258793a0"/>
              <typename><typedef-ref name="link_status_t" ref="0x7f4025879ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7f4025849380" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f40258793a0"/>
              <typename><typedef-ref name="link_status_t" ref="0x7f4025879ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f40258428a0" loc="44:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f4025841020" loc="45:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f4025844a40" loc="42:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f4025841e80" loc="47:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f4025842190" loc="43:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f4025841740" loc="46:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f4025847c00" loc="40:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f4025844350" loc="41:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../tinyos_ws18/tos/interfaces/SpiByte.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f4025836020" loc="45:../tinyos_ws18/tos/interfaces/SpiByte.nc">
        <documentation loc="40:../tinyos_ws18/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f402583ec50" loc="45:../tinyos_ws18/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f402583a460" loc="56:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4025838020" loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f402583cce0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f40258396a0" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f4025839420" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f402583c580" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f402583ac10" loc="63:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../tinyos_ws18/tos/interfaces/Resource.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f4025832120" loc="120:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f4025833120" loc="97:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f4025835770" loc="88:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f4025833910" loc="102:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f4025832b80" loc="128:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="122:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f402564aac0" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f402564a150" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f402564a4e0" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f402564a820" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f40256410e0" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f4025643380" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f4025643710" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4025643a50" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f4025643dc0" loc="83:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f402564e5b0" loc="62:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f402564e330" loc="62:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f402564d9a0" loc="74:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f402564d720" loc="74:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f402564ee20" loc="68:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f402564c4d0" loc="81:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f402564c250" loc="81:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiControl" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
      <function command="" provided="0" name="setClock" ref="0x7f4025652500" loc="26:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
        <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
          <short>&#10; Control Spi speed&#10; &#10; IMPORTANT NOTE: Speed is reset to default after each resource release.</short>
          <long>&#10; Control Spi speed&#10; &#10; IMPORTANT NOTE: Speed is reset to default after each resource release.&#10; &#10;&#10; @param speed Spi speed in Fosc/speed&#10;&#10;    SPI_SPEED_4   - Set to Fosc/4&#10;    SPI_SPEED_16  - Set to Fosc/16&#10;    SPI_SPEED_64  - Set to Fosc/64&#10;    SPI_SPEED_128 - Set to Fosc/128&#10;    SPI_SPEED_2   - Set to Fosc/2&#10;    SPI_SPEED_8   - Set to Fosc/8&#10;    SPI_SPEED_32  - Set to Fosc/32&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f40256562d0"/>
              <typename><typedef-ref name="spi_speed_t" ref="0x7f4025653a20"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f4025652280" loc="26:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f40256562d0"/>
              <typename><typedef-ref name="spi_speed_t" ref="0x7f4025653a20"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f402562d420" loc="86:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f40256231f0" loc="126:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f4025628b70" loc="117:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f4025623c10" loc="128:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f4025623990" loc="128:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f402562ec40" loc="83:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f4025625750" loc="122:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f40256254d0" loc="122:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f40256292a0" loc="113:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f4025629020" loc="113:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f402562b3b0" loc="97:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f402561d720" loc="141:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f402561d4a0" loc="141:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f4025629a40" loc="114:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f4025621d50" loc="131:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f4025621ad0" loc="131:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f4025620cf0" loc="136:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f4025624a30" loc="125:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f40256247b0" loc="125:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f402561fc90" loc="140:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f40256265c0" loc="119:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f4025626340" loc="119:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f402562bd90" loc="103:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f402562bb10" loc="103:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f4025628410" loc="116:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f4025628190" loc="116:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f4025624020" loc="123:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f40256213b0" loc="129:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f4025620510" loc="132:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f402561f4d0" loc="138:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f4025626d40" loc="120:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f402562dbb0" loc="89:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f402562a7c0" loc="109:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f402562a540" loc="109:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f4025618780" loc="90:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f4025617020" loc="98:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f40255bc020" loc="95:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f40255bc870" loc="105:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f4025569a70" loc="53:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f40255663e0" loc="61:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f4025563350" loc="65:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f4025567aa0" loc="59:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f402555a4c0" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f40255623f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f402555a240" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f40255623f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f402555c3b0" loc="53:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f402555b020" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f40255623f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f402555cc30" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f40255623f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f402555b930" loc="70:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f40255623f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f40254f6390" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f4025462620" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <interfacedef-ref qname="UdpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7f40254634d0" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7f4025cf02b0"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7f4025cf06d0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="srcPort" ref="0x7f4025463840" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
          <variable name="dstPort" ref="0x7f4025463bb0" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f4025462020" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f4025462360" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f4025460020" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <interfacedef-ref qname="UdpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4025462ce0" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f402542ead0" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f402542ead0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f402542b140" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f402542faa0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f402542d430" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f402542faa0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f402542d780" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f402542dad0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f402542de50" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f4025425a90" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f4025426da0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f4025425110" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f4025425460" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f40254257e0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f4025429020" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f402542faa0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f402542a2c0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f402542faa0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f402542a610" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f402542a960" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f402542ace0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f4025428da0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f40254280d0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f4025428420" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f4025428770" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f4025428af0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplKS0108" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <short>&#10; Hpl interface for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl interface for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="dataWrite" ref="0x7f40252fb460" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="48:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write data&#10;&#10; </short>
          <long>&#10; Write data&#10;&#10; @param The controller to write to&#10; @param data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f40252fce30" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f40252fb1d0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f40252ff1b0" loc="15:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="10:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Initialize GLCD&#10; &#10; </short>
          <long>&#10; Initialize GLCD&#10; &#10; @return SUCCESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataRead" ref="0x7f40252fc630" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="38:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read data&#10;&#10; </short>
          <long>&#10; Read data&#10;&#10; @param The controller to be read from&#10; &#10; @return data&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f40252fc3b0" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlWrite" ref="0x7f40252feb10" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write to controller&#10;&#10; </short>
          <long>&#10; Write to controller&#10;&#10; @param The controller to write to&#10; @param controller data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f40252fe500" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f40252fe880" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlRead" ref="0x7f40252ffc30" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="17:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read controller state&#10;&#10; </short>
          <long>&#10; Read controller state&#10;&#10; @param The controller to be checked&#10; &#10; @return state of the controller&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f40252ff9b0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f4025281d30" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f4025281d30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f4025277020" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025277020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f4025277b50" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025277020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f40252778d0" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f4025277020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIOPort" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f402527d2a0" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f402527d020" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f402527c5b0" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f402527c330" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f402527b020" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f402527cc80" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f402527f870" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f402527f5f0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f40252790e0" loc="13:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f402527b970" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f402527b6f0" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f402527dbd0" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f402527d950" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f40251c46c0" loc="56:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f40251c3850" loc="73:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f40251c7dd0" loc="46:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f40251c3020" loc="65:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f40251c21f0" loc="81:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../tinyos_ws18/tos/interfaces/Leds.nc">
      <documentation loc="33:../tinyos_ws18/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f40251ae390" loc="61:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f40251aeb40" loc="67:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f40251ad350" loc="72:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f40251ac2b0" loc="83:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="79:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f40251aaa20" loc="100:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="96:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f40251a9270" loc="117:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="103:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f40251adae0" loc="77:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f40251a9de0" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="120:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f40251a9b60" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f40251afbd0" loc="56:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f40251aca90" loc="89:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="86:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f40251aa270" loc="94:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f402515a770" loc="62:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f402513d2b0" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f40250fdbc0" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f40250fb350" loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f40250fa4a0" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f40250fa220" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f40250fd4a0" loc="52:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f40250f7da0" loc="65:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f40250f2b30" loc="84:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f40250f6790" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f40250f6510" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f40250f0420" loc="89:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f40250fe660" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f40250fe3e0" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f40250f7670" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f40250f73f0" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f40250f5070" loc="68:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f40250fabe0" loc="61:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f40250f4070" loc="75:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f40250fbaa0" loc="56:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f40250f23f0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f40250f2170" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f40250f1cc0" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f40250f1a40" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f40250f5870" loc="72:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f40250fed30" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f40250f9580" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f40250f9300" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f40250f4a90" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f40250f4810" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f40250f1350" loc="85:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f40250f9cb0" loc="63:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x7f4024da6190" loc="43:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f4024da9a10" loc="40:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f4024da5740" loc="54:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f4024da4020" loc="57:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f4024da68a0" loc="46:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x7f4024da22a0" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f4024da2020" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f4024da5020" loc="51:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x7f4024da2a30" loc="70:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x7f4024da47b0" loc="62:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcConfig" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
      <documentation loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f4024d5a4b0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM1280_ADC_VREF_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f4024d5dc30" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM1280_ADC_SNGL_xxx&#10;   or ATM1280_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f4024d5ad00" loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM1280_ADC_PRESCALE_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f4024d477c0" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4024d477c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f4024d440e0" loc="58:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f4024d44e50" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4024d477c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f4024d448a0" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f40260623a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f4024d44bc0" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f4024d477c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcSingle" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f4024d389c0" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega1280 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f4024d3bb10" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f4024d38020" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f4024d383a0" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f4024d38710" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4024d36350" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f4024d37a40" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4024d37470" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f4024d377b0" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcMultiple" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm1280ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f4024d32020" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f4024d331f0" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f4024d33570" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f4024d338f0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f4024d33c60" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f4024d31e00" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4024d32c50" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f4024d31020" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f4024d31380" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f4024d31760" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f4024d31b40" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280Adc" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <short>&#10; HPL interface to the Atmega1280 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega1280 A/D conversion subsystem. Please see the&#10; Atmega1280 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega1280 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f4024d21c40" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f4024d288a0" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fc0eb0"/>
            <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f4025fbf3a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f4024d1d040" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM1280_ADC_PRESCALE_xxx&#10;   values from Atm1280Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f4024d1eda0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f4024d20530" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="118:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f4024d25650" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f4024d27350" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fc0eb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f4025fbf3a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f4024d270d0" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f4025fc0eb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f4025fbf3a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f4024d235a0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f4024d1e540" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f4024d1d840" loc="150:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f4024d25db0" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f4024d224f0" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f4024d23d50" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f4024d22c80" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f4024d20d00" loc="127:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f402606c500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f4024d26650" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4025fb9cb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f4025fb8440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f4024d263d0" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4025fb9cb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f4025fb8440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f4024d214f0" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f4024d27ba0" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f4025fb9cb0"/>
            <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f4025fb8440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f4024d26e60" loc="75:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f4024d1c400" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="152:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4024d1c180" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f4026986610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplLcd" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="writeData" ref="0x7f4024bf1020" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
        <interfacedef-ref qname="HplLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f4024bf2c50" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeCommand" ref="0x7f4024bf25a0" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
        <interfacedef-ref qname="HplLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="com" ref="0x7f4024bf2320" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f4026987ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
