<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="19:RadioScannerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f9e2e5ea0c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f9e2e626720"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f9e2e626720"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f9e2e624e20"/></to>
    </wire>
    <wire loc="20:RadioScannerAppC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f9e2e5d8980"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f9e2e4ab4a0"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f9e2e4ab4a0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f9e2e478e10"/></to>
    </wire>
    <wire loc="21:RadioScannerAppC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x7f9e2e5e9e30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e2e58ee40"/></to>
    </wire>
    <wire loc="26:FMClick/FMClickC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9e2e58ee40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e2e587110"/></to>
    </wire>
    <wire loc="22:RadioScannerAppC.nc">
      <from><interface-ref name="Radio" scoped="" ref="0x7f9e2e5cfd60"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f9e2e58b480"/></to>
    </wire>
    <wire loc="27:FMClick/FMClickC.nc">
      <from><interface-ref name="FMClick" scoped="" ref="0x7f9e2e58b480"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f9e2e587730"/></to>
    </wire>
    <wire loc="23:RadioScannerAppC.nc">
      <from><interface-ref name="Keyboard" scoped="" ref="0x7f9e2e5cb600"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f9e2db7ee60"/></to>
    </wire>
    <wire loc="20:PS2/PS2C.nc">
      <from><interface-ref name="PS2" scoped="" ref="0x7f9e2db7ee60"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f9e2db55860"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e2e625bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e2df53e60"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e2e625bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e2d72c810"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e2e625bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e2e475150"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f9e2e5f64b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f9e2e7b2a20"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f9e2e7b2a20"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f9e2e6b3120"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f9e2e5f5020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e2e628d00"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9e2e628d00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e2e61a0c0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e2e5f5720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e2e625bf0"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9e2e622020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9e2e608020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f9e2e619020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e2e609860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f9e2e61a7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e2df8bab0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f9e2e61a7a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f9e2e612020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f9e2e6126f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f9e2e622d50"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e6b1020"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f9e2e6ae590"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f9e2e6cc2d0"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9e2e693080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9e2de9f4c0"/></to>
    </wire>
    <wire loc="44:RadioScannerP.nc">
      <from><interface-ref name="inputTuneChannel" scoped="" ref="0x7f9e2e5ca9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:RadioScannerP.nc">
      <from><interface-ref name="handleChar" scoped="" ref="0x7f9e2e5c5380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:RadioScannerP.nc">
      <from><interface-ref name="radioInitFail" scoped="" ref="0x7f9e2e5ad020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:RadioScannerP.nc">
      <from><interface-ref name="finishedSeeking" scoped="" ref="0x7f9e2e5a61d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:RadioScannerP.nc">
      <from><interface-ref name="tune2Station" scoped="" ref="0x7f9e2e5b4ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:RadioScannerP.nc">
      <from><interface-ref name="finishedTuning" scoped="" ref="0x7f9e2e5ab480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:RadioScannerP.nc">
      <from><interface-ref name="readyScreen" scoped="" ref="0x7f9e2e5b1920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:FMClick/FMClickC.nc">
      <from><interface-ref name="Int" scoped="" ref="0x7f9e2e57f600"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f9e2e1d49e0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f9e2e1d49e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9e2e18ac90"/></to>
    </wire>
    <wire loc="31:FMClick/FMClickC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f9e2e57b8e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9e2e16c9f0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9e2e16c9f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9e2e15e4f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:FMClick/FMClickC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f9e2e56c6f0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9e2df69880"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9e2df69880"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9e2e15da20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:FMClick/FMClickC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9e2e569020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9e2dda3140"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9e2dda3140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9e2df58020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:FMClick/FMClickC.nc">
      <from><interface-ref name="RSTPin" scoped="" ref="0x7f9e2e554360"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f9e2dd7bb20"/></to>
    </wire>
    <wire loc="250:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f9e2dd7bb20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e2dcfc760"/></to>
    </wire>
    <wire loc="37:FMClick/FMClickC.nc">
      <from><interface-ref name="SDIOPin" scoped="" ref="0x7f9e2e55a680"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f9e2dd7c800"/></to>
    </wire>
    <wire loc="249:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f9e2dd7c800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e2dcfd5d0"/></to>
    </wire>
    <wire loc="38:FMClick/FMClickC.nc">
      <from><interface-ref name="INTPin" scoped="" ref="0x7f9e2e559990"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7f9e2dd7ae40"/></to>
    </wire>
    <wire loc="251:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f9e2dd7ae40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e2dcfb8f0"/></to>
    </wire>
    <wire loc="40:FMClick/FMClickC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f9e2e553c00"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f9e2e4ab4a0"/></to>
    </wire>
    <wire loc="420:FMClick/FMClickP.nc">
      <from><interface-ref name="seek" scoped="" ref="0x7f9e2e501840"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="239:FMClick/FMClickP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7f9e2e531740"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="345:FMClick/FMClickP.nc">
      <from><interface-ref name="tune" scoped="" ref="0x7f9e2e5158b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Hpl" scoped="" ref="0x7f9e2e46f7f0"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f9e2e4a7640"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="HplKS0108" scoped="" ref="0x7f9e2e4a7640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f9e2e3ffbe0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_0" scoped="" ref="0x7f9e2e3fc9c0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x7f9e2e398020"/></to>
    </wire>
    <wire loc="175:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f9e2e398020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e2e2f6760"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_1" scoped="" ref="0x7f9e2e3fbce0"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x7f9e2e397350"/></to>
    </wire>
    <wire loc="176:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f9e2e397350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e2e2f58f0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RS" scoped="" ref="0x7f9e2e3f9020"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f9e2e396670"/></to>
    </wire>
    <wire loc="177:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f9e2e396670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e2e2f4a80"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RW" scoped="" ref="0x7f9e2e3f8370"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f9e2e395990"/></to>
    </wire>
    <wire loc="178:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f9e2e395990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e2e2f3c10"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="EN" scoped="" ref="0x7f9e2e3f7690"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f9e2e394cb0"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f9e2e394cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e2e2f2da0"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RST" scoped="" ref="0x7f9e2e3f69b0"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f9e2e392020"/></to>
    </wire>
    <wire loc="180:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f9e2e392020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e2e2f0020"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="Data" scoped="" ref="0x7f9e2e3ed410"/></from>
      <to><interface-ref name="PortA" scoped="" ref="0x7f9e2e24b8d0"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortA" scoped="" ref="0x7f9e2e24b8d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e233aa0"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f9e2e3f3200"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f9e2e1e3290"/></to>
    </wire>
    <wire loc="191:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f9e2e387cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2e297160"/></to>
    </wire>
    <wire loc="165:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f9e2e3a3350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e2e3072b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e2e3072b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d984e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e2e2f58f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d9123f0"/></to>
    </wire>
    <wire loc="185:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f9e2e38ecb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e2e2e6c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e2e2e6c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d8a73f0"/></to>
    </wire>
    <wire loc="196:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f9e2e380060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2e27d6d0"/></to>
    </wire>
    <wire loc="143:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f9e2e3bb350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e2e32f2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e2e32f2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dab5e20"/></to>
    </wire>
    <wire loc="183:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f9e2e390670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e2e2e88f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e2e2e88f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d8aee20"/></to>
    </wire>
    <wire loc="146:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f9e2e3b9990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e2e327a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e2e327a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2da5dc90"/></to>
    </wire>
    <wire loc="157:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f9e2e3ad990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e2e315020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e2e315020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d9eb0a0"/></to>
    </wire>
    <wire loc="168:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f9e2e3a0cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e2e303760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e2e303760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d97a6d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e2e2f2da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d909e20"/></to>
    </wire>
    <wire loc="138:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f9e2e3c1350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e2e3358f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e2e3358f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dac7e20"/></to>
    </wire>
    <wire loc="149:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f9e2e3b5350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e2e323020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e2e323020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2da533f0"/></to>
    </wire>
    <wire loc="160:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f9e2e3a9350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e2e3115d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e2e3115d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d9e29b0"/></to>
    </wire>
    <wire loc="171:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f9e2e39c670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e2e300c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e2e300c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d9700a0"/></to>
    </wire>
    <wire loc="188:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f9e2e38a670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e2e2e22b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e2e2e22b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d89ee20"/></to>
    </wire>
    <wire loc="194:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f9e2e383b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2e287160"/></to>
    </wire>
    <wire loc="174:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f9e2e39acb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e2e2f75d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e2e2f75d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d919e20"/></to>
    </wire>
    <wire loc="141:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f9e2e3becb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e2e332da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e2e332da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dabb6d0"/></to>
    </wire>
    <wire loc="152:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f9e2e3b2cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e2e3205d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e2e3205d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2da4ae20"/></to>
    </wire>
    <wire loc="192:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f9e2e3854e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2e292c90"/></to>
    </wire>
    <wire loc="155:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f9e2e3af350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e2e318d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e2e318d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d9f2c90"/></to>
    </wire>
    <wire loc="166:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f9e2e3a2670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e2e305440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e2e305440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d9800a0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e2e2f4a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d90f6d0"/></to>
    </wire>
    <wire loc="186:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f9e2e38c020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e2e2e5da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e2e2e5da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d8a46d0"/></to>
    </wire>
    <wire loc="144:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f9e2e3ba670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e2e32e440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e2e32e440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dab00a0"/></to>
    </wire>
    <wire loc="147:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f9e2e3b8cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e2e326c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e2e326c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2da5ae20"/></to>
    </wire>
    <wire loc="158:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f9e2e3accb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e2e3142b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e2e3142b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d9e83f0"/></to>
    </wire>
    <wire loc="169:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f9e2e39e020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e2e3028f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e2e3028f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d9779b0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e2e2f0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d9050a0"/></to>
    </wire>
    <wire loc="139:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f9e2e3c0670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e2e334a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e2e334a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dac30a0"/></to>
    </wire>
    <wire loc="150:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f9e2e3b4670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e2e3222b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e2e3222b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2da506d0"/></to>
    </wire>
    <wire loc="161:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f9e2e3a8670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e2e310760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e2e310760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d9dfe20"/></to>
    </wire>
    <wire loc="189:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f9e2e388990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e2e2e1440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e2e2e1440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d89a0a0"/></to>
    </wire>
    <wire loc="164:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f9e2e3a5cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e2e308020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e2e308020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d987c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e2e2f6760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d9150a0"/></to>
    </wire>
    <wire loc="184:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f9e2e38f990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e2e2e7a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e2e2e7a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d8aa0a0"/></to>
    </wire>
    <wire loc="195:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f9e2e382e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2e282c90"/></to>
    </wire>
    <wire loc="142:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f9e2e3bc020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e2e330020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e2e330020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dab89b0"/></to>
    </wire>
    <wire loc="153:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f9e2e3b0020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e2e31f760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e2e31f760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2da450a0"/></to>
    </wire>
    <wire loc="182:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f9e2e391350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e2e2e97a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e2e2e97a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d8b1c90"/></to>
    </wire>
    <wire loc="156:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f9e2e3ae670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e2e317e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e2e317e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d9efe20"/></to>
    </wire>
    <wire loc="167:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f9e2e3a1990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e2e3045d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e2e3045d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d97d3f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e2e2f3c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d90c9b0"/></to>
    </wire>
    <wire loc="187:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f9e2e38b350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e2e2e3020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e2e2e3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d8a19b0"/></to>
    </wire>
    <wire loc="137:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f9e2e3c2020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e2e3366b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e2e3366b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dacaa60"/></to>
    </wire>
    <wire loc="148:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f9e2e3b6020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e2e325da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e2e325da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2da560a0"/></to>
    </wire>
    <wire loc="159:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f9e2e3aa020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e2e313440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e2e313440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d9e56d0"/></to>
    </wire>
    <wire loc="170:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f9e2e39d350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e2e301a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e2e301a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d974e20"/></to>
    </wire>
    <wire loc="193:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f9e2e384800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2e28d6d0"/></to>
    </wire>
    <wire loc="173:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f9e2e39b990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e2e2f83f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e2e2f83f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d91cc90"/></to>
    </wire>
    <wire loc="162:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f9e2e3a7990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e2e30f8f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e2e30f8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d9db0a0"/></to>
    </wire>
    <wire loc="140:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f9e2e3bf990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e2e333c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e2e333c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dac03f0"/></to>
    </wire>
    <wire loc="151:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f9e2e3b3990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e2e321440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e2e321440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2da4d9b0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortL" scoped="" ref="0x7f9e2e238550"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e1ef6c0"/></to>
    </wire>
    <wire loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortD" scoped="" ref="0x7f9e2e245d20"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e211910"/></to>
    </wire>
    <wire loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortG" scoped="" ref="0x7f9e2e23c020"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e202910"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortJ" scoped="" ref="0x7f9e2e23a1d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e1f96c0"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortB" scoped="" ref="0x7f9e2e248a00"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e21be80"/></to>
    </wire>
    <wire loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortE" scoped="" ref="0x7f9e2e244de0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e20ccd0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortH" scoped="" ref="0x7f9e2e23b100"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e1fd780"/></to>
    </wire>
    <wire loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortK" scoped="" ref="0x7f9e2e2393c0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e1f46c0"/></to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortC" scoped="" ref="0x7f9e2e247b90"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e216390"/></to>
    </wire>
    <wire loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortF" scoped="" ref="0x7f9e2e243e80"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e207390"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f9e2e1d19e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9e2e17dc90"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f9e2e1d69e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9e2e193da0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f9e2e1d39e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9e2e185c90"/></to>
    </wire>
    <wire loc="78:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f9e2e1d09e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9e2e178c90"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f9e2e1d59e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9e2e18ec90"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f9e2e1d29e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9e2e181c90"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f9e2e4a99b0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f9e2e1aa060"/></to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e1aae80"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f9e2e1c9860"/></to>
    </wire>
    <wire loc="81:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e191c20"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f9e2e1cb020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e18db40"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f9e2e1cb7a0"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e189b40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f9e2e1ca020"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e184b40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f9e2e1ca7a0"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e180b40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f9e2e1c7020"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e17cb40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f9e2e1c77a0"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e177b40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f9e2e1c6020"/></to>
    </wire>
    <wire loc="60:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9e2e15e4f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9e2e0b6470"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f9e2e15da20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9e2e07f370"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f9e2e07a210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9e2e0d0e60"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f9e2e0d0e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f9e2d728020"/></to>
    </wire>
    <wire loc="64:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f9e2e079020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f9e2e006aa0"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f9e2e076cd0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f9e2e0017f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9e2e0cac40"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9e2e0061e0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9e2e0c99d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9e2e0ce400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9e2e0ce400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9e2d727560"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f9e2e001e40"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f9e2dff8ab0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f9e2dff8ab0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f9e2dfef440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f9e2dffe7a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9e2df82980"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f9e2dffdde0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9e2df82980"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f9e2e0cfbf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f9e2d728d80"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9e2e0cd060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9e2d726270"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9e2d726b60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9e2e0cd930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f9e2d725440"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f9e2d72ce20"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f9e2d7237a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f9e2dffb480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f9e2dfec020"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7f9e2e3a5cb0"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f9e2dfeb360"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f9e2e3a3350"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f9e2dfb54a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f9e2dfb1dc0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9e2df8bab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e2dfb17c0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f9e2dfad550"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f9e2df8e1d0"/></to>
    </wire>
    <wire loc="57:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f9e2df8e1d0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f9e2e3c2020"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f9e2dfac7f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f9e2df8d510"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f9e2df8d510"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f9e2e3c1350"/></to>
    </wire>
    <wire loc="56:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f9e2dfaab10"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f9e2df8c830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f9e2df8c830"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f9e2e3c0670"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f9e2df58020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f9e2df50c30"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f9e2df50c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9e2ddc4150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9e2df53e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e2df47c80"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f9e2df46500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f9e2ddb5790"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9e2df47c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e2de43ba0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f9e2ddbe640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9e2de13830"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9e2de0ecd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9e2df3a960"/></to>
    </wire>
    <wire loc="35:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9e2df3a960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9e2de424b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9e2ddaba60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f9e2df37020"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f9e2df37020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9e2de3e8d0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f9e2de3e8d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f9e2d68ed50"/></to>
    </wire>
    <wire loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f9e2de43ba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f9e2d6921b0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f9e2de424b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f9e2d6929c0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9e2d68a020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9e2debb8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f9e2debb8f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f9e2deaaa10"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e2d685190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e2deb4c10"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e2deb4c10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e2dea5db0"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9e2d6843e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9e2deb2060"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f9e2deb2060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f9e2dea21a0"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f9e2d680780"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f9e2deae570"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f9e2deae570"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f9e2de9fbf0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f9e2de09020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f9e2ddb9a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f9e2dd5f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dca56d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e2dcfd5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d49be20"/></to>
    </wire>
    <wire loc="260:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f9e2dd70670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e2dcebc10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e2dcebc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d4293f0"/></to>
    </wire>
    <wire loc="269:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f9e2dd65020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e2dcdb020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e2dcdb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d3be3f0"/></to>
    </wire>
    <wire loc="280:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f9e2dd59350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc8bc90"/></to>
    </wire>
    <wire loc="284:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH2" scoped="" ref="0x7f9e2dd56cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc65c90"/></to>
    </wire>
    <wire loc="289:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH7" scoped="" ref="0x7f9e2dd4fcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc4c9b0"/></to>
    </wire>
    <wire loc="297:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ6" scoped="" ref="0x7f9e2dd46350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc28180"/></to>
    </wire>
    <wire loc="300:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK0" scoped="" ref="0x7f9e2dd44990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc1fc90"/></to>
    </wire>
    <wire loc="311:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL2" scoped="" ref="0x7f9e2dd38990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dbec180"/></to>
    </wire>
    <wire loc="227:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f9e2dd94990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e2dd255d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e2dd255d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d5cb3f0"/></to>
    </wire>
    <wire loc="267:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f9e2dd68990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e2dcdec10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e2dcdec10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d3c5e20"/></to>
    </wire>
    <wire loc="230:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f9e2dd91020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e2dd1dd30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e2dd1dd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d574a60"/></to>
    </wire>
    <wire loc="241:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f9e2dd84020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e2dd0b440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e2dd0b440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d5020a0"/></to>
    </wire>
    <wire loc="252:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f9e2dd78060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e2dcfaa80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e2dcfaa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d4916d0"/></to>
    </wire>
    <wire loc="263:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f9e2dd6b020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e2dce72b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e2dce72b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d420e20"/></to>
    </wire>
    <wire loc="222:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f9e2dd9ab20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e2dd2cc10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e2dd2cc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d5dc460"/></to>
    </wire>
    <wire loc="233:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f9e2dd8e990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e2dd192b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e2dd192b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d56a3f0"/></to>
    </wire>
    <wire loc="244:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f9e2dd81990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e2dd088f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e2dd088f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d4f99b0"/></to>
    </wire>
    <wire loc="255:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f9e2dd75990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e2dcf5020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e2dcf5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d4860a0"/></to>
    </wire>
    <wire loc="272:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f9e2dd62990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e2dcd85d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e2dcd85d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d3b5e20"/></to>
    </wire>
    <wire loc="278:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f9e2dd5ccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc956d0"/></to>
    </wire>
    <wire loc="282:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH0" scoped="" ref="0x7f9e2dd58670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc6e020"/></to>
    </wire>
    <wire loc="258:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f9e2dd72020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e2dcee8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e2dcee8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d430e20"/></to>
    </wire>
    <wire loc="287:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH5" scoped="" ref="0x7f9e2dd51670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc56e20"/></to>
    </wire>
    <wire loc="292:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ1" scoped="" ref="0x7f9e2dd4c350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc426d0"/></to>
    </wire>
    <wire loc="295:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ4" scoped="" ref="0x7f9e2dd49cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc336d0"/></to>
    </wire>
    <wire loc="303:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK3" scoped="" ref="0x7f9e2dd40350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc10c90"/></to>
    </wire>
    <wire loc="306:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK6" scoped="" ref="0x7f9e2dd3dcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc01c90"/></to>
    </wire>
    <wire loc="309:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL0" scoped="" ref="0x7f9e2dd3a350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dbf76d0"/></to>
    </wire>
    <wire loc="314:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL5" scoped="" ref="0x7f9e2dd33350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dbdd6d0"/></to>
    </wire>
    <wire loc="225:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f9e2dd96350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e2dd272b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e2dd272b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d5d3e20"/></to>
    </wire>
    <wire loc="236:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f9e2dd89350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e2dd16760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e2dd16760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d560e20"/></to>
    </wire>
    <wire loc="276:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f9e2dd5e670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc9f160"/></to>
    </wire>
    <wire loc="239:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f9e2dd87990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e2dd0d020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e2dd0d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d509c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e2dcfc760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d4970a0"/></to>
    </wire>
    <wire loc="261:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f9e2dd6e990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e2dceada0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e2dceada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d4266d0"/></to>
    </wire>
    <wire loc="270:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f9e2dd64350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e2dcda2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e2dcda2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d3bb6d0"/></to>
    </wire>
    <wire loc="285:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH3" scoped="" ref="0x7f9e2dd54020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc5f180"/></to>
    </wire>
    <wire loc="298:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ7" scoped="" ref="0x7f9e2dd45670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc246d0"/></to>
    </wire>
    <wire loc="301:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK1" scoped="" ref="0x7f9e2dd43cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc19180"/></to>
    </wire>
    <wire loc="312:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL3" scoped="" ref="0x7f9e2dd37cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dbe86d0"/></to>
    </wire>
    <wire loc="293:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ2" scoped="" ref="0x7f9e2dd4b670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc3dc90"/></to>
    </wire>
    <wire loc="228:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f9e2dd93cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e2dd24760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e2dd24760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d5c86d0"/></to>
    </wire>
    <wire loc="304:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK4" scoped="" ref="0x7f9e2dd3f670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc0a180"/></to>
    </wire>
    <wire loc="315:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL6" scoped="" ref="0x7f9e2dd32670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dbd9c90"/></to>
    </wire>
    <wire loc="231:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f9e2dd90350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e2dd1ce60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e2dd1ce60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d571e20"/></to>
    </wire>
    <wire loc="242:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f9e2dd83350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e2dd0a5d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e2dd0a5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d4ff3f0"/></to>
    </wire>
    <wire loc="253:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f9e2dd77350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e2dcf9c10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e2dcf9c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d48e9b0"/></to>
    </wire>
    <wire loc="264:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f9e2dd6a350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e2dce6440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e2dce6440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d41b0a0"/></to>
    </wire>
    <wire loc="223:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f9e2dd99e40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e2dd2bda0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e2dd2bda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d5d96d0"/></to>
    </wire>
    <wire loc="234:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f9e2dd8dcb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e2dd18440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e2dd18440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d5676d0"/></to>
    </wire>
    <wire loc="245:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f9e2dd80cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e2dd07a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e2dd07a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d4f5e20"/></to>
    </wire>
    <wire loc="273:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f9e2dd61cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e2dcd7760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e2dcd7760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d3b10a0"/></to>
    </wire>
    <wire loc="283:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH1" scoped="" ref="0x7f9e2dd57990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc6a6d0"/></to>
    </wire>
    <wire loc="248:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f9e2dd7d350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e2dcfe3f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e2dcfe3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d49ec90"/></to>
    </wire>
    <wire loc="259:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f9e2dd71350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e2dceda80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e2dceda80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d42c0a0"/></to>
    </wire>
    <wire loc="268:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f9e2dd67cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e2dcddda0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e2dcddda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d3c10a0"/></to>
    </wire>
    <wire loc="279:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f9e2dd5a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc8f160"/></to>
    </wire>
    <wire loc="288:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH6" scoped="" ref="0x7f9e2dd50990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc50460"/></to>
    </wire>
    <wire loc="296:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ5" scoped="" ref="0x7f9e2dd47020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc2ec90"/></to>
    </wire>
    <wire loc="307:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK7" scoped="" ref="0x7f9e2dd3b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dbfb180"/></to>
    </wire>
    <wire loc="310:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL1" scoped="" ref="0x7f9e2dd39670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dbf2c90"/></to>
    </wire>
    <wire loc="226:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f9e2dd95670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e2dd26440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e2dd26440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d5ce0a0"/></to>
    </wire>
    <wire loc="237:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f9e2dd88670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e2dd158f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e2dd158f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d55c0a0"/></to>
    </wire>
    <wire loc="266:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f9e2dd69670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e2dcdfa20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e2dcdfa20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d3c8c90"/></to>
    </wire>
    <wire loc="240:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f9e2dd86cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f9e2dd0c2b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f9e2dd0c2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d506e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e2dcfb8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d4943f0"/></to>
    </wire>
    <wire loc="262:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f9e2dd6dcb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e2dce8020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e2dce8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d4239b0"/></to>
    </wire>
    <wire loc="271:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f9e2dd63670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e2dcd9440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e2dcd9440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d3b89b0"/></to>
    </wire>
    <wire loc="221:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f9e2dd9d7f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e2dd2da80"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e2dd2da80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d5df270"/></to>
    </wire>
    <wire loc="232:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f9e2dd8f670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f9e2dd1a020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f9e2dd1a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d56d0a0"/></to>
    </wire>
    <wire loc="243:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f9e2dd82670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f9e2dd09760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f9e2dd09760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d4fc6d0"/></to>
    </wire>
    <wire loc="254:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f9e2dd76670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f9e2dcf7da0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f9e2dcf7da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d48be20"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f9e2dd5d990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc9bc90"/></to>
    </wire>
    <wire loc="286:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH4" scoped="" ref="0x7f9e2dd53350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc5b830"/></to>
    </wire>
    <wire loc="291:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ0" scoped="" ref="0x7f9e2dd4d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc46160"/></to>
    </wire>
    <wire loc="257:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f9e2dd74cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f9e2dcef7a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f9e2dcef7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d433c90"/></to>
    </wire>
    <wire loc="294:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ3" scoped="" ref="0x7f9e2dd4a990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc37180"/></to>
    </wire>
    <wire loc="302:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK2" scoped="" ref="0x7f9e2dd41020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc156d0"/></to>
    </wire>
    <wire loc="305:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK5" scoped="" ref="0x7f9e2dd3e990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dc066d0"/></to>
    </wire>
    <wire loc="313:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL4" scoped="" ref="0x7f9e2dd34020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dbe20a0"/></to>
    </wire>
    <wire loc="316:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL7" scoped="" ref="0x7f9e2dd31990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2dbd3180"/></to>
    </wire>
    <wire loc="246:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f9e2dd7e020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f9e2dd06c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f9e2dd06c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d4f10a0"/></to>
    </wire>
    <wire loc="224:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f9e2dd97060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f9e2dd28020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f9e2dd28020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d5d69b0"/></to>
    </wire>
    <wire loc="235:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f9e2dd8a020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f9e2dd175d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f9e2dd175d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f9e2d5649b0"/></to>
    </wire>
    <wire loc="21:PS2/PS2C.nc">
      <from><interface-ref name="ClockIRQ" scoped="" ref="0x7f9e2db4dd90"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f9e2db79ca0"/></to>
    </wire>
    <wire loc="23:PS2/PS2C.nc">
      <from><interface-ref name="ClockPin" scoped="" ref="0x7f9e2db521c0"/></from>
      <to><interface-ref name="PortK7" scoped="" ref="0x7f9e2dd3b020"/></to>
    </wire>
    <wire loc="24:PS2/PS2C.nc">
      <from><interface-ref name="DataPin" scoped="" ref="0x7f9e2db4b4f0"/></from>
      <to><interface-ref name="PortK6" scoped="" ref="0x7f9e2dd3dcb0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../tinyos_ws18/tos/system/MainC.nc">
      <documentation loc="45:../tinyos_ws18/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <documentation loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../tinyos_ws18/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../tinyos_ws18/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../tinyos_ws18/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc" safe="">
      <documentation loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioScannerP" loc="15:RadioScannerP.nc">
      <documentation loc="1:RadioScannerP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file RadioScannerP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-20&#10;&#10; Implementation of the RadioScanner app.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC" loc="11:FMClick/FMClickC.nc">
      <documentation loc="1:FMClick/FMClickC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; Configuration of the FMClick module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FMClickP" loc="18:FMClick/FMClickP.nc">
      <documentation loc="1:FMClick/FMClickP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; FMClick module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="GlcdC" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
        <short>&#10; High level implementation for KS0108 Glcd&#10; </short>
        <long>&#10; High level implementation for KS0108 Glcd&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="GlcdP" loc="41:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <module/>
    </component>
    <component qname="HplKS0108C" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
        <short>&#10; Configuration for KS0108 GLCD Display&#10; </short>
        <long>&#10; Configuration for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplKS0108P" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
        <short>&#10; Hpl implementation for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl implementation for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10; Based on an implementation of Andreas Hagmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC" loc="6:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortAP" loc="6(HplAtm128GeneralIOFastPortC.PortAP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortBP" loc="6(HplAtm128GeneralIOFastPortC.PortBP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortCP" loc="6(HplAtm128GeneralIOFastPortC.PortCP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortDP" loc="6(HplAtm128GeneralIOFastPortC.PortDP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortEP" loc="6(HplAtm128GeneralIOFastPortC.PortEP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortFP" loc="6(HplAtm128GeneralIOFastPortC.PortFP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortGP" loc="6(HplAtm128GeneralIOFastPortC.PortGP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortHP" loc="6(HplAtm128GeneralIOFastPortC.PortHP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortJP" loc="6(HplAtm128GeneralIOFastPortC.PortJP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortKP" loc="6(HplAtm128GeneralIOFastPortC.PortKP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortLP" loc="6(HplAtm128GeneralIOFastPortC.PortLP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:9">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="38:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc" safe="">
      <documentation loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FMClickC.I2C" loc="43(FMClickC.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../tinyos_ws18/tos/system/LedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc" safe="">
      <documentation loc="35:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../tinyos_ws18/tos/system/NoLedsC.nc">
      <documentation loc="35:../tinyos_ws18/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.Timer" loc="44(FMClickC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <documentation loc="11:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC" loc="32(AlarmCounterMilliP.Atm1280AlarmSyncC):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:124">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP" loc="33(AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9e2df2e160"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280Timer2SyncC" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <documentation loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280Timer2SyncP" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc" safe="">
      <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changed to sync mode&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; Changed for Atm1280&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA" loc="40(HplAtm1280GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit0" loc="41(HplAtm1280GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="48">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit1" loc="41(HplAtm1280GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="49">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit2" loc="41(HplAtm1280GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="50">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit3" loc="41(HplAtm1280GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="51">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit4" loc="41(HplAtm1280GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="52">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit5" loc="41(HplAtm1280GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="53">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit6" loc="41(HplAtm1280GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="54">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit7" loc="41(HplAtm1280GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="55">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB" loc="40(HplAtm1280GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit0" loc="41(HplAtm1280GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="56">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit1" loc="41(HplAtm1280GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="57">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit2" loc="41(HplAtm1280GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="58">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit3" loc="41(HplAtm1280GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="59">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit4" loc="41(HplAtm1280GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="60">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit5" loc="41(HplAtm1280GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="61">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit6" loc="41(HplAtm1280GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="62">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit7" loc="41(HplAtm1280GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="63">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC" loc="40(HplAtm1280GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit0" loc="41(HplAtm1280GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="64">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit1" loc="41(HplAtm1280GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="65">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit2" loc="41(HplAtm1280GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="66">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit3" loc="41(HplAtm1280GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="67">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit4" loc="41(HplAtm1280GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="68">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit5" loc="41(HplAtm1280GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="69">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit6" loc="41(HplAtm1280GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="70">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit7" loc="41(HplAtm1280GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="71">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD" loc="40(HplAtm1280GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit0" loc="41(HplAtm1280GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="72">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit1" loc="41(HplAtm1280GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="73">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit2" loc="41(HplAtm1280GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="74">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit3" loc="41(HplAtm1280GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="75">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit4" loc="41(HplAtm1280GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="76">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit5" loc="41(HplAtm1280GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="77">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit6" loc="41(HplAtm1280GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="78">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit7" loc="41(HplAtm1280GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="79">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE" loc="40(HplAtm1280GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit0" loc="41(HplAtm1280GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="80">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit1" loc="41(HplAtm1280GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="81">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit2" loc="41(HplAtm1280GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="82">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit3" loc="41(HplAtm1280GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="83">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit4" loc="41(HplAtm1280GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="84">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit5" loc="41(HplAtm1280GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="85">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit6" loc="41(HplAtm1280GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="86">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit7" loc="41(HplAtm1280GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="87">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF" loc="40(HplAtm1280GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit0" loc="41(HplAtm1280GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="88">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit1" loc="41(HplAtm1280GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="89">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit2" loc="41(HplAtm1280GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="90">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit3" loc="41(HplAtm1280GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="91">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit4" loc="41(HplAtm1280GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="92">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit5" loc="41(HplAtm1280GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="93">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit6" loc="41(HplAtm1280GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="94">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit7" loc="41(HplAtm1280GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="95">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F0" loc="42(HplAtm1280GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F1" loc="42(HplAtm1280GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F2" loc="42(HplAtm1280GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F3" loc="42(HplAtm1280GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F4" loc="42(HplAtm1280GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F5" loc="42(HplAtm1280GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F6" loc="42(HplAtm1280GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F7" loc="42(HplAtm1280GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G0" loc="42(HplAtm1280GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G1" loc="42(HplAtm1280GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G2" loc="42(HplAtm1280GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G3" loc="42(HplAtm1280GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G4" loc="42(HplAtm1280GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G5" loc="42(HplAtm1280GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H0" loc="42(HplAtm1280GeneralIOC.H0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H1" loc="42(HplAtm1280GeneralIOC.H1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H2" loc="42(HplAtm1280GeneralIOC.H2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H3" loc="42(HplAtm1280GeneralIOC.H3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H4" loc="42(HplAtm1280GeneralIOC.H4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H5" loc="42(HplAtm1280GeneralIOC.H5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H6" loc="42(HplAtm1280GeneralIOC.H6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H7" loc="42(HplAtm1280GeneralIOC.H7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J0" loc="42(HplAtm1280GeneralIOC.J0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J1" loc="42(HplAtm1280GeneralIOC.J1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J2" loc="42(HplAtm1280GeneralIOC.J2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J3" loc="42(HplAtm1280GeneralIOC.J3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J4" loc="42(HplAtm1280GeneralIOC.J4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J5" loc="42(HplAtm1280GeneralIOC.J5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J6" loc="42(HplAtm1280GeneralIOC.J6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J7" loc="42(HplAtm1280GeneralIOC.J7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K0" loc="42(HplAtm1280GeneralIOC.K0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K1" loc="42(HplAtm1280GeneralIOC.K1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K2" loc="42(HplAtm1280GeneralIOC.K2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K3" loc="42(HplAtm1280GeneralIOC.K3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K4" loc="42(HplAtm1280GeneralIOC.K4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K5" loc="42(HplAtm1280GeneralIOC.K5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K6" loc="42(HplAtm1280GeneralIOC.K6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K7" loc="42(HplAtm1280GeneralIOC.K7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L0" loc="42(HplAtm1280GeneralIOC.L0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L1" loc="42(HplAtm1280GeneralIOC.L1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L2" loc="42(HplAtm1280GeneralIOC.L2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L3" loc="42(HplAtm1280GeneralIOC.L3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L4" loc="42(HplAtm1280GeneralIOC.L4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L5" loc="42(HplAtm1280GeneralIOC.L5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L6" loc="42(HplAtm1280GeneralIOC.L6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L7" loc="42(HplAtm1280GeneralIOC.L7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PS2C" loc="11:PS2/PS2C.nc">
      <documentation loc="1:PS2/PS2C.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file    PS2C.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the PS2 module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PS2P" loc="18:PS2/PS2P.nc">
      <module/>
    </component>
    <component qname="HplAtmegaPinChange2C" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9e2e37d590" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9e2e37d900" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9e2e37dc70" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9e2e36f9e0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9e2e36fd70" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9e2e36c170" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9e2e36c4c0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9e2e2d70d0" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9e2e2d7460" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9e2e2d77f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9e2e2d7b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortP" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9e2e235810" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9e2e235b80" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9e2e231020" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f9e2e1a93d0" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f9e2e1a9760" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f9e2e1a9af0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9e2e1a9e40" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f9e2e1536f0" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f9e2e141210" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f9e2e128bd0" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../tinyos_ws18/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncC" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc" abstract="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f9e2df2e160" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9e2df2e160"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f9e2df2e4f0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f9e2df2e880" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncP" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f9e2df21200" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f9e2df21200"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f9e2df21590" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f9e2df21920" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e2de37160" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e2de37160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e2de05230" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e2de05230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f9e2de05560" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e2ddb6de0" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e2ddb6de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f9e2dc844c0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f9e2dc84860" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f9e2dc84c00" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f9e2dc83020" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f9e2e625bf0" loc="58:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e2e625bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e628020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f9e2e626720" loc="57:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9e2e626720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9e2e626aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f9e2e622d50" loc="52:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f9e2e622d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e621100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e2e628d00" loc="46:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e2e628d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e6230a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f9e2e622020" loc="50:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9e2e622020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9e2e6223a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9e2e622530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9e2e6226c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9e2e622850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9e2e6229e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f9e2e61a7a0" loc="45:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f9e2e61a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e61ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e2e61a0c0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e2e61a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e61a440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f9e2e619020" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f9e2e619020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e6193a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f9e2e6126f0" loc="4:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f9e2e6126f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e612a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f9e2e612020" loc="3:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9e2e612020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e6123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e2e609860" loc="51:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e2e609860"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f9e2e7b43a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f9e2e7b43a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e609be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f9e2e608020" loc="52:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f9e2e608020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f9e2e6083a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f9e2e608530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f9e2e6086c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f9e2e608850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f9e2e6089e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f9e2e5f5720" loc="60:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f9e2e5f5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e5f5aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f9e2e624e20" loc="57:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9e2e624e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9e2e5f61c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f9e2e5f5020" loc="59:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f9e2e5f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e5f53a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f9e2e5f64b0" loc="58:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9e2e5f64b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e5f6830"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9e2e5f69c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9e2e5f6b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f9e2e7a87b0" loc="48:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e7a87b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2e7a8b30"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2e7a8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f9e2e7b2a20" loc="47:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9e2e7b2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e7b2da0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9e2f160020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9e2f1601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f9e2e6b1020" loc="56:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f9e2e6b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2e6b13a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2e6b1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f9e2e6ae590" loc="57:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f9e2e6ae590"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f9e2e6ae910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f9e2e6b3120" loc="55:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f9e2e6b3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e6b34a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f9e2e6b3630"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f9e2e6b37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f9e2e693080" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9e2e693080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f9e2e693400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f9e2e6cc2d0" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f9e2e6cc2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f9e2e6cc650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f9e2e6927d0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f9e2e6927d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f9e2e692b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f9e2e5ea0c0" loc="18:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f9e2e5ea0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f9e2e5ea440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x7f9e2e5e9e30" loc="20:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x7f9e2e5e9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e5e81e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Keyboard" ref="0x7f9e2e5cb600" loc="22:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Keyboard" scoped="" ref="0x7f9e2e5cb600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e5cb980"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f9e2e5cbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inputTuneChannel" ref="0x7f9e2e5ca9d0" loc="44:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inputTuneChannel" scoped="" ref="0x7f9e2e5ca9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2e5cad50"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2e5c8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="handleChar" ref="0x7f9e2e5c5380" loc="55:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="handleChar" scoped="" ref="0x7f9e2e5c5380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2e5c5700"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2e5c5890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioInitFail" ref="0x7f9e2e5ad020" loc="149:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioInitFail" scoped="" ref="0x7f9e2e5ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2e5ad3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2e5ad530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedSeeking" ref="0x7f9e2e5a61d0" loc="165:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedSeeking" scoped="" ref="0x7f9e2e5a61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2e5a6550"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2e5a66e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune2Station" ref="0x7f9e2e5b4ac0" loc="135:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune2Station" scoped="" ref="0x7f9e2e5b4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2e5b4e40"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2e5b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Radio" ref="0x7f9e2e5cfd60" loc="21:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Radio" scoped="" ref="0x7f9e2e5cfd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f9e2e5d7e00"/>
        <function-ref name="initDone" scoped="" ref="0x7f9e2e5d7310"/>
        <function-ref name="setVolume" scoped="" ref="0x7f9e2e5d74a0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f9e2e5d7630"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f9e2e5d77c0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f9e2e5d7950"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9e2e5d7ae0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f9e2e5d7c70"/>
        <function-ref name="seek" scoped="" ref="0x7f9e2e5d7180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedTuning" ref="0x7f9e2e5ab480" loc="155:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedTuning" scoped="" ref="0x7f9e2e5ab480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2e5ab800"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2e5ab990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readyScreen" ref="0x7f9e2e5b1920" loc="143:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readyScreen" scoped="" ref="0x7f9e2e5b1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2e5b1ca0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2e5b1e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f9e2e5d8980" loc="19:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9e2e5d8980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9e2e5e9b10"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9e2e5e9020"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9e2e5e91b0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9e2e5e9340"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9e2e5e94d0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9e2e5e9660"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9e2e5e97f0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9e2e5d8d00"/>
        <function-ref name="drawText" scoped="" ref="0x7f9e2e5e9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e2e58ee40" loc="14:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e2e58ee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e58b1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f9e2e58b480" loc="15:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f9e2e58b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f9e2e58a4d0"/>
        <function-ref name="initDone" scoped="" ref="0x7f9e2e58b990"/>
        <function-ref name="setVolume" scoped="" ref="0x7f9e2e58bb20"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f9e2e58bcb0"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f9e2e58be40"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f9e2e58a020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9e2e58a1b0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f9e2e58a340"/>
        <function-ref name="seek" scoped="" ref="0x7f9e2e58b800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seek" ref="0x7f9e2e501840" loc="420:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seek" scoped="" ref="0x7f9e2e501840"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2e501cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2e501e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDIOPin" ref="0x7f9e2e55a680" loc="31:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SDIOPin" scoped="" ref="0x7f9e2e55a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e55aa00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e55ab90"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e55ad20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e559020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e5591b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e559340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e5594d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e559660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="INTPin" ref="0x7f9e2e559990" loc="32:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="INTPin" scoped="" ref="0x7f9e2e559990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e559d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e553020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e5531b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e553340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e5534d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e553660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e5537f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e553980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Int" ref="0x7f9e2e57f600" loc="26:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int" scoped="" ref="0x7f9e2e57f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e57f980"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e57fb10"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e57fca0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e57fe30"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e584020"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e5841b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f9e2e56c6f0" loc="28:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f9e2e56c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9e2e578110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9e2e5783d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9e2e57a3d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9e2e56b880"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e579020"/>
        <function-ref name="readDone" scoped="" ref="0x7f9e2e579c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7f9e2e531740" loc="239:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init" scoped="" ref="0x7f9e2e531740"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2e531ac0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2e531c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e2e587110" loc="21:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e2e587110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e587490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f9e2e57b8e0" loc="27:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f9e2e57b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9e2e57bc60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9e2e57bdf0"/>
        <function-ref name="request" scoped="" ref="0x7f9e2e583020"/>
        <function-ref name="granted" scoped="" ref="0x7f9e2e5831b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9e2e583340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTPin" ref="0x7f9e2e554360" loc="30:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTPin" scoped="" ref="0x7f9e2e554360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e5546e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e554870"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e554a00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e554b90"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e554d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e55a020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e55a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e55a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f9e2e587730" loc="22:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f9e2e587730"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f9e2e5867f0"/>
        <function-ref name="initDone" scoped="" ref="0x7f9e2e587c40"/>
        <function-ref name="setVolume" scoped="" ref="0x7f9e2e587dd0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f9e2e586020"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f9e2e5861b0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f9e2e586340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f9e2e5864d0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f9e2e586660"/>
        <function-ref name="seek" scoped="" ref="0x7f9e2e587ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f9e2e553c00" loc="33:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9e2e553c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9e2e552ca0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9e2e5521b0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9e2e552340"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9e2e5524d0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9e2e552660"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9e2e5527f0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9e2e552980"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9e2e552020"/>
        <function-ref name="drawText" scoped="" ref="0x7f9e2e552b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9e2e569020" loc="29:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e2e569020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e2e55d630"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e568a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9e2e55e920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9e2e55e4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9e2e55b020"/>
        <function-ref name="gett0" scoped="" ref="0x7f9e2e55dab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e2e55e020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9e2e569c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9e2e55d020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9e2e568110"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2e5685e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune" ref="0x7f9e2e5158b0" loc="345:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune" scoped="" ref="0x7f9e2e5158b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2e515c30"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2e515dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f9e2e4ab4a0" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <component-ref qname="GlcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9e2e4ab4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9e2e4a84d0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9e2e4ab9b0"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9e2e4abb40"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9e2e4abcd0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9e2e4abe60"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9e2e4a8020"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9e2e4a81b0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9e2e4ab820"/>
        <function-ref name="drawText" scoped="" ref="0x7f9e2e4a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e2e475150" loc="44:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e2e475150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2e4754d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hpl" ref="0x7f9e2e46f7f0" loc="45:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hpl" scoped="" ref="0x7f9e2e46f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f9e2e46fb70"/>
        <function-ref name="init" scoped="" ref="0x7f9e2e46fd00"/>
        <function-ref name="dataRead" scoped="" ref="0x7f9e2e474020"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f9e2e4741b0"/>
        <function-ref name="controlRead" scoped="" ref="0x7f9e2e474340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f9e2e478e10" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f9e2e478e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f9e2e477e40"/>
        <function-ref name="drawRect" scoped="" ref="0x7f9e2e477350"/>
        <function-ref name="drawLine" scoped="" ref="0x7f9e2e4774e0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f9e2e477670"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f9e2e477800"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f9e2e477990"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f9e2e477b20"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f9e2e4771c0"/>
        <function-ref name="drawText" scoped="" ref="0x7f9e2e477cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f9e2e4a7640" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <component-ref qname="HplKS0108C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f9e2e4a7640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f9e2e4a79c0"/>
        <function-ref name="init" scoped="" ref="0x7f9e2e4a7b50"/>
        <function-ref name="dataRead" scoped="" ref="0x7f9e2e4a7ce0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f9e2e4a7e70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f9e2e3ff030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EN" ref="0x7f9e2e3f7690" loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EN" scoped="" ref="0x7f9e2e3f7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3f7a10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3f7ba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3f7d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3f6020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3f61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3f6340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3f64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3f6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f9e2e3f3200" loc="34:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f9e2e3f3200"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6fdd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9e2e6fb180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f9e2e3ea090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_0" ref="0x7f9e2e3fc9c0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_0" scoped="" ref="0x7f9e2e3fc9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3fcd40"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3fb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3fb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3fb340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3fb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3fb660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3fb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3fb980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RST" ref="0x7f9e2e3f69b0" loc="30:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RST" scoped="" ref="0x7f9e2e3f69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3f6d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3f5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3f51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3f5340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3f54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3f5660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3f57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3f5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RS" ref="0x7f9e2e3f9020" loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RS" scoped="" ref="0x7f9e2e3f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3f93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3f9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3f96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3f9850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3f99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3f9b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3f9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3f8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_1" ref="0x7f9e2e3fbce0" loc="26:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_1" scoped="" ref="0x7f9e2e3fbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3fa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3fa230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3fa3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3fa550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3fa6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3fa870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3faa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3fab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f9e2e3ffbe0" loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f9e2e3ffbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f9e2e3fc020"/>
        <function-ref name="init" scoped="" ref="0x7f9e2e3fc1b0"/>
        <function-ref name="dataRead" scoped="" ref="0x7f9e2e3fc340"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f9e2e3fc4d0"/>
        <function-ref name="controlRead" scoped="" ref="0x7f9e2e3fc660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RW" ref="0x7f9e2e3f8370" loc="28:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RW" scoped="" ref="0x7f9e2e3f8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3f86f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3f8880"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3f8a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3f8ba0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3f8d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3f7020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3f71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3f7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Data" ref="0x7f9e2e3ed410" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Data" scoped="" ref="0x7f9e2e3ed410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3ed790"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e3ed920"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3edab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3edc40"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e3eddd0"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e3f4020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3f41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f9e2e387cb0" loc="98:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f9e2e387cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e386610"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3867a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e386930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e386ac0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e386c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e386de0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e385020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3851b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f9e2e3a3350" loc="72:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f9e2e3a3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3a36d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3a3860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3a39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3a3b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3a3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3a2020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3a21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f9e2e397350" loc="83:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f9e2e397350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3976d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e397860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3979f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e397b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e397d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e396020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3961b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e396340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f9e2e38ecb0" loc="92:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f9e2e38ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e38d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e38d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e38d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e38d550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e38d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e38d870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e38da00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e38db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f9e2e380060" loc="103:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f9e2e380060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3803e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e380570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e380700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e380890"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e380a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e380bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e380d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e37f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f9e2e3bb350" loc="50:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f9e2e3bb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3bb6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3bb860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3bb9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3bbb80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3bbd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3ba020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3ba1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3ba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f9e2e390670" loc="90:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f9e2e390670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3909f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e390b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e390d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e38f020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e38f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e38f340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e38f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e38f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f9e2e3b9990" loc="53:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f9e2e3b9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3b9d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3b8020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3b81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3b8340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3b84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3b8660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3b87f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3b8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f9e2e3ad990" loc="64:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f9e2e3ad990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3add10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3ac020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3ac1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3ac340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3ac4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3ac660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3ac7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3ac980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f9e2e3a0cb0" loc="75:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f9e2e3a0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e39f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e39f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e39f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e39f550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e39f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e39f870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e39fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e39fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f9e2e394cb0" loc="86:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f9e2e394cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3930a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e393230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3933c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e393550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3936e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e393870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e393a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e393b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f9e2e3c1350" loc="45:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f9e2e3c1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3c16d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3c1860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3c19f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3c1b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3c1d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3c0020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3c01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3c0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f9e2e3b5350" loc="56:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f9e2e3b5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3b56d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3b5860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3b59f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3b5b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3b5d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3b4020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3b41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3b4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f9e2e3a9350" loc="67:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f9e2e3a9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3a96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3a9860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3a99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3a9b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3a9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3a8020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3a81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3a8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f9e2e39c670" loc="78:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f9e2e39c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e39c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e39cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e39cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e39b020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e39b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e39b340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e39b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e39b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f9e2e38a670" loc="95:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f9e2e38a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e38a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e38ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e38ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e388020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3881b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e388340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3884d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e388660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f9e2e383b20" loc="101:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f9e2e383b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e382020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3821b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e382340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3824d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e382660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3827f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e382980"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e382b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f9e2e39acb0" loc="81:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f9e2e39acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3990a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e399230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3993c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e399550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3996e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e399870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e399a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e399b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f9e2e3becb0" loc="48:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f9e2e3becb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3bd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3bd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3bd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3bd550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3bd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3bd870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3bda00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3bdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f9e2e3b2cb0" loc="59:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f9e2e3b2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3b10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3b1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3b13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3b1550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3b16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3b1870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3b1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3b1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f9e2e3854e0" loc="99:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f9e2e3854e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e385860"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3859f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e385b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e385d10"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e384020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3841b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e384340"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3844d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f9e2e3af350" loc="62:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f9e2e3af350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3af6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3af860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3af9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3afb80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3afd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3ae020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3ae1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3ae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f9e2e3a2670" loc="73:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f9e2e3a2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3a29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3a2b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3a2d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3a1020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3a11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3a1340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3a14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3a1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f9e2e396670" loc="84:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f9e2e396670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3969f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e396b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e396d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e395020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3951b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e395340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3954d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e395660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f9e2e38c020" loc="93:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f9e2e38c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e38c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e38c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e38c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e38c850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e38c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e38cb70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e38cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e38b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f9e2e3ba670" loc="51:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f9e2e3ba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3ba9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3bab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3bad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3b9020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3b91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3b9340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3b94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3b9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f9e2e3b8cb0" loc="54:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f9e2e3b8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3b70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3b7230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3b73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3b7550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3b76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3b7870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3b7a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3b7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f9e2e3accb0" loc="65:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f9e2e3accb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3ab0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3ab230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3ab3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3ab550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3ab6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3ab870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3aba00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3abb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f9e2e39e020" loc="76:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f9e2e39e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e39e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e39e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e39e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e39e850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e39e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e39eb70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e39ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e39d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f9e2e392020" loc="87:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f9e2e392020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3923a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e392530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3926c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e392850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3929e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e392b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e392d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e391020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f9e2e3c0670" loc="46:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f9e2e3c0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3c09f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3c0b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3c0d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3bf020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3bf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3bf340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3bf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3bf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f9e2e3b4670" loc="57:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f9e2e3b4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3b4af0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3b4c80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3b4e10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3b3020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3b31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3b3340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3b34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3b3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f9e2e3a8670" loc="68:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f9e2e3a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3a89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3a8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3a8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3a7020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3a71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3a7340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3a74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3a7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f9e2e388990" loc="96:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f9e2e388990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e388d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e387020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3871b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e387340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3874d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e387660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3877f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e387980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f9e2e3a5cb0" loc="71:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f9e2e3a5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3a4410"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3a45a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3a4730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3a48c0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3a4a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3a4be0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3a4d70"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f9e2e398020" loc="82:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f9e2e398020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3983a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e398530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3986c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e398850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3989e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e398b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e398d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e397020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f9e2e38f990" loc="91:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f9e2e38f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e38fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e38e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e38e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e38e340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e38e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e38e660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e38e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e38e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f9e2e382e40" loc="102:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f9e2e382e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3811e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e381370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e381500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e381690"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e381820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3819b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e381b40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e381cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f9e2e3bc020" loc="49:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f9e2e3bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3bc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3bc530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3bc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3bc850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3bc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3bcb70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3bcd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f9e2e3b0020" loc="60:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f9e2e3b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3b03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3b0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3b06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3b0850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3b09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3b0b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3b0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f9e2e391350" loc="89:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f9e2e391350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3916d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e391860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3919f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e391b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e391d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e390020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3901b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e390340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f9e2e3ae670" loc="63:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f9e2e3ae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3ae9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3aeb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3aed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3ad020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3ad1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3ad340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3ad4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3ad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f9e2e3a1990" loc="74:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f9e2e3a1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3a1d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3a0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3a01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3a0340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3a04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3a0660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3a07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3a0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f9e2e395990" loc="85:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f9e2e395990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e395d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e394020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3941b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e394340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3944d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e394660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3947f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e394980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f9e2e38b350" loc="94:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f9e2e38b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e38b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e38b860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e38b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e38bb80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e38bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e38a020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e38a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e38a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f9e2e3c2020" loc="44:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f9e2e3c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3c23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3c2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3c26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3c2850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3c29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3c2b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3c2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f9e2e3b6020" loc="55:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f9e2e3b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3b63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3b6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3b66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3b6850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3b69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3b6b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3b6d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f9e2e3aa020" loc="66:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f9e2e3aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3aa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3aa530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3aa6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3aa850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3aa9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3aab70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3aad00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f9e2e39d350" loc="77:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f9e2e39d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e39d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e39d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e39d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e39db80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e39dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e39c020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e39c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e39c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f9e2e384800" loc="100:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f9e2e384800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e384b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e384d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e383020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3831b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e383340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3834d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e383660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3837f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f9e2e39b990" loc="80:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f9e2e39b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e39bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e39a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e39a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e39a340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e39a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e39a660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e39a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e39a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f9e2e3a7990" loc="69:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f9e2e3a7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3a7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3a5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3a51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3a5340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3a54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3a5660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3a57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3a5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f9e2e3bf990" loc="47:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f9e2e3bf990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3bfd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3be020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3be1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3be340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3be4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3be660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3be7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3be980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f9e2e3b3990" loc="58:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f9e2e3b3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3b3d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3b2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3b21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3b2340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3b24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3b2660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3b27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3b2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e2e334a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e2e334a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e334e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e333020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3331b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e333340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3334d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e333660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3337f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e333980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e2e330020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e2e330020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3303a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e330530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3306c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e330850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3309e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e330b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e330d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e32f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e2e3366b0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e2e3366b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e336a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e336bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e336d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e335020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e335340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3354d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e335660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e2e333c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e2e333c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e332020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3321b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e332340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3324d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e332660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3327f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e332980"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e332b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e2e32f2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e2e32f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e32f630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e32f7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e32f950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e32fae0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e32fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e32fe00"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e32e020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e32e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e2e3358f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e2e3358f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e335c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e335e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e334020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3341b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e334340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3344d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e334660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3347f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e2e332da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e2e332da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e331180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e331310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3314a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e331630"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3317c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e331950"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e331ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e331c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e2e32e440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e2e32e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e32e7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e32e950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e32eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e32ec70"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e32ee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e32d020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e32d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e32d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dacaa60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dacaa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dacade0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dac9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dac91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dac9340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dac94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dac9660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dac97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dac9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dac7e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dac7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dac61c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dac6350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dac64e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dac6670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dac6800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dac6990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dac6b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dac6cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dac30a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dac30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dac3420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dac35b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dac3740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dac38d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dac3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dac3bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dac3d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dac2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dac03f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dac03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dac0770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dac0900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dac0a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dac0c20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dac0db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dabf020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dabf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dabf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dabb6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dabb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dabba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dabbbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dabbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2daba020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2daba1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2daba340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2daba4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2daba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dab89b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dab89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dab8d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dab7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dab71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dab7340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dab74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dab7660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dab77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dab7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dab5e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dab5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dab31c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dab3350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dab34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dab3670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dab3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dab3990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dab3b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dab3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dab00a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dab00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dab0420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dab05b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dab0740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dab08d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dab0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dab0bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dab0d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2daaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e2e325da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e2e325da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e324180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e324310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3244a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e324630"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3247c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e324950"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e324ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e324c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e2e321440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e2e321440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3217c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e321950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e321ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e321c70"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e321e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e320020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3201b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e320340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e2e327a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e2e327a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e327da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e326020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3261b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e326340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e326660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3267f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e326980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e2e323020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e2e323020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3233a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e323530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3236c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e323850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3239e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e323b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e323d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e322020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e2e3205d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e2e3205d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e320950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e320ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e320c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e320e00"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e31f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e31f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e31f340"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e31f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e2e326c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e2e326c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e325020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3251b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e325340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3254d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e325660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3257f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e325980"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e325b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e2e3222b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e2e3222b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e322630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3227c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e322950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e322ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e322c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e322e00"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e321020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e2e31f760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e2e31f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e31fae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e31fc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e31fe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e31d020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e31d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e31d340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e31d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e31d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2da5dc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2da5dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2da5c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2da5c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2da5c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2da5c550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2da5c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2da5c870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2da5ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2da5cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2da5ae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2da5ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2da591c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2da59350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2da594e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2da59670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2da59800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2da59990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2da59b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2da59cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2da560a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2da560a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2da56420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2da565b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2da56740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2da568d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2da56a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2da56bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2da56d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2da55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2da533f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2da533f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2da53770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2da53900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2da53a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2da53c20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2da53db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2da52020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2da521b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2da52340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2da506d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2da506d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2da50a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2da50be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2da50d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2da4f020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2da4f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2da4f340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2da4f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2da4f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2da4d9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2da4d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2da4dd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2da4c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2da4c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2da4c340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2da4c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2da4c660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2da4c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2da4c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2da4ae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2da4ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2da481c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2da48350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2da484e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2da48670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2da48800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2da48990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2da48b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2da48cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2da450a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2da450a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2da45420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2da455b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2da45740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2da458d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2da45a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2da45bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2da45d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2da44020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e2e315020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e2e315020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3153a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e315530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3156c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e315850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3159e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e315b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e315d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e314020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e2e3115d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e2e3115d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e311950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e311ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e311c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e311e00"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e310020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3101b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e310340"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e2e318d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e2e318d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3170e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e317270"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e317400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e317590"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e317720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3178b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e317a40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e317bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e2e3142b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e2e3142b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e314630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3147c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e314950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e314ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e314c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e314e00"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e313020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e2e310760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e2e310760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e310ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e310c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e310e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e30f020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e30f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e30f340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e30f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e30f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e2e317e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e2e317e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e316210"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3163a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e316530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3166c0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e316850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3169e0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e316b70"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e316d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e2e313440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e2e313440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3137c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e313950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e313ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e313c70"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e313e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e311020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3111b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e311340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e2e30f8f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e2e30f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e30fc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e30fe00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e30e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e30e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e30e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e30e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e30e660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e30e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d9f2c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d9f2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d9f10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d9f1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d9f13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d9f1550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d9f16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d9f1870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d9f1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d9f1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d9efe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d9efe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d9ee1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d9ee350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d9ee4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d9ee670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d9ee800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d9ee990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d9eeb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d9eecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d9eb0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d9eb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d9eb420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d9eb5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d9eb740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d9eb8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d9eba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d9ebbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d9ebd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d9ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d9e83f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d9e83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d9e8770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d9e8900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d9e8a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d9e8c20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d9e8db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d9e7020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d9e71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d9e7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d9e56d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d9e56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d9e5a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d9e5be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d9e5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d9e4020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d9e41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d9e4340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d9e44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d9e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d9e29b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d9e29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d9e2d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d9e1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d9e11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d9e1340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d9e14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d9e1660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d9e17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d9e1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d9dfe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d9dfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d9de1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d9de350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d9de4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d9de670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d9de800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d9de990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d9deb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d9decb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d9db0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d9db0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d9db420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d9db5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d9db740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d9db8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d9dba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d9dbbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d9dbd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d9d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e2e305440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e2e305440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3057c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e305950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e305ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e305c70"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e305e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e304020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3041b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e304340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e2e3028f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e2e3028f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e302c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e302e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e301020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e3011b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e301340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3014d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e301660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3017f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e2e308020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e2e308020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e3083a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e308530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3086c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e308850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3089e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e308b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e308d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e307020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e2e3045d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e2e3045d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e304950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e304ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e304c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e304e00"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e303020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e3031b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e303340"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3034d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e2e301a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e2e301a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e301e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e300020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e3001b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e300340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3004d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e300660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3007f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e300980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e2e3072b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e2e3072b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e307630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e3077c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e307950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e307ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e307c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e307e00"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e305020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e3051b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e2e303760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e2e303760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e303ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e303c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e303e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e302020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e3021b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e302340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e3024d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e302660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e2e300c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e2e300c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2ff020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2ff1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2ff340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2ff4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2ff660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2ff7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2ff980"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2ffb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d987c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d987c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d9860a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d986230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d9863c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d986550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d9866e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d986870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d986a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d986b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d984e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d984e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d9831c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d983350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d9834e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d983670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d983800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d983990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d983b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d983cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d9800a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d9800a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d980420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d9805b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d980740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d9808d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d980a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d980bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d980d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d97f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d97d3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d97d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d97d770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d97d900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d97da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d97dc20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d97ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d97c020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d97c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d97c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d97a6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d97a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d97aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d97abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d97ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d979020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d9791b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d979340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d9794d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d979660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d9779b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d9779b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d977d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d976020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d9761b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d976340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d9764d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d976660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d9767f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d976980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d974e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d974e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d9731c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d973350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d9734e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d973670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d973800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d973990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d973b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d973cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d9700a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d9700a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d970420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d9705b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d970740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d9708d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d970a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d970bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d970d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d96e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e2e2f6760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e2e2f6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2f6ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2f6c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2f6e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2f5020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2f51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2f5340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2f54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2f5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e2e2f3c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e2e2f3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2f2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2f21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2f2340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2f24d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2f2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2f27f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2f2980"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2f2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e2e2f83f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e2e2f83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2f8770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2f8900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2f8a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2f8c20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2f8db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2f7020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2f71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2f7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e2e2f58f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e2e2f58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2f5c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2f5e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2f4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2f41b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2f4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2f44d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2f4660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2f47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e2e2f2da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e2e2f2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2f1180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2f1310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2f14a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2f1630"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2f17c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2f1950"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2f1ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2f1c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e2e2f75d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e2e2f75d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2f7950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2f7ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2f7c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2f7e00"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2f6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2f61b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2f6340"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2f64d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e2e2f4a80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e2e2f4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2f4e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2f3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2f31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2f3340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2f34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2f3660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2f37f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2f3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e2e2f0020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e2e2f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2f03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2f0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2f06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2f0850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2f09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2f0b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2f0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d91cc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d91cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d91b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d91b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d91b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d91b550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d91b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d91b870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d91ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d91bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d919e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d919e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d9181c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d918350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d9184e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d918670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d918800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d918990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d918b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d918cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d9150a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d9150a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d915420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d9155b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d915740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d9158d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d915a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d915bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d915d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d914020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d9123f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d9123f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d912770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d912900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d912a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d912c20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d912db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d911020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d9111b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d911340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d90f6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d90f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d90fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d90fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d90fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d90e020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d90e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d90e340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d90e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d90e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d90c9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d90c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d90cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d90b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d90b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d90b340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d90b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d90b660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d90b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d90b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d909e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d909e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d9081c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d908350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d9084e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d908670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d908800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d908990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d908b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d908cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d9050a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d9050a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d905420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d9055b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d905740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d9058d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d905a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d905bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d905d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d904020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e2e2e7a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e2e2e7a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2e7e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2e6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2e61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2e6340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2e64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2e6660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2e67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2e6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e2e2e3020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e2e2e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2e33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2e3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2e36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2e3850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2e39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2e3b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2e3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e2e2e97a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e2e2e97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2e9b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2e9cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2e9e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2e8020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2e81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2e8340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2e84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e2e2e6c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e2e2e6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2e5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2e51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2e5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2e54d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2e5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2e57f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2e5980"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2e5b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e2e2e22b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e2e2e22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2e2630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2e27c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2e2950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2e2ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2e2c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2e2e00"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2e1020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2e11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e2e2e88f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e2e2e88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2e8c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2e8e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2e7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2e71b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2e7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2e74d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2e7660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2e77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e2e2e5da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e2e2e5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2e4180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2e4310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2e44a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2e4630"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2e47c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2e4950"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2e4ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2e4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e2e2e1440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e2e2e1440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2e17c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2e1950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2e1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2e1c70"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2e1e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2df020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2df1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d8b1c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d8b1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d8b00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d8b0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d8b03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d8b0550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d8b06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d8b0870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d8b0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d8b0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d8aee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d8aee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d8ad1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d8ad350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d8ad4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d8ad670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d8ad800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d8ad990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d8adb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d8adcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d8aa0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d8aa0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d8aa420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d8aa5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d8aa740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d8aa8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d8aaa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d8aabf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d8aad80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d8a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d8a73f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d8a73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d8a7770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d8a7900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d8a7a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d8a7c20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d8a7db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d8a6020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d8a61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d8a6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d8a46d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d8a46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d8a4a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d8a4be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d8a4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d8a3020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d8a31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d8a3340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d8a34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d8a3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d8a19b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d8a19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d8a1d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d8a0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d8a01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d8a0340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d8a04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d8a0660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d8a07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d8a0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d89ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d89ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d89d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d89d350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d89d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d89d670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d89d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d89d990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d89db20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d89dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d89a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d89a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d89a420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d89a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d89a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d89a8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d89aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d89abf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d89ad80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d899020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2e2d8a20" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2e2d8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2d8da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2c1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2c11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2c1340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2c14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2c1660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2c17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2c1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2e2bd6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2e2bd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2bda50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2bdbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2bdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2bb020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2bb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2bb340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2bb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2e2b7160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2e2b7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2b74e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2b7670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2b7800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2b7990"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2b7b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2b7cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2b7e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2e2b2c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2e2b2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2b10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2b1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2b13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2b1550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2b16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2b1870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2b1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2b1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2e2ad6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2e2ad6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2ada50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2adbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2add70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2ac020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2ac1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2ac340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2ac4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2ac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2e2a7160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2e2a7160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2a74e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2a7670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2a7800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2a7990"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2a7b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2a7cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2a7e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2e2a2c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2e2a2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2a10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e2a1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2a13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e2a1550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2a16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2a1870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2a1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e2a1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2e29d6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2e29d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e29da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e29dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e29dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e29c020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e29c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e29c340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e29c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e29c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2e297160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2e297160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2974e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e297670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e297800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e297990"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e297b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e297cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e297e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e296020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2e292c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2e292c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2910a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e291230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2913c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e291550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2916e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e291870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e291a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e291b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2e28d6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2e28d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e28da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e28dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e28dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e28c020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e28c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e28c340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e28c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e28c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2e287160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2e287160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2874e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e287670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e287800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e287990"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e287b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e287cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e287e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e286020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2e282c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2e282c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2810a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e281230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2813c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e281550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e2816e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e281870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e281a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e281b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2e27d6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2e27d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e27da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2e27dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e27dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2e27c020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e27c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e27c340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e27c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2e27c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA" ref="0x7f9e2e24b8d0" loc="7:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA" scoped="" ref="0x7f9e2e24b8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e24bc50"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e24bde0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e248020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2481b0"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e248340"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e2484d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e248660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL" ref="0x7f9e2e238550" loc="18:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL" scoped="" ref="0x7f9e2e238550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2388d0"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e238a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e238bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e238d80"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e237020"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e2371b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e237340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD" ref="0x7f9e2e245d20" loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD" scoped="" ref="0x7f9e2e245d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e2440e0"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e244270"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e244400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e244590"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e244720"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e2448b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e244a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG" ref="0x7f9e2e23c020" loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG" scoped="" ref="0x7f9e2e23c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e23c3a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e23c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e23c6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e23c850"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e23c9e0"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e23cb70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e23cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ" ref="0x7f9e2e23a1d0" loc="16:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ" scoped="" ref="0x7f9e2e23a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e23a550"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e23a6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e23a870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e23aa00"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e23ab90"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e23ad20"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e239020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB" ref="0x7f9e2e248a00" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB" scoped="" ref="0x7f9e2e248a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e248d80"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e247020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2471b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e247340"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e2474d0"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e247660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE" ref="0x7f9e2e244de0" loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE" scoped="" ref="0x7f9e2e244de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e243180"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e243310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e2434a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e243630"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e2437c0"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e243950"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e243ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH" ref="0x7f9e2e23b100" loc="15:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH" scoped="" ref="0x7f9e2e23b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e23b480"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e23b610"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e23b7a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e23b930"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e23bac0"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e23bc50"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e23bde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK" ref="0x7f9e2e2393c0" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK" scoped="" ref="0x7f9e2e2393c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e239740"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e2398d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e239a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e239bf0"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e239d80"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e238020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC" ref="0x7f9e2e247b90" loc="9:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC" scoped="" ref="0x7f9e2e247b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e245020"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e2451b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e245340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2454d0"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e245660"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e2457f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e245980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF" ref="0x7f9e2e243e80" loc="12:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF" scoped="" ref="0x7f9e2e243e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e23d220"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e23d3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e23d540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e23d6d0"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e23d860"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e23d9f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e23db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9e2e233aa0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortAP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e233aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e233e20"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e21f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e21f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e21f340"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e21f4d0"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e21f660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e21f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9e2e21be80" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortBP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e21be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e21a220"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e21a3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e21a540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e21a6d0"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e21a860"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e21a9f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e21ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9e2e216390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e216390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e216710"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e2168a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e216a30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e216bc0"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e216d50"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e215020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9e2e211910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e211910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e211c90"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e211e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e210020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2101b0"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e210340"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e2104d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e210660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9e2e20ccd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortEP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e20ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e20b0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e20b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e20b3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e20b550"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e20b6e0"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e20b870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e20ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9e2e207390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortFP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e207390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e207710"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e2078a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e207a30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e207bc0"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e207d50"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e206020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e2061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9e2e202910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortGP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e202910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e202c90"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e202e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e201020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e2011b0"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e201340"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e2014d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e201660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9e2e1fd780" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortHP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e1fd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e1fdb00"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1fdc90"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e1fde20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e1fc020"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e1fc1b0"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e1fc340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e1fc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9e2e1f96c0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortJP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e1f96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e1f9a40"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1f9bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e1f9d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e1f8020"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e1f81b0"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e1f8340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e1f84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9e2e1f46c0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortKP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e1f46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e1f4a40"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1f4bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e1f4d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e1f3020"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e1f31b0"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e1f3340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e1f34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f9e2e1ef6c0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortLP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f9e2e1ef6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2e1efa40"/>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1efbd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2e1efd60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2e1ee020"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e1ee1b0"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e1ee340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e1ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f9e2e1e3290" loc="40:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f9e2e1e3290"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6fdd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7f9e2e6fb180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f9e2e1e20d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f9e2e1d19e0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f9e2e1d19e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1d1d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1d0020"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e1d01b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e1d0340"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e1d04d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e1d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f9e2e1d69e0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f9e2e1d69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1d6d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1d5020"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e1d51b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e1d5340"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e1d54d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e1d5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f9e2e1d39e0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f9e2e1d39e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1d3d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1d2020"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e1d21b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e1d2340"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e1d24d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e1d2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f9e2e1d09e0" loc="52:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f9e2e1d09e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1d0d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1cf020"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e1cf1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e1cf340"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e1cf4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e1cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f9e2e1d59e0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f9e2e1d59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1d5d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1d4020"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e1d41b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e1d4340"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e1d44d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e1d4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f9e2e1d29e0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f9e2e1d29e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1d2d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1d1020"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e1d11b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e1d1340"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e1d14d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e1d1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f9e2e4a99b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f9e2e4a99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e4a9d30"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1d6020"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e1d61b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e1d6340"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e1d64d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e1d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f9e2e1d49e0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f9e2e1d49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1d4d60"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1d3020"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e1d31b0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e1d3340"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e1d34d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e1d3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f9e2e1c77a0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f9e2e1c77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1c7b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f9e2e1cb020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f9e2e1cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1cb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f9e2e1ca7a0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f9e2e1ca7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1cab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f9e2e1c6020" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f9e2e1c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1c63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f9e2e1cb7a0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f9e2e1cb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1cbb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f9e2e1c7020" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f9e2e1c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1c73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f9e2e1c9860" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f9e2e1c9860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1c9be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f9e2e1ca020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f9e2e1ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9e2e1aa060" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9e2e1aa060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1aa3e0"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e1aa570"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e1aa700"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e1aa890"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e1aaa20"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e1aabb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9e2e1aae80" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e1aae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e195220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9e2e193da0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9e2e193da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e191180"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e191310"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e1914a0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e191630"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e1917c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e191950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9e2e191c20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e191c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e190020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9e2e18ec90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9e2e18ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e18d0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e18d230"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e18d3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e18d550"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e18d6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e18d870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9e2e18db40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e18db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e18c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9e2e18ac90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9e2e18ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1890a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e189230"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e1893c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e189550"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e1896e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e189870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9e2e189b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e189b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e188020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9e2e185c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9e2e185c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1840a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e184230"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e1843c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e184550"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e1846e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e184870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9e2e184b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e184b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e183020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9e2e181c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9e2e181c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1800a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e180230"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e1803c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e180550"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e1806e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e180870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9e2e180b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e180b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e17f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9e2e17dc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9e2e17dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e17c0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e17c230"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e17c3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e17c550"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e17c6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e17c870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9e2e17cb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e17cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e17a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f9e2e178c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f9e2e178c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f9e2e1770a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2e177230"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2e1773c0"/>
        <function-ref name="edge" scoped="" ref="0x7f9e2e177550"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2e1776e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f9e2e177870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f9e2e177b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f9e2e177b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f9e2e176020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9e2e16c9f0" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9e2e16c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9e2e16cd70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9e2df69020"/>
        <function-ref name="request" scoped="" ref="0x7f9e2df691b0"/>
        <function-ref name="granted" scoped="" ref="0x7f9e2df69340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9e2df694d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9e2df69880" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9e2df69880"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9e2e578110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9e2e5783d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9e2df68500"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9e2df669b0"/>
        <function-ref name="write" scoped="" ref="0x7f9e2df67150"/>
        <function-ref name="readDone" scoped="" ref="0x7f9e2df67d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9e2e15e4f0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9e2e15e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9e2e15e870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9e2e15ea00"/>
        <function-ref name="request" scoped="" ref="0x7f9e2e15eb90"/>
        <function-ref name="granted" scoped="" ref="0x7f9e2e15ed20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9e2e15d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9e2e15da20" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9e2e15da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9e2e578110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9e2e5783d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9e2e15c6b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9e2e159c30"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e15a330"/>
        <function-ref name="readDone" scoped="" ref="0x7f9e2e159020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9e2e0cfbf0" loc="92:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9e2e0cfbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9e2e0ce020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9e2e0ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9e2e0cd930" loc="96:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9e2e0cd930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9e2e0cdcd0"/>
        <function-ref name="configure" scoped="" ref="0x7f9e2e0cde60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9e2e0ce400" loc="93:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9e2e0ce400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9e2e0ce780"/>
        <function-ref name="requested" scoped="" ref="0x7f9e2e0ce910"/>
        <function-ref name="granted" scoped="" ref="0x7f9e2e0ceaa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9e2e0cec30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9e2e0cedc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9e2e0d0e60" loc="91:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9e2e0d0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9e2e0cf230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9e2e0cf3c0"/>
        <function-ref name="request" scoped="" ref="0x7f9e2e0cf550"/>
        <function-ref name="granted" scoped="" ref="0x7f9e2e0cf6e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9e2e0cf870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9e2e0cd060" loc="94:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9e2e0cd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9e2e0cd3e0"/>
        <function-ref name="userId" scoped="" ref="0x7f9e2e0cd570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e2d72c810" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e2d72c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2d72cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f9e2d72ce20" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f9e2d72ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9e2d72b1c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9e2d72b350"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9e2d72b4e0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9e2d72b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f9e2d728d80" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f9e2d728d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f9e2d727180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9e2d727310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f9e2d726b60" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f9e2d726b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f9e2d725020"/>
        <function-ref name="configure" scoped="" ref="0x7f9e2d7251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f9e2d725440" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f9e2d725440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f9e2d7257c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f9e2d725950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f9e2d725ae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f9e2d725c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f9e2d727560" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9e2d727560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9e2d7278e0"/>
        <function-ref name="requested" scoped="" ref="0x7f9e2d727a70"/>
        <function-ref name="granted" scoped="" ref="0x7f9e2d727c00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9e2d727d90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9e2d726020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9e2d724020" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9e2d724020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9e2d7243a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9e2d724530"/>
        <function-ref name="led1On" scoped="" ref="0x7f9e2d7246c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9e2d724850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9e2d7249e0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d724b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9e2d724d00"/>
        <function-ref name="led0On" scoped="" ref="0x7f9e2d7234d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d7231b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9e2d723020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9e2d723340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9e2d728020" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9e2d728020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9e2d7283c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9e2d728550"/>
        <function-ref name="request" scoped="" ref="0x7f9e2d7286e0"/>
        <function-ref name="granted" scoped="" ref="0x7f9e2d728870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9e2d728a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f9e2d726270" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9e2d726270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9e2d7265f0"/>
        <function-ref name="userId" scoped="" ref="0x7f9e2d726780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f9e2d7237a0" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f9e2d7237a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2d723b20"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2d723cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f9e2e0c9400" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f9e2e0c9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f9e2e0c9780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f9e2e0c99d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f9e2e0c99d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9e2e0c9d50"/>
        <function-ref name="requested" scoped="" ref="0x7f9e2e0ba020"/>
        <function-ref name="granted" scoped="" ref="0x7f9e2e0ba1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9e2e0ba340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f9e2e0ba4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f9e2e0cac40" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9e2e0cac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e2e0c9020"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2e0c91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f9e2e0ba720" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f9e2e0ba720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f9e2e0baaa0"/>
        <function-ref name="userId" scoped="" ref="0x7f9e2e0bac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f9e2e076cd0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f9e2e076cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f9e2e0740a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f9e2e079020" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f9e2e079020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9e2e578110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9e2e5783d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9e2e079c50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9e2e076150"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e0788c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f9e2e077510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f9e2e074330" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9e2e074330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9e2e0746b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9e2e074840"/>
        <function-ref name="led1On" scoped="" ref="0x7f9e2e0749d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9e2e074b60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9e2e074cf0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2e074e80"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9e2e073030"/>
        <function-ref name="led2On" scoped="" ref="0x7f9e2e073670"/>
        <function-ref name="set" scoped="" ref="0x7f9e2e073350"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9e2e0731c0"/>
        <function-ref name="led0On" scoped="" ref="0x7f9e2e0734e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f9e2e0b6470" loc="41:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f9e2e0b6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9e2e0b6810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9e2e0b69a0"/>
        <function-ref name="request" scoped="" ref="0x7f9e2e0b6b30"/>
        <function-ref name="granted" scoped="" ref="0x7f9e2e0b6cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9e2e0b6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9e2e07f370" loc="42:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9e2e07f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9e2e578110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9e2e5783d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9e2e07e020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9e2e07c510"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e07ec50"/>
        <function-ref name="readDone" scoped="" ref="0x7f9e2e07d8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f9e2e07a210" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f9e2e07a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f9e2e07a5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f9e2e07a740"/>
        <function-ref name="request" scoped="" ref="0x7f9e2e07a8d0"/>
        <function-ref name="granted" scoped="" ref="0x7f9e2e07aa60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f9e2e07abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f9e2e0017f0" loc="79:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f9e2e0017f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f9e2e001b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f9e2e001e40" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f9e2e001e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f9e2e0001e0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f9e2e000370"/>
        <function-ref name="setStart" scoped="" ref="0x7f9e2e000500"/>
        <function-ref name="status" scoped="" ref="0x7f9e2e000690"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f9e2e000820"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9e2e0009b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9e2e000b40"/>
        <function-ref name="read" scoped="" ref="0x7f9e2e000cd0"/>
        <function-ref name="init" scoped="" ref="0x7f9e2e000e60"/>
        <function-ref name="enableAck" scoped="" ref="0x7f9e2dfff020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9e2dfff1b0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f9e2dfff340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9e2dfff4d0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f9e2dfff760"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2dfff8f0"/>
        <function-ref name="write" scoped="" ref="0x7f9e2dfffa80"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f9e2dfffc10"/>
        <function-ref name="off" scoped="" ref="0x7f9e2dfffda0"/>
        <function-ref name="setStop" scoped="" ref="0x7f9e2dffe020"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f9e2dffe1b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9e2dffe340"/>
        <function-ref name="hasStop" scoped="" ref="0x7f9e2dffe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f9e2dffe7a0" loc="82:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f9e2dffe7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9e2dffeb20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9e2dffecb0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9e2dffee40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9e2dffd020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9e2dffd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dffd340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9e2dffd4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9e2dffdb10"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dffd7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9e2dffd660"/>
        <function-ref name="led0On" scoped="" ref="0x7f9e2dffd980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f9e2dffdde0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f9e2dffdde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9e2dffc180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9e2dffc310"/>
        <function-ref name="led1On" scoped="" ref="0x7f9e2dffc4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9e2dffc630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9e2dffc7c0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dffc950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9e2dffcae0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9e2dffb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dffce00"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9e2dffcc70"/>
        <function-ref name="led0On" scoped="" ref="0x7f9e2dffb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f9e2dffb480" loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f9e2dffb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2dffb800"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2dffb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f9e2e0061e0" loc="77:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f9e2e0061e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f9e2e006560"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2e0066f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f9e2e006aa0" loc="78:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f9e2e006aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f9e2e578110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f9e2e5783d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f9e2e0056f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f9e2e002c30"/>
        <function-ref name="write" scoped="" ref="0x7f9e2e003330"/>
        <function-ref name="readDone" scoped="" ref="0x7f9e2e002020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f9e2dff8ab0" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f9e2dff8ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f9e2dff8e30"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f9e2dff4020"/>
        <function-ref name="setStart" scoped="" ref="0x7f9e2dff41b0"/>
        <function-ref name="status" scoped="" ref="0x7f9e2dff4340"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f9e2dff44d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9e2dff4660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9e2dff47f0"/>
        <function-ref name="read" scoped="" ref="0x7f9e2dff4980"/>
        <function-ref name="init" scoped="" ref="0x7f9e2dff4b10"/>
        <function-ref name="enableAck" scoped="" ref="0x7f9e2dff4ca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9e2dff4e30"/>
        <function-ref name="hasStart" scoped="" ref="0x7f9e2dff3020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9e2dff31b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f9e2dff3440"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2dff35d0"/>
        <function-ref name="write" scoped="" ref="0x7f9e2dff3760"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f9e2dff38f0"/>
        <function-ref name="off" scoped="" ref="0x7f9e2dff3a80"/>
        <function-ref name="setStop" scoped="" ref="0x7f9e2dff3c10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f9e2dff3da0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9e2dff2020"/>
        <function-ref name="hasStop" scoped="" ref="0x7f9e2dff21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f9e2dfef440" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f9e2dfef440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f9e2dfef7c0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f9e2dfef950"/>
        <function-ref name="setStart" scoped="" ref="0x7f9e2dfefae0"/>
        <function-ref name="status" scoped="" ref="0x7f9e2dfefc70"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f9e2dfefe00"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9e2dfee020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f9e2dfee1b0"/>
        <function-ref name="read" scoped="" ref="0x7f9e2dfee340"/>
        <function-ref name="init" scoped="" ref="0x7f9e2dfee4d0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f9e2dfee660"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f9e2dfee7f0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f9e2dfee980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f9e2dfeeb10"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f9e2dfeeda0"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2dfed020"/>
        <function-ref name="write" scoped="" ref="0x7f9e2dfed1b0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f9e2dfed340"/>
        <function-ref name="off" scoped="" ref="0x7f9e2dfed4d0"/>
        <function-ref name="setStop" scoped="" ref="0x7f9e2dfed660"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f9e2dfed7f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f9e2dfed980"/>
        <function-ref name="hasStop" scoped="" ref="0x7f9e2dfedb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f9e2dfec020" loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f9e2dfec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dfec3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dfec530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dfec6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dfec850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dfec9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dfecb70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dfecd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dfeb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f9e2dfeb360" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f9e2dfeb360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dfeb6e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dfeb870"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dfeba00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dfebb90"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dfebd20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dfea020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dfea1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dfea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9e2dfb54a0" loc="46:../tinyos_ws18/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9e2dfb54a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9e2dfb5820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9e2dfb59b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f9e2dfb5b40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9e2dfb5cd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9e2dfb5e60"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dfb2020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9e2dfb21b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9e2dfb27f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dfb2340"/>
        <function-ref name="led0On" scoped="" ref="0x7f9e2dfb24d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f9e2dfb2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f9e2dfad550" loc="50:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f9e2dfad550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dfad8d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dfada60"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dfadbf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dfadd80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dfac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dfac1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dfac340"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dfac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e2dfb17c0" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e2dfb17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2dfb1b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f9e2dfac7f0" loc="51:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f9e2dfac7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dfacb70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dfacd00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dfaa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dfaa1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dfaa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dfaa4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dfaa660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dfaa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9e2dfb1dc0" loc="47:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9e2dfb1dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9e2dfae180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9e2dfae310"/>
        <function-ref name="led1On" scoped="" ref="0x7f9e2dfae4a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9e2dfae630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9e2dfae7c0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dfae950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9e2dfaeae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9e2dfad1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dfaec70"/>
        <function-ref name="led0On" scoped="" ref="0x7f9e2dfaee00"/>
        <function-ref name="led2On" scoped="" ref="0x7f9e2dfad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f9e2dfaab10" loc="52:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f9e2dfaab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dfa9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dfa91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dfa9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dfa94d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dfa9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dfa97f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dfa9980"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dfa9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f9e2df8e1d0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f9e2df8e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2df8e550"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2df8e6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2df8e870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2df8ea00"/>
        <function-ref name="get" scoped="" ref="0x7f9e2df8eb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2df8ed20"/>
        <function-ref name="set" scoped="" ref="0x7f9e2df8d020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2df8d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f9e2df8d510" loc="45:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f9e2df8d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2df8d890"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2df8da20"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2df8dbb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2df8dd40"/>
        <function-ref name="get" scoped="" ref="0x7f9e2df8c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2df8c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2df8c340"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2df8c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f9e2df8bab0" loc="48:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e2df8bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2df8be30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f9e2df8c830" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f9e2df8c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2df8cbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2df8cd40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2df8b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2df8b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2df8b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2df8b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2df8b660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2df8b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e2df82340" loc="46:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e2df82340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2df826c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f9e2df82980" loc="47:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f9e2df82980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f9e2df82d00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f9e2df81020"/>
        <function-ref name="led1On" scoped="" ref="0x7f9e2df811b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f9e2df81340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f9e2df814d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2df81660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f9e2df817f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f9e2df81e30"/>
        <function-ref name="set" scoped="" ref="0x7f9e2df81980"/>
        <function-ref name="led0On" scoped="" ref="0x7f9e2df81b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f9e2df81ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9e2dda3140" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="FMClickC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e2dda3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e2dd9f630"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2dda2b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9e2dda1920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9e2dda14a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9e2dd9e020"/>
        <function-ref name="gett0" scoped="" ref="0x7f9e2dd9fab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e2dda1020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9e2dda3d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9e2dd9f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9e2dda2220"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2dda26f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f9e2df58020" loc="49:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f9e2df58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e2df55630"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2df57a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9e2df56920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9e2df564a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9e2df53020"/>
        <function-ref name="gett0" scoped="" ref="0x7f9e2df55ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e2df56020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9e2df58c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9e2df55020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9e2df57110"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2df575e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f9e2df50c30" loc="46:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f9e2df50c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e2df4b110"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2df4d6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9e2df4c4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9e2df4c020"/>
        <function-ref name="getdt" scoped="" ref="0x7f9e2df4ba10"/>
        <function-ref name="gett0" scoped="" ref="0x7f9e2df4b590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e2df4db20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9e2df4f860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9e2df4cab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9e2df4fd30"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2df4d220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9e2df46500" loc="47:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f9e2df46500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e2df48170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e2df53e60" loc="45:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e2df53e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2df50210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f9e2df37020" loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f9e2df37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e2df37e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e2df32800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e2df32340"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e2df32cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e2df47c80" loc="27:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e2df47c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2df430a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f9e2df3a960" loc="28:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f9e2df3a960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e2df391b0"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2df401b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9e2df40b30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e2df40670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9e2df39670"/>
        <function-ref name="start" scoped="" ref="0x7f9e2df417c0"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2df41cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9e2de424b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9e2de424b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e2de3fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2de40da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f9e2de3f760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e2de3f2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9e2de3e2a0"/>
        <function-ref name="start" scoped="" ref="0x7f9e2de403d0"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2de408e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e2de43ba0" loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e2de43ba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f9e2e7b4020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f9e2e7b4020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2de42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9e2de3e8d0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9e2de3e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e2de3d780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e2de3b150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e2de3dc40"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e2de3b610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f9e2d685190" loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e2d685190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9e2d685510"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9e2d6856a0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9e2d685830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9e2d6859c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9e2d685b50"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9e2d685ce0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9e2d685e70"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9e2d684030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f9e2d6929c0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9e2d6929c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e2d68e260"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2d68f220"/>
        <function-ref name="startAt" scoped="" ref="0x7f9e2d68fba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e2d68f6e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9e2d68e720"/>
        <function-ref name="start" scoped="" ref="0x7f9e2d690810"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2d690d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f9e2d6921b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f9e2d6921b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2d692530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f9e2d68ed50" loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9e2d68ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e2d68cba0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e2d68b550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e2d68b090"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e2d68ba10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x7f9e2d680780" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f9e2d680780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f9e2d680b00"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9e2d680c90"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9e2d680e20"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9e2d67f020"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9e2d67f1b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9e2d67f340"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9e2d67f4d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9e2d67f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f9e2d6843e0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9e2d6843e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9e2d682e60"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2d683a60"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d683090"/>
        <function-ref name="reset" scoped="" ref="0x7f9e2d682020"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e2d680350"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d683550"/>
        <function-ref name="start" scoped="" ref="0x7f9e2d6824e0"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2d6829a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f9e2d68a020" loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e2d68a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9e2d686350"/>
        <function-ref name="test" scoped="" ref="0x7f9e2d6889a0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d68ac50"/>
        <function-ref name="setScale" scoped="" ref="0x7f9e2d686810"/>
        <function-ref name="getScale" scoped="" ref="0x7f9e2d686d20"/>
        <function-ref name="reset" scoped="" ref="0x7f9e2d689b20"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e2d689660"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e2d688e60"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d689150"/>
        <function-ref name="start" scoped="" ref="0x7f9e2d688020"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2d6884e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9e2deb4c10" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e2deb4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9e2deb3020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9e2deb31b0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9e2deb3340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9e2deb34d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9e2deb3660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9e2deb37f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9e2deb3980"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9e2deb3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f9e2deae570" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f9e2deae570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f9e2deae8f0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9e2deaea80"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9e2deaec10"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9e2deaeda0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9e2dead020"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9e2dead1b0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9e2dead340"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9e2dead4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9e2deb2060" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9e2deb2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9e2deafa10"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2deb16c0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2deb2c90"/>
        <function-ref name="reset" scoped="" ref="0x7f9e2deb1b80"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e2deae020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2deb11b0"/>
        <function-ref name="start" scoped="" ref="0x7f9e2deaf090"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2deaf550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9e2debb8f0" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e2debb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9e2deb5cd0"/>
        <function-ref name="test" scoped="" ref="0x7f9e2deb5350"/>
        <function-ref name="get" scoped="" ref="0x7f9e2deb85a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f9e2deb41b0"/>
        <function-ref name="getScale" scoped="" ref="0x7f9e2deb46c0"/>
        <function-ref name="reset" scoped="" ref="0x7f9e2deb74e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e2deb7020"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e2deb5810"/>
        <function-ref name="set" scoped="" ref="0x7f9e2deb8a60"/>
        <function-ref name="start" scoped="" ref="0x7f9e2deb79a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2deb7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f9e2dea5db0" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f9e2dea5db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f9e2dea4180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f9e2dea4310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f9e2dea44a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f9e2dea4630"/>
        <function-ref name="setControlB" scoped="" ref="0x7f9e2dea47c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f9e2dea4950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f9e2dea4ae0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f9e2dea4c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f9e2de9f4c0" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f9e2de9f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f9e2de9f840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f9e2de9fbf0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f9e2de9fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f9e2de9e020"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f9e2de9e1b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f9e2de9e340"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f9e2de9e4d0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f9e2de9e660"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f9e2de9e7f0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f9e2de9e980"/>
        <function-ref name="setAssr" scoped="" ref="0x7f9e2de9eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f9e2dea21a0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f9e2dea21a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9e2dea0b30"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2dea17f0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dea2dd0"/>
        <function-ref name="reset" scoped="" ref="0x7f9e2dea1cb0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e2de9f020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dea12e0"/>
        <function-ref name="start" scoped="" ref="0x7f9e2dea01b0"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2dea0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9e2deaaa10" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e2deaaa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f9e2dea6e60"/>
        <function-ref name="test" scoped="" ref="0x7f9e2dea64e0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dea96b0"/>
        <function-ref name="setScale" scoped="" ref="0x7f9e2dea5350"/>
        <function-ref name="getScale" scoped="" ref="0x7f9e2dea5860"/>
        <function-ref name="reset" scoped="" ref="0x7f9e2dea7590"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e2dea70d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f9e2dea69a0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dea9b70"/>
        <function-ref name="start" scoped="" ref="0x7f9e2dea7a50"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2dea6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f9e2de09020" loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f9e2de09020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2de093a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2de09530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f9e2de0ecd0" loc="49:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f9e2de0ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e2de0a670"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2de0b550"/>
        <function-ref name="startAt" scoped="" ref="0x7f9e2de0a020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e2de0ba10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f9e2de0ab30"/>
        <function-ref name="start" scoped="" ref="0x7f9e2de0cb60"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2de0b090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9e2de13830" loc="48:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e2de13830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e2de0fcf0"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2de10300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9e2de0f0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9e2de10c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f9e2de0e660"/>
        <function-ref name="gett0" scoped="" ref="0x7f9e2de0e1e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e2de10780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9e2de12480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9e2de0f6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9e2de12950"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2de12e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f9e2ddb9a00" loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f9e2ddb9a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f9e2ddb9d80"/>
        <function-ref name="runTask" scoped="" ref="0x7f9e2ddb7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f9e2ddbe640" loc="49:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f9e2ddbe640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e2ddbac40"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2ddbb1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9e2ddba020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9e2ddbbae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9e2ddb9590"/>
        <function-ref name="gett0" scoped="" ref="0x7f9e2ddb9110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e2ddbb660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9e2ddbc390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9e2ddba630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9e2ddbc860"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2ddbcd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f9e2ddc4150" loc="48:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f9e2ddc4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f9e2ddbf700"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2ddc2c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f9e2ddc1a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f9e2ddc15b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f9e2ddbe090"/>
        <function-ref name="gett0" scoped="" ref="0x7f9e2ddbfba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f9e2ddc1110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f9e2ddc4d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f9e2ddbf0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f9e2ddc22a0"/>
        <function-ref name="stop" scoped="" ref="0x7f9e2ddc2790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f9e2ddb5790" loc="48:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f9e2ddb5790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e2ddab3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f9e2ddaba60" loc="49:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f9e2ddaba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f9e2e6ff9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f9e2e6ffd20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f9e2ddaa890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f9e2dda9260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f9e2ddaad50"/>
        <function-ref name="overflow" scoped="" ref="0x7f9e2dda9720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f9e2dd5f020" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f9e2dd5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd5f7a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd5f930"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd5fac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd5fc50"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd5fde0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd5e020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd5e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd5e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f9e2dd7c800" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f9e2dd7c800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd7cb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd7cd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd7b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd7b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd7b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd7b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd7b660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd7b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f9e2dd70670" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f9e2dd70670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd709f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd70b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd70d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd6e020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd6e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd6e340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd6e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd6e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f9e2dd65020" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f9e2dd65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd653a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd65530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd656c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd65850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd659e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd65b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd65d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f9e2dd59350" loc="108:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f9e2dd59350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd596d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd59860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd599f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd59b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd59d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd58020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd581b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd58340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH2" ref="0x7f9e2dd56cb0" loc="112:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH2" scoped="" ref="0x7f9e2dd56cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd550a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd55230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd553c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd55550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd556e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd55870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd55a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd55b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH7" ref="0x7f9e2dd4fcb0" loc="117:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH7" scoped="" ref="0x7f9e2dd4fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd4e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd4e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd4e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd4e550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd4e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd4e870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd4ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd4eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ6" ref="0x7f9e2dd46350" loc="125:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ6" scoped="" ref="0x7f9e2dd46350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd466d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd46860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd469f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd46b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd46d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd45020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd451b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd45340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK0" ref="0x7f9e2dd44990" loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK0" scoped="" ref="0x7f9e2dd44990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd44d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd43020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd431b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd43340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd434d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd43660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd437f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd43980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL2" ref="0x7f9e2dd38990" loc="139:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL2" scoped="" ref="0x7f9e2dd38990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd38d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd37020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd371b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd37340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd374d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd37660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd377f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd37980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f9e2dd94990" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f9e2dd94990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd94d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd93020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd931b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd93340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd934d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd93660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd937f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd93980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f9e2dd68990" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f9e2dd68990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd68d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd67020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd671b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd67340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd674d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd67660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd677f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd67980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f9e2dd91020" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f9e2dd91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd913a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd91530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd916c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd91850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd919e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd91b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd91d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f9e2dd84020" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f9e2dd84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd843a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd84530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd846c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd84850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd849e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd84b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd84d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f9e2dd78060" loc="80:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f9e2dd78060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd783e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd78570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd78700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd78890"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd78a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd78bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd78d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f9e2dd6b020" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f9e2dd6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd6b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd6b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd6b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd6b850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd6b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd6bb70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd6bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f9e2dd9ab20" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f9e2dd9ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd99020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd991b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd99340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd994d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd99660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd997f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd99980"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd99b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f9e2dd8e990" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f9e2dd8e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd8ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd8d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd8d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd8d340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd8d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd8d660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd8d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd8d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f9e2dd81990" loc="72:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f9e2dd81990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd81d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd80020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd801b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd80340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd804d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd80660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd807f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd80980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f9e2dd75990" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f9e2dd75990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd75d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd74020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd741b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd74340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd744d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd74660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd747f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd74980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f9e2dd62990" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f9e2dd62990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd62d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd61020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd611b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd61340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd614d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd61660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd617f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd61980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f9e2dd5ccb0" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f9e2dd5ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd5b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd5b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd5b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd5b550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd5b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd5b870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd5ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd5bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH0" ref="0x7f9e2dd58670" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH0" scoped="" ref="0x7f9e2dd58670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd589f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd58b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd58d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd57020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd571b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd57340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd574d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd57660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f9e2dd72020" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f9e2dd72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd723a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd72530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd726c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd72850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd729e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd72b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd72d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH5" ref="0x7f9e2dd51670" loc="115:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH5" scoped="" ref="0x7f9e2dd51670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd519f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd51b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd51d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd50020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd501b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd50340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd504d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd50660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ1" ref="0x7f9e2dd4c350" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ1" scoped="" ref="0x7f9e2dd4c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd4c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd4c860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd4c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd4cb80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd4cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd4b020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd4b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd4b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ4" ref="0x7f9e2dd49cb0" loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ4" scoped="" ref="0x7f9e2dd49cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd480a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd48230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd483c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd48550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd486e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd48870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd48a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd48b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK3" ref="0x7f9e2dd40350" loc="131:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK3" scoped="" ref="0x7f9e2dd40350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd406d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd40860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd409f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd40b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd40d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd3f020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd3f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd3f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK6" ref="0x7f9e2dd3dcb0" loc="134:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK6" scoped="" ref="0x7f9e2dd3dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd3c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd3c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd3c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd3c550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd3c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd3c870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd3ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd3cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL0" ref="0x7f9e2dd3a350" loc="137:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL0" scoped="" ref="0x7f9e2dd3a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd3a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd3a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd3a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd3ab80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd3ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd39020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd391b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd39340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL5" ref="0x7f9e2dd33350" loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL5" scoped="" ref="0x7f9e2dd33350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd336d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd33860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd339f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd33b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd33d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd32020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd321b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd32340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f9e2dd96350" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f9e2dd96350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd966d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd96860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd969f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd96b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd96d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd95020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd951b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd95340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f9e2dd89350" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f9e2dd89350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd896d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd89860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd899f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd89b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd89d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd88020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd881b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd88340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f9e2dd5e670" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f9e2dd5e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd5e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd5eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd5ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd5d020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd5d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd5d340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd5d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd5d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f9e2dd87990" loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f9e2dd87990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd87d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd86020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd861b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd86340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd864d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd86660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd867f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd86980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f9e2dd7bb20" loc="78:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f9e2dd7bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd7a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd7a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd7a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd7a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd7a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd7a7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd7a980"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd7ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f9e2dd6e990" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f9e2dd6e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd6ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd6d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd6d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd6d340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd6d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd6d660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd6d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd6d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f9e2dd64350" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f9e2dd64350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd646d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd64860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd649f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd64b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd64d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd63020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd631b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd63340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH3" ref="0x7f9e2dd54020" loc="113:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH3" scoped="" ref="0x7f9e2dd54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd54530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd546c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd54850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd549e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd54b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd54d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ7" ref="0x7f9e2dd45670" loc="126:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ7" scoped="" ref="0x7f9e2dd45670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd459f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd45b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd45d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd44020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd441b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd44340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd444d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd44660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK1" ref="0x7f9e2dd43cb0" loc="129:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK1" scoped="" ref="0x7f9e2dd43cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd420a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd42230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd423c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd42550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd426e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd42870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd42a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd42b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL3" ref="0x7f9e2dd37cb0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL3" scoped="" ref="0x7f9e2dd37cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd350a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd35230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd353c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd35550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd356e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd35870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd35a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd35b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ2" ref="0x7f9e2dd4b670" loc="121:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ2" scoped="" ref="0x7f9e2dd4b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd4b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd4bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd4bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd4a020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd4a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd4a340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd4a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd4a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f9e2dd93cb0" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f9e2dd93cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd920a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd92230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd923c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd92550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd926e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd92870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd92a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd92b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK4" ref="0x7f9e2dd3f670" loc="132:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK4" scoped="" ref="0x7f9e2dd3f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd3f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd3fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd3fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd3e020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd3e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd3e340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd3e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd3e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL6" ref="0x7f9e2dd32670" loc="143:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL6" scoped="" ref="0x7f9e2dd32670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd329f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd32b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd32d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd31020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd311b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd31340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd314d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd31660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f9e2dd90350" loc="59:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f9e2dd90350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd906d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd90860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd909f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd90b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd90d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd8f020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd8f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd8f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f9e2dd83350" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f9e2dd83350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd836d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd83860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd839f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd83b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd83d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd82020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd821b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd82340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f9e2dd77350" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f9e2dd77350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd776d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd77860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd779f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd77b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd77d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd76020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd761b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd76340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f9e2dd6a350" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f9e2dd6a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd6a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd6a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd6a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd6ab80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd6ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd69020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd691b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd69340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f9e2dd99e40" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f9e2dd99e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd981e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd98370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd98500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd98690"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd98820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd989b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd98b40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd98cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f9e2dd8dcb0" loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f9e2dd8dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd8b180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd8b310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd8b4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd8b630"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd8b7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd8b950"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd8bae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd8bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f9e2dd80cb0" loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f9e2dd80cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd7f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd7f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd7f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd7f550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd7f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd7f870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd7fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd7fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f9e2dd61cb0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f9e2dd61cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd600a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd60230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd603c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd60550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd606e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd60870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd60a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd60b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH1" ref="0x7f9e2dd57990" loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH1" scoped="" ref="0x7f9e2dd57990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd57d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd56020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd56340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd56660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd567f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd56980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f9e2dd7d350" loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f9e2dd7d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd7d8d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd7da60"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd7dbf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd7dd80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd7c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd7c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd7c340"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd7c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f9e2dd71350" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f9e2dd71350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd716d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd71860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd719f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd71b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd71d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd70020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd701b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd70340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f9e2dd67cb0" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f9e2dd67cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd660a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd66230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd663c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd66550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd666e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd66870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd66a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd66b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f9e2dd5a020" loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f9e2dd5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd5a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd5a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd5a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd5a850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd5a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd5ab70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd5ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH6" ref="0x7f9e2dd50990" loc="116:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH6" scoped="" ref="0x7f9e2dd50990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd50d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd4f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd4f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd4f340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd4f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd4f660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd4f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd4f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ5" ref="0x7f9e2dd47020" loc="124:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ5" scoped="" ref="0x7f9e2dd47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd473a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd47530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd476c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd47850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd479e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd47b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd47d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK7" ref="0x7f9e2dd3b020" loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK7" scoped="" ref="0x7f9e2dd3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd3b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd3b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd3b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd3b850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd3b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd3bb70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd3bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd3a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL1" ref="0x7f9e2dd39670" loc="138:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL1" scoped="" ref="0x7f9e2dd39670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd399f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd39b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd39d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd38020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd381b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd38340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd384d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd38660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f9e2dd95670" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f9e2dd95670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd959f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd95b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd95d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd94020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd941b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd94340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd944d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd94660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f9e2dd88670" loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f9e2dd88670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd889f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd88b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd88d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd87020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd871b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd87340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd874d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd87660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f9e2dd69670" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f9e2dd69670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd699f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd69b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd69d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd68020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd681b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd68340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd684d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd68660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f9e2dd86cb0" loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f9e2dd86cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd850a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd85230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd853c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd85550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd856e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd85870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd85a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd85b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f9e2dd7ae40" loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f9e2dd7ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd791e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd79370"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd79500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd79690"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd79820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd799b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd79b40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd79cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f9e2dd6dcb0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f9e2dd6dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd6c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd6c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd6c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd6c550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd6c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd6c870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd6ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd6cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f9e2dd63670" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f9e2dd63670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd639f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd63b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd63d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd62020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd621b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd62340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd624d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd62660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f9e2dd9d7f0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f9e2dd9d7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd9db70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd9dd00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd9a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd9a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd9a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd9a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd9a660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd9a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f9e2dd8f670" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f9e2dd8f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd8f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd8fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd8fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd8e020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd8e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd8e340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd8e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd8e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f9e2dd82670" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f9e2dd82670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd829f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd82b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd82d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd81020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd811b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd81340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd814d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd81660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f9e2dd76670" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f9e2dd76670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd769f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd76b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd76d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd75020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd751b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd75340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd754d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd75660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f9e2dd5d990" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f9e2dd5d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd5dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd5c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd5c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd5c340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd5c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd5c660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd5c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd5c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH4" ref="0x7f9e2dd53350" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH4" scoped="" ref="0x7f9e2dd53350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd536d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd53860"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd539f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd53b80"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd53d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd51020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd511b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd51340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ0" ref="0x7f9e2dd4d020" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ0" scoped="" ref="0x7f9e2dd4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd4d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd4d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd4d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd4d850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd4d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd4db70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd4dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f9e2dd74cb0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f9e2dd74cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd730a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd73230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd733c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd73550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd736e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd73870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd73a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd73b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ3" ref="0x7f9e2dd4a990" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ3" scoped="" ref="0x7f9e2dd4a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd4ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd49020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd491b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd49340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd494d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd49660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd497f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd49980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK2" ref="0x7f9e2dd41020" loc="130:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK2" scoped="" ref="0x7f9e2dd41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd413a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd41530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd416c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd41850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd419e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd41b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd41d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK5" ref="0x7f9e2dd3e990" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK5" scoped="" ref="0x7f9e2dd3e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd3ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd3d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd3d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd3d340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd3d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd3d660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd3d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd3d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL4" ref="0x7f9e2dd34020" loc="141:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL4" scoped="" ref="0x7f9e2dd34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd343a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd34530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd346c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd34850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd349e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd34b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd34d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL7" ref="0x7f9e2dd31990" loc="144:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL7" scoped="" ref="0x7f9e2dd31990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd31d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd30020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd301b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd30340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd304d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd30660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd307f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd30980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f9e2dd7e020" loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f9e2dd7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd7e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd7e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd7e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd7e850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd7e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd7eb70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd7ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f9e2dd97060" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f9e2dd97060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd973e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd97570"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd97700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd97890"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd97a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd97bb0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd97d40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f9e2dd8a020" loc="63:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f9e2dd8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd8a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd8a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd8a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd8a850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd8a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd8ab70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd8ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd89020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e2dd2bda0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e2dd2bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd29180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd29310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd294a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd29630"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd297c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd29950"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd29ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd29c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e2dd26440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e2dd26440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd267c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd26950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd26ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd26c70"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd26e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd25020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd251b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd25340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e2dd2da80" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e2dd2da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd2de00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd2c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd2c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd2c340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd2c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd2c660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd2c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd2c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e2dd28020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e2dd28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd283a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd28530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd286c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd28850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd289e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd28b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd28d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e2dd255d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e2dd255d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd25950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd25ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd25c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd25e00"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd24020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd241b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd24340"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e2dd2cc10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e2dd2cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd2b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd2b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd2b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd2b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd2b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd2b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd2b980"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd2bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e2dd272b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e2dd272b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd27630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd277c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd27950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd27ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd27c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd27e00"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd26020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e2dd24760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e2dd24760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd24ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd24c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd24e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd23020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd23340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd234d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd23660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d5df270" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d5df270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d5df5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d5df780"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d5df910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d5dfaa0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d5dfc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d5dfdc0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d5de020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d5de1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d5dc460" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d5dc460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d5dc7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d5dc970"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d5dcb00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d5dcc90"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d5dce20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d5db020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d5db1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d5db340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d5d96d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d5d96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d5d9a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d5d9be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d5d9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d5d8020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d5d81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d5d8340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d5d84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d5d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d5d69b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d5d69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d5d6d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d5d5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d5d51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d5d5340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d5d54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d5d5660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d5d57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d5d5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d5d3e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d5d3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d5d11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d5d1350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d5d14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d5d1670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d5d1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d5d1990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d5d1b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d5d1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d5ce0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d5ce0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d5ce420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d5ce5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d5ce740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d5ce8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d5cea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d5cebf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d5ced80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d5cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d5cb3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d5cb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d5cb770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d5cb900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d5cba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d5cbc20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d5cbdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d5ca020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d5ca1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d5ca340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d5c86d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d5c86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d5c8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d5c8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d5c8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d5c7020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d5c71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d5c7340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d5c74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d5c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e2dd1a020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e2dd1a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd1a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd1a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd1a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd1a850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd1a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd1ab70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd1ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e2dd175d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e2dd175d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd17950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd17ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd17c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd17e00"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd16020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd161b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd16340"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e2dd1dd30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e2dd1dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd1c0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd1c270"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd1c400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd1c590"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd1c720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd1c8b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd1ca40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd1cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e2dd192b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e2dd192b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd19630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd197c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd19950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd19ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd19c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd19e00"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd18020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e2dd16760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e2dd16760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd16ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd16c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd16e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd15020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd151b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd15340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd154d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd15660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e2dd1ce60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e2dd1ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd1b210"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd1b3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd1b530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd1b6c0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd1b850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd1b9e0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd1bb70"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd1bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e2dd18440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e2dd18440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd187c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd18950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd18ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd18c70"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd18e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd17020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd171b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd17340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e2dd158f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e2dd158f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd15c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd15e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd14020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd141b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd14340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd144d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd14660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd147f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d574a60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d574a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d574de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d573020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d5731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d573340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d5734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d573660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d5737f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d573980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d571e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d571e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d5701c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d570350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d5704e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d570670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d570800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d570990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d570b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d570cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d56d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d56d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d56d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d56d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d56d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d56d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d56da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d56dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d56dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d56c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d56a3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d56a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d56a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d56a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d56aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d56ac20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d56adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d569020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d5691b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d569340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d5676d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d5676d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d567a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d567be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d567d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d566020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d5661b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d566340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d5664d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d566660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d5649b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d5649b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d564d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d562020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d5621b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d562340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d5624d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d562660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d5627f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d562980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d560e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d560e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d55f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d55f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d55f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d55f670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d55f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d55f990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d55fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d55fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d55c0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d55c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d55c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d55c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d55c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d55c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d55ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d55cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d55cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d55b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e2dd0b440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e2dd0b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd0b7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd0b950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd0bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd0bc70"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd0be00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd0a020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd0a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd0a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e2dd088f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e2dd088f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd08c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd08e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd07020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd071b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd07340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd074d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd07660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd077f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e2dd0d020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e2dd0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd0d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd0d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd0d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd0d850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd0d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd0db70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd0dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e2dd0a5d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e2dd0a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd0a950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd0aae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd0ac70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd0ae00"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd09020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd091b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd09340"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e2dd07a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e2dd07a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd07e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd06020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd061b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd06340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd064d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd06660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd067f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd06980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e2dd0c2b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e2dd0c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd0c630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd0c7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd0c950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd0cae0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd0cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd0ce00"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd0b020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd0b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e2dd09760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e2dd09760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd09ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd09c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd09e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd08020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd081b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd08340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd084d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd08660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e2dd06c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e2dd06c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dd05020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dd051b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dd05340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dd054d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dd05660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dd057f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dd05980"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dd05b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d509c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d509c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d5080a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d508230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d5083c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d508550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d5086e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d508870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d508a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d508b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d506e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d506e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d5051c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d505350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d5054e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d505670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d505800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d505990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d505b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d505cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d5020a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d5020a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d502420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d5025b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d502740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d5028d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d502a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d502bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d502d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d501020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d4ff3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d4ff3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d4ff770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d4ff900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d4ffa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d4ffc20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d4ffdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d4fe020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d4fe1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d4fe340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d4fc6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d4fc6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d4fca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d4fcbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d4fcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d4fb020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d4fb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d4fb340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d4fb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d4fb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d4f99b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d4f99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d4f9d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d4f7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d4f71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d4f7340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d4f74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d4f7660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d4f77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d4f7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d4f5e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d4f5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d4f41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d4f4350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d4f44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d4f4670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d4f4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d4f4990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d4f4b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d4f4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d4f10a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d4f10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d4f1420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d4f15b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d4f1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d4f18d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d4f1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d4f1bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d4f1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d4f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e2dcfc760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e2dcfc760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcfcae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcfcc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcfce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcfb020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcfb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcfb340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcfb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcfb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e2dcf9c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e2dcf9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcf7020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcf71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcf7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcf74d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcf7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcf77f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcf7980"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcf7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e2dcfe3f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e2dcfe3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcfe770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcfe900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcfea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcfec20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcfedb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcfd020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcfd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcfd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e2dcfb8f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e2dcfb8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcfbc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcfbe00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcfa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcfa1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcfa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcfa4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcfa660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcfa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e2dcf7da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e2dcf7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcf6180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcf6310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcf64a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcf6630"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcf67c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcf6950"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcf6ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcf6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e2dcfd5d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e2dcfd5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcfd950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcfdae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcfdc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcfde00"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcfc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcfc1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcfc340"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcfc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e2dcfaa80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e2dcfaa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcfae00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcf9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcf91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcf9340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcf94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcf9660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcf97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcf9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e2dcf5020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e2dcf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcf53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcf5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcf56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcf5850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcf59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcf5b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcf5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcf4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d49ec90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d49ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d49d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d49d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d49d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d49d550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d49d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d49d870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d49da00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d49db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d49be20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d49be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d49a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d49a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d49a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d49a670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d49a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d49a990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d49ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d49acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d4970a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d4970a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d497420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d4975b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d497740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d4978d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d497a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d497bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d497d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d496020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d4943f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d4943f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d494770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d494900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d494a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d494c20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d494db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d493020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d4931b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d493340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d4916d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d4916d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d491a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d491be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d491d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d490020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d4901b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d490340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d4904d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d490660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d48e9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d48e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d48ed30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d48d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d48d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d48d340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d48d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d48d660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d48d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d48d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d48be20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d48be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d4891c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d489350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d4894e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d489670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d489800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d489990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d489b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d489cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d4860a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d4860a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d486420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d4865b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d486740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d4868d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d486a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d486bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d486d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d485020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e2dceda80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e2dceda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcede00"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dceb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dceb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dceb340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dceb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dceb660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dceb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dceb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e2dce8020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e2dce8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dce83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dce8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dce86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dce8850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dce89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dce8b70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dce8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dce7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e2dcef7a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e2dcef7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcefb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcefcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcefe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcee020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcee340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcee4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e2dcebc10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e2dcebc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcea020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcea1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcea340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcea4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcea660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcea7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcea980"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dceab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e2dce72b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e2dce72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dce7630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dce77c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dce7950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dce7ae0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dce7c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dce7e00"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dce6020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dce61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e2dcee8f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e2dcee8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dceec70"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dceee00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dced020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dced1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dced340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dced4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dced660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dced7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e2dceada0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e2dceada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dce9180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dce9310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dce94a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dce9630"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dce97c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dce9950"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dce9ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dce9c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e2dce6440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e2dce6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dce67c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dce6950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dce6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dce6c70"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dce6e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dce5020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dce51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dce5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d433c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d433c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d4320a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d432230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d4323c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d432550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d4326e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d432870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d432a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d432b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d430e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d430e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d42f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d42f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d42f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d42f670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d42f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d42f990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d42fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d42fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d42c0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d42c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d42c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d42c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d42c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d42c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d42ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d42cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d42cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d42b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d4293f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d4293f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d429770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d429900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d429a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d429c20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d429db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d428020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d4281b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d428340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d4266d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d4266d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d426a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d426be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d426d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d425020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d4251b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d425340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d4254d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d425660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d4239b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d4239b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d423d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d422020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d4221b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d422340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d4224d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d422660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d4227f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d422980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d420e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d420e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d41e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d41e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d41e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d41e670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d41e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d41e990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d41eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d41ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d41b0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d41b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d41b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d41b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d41b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d41b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d41ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d41bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d41bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d41a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f9e2dcddda0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f9e2dcddda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcdc180"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcdc310"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcdc4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcdc630"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcdc7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcdc950"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcdcae0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcdcc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f9e2dcd9440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f9e2dcd9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcd97c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcd9950"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcd9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcd9c70"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcd9e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcd8020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcd81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcd8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f9e2dcdfa20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f9e2dcdfa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcdfda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcde020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcde1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcde340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcde4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcde660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcde7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcde980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f9e2dcdb020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f9e2dcdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcdb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcdb530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcdb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcdb850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcdb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcdbb70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcdbd00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcda020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f9e2dcd85d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f9e2dcd85d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcd8950"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcd8ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcd8c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcd8e00"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcd7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcd71b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcd7340"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcd74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f9e2dcdec10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f9e2dcdec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcdd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcdd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcdd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcdd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcdd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcdd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcdd980"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcddb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f9e2dcda2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f9e2dcda2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcda630"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcda7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcda950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcdaae0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcdac70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcdae00"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcd9020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcd91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f9e2dcd7760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f9e2dcd7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcd7ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcd7c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcd7e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcd6020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcd61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcd6340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcd64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcd6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d3c8c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d3c8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d3c70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d3c7230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d3c73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d3c7550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d3c76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d3c7870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d3c7a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d3c7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d3c5e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d3c5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d3c41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d3c4350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d3c44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d3c4670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d3c4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d3c4990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d3c4b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d3c4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d3c10a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d3c10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d3c1420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d3c15b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d3c1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d3c18d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d3c1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d3c1bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d3c1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d3c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d3be3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d3be3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d3be770"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d3be900"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d3bea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d3bec20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d3bedb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d3bd020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d3bd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d3bd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d3bb6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d3bb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d3bba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d3bbbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d3bbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d3ba020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d3ba1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d3ba340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d3ba4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d3ba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d3b89b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d3b89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d3b8d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d3b7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d3b71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d3b7340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d3b74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d3b7660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d3b77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d3b7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d3b5e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d3b5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d3b41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d3b4350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d3b44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d3b4670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d3b4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d3b4990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d3b4b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d3b4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2d3b10a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2d3b10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2d3b1420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2d3b15b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2d3b1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2d3b18d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2d3b1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2d3b1bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2d3b1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2d3af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dccf160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dccf160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dccf4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dccf670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dccf800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dccf990"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dccfb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dccfcb0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dccfe40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dccbc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dccbc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcc90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcc9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcc93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcc9550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcc96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcc9870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcc9a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcc9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dcc56d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dcc56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcc5a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcc5be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcc5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcc4020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcc41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcc4340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcc44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcc4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dcbf160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dcbf160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcbf4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcbf670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcbf800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcbf990"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcbfb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcbfcb0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcbfe40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dcbbc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dcbbc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcb90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcb9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcb93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcb9550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcb96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcb9870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcb9a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcb9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dcb56d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dcb56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcb5a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcb5be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcb5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcb4020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcb41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcb4340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcb44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcb4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dcaf270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dcaf270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcaf5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcaf780"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcaf910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcafaa0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcafc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcafdc0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcae020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dcabd00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dcabd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dcaa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dcaa230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dcaa3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dcaa550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dcaa6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dcaa870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dcaaa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dcaab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dca56d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dca56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dca5a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dca5be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dca5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dca4020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dca41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dca4340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dca44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dca4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc9f160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc9f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc9f4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc9f670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc9f800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc9f990"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc9fb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc9fcb0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc9fe40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc9bc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc9bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc9a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc9a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc9a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc9a550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc9a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc9a870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc9aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc9ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc956d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc956d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc95a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc95be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc95d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc94020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc941b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc94340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc944d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc94660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc8f160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc8f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc8f4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc8f670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc8f800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc8f990"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc8fb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc8fcb0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc8fe40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc8bc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc8bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc8a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc8a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc8a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc8a550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc8a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc8a870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc8aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc8ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc6e020" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc6e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc6e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc6e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc6e850"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc6e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc6eb70"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc6ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc6d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc6a6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc6a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc6aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc6abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc6ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc69020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc691b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc69340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc694d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc69660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc65c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc65c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc640a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc64230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc643c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc64550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc646e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc64870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc64a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc64b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc5f180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc5f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc5f500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc5f690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc5f820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc5f9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc5fb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc5fcd0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc5fe60"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc5b830" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc5b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc5bbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc5bd40"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc5a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc5a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc5a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc5a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc5a660"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc5a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc56e20" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc56e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc551c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc55350"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc554e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc55670"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc55800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc55990"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc55b20"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc55cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc50460" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc50460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc507e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc50970"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc50b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc50c90"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc50e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc4f020"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc4f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc4f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc4c9b0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc4c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc4cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc4b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc4b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc4b340"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc4b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc4b660"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc4b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc4b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc46160" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc46160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc464e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc46670"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc46800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc46990"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc46b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc46cb0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc46e40"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc426d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc426d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc42a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc42be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc42d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc40020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc401b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc40340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc404d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc40660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc3dc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc3dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc3c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc3c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc3c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc3c550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc3c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc3c870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc3ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc3cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc37180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc37180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc37500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc37690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc37820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc379b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc37b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc37cd0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc37e60"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc336d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc336d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc33a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc33be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc33d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc31020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc311b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc31340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc314d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc31660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc2ec90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc2ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc2d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc2d230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc2d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc2d550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc2d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc2d870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc2da00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc2db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc28180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc28180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc28500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc28690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc28820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc289b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc28b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc28cd0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc28e60"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc246d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc246d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc24a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc24be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc24d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc23020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc231b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc23340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc234d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc23660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc1fc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc1fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc1e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc1e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc1e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc1e550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc1e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc1e870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc1ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc1eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc19180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc19180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc19500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc19690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc19820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc199b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc19b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc19cd0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc19e60"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc156d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc156d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc15a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc15be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc15d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc14020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc141b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc14340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc144d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc14660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc10c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc10c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc0f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc0f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc0f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc0f550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc0f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc0f870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc0fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc0fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc0a180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc0a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc0a500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc0a690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc0a820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc0a9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc0ab40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc0acd0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc0ae60"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc09020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc066d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc066d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc06a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc06be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc06d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc05020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc05340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc054d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dc01c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dc01c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dc000a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dc00230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dc003c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dc00550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dc006e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dc00870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dc00a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dc00b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dbfb180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dbfb180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dbfb500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dbfb690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dbfb820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dbfb9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dbfbb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dbfbcd0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dbfbe60"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dbfa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dbf76d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dbf76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dbf7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dbf7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dbf7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dbf6020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dbf61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dbf6340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dbf64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dbf6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dbf2c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dbf2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dbf10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dbf1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dbf13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dbf1550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dbf16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dbf1870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dbf1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dbf1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dbec180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dbec180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dbec500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dbec690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dbec820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dbec9b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dbecb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dbeccd0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dbece60"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dbeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dbe86d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dbe86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dbe8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dbe8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dbe8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dbe7020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dbe71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dbe7340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dbe74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dbe7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dbe20a0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dbe20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dbe2420"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dbe25b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dbe2740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dbe28d0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dbe2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dbe2bf0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dbe2d80"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dbe1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dbdd6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dbdd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dbdda50"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dbddbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dbddd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dbdc020"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dbdc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dbdc340"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dbdc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dbdc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dbd9c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dbd9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dbd80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dbd8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dbd83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dbd8550"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dbd86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dbd8870"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dbd8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dbd8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f9e2dbd3180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f9e2dbd3180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2dbd3500"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2dbd3690"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2dbd3820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2dbd39b0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2dbd3b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2dbd3cd0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2dbd3e60"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2dbd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f9e2db7ee60" loc="12:PS2/PS2C.nc">
      <component-ref qname="PS2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f9e2db7ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2db7b210"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f9e2db7b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockIRQ" ref="0x7f9e2db4dd90" loc="22:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockIRQ" scoped="" ref="0x7f9e2db4dd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9e2db53180"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2db53310"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2db534a0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9e2db53630"/>
        <function-ref name="reset" scoped="" ref="0x7f9e2db537c0"/>
        <function-ref name="setMask" scoped="" ref="0x7f9e2db53950"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2db53ae0"/>
        <function-ref name="getPins" scoped="" ref="0x7f9e2db53c70"/>
        <function-ref name="getMask" scoped="" ref="0x7f9e2db53e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockPin" ref="0x7f9e2db521c0" loc="23:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockPin" scoped="" ref="0x7f9e2db521c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2db52540"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2db526d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2db52860"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2db529f0"/>
        <function-ref name="get" scoped="" ref="0x7f9e2db52b80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2db52d10"/>
        <function-ref name="set" scoped="" ref="0x7f9e2db4b020"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2db4b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataPin" ref="0x7f9e2db4b4f0" loc="24:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPin" scoped="" ref="0x7f9e2db4b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f9e2db4b870"/>
        <function-ref name="isInput" scoped="" ref="0x7f9e2db4ba00"/>
        <function-ref name="toggle" scoped="" ref="0x7f9e2db4bb90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f9e2db4bd20"/>
        <function-ref name="get" scoped="" ref="0x7f9e2db4a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f9e2db4a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f9e2db4a340"/>
        <function-ref name="clr" scoped="" ref="0x7f9e2db4a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f9e2db55860" loc="19:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f9e2db55860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f9e2db55be0"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f9e2db55d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x7f9e2db79ca0" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <component-ref qname="HplAtmegaPinChange2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f9e2db79ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f9e2db230a0"/>
        <function-ref name="fired" scoped="" ref="0x7f9e2db23230"/>
        <function-ref name="disable" scoped="" ref="0x7f9e2db233c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f9e2db23550"/>
        <function-ref name="reset" scoped="" ref="0x7f9e2db236e0"/>
        <function-ref name="setMask" scoped="" ref="0x7f9e2db23870"/>
        <function-ref name="enable" scoped="" ref="0x7f9e2db23a00"/>
        <function-ref name="getPins" scoped="" ref="0x7f9e2db23b90"/>
        <function-ref name="getMask" scoped="" ref="0x7f9e2db23d20"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../tinyos_ws18/tos/interfaces/Init.nc">
      <documentation loc="34:../tinyos_ws18/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f9e2e625740" loc="62:../tinyos_ws18/tos/interfaces/Init.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../tinyos_ws18/tos/interfaces/Boot.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f9e2e626350" loc="60:../tinyos_ws18/tos/interfaces/Boot.nc">
        <documentation loc="51:../tinyos_ws18/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f9e2e61db70" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f9e2e61d8f0" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f9e2e620070" loc="31:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f9e2e620af0" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f9e2e620870" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f9e2e61e630" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f9e2e61e3b0" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f9e2e61d020" loc="53:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../tinyos_ws18/tos/interfaces/Scheduler.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f9e2e7b36c0" loc="57:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="54:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f9e2e7b26a0" loc="72:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f9e2e7b3e30" loc="65:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f9e2e7aa610" loc="67:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f9e2e7aae60" loc="75:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../tinyos_ws18/tos/interfaces/McuSleep.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f9e2e6ae270" loc="76:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f9e2e694b90" loc="62:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f9e2e72f470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f9e2e692420" loc="52:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PS2" loc="1:PS2.nc">
      <function command="" provided="0" name="init" ref="0x7f9e2e5d6890" loc="4:PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChar" ref="0x7f9e2e5cb2a0" loc="7:PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="chr" ref="0x7f9e2e5cb020" loc="7:PS2.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FMClick" loc="9:FMClick.nc">
      <function command="" provided="0" name="seek" ref="0x7f9e2e5d4580" loc="12:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f9e2e5d4300" loc="12:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x7f9e2e5d1940" loc="20:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="res" ref="0x7f9e2e5d16c0" loc="20:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setVolume" ref="0x7f9e2e5d3610" loc="16:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f9e2e5d3390" loc="16:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rdsReceived" ref="0x7f9e2e5cfa20" loc="26:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7f9e2e5e87c0"/>
              <typename><typedef-ref name="RDSType" ref="0x7f9e2e5d51c0"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f9e2e5cf470" loc="26:FMClick.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7f9e2e5e87c0"/>
              <typename><typedef-ref name="RDSType" ref="0x7f9e2e5d51c0"/></typename>
            </type-tag>
          </variable>
          <variable name="buf" ref="0x7f9e2e5cf790" loc="26:FMClick.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveRDS" ref="0x7f9e2e5d1020" loc="18:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f9e2e5d3d10" loc="18:FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tuneComplete" ref="0x7f9e2e5d0350" loc="22:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9e2e5d00d0" loc="22:FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f9e2e5d4cc0" loc="14:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="seekComplete" ref="0x7f9e2e5d0d10" loc="24:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9e2e5d0a90" loc="24:FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tune" ref="0x7f9e2e5d5bf0" loc="10:FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f9e2e5d5970" loc="10:FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Glcd" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
      <function command="" provided="0" name="drawTextPgm" ref="0x7f9e2e5d8620" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="109:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawTextPgm&#10;&#10; </short>
          <long>&#10; drawTextPgm&#10;&#10; @param text stored in program memory&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f9e2e5dabf0" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f9e2e5d8020" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9e2e5d8380" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawRect" ref="0x7f9e2e5dd2d0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw rectangle&#10;&#10; </short>
          <long>&#10; Draw rectangle&#10;&#10; @param upper left x&#10; @param upper left y&#10; @param lower right x&#10; @param lower right y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f9e2e5df560" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f9e2e5df8d0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f9e2e5dfc60" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f9e2e5dd020" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawLine" ref="0x7f9e2e5e0d40" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="45:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw line&#10;&#10; </short>
          <long>&#10; Draw line&#10;&#10; @param first point x&#10; @param first point y&#10; @param second point x&#10; @param second point y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f9e2e5e0020" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f9e2e5e0390" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f9e2e5e0720" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f9e2e5e0a90" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x7f9e2e5e4b60" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="12:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Set pixel&#10;&#10; </short>
          <long>&#10; Set pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9e2e5e4570" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9e2e5e48d0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="invertPixel" ref="0x7f9e2e5e1710" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="34:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Invert pixel&#10;&#10; </short>
          <long>&#10; Invert pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9e2e5e1120" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9e2e5e1480" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPixel" ref="0x7f9e2e5e2940" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="23:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Clear pixel&#10;&#10; </short>
          <long>&#10; Clear pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9e2e5e2350" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9e2e5e26b0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawEllipse" ref="0x7f9e2e5dc8a0" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw ellipse&#10;&#10; </short>
          <long>&#10; Draw ellipse&#10;&#10; @param center x&#10; @param center y&#10; @param radius horizontal&#10; @param radius vertical&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9e2e5ddac0" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9e2e5dde20" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_h" ref="0x7f9e2e5dc240" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_v" ref="0x7f9e2e5dc5f0" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawText" ref="0x7f9e2e5da450" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="97:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawText&#10;&#10; </short>
          <long>&#10; drawText&#10;&#10; @param text&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f9e2e5dbac0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f9e2e5dbe20" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f9e2e5da1b0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x7f9e2e5db350" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="87:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Fill Display with pattern&#10;&#10; </short>
          <long>&#10; Fill Display with pattern&#10;&#10; @param pattern&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x7f9e2e5db0d0" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f9e2e5579c0" loc="44:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f9e2e556120" loc="45:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f9e2e558b70" loc="42:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f9e2e554020" loc="47:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9e2e5572b0" loc="43:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f9e2e556840" loc="46:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9e2e55bd60" loc="40:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f9e2e558480" loc="41:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f9e2e582770" loc="56:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9e2e57f2b0" loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f9e2e582020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f9e2e581a60" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f9e2e5817e0" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f9e2e5857f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f9e2e581020" loc="63:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f9e2e5777e0" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f9e2e5777e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f9e2e576de0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9e2e5787b0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f9e2e576110" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9e2e5787b0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9e2e576460" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f9e2e5767b0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9e2e576b30" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f9e2e56e9a0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9e2e56fc70" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9e2e56e020" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f9e2e56e370" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9e2e56e6f0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9e2e574cf0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9e2e5787b0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f9e2e574020" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f9e2e5787b0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9e2e574370" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f9e2e5746c0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9e2e574a40" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f9e2e571cf0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f9e2e571020" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f9e2e571370" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f9e2f0d0610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f9e2e5716c0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f9e2e571a40" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../tinyos_ws18/tos/interfaces/Resource.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f9e2e57c9c0" loc="120:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f9e2e57d9a0" loc="97:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f9e2e57d030" loc="88:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f9e2e57c1f0" loc="102:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f9e2e57b470" loc="128:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="122:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e2e56abb0" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e2e56abb0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f9e2e561980" loc="136:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="132:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9e2e5651f0" loc="83:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f9e2e562020" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9e2e5639a0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f9e2e563ce0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f9e2e5631f0" loc="98:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="94:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f9e2e560a10" loc="151:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="146:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f9e2e560190" loc="144:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="138:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f9e2e5659d0" loc="92:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="86:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f9e2e567750" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9e2e5674d0" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f9e2e561020" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="116:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9e2e5629c0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f9e2e562d00" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f9e2e5662a0" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9e2e566020" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9e2e566aa0" loc="78:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplKS0108" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <short>&#10; Hpl interface for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl interface for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="dataWrite" ref="0x7f9e2e46f460" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="48:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write data&#10;&#10; </short>
          <long>&#10; Write data&#10;&#10; @param The controller to write to&#10; @param data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f9e2e470e30" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f9e2e46f1d0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f9e2e4721b0" loc="15:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="10:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Initialize GLCD&#10; &#10; </short>
          <long>&#10; Initialize GLCD&#10; &#10; @return SUCCESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataRead" ref="0x7f9e2e470630" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="38:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read data&#10;&#10; </short>
          <long>&#10; Read data&#10;&#10; @param The controller to be read from&#10; &#10; @return data&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f9e2e4703b0" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlWrite" ref="0x7f9e2e471b10" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write to controller&#10;&#10; </short>
          <long>&#10; Write to controller&#10;&#10; @param The controller to write to&#10; @param controller data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f9e2e471500" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f9e2e471880" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlRead" ref="0x7f9e2e472c30" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="17:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read controller state&#10;&#10; </short>
          <long>&#10; Read controller state&#10;&#10; @param The controller to be checked&#10; &#10; @return state of the controller&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f9e2e4729b0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e2e3f4d30" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e2e3f4d30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9e2e3eb020" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2e3eb020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f9e2e3ebb50" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2e3eb020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9e2e3eb8d0" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2e3eb020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIOPort" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f9e2e3f12a0" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9e2e3f1020" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f9e2e3f05b0" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9e2e3f0330" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f9e2e3ee020" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9e2e3f0c80" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f9e2e3f2870" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9e2e3f25f0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f9e2e3ed0e0" loc="13:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9e2e3ee970" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9e2e3ee6f0" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9e2e3f1bd0" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9e2e3f1950" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f9e2e1c94e0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f9e2e151a70" loc="53:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f9e2e14e3e0" loc="61:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f9e2e144bb0" loc="65:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f9e2e144390" loc="59:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f9e2e14b970" loc="56:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f9e2e14aaa0" loc="73:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f9e2e14b0e0" loc="46:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f9e2e14a270" loc="65:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f9e2e149420" loc="81:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f9e2e147270" loc="90:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f9e2e147ad0" loc="98:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f9e2e13bc10" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9e2e145cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9e2e13b990" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9e2e145cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f9e2e140c50" loc="53:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f9e2e13d7a0" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9e2e145cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f9e2e13d520" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f9e2e145cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f9e2e13b0e0" loc="70:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f9e2e145cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../tinyos_ws18/tos/interfaces/Leds.nc">
      <documentation loc="33:../tinyos_ws18/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f9e2e119190" loc="61:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f9e2e119940" loc="67:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f9e2e118190" loc="72:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f9e2e116120" loc="83:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="79:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f9e2e115890" loc="100:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="96:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9e2e1140e0" loc="117:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="103:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f9e2e118920" loc="77:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9e2e114c50" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="120:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f9e2e1149d0" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f9e2e11a9d0" loc="56:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f9e2e116900" loc="89:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="86:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f9e2e1150e0" loc="94:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f9e2e0c1020" loc="62:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f9e2e0c8db0" loc="95:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9e2e0c56a0" loc="105:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f9e2e7ac020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f9e2e0a8a10" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f9e2e065d00" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f9e2e064490" loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f9e2e063580" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9e2e063300" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f9e2e0655e0" loc="52:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f9e2e060e40" loc="65:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f9e2e05bbe0" loc="84:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f9e2e05f830" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f9e2e05f5b0" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f9e2e058450" loc="89:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f9e2e0667a0" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f9e2e066520" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f9e2e060710" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f9e2e060490" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f9e2e05d120" loc="68:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f9e2e063cc0" loc="61:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f9e2e05c120" loc="75:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f9e2e064be0" loc="56:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f9e2e05b4a0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9e2e05b220" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f9e2e05ad00" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f9e2e05aa80" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f9e2e05d920" loc="72:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f9e2e066e70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f9e2e061650" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9e2e0613d0" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f9e2e05cb40" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f9e2e05c8c0" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f9e2e05a390" loc="85:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f9e2e061d80" loc="63:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e2df496d0" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e2df496d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f9e2df46020" loc="61:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f9e2f0cf170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e2df35410" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e2df35410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9e2df35650" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df35650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f9e2df34020" loc="64:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df35650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f9e2df33120" loc="76:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f9e2df348a0" loc="71:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f9e2df33880" loc="82:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="78:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f9e2df43ba0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f9e2df43ba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f9e2df43de0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df43de0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f9e2df3c9c0" loc="109:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="105:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df43de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9e2df3e9b0" loc="78:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f9e2df3c020" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="90:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df43de0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df43de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f9e2df3da10" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df43de0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f9e2df3dd50" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df43de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f9e2df3d1f0" loc="88:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="81:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f9e2df3a1f0" loc="116:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="111:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df43de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9e2df3f960" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df43de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f9e2df3f6e0" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df43de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9e2df3e1f0" loc="73:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="68:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f9e2df05e50" loc="89:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f9e2df06c40" loc="85:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f9e2df088c0" loc="79:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f9e2df05680" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f9e2df05400" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f9e2df06470" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9e2df061f0" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f9e2df03890" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f9e2df03610" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f9e2df070e0" loc="80:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f9e2df07a80" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f9e2df07800" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280TimerSync" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
      <documentation loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changedto Sync for Atm1280&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer2Synchronous" ref="0x7f9e2def5020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Turn on timer 2 synchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBBusy" ref="0x7f9e2def20e0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f9e2def3020" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f9e2def57a0" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f9e2def28f0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f9e2def3850" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f9e2def9be0" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9e2e6e2da0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9e2e6e1230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f9e2def6660" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9e2e6e2da0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9e2e6e1230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f9e2def63e0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f9e2e6e2da0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f9e2e6e1230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f9e2df093d0" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df093d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f9e2defc020" loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9e2deff020" loc="58:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9e2df09d10" loc="48:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df093d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9e2deff790" loc="62:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f9e2defc7e0" loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9e2df00710" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df093d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f9e2df00490" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f9e2df093d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9e2defd020" loc="65:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9e2defd770" loc="68:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f9e2df18a20" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9e2df18a20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f9e2df102d0" loc="98:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f9e2df11350" loc="87:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f9e2df15390" loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9e2df18a20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f9e2df10cb0" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f9e2df10a30" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f9e2df0f510" loc="110:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9e2df14c90" loc="75:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f9e2df14500" loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f9e2df11b10" loc="93:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f9e2df15d40" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9e2df18a20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f9e2df15ac0" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f9e2df18a20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f9e2df13420" loc="78:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f9e2df13b70" loc="81:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x7f9e2db50270" loc="43:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f9e2db54ad0" loc="40:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f9e2db4f800" loc="54:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f9e2db4e020" loc="57:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f9e2e7b6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f9e2db50980" loc="46:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x7f9e2db4d2a0" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f9e2db4d020" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f9e2db4f0e0" loc="51:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x7f9e2db4da30" loc="70:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x7f9e2db4e7b0" loc="62:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f9e2f0d1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
