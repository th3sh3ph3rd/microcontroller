<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="20:RadioScannerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fe7abd690c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fe7abda5720"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fe7abda5720"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fe7abda3e20"/></to>
    </wire>
    <wire loc="21:RadioScannerAppC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7fe7abd57980"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7fe7abc25c60"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7fe7abc25c60"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7fe7abbf16b0"/></to>
    </wire>
    <wire loc="22:RadioScannerAppC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x7fe7abd68e30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7abcf55e0"/></to>
    </wire>
    <wire loc="26:FMClick/FMClickC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe7abcf55e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7abcf1920"/></to>
    </wire>
    <wire loc="23:RadioScannerAppC.nc">
      <from><interface-ref name="Radio" scoped="" ref="0x7fe7abd4ed60"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7fe7abcf5c00"/></to>
    </wire>
    <wire loc="27:FMClick/FMClickC.nc">
      <from><interface-ref name="FMClick" scoped="" ref="0x7fe7abcf5c00"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7fe7abcee020"/></to>
    </wire>
    <wire loc="24:RadioScannerAppC.nc">
      <from><interface-ref name="Keyboard" scoped="" ref="0x7fe7abd4a600"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7fe7ab2f7e60"/></to>
    </wire>
    <wire loc="20:PS2/PS2C.nc">
      <from><interface-ref name="PS2" scoped="" ref="0x7fe7ab2f7e60"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7fe7ab2ce860"/></to>
    </wire>
    <wire loc="25:RadioScannerAppC.nc">
      <from><interface-ref name="volumeKnob" scoped="" ref="0x7fe7abd4b060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fe7ab287c40"/></to>
    </wire>
    <wire loc="22:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fe7ab287c40"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fe7ab130980"/></to>
    </wire>
    <wire loc="26:RadioScannerAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe7abd46220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe7ab12b870"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe7ab12b870"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe7ab6d1020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe7abda4bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7aa7d9c00"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe7abda4bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7ab6cce60"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe7abda4bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7aad3f810"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe7abda4bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7abbf0ab0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fe7abd754b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fe7abf31a20"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fe7abf31a20"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fe7abe32120"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fe7abd74020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7abda7d00"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe7abda7d00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7abd990c0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fe7abd74720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fe7abda4bf0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fe7abda1d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7ab24f830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe7abda1020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe7abd87020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7fe7abd98020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7abd88860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fe7abd997a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7ab704ab0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fe7abd997a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fe7abd91020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fe7abd916f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fe7abda1d50"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abe30020"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fe7abe2d590"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fe7abe4b2d0"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe7abe12080"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe7ab6184c0"/></to>
    </wire>
    <wire loc="46:RadioScannerP.nc">
      <from><interface-ref name="inputTuneChannel" scoped="" ref="0x7fe7abd36e50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:RadioScannerP.nc">
      <from><interface-ref name="handleChar" scoped="" ref="0x7fe7abd31680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:RadioScannerP.nc">
      <from><interface-ref name="radioInitFail" scoped="" ref="0x7fe7abd1a550"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:RadioScannerP.nc">
      <from><interface-ref name="finishedSeeking" scoped="" ref="0x7fe7abd13660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:RadioScannerP.nc">
      <from><interface-ref name="tune2Station" scoped="" ref="0x7fe7abd20020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:RadioScannerP.nc">
      <from><interface-ref name="finishedTuning" scoped="" ref="0x7fe7abd18840"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:RadioScannerP.nc">
      <from><interface-ref name="readyScreen" scoped="" ref="0x7fe7abd1c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:FMClick/FMClickC.nc">
      <from><interface-ref name="Int" scoped="" ref="0x7fe7abce7e10"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7fe7ab94d9e0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7fe7ab94d9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fe7ab903c90"/></to>
    </wire>
    <wire loc="31:FMClick/FMClickC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7fe7abcea0f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe7ab8e49f0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe7ab8e49f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe7ab8d7530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:FMClick/FMClickC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fe7abcd5de0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fe7ab6e2880"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fe7ab6e2880"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fe7ab8d6a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:FMClick/FMClickC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe7abcd2d80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe7ab51c140"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe7ab51c140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe7ab6d1020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:FMClick/FMClickC.nc">
      <from><interface-ref name="RSTPin" scoped="" ref="0x7fe7abcc6e60"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7fe7ab4f4b20"/></to>
    </wire>
    <wire loc="250:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fe7ab4f4b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7ab475760"/></to>
    </wire>
    <wire loc="37:FMClick/FMClickC.nc">
      <from><interface-ref name="SDIOPin" scoped="" ref="0x7fe7abcca060"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7fe7ab4f5800"/></to>
    </wire>
    <wire loc="249:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fe7ab4f5800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7ab4765d0"/></to>
    </wire>
    <wire loc="38:FMClick/FMClickC.nc">
      <from><interface-ref name="INTPin" scoped="" ref="0x7fe7abcc4350"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7fe7ab4f3e40"/></to>
    </wire>
    <wire loc="251:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fe7ab4f3e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7ab4748f0"/></to>
    </wire>
    <wire loc="40:FMClick/FMClickC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7fe7abcc35c0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7fe7abc25c60"/></to>
    </wire>
    <wire loc="420:FMClick/FMClickP.nc">
      <from><interface-ref name="seek" scoped="" ref="0x7fe7abc79d20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="242:FMClick/FMClickP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7fe7abca1740"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="346:FMClick/FMClickP.nc">
      <from><interface-ref name="tune" scoped="" ref="0x7fe7abc88380"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Hpl" scoped="" ref="0x7fe7abbe8210"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7fe7abb7a2c0"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="HplKS0108" scoped="" ref="0x7fe7abb7a2c0"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7fe7abb788c0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_0" scoped="" ref="0x7fe7abb756a0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x7fe7abb12670"/></to>
    </wire>
    <wire loc="175:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fe7abb12670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7aba6e440"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_1" scoped="" ref="0x7fe7abb749c0"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x7fe7abb11990"/></to>
    </wire>
    <wire loc="176:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fe7abb11990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7aba6d5d0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RS" scoped="" ref="0x7fe7abb73cd0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7fe7abb10cb0"/></to>
    </wire>
    <wire loc="177:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fe7abb10cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7aba6c760"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RW" scoped="" ref="0x7fe7abb71020"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7fe7abb0e020"/></to>
    </wire>
    <wire loc="178:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fe7abb0e020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7aba6b8f0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="EN" scoped="" ref="0x7fe7abb70370"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7fe7abb0d350"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fe7abb0d350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7aba6aa80"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RST" scoped="" ref="0x7fe7abb6f690"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7fe7abb0c670"/></to>
    </wire>
    <wire loc="180:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fe7abb0c670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7aba69c10"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="Data" scoped="" ref="0x7fe7abb6d060"/></from>
      <to><interface-ref name="PortA" scoped="" ref="0x7fe7ab9c48d0"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortA" scoped="" ref="0x7fe7ab9c48d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab9acaa0"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fe7abb64d20"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fe7ab95c290"/></to>
    </wire>
    <wire loc="191:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fe7abb01350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aba10160"/></to>
    </wire>
    <wire loc="165:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fe7abb1eb20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7aba80e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7aba80e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf97e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7aba6d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf253f0"/></to>
    </wire>
    <wire loc="185:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fe7abb07350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7aba5e8f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7aba5e8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaeb13f0"/></to>
    </wire>
    <wire loc="196:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7fe7abafa670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab9f66d0"/></to>
    </wire>
    <wire loc="143:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fe7abb35cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7abaa8da0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7abaa8da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab0c83f0"/></to>
    </wire>
    <wire loc="183:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fe7abb0acb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7aba605d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7aba605d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaeb8e20"/></to>
    </wire>
    <wire loc="146:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fe7abb32350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7aba9f7a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7aba9f7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab070a60"/></to>
    </wire>
    <wire loc="157:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fe7abb26350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7aba8eda0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7aba8eda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaffe0a0"/></to>
    </wire>
    <wire loc="168:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fe7abb19350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7aba7b440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7aba7b440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf8d6d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7aba6aa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf1ce20"/></to>
    </wire>
    <wire loc="138:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fe7abb3ccb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7abaad5d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7abaad5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab0df3f0"/></to>
    </wire>
    <wire loc="149:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fe7abb2fcb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7aba9cc10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7aba9cc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab0663f0"/></to>
    </wire>
    <wire loc="160:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fe7abb23cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7aba8a440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7aba8a440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaff59b0"/></to>
    </wire>
    <wire loc="171:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fe7abb16cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7aba788f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7aba788f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf830a0"/></to>
    </wire>
    <wire loc="188:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fe7abb04cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7aba5bda0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7aba5bda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaea8e20"/></to>
    </wire>
    <wire loc="194:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fe7abafc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aba00160"/></to>
    </wire>
    <wire loc="174:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fe7abb13350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7aba6f2b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7aba6f2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf2ce20"/></to>
    </wire>
    <wire loc="141:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fe7abb37670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7abaaaa80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7abaaaa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab0cfe20"/></to>
    </wire>
    <wire loc="152:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fe7abb2b670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7aba982b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7aba982b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab05de20"/></to>
    </wire>
    <wire loc="192:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fe7abb00990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aba0bc90"/></to>
    </wire>
    <wire loc="155:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fe7abb29cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7aba90a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7aba90a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab005c90"/></to>
    </wire>
    <wire loc="166:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fe7abb1de40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7aba7e020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7aba7e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf930a0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7aba6c760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf226d0"/></to>
    </wire>
    <wire loc="186:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fe7abb06670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7aba5da80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7aba5da80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaeae6d0"/></to>
    </wire>
    <wire loc="144:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fe7abb33020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7abaa6020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7abaa6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab0c56d0"/></to>
    </wire>
    <wire loc="147:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fe7abb31670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7aba9e8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7aba9e8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab06de20"/></to>
    </wire>
    <wire loc="158:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fe7abb25670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7aba8c020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7aba8c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaffb3f0"/></to>
    </wire>
    <wire loc="169:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fe7abb18670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7aba7a5d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7aba7a5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf8a9b0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7aba69c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf180a0"/></to>
    </wire>
    <wire loc="139:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fe7abb3a020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7abaac760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7abaac760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab0d56d0"/></to>
    </wire>
    <wire loc="150:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fe7abb2d020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7aba9bda0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7aba9bda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab0636d0"/></to>
    </wire>
    <wire loc="161:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fe7abb21020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7aba895d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7aba895d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaff2e20"/></to>
    </wire>
    <wire loc="189:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fe7abb02020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7aba59020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7aba59020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaea40a0"/></to>
    </wire>
    <wire loc="164:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fe7abb1f670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7aba81d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7aba81d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf9ac90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7aba6e440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf280a0"/></to>
    </wire>
    <wire loc="184:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fe7abb08020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7aba5f760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7aba5f760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaeb40a0"/></to>
    </wire>
    <wire loc="195:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fe7abafb350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab9fcc90"/></to>
    </wire>
    <wire loc="142:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fe7abb36990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7abaa9c10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7abaa9c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab0cb0a0"/></to>
    </wire>
    <wire loc="153:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fe7abb2a990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7aba97440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7aba97440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab0590a0"/></to>
    </wire>
    <wire loc="182:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fe7abb0b990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7aba613f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7aba613f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaebbc90"/></to>
    </wire>
    <wire loc="156:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fe7abb27020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7aba8fc10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7aba8fc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab002e20"/></to>
    </wire>
    <wire loc="167:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fe7abb1a060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7aba7d2b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7aba7d2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf903f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7aba6b8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf1f9b0"/></to>
    </wire>
    <wire loc="187:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fe7abb05990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7aba5cc10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7aba5cc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaeab9b0"/></to>
    </wire>
    <wire loc="137:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fe7abb3fad0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7abaaf3f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7abaaf3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab0e2020"/></to>
    </wire>
    <wire loc="148:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fe7abb30990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7aba9da80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7aba9da80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab0690a0"/></to>
    </wire>
    <wire loc="159:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fe7abb24990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7aba8b2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7aba8b2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaff86d0"/></to>
    </wire>
    <wire loc="170:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fe7abb17990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7aba79760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7aba79760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf87e20"/></to>
    </wire>
    <wire loc="193:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fe7abafecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aba066d0"/></to>
    </wire>
    <wire loc="173:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fe7abb14020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7aba71020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7aba71020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaf2fc90"/></to>
    </wire>
    <wire loc="162:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fe7abb20350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7aba87760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7aba87760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aafee0a0"/></to>
    </wire>
    <wire loc="140:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fe7abb39350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7abaab8f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7abaab8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab0d29b0"/></to>
    </wire>
    <wire loc="151:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fe7abb2c350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7aba99020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7aba99020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab0609b0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortL" scoped="" ref="0x7fe7ab9b1550"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab9696c0"/></to>
    </wire>
    <wire loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortD" scoped="" ref="0x7fe7ab9bad20"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab98a910"/></to>
    </wire>
    <wire loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortG" scoped="" ref="0x7fe7ab9b5020"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab97b910"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortJ" scoped="" ref="0x7fe7ab9b31d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab9726c0"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortB" scoped="" ref="0x7fe7ab9bca00"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab994e80"/></to>
    </wire>
    <wire loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortE" scoped="" ref="0x7fe7ab9b9de0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab985cd0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortH" scoped="" ref="0x7fe7ab9b4100"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab977780"/></to>
    </wire>
    <wire loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortK" scoped="" ref="0x7fe7ab9b23c0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab96d6c0"/></to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortC" scoped="" ref="0x7fe7ab9bbb90"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab98f390"/></to>
    </wire>
    <wire loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortF" scoped="" ref="0x7fe7ab9b8e80"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab980390"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7fe7ab94a9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fe7ab8f6c90"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7fe7ab94f9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fe7ab90cda0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7fe7ab94c9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fe7ab8ffc90"/></to>
    </wire>
    <wire loc="78:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7fe7ab9499e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fe7ab8f1c90"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7fe7ab94e9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fe7ab907c90"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7fe7ab94b9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fe7ab8fac90"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7fe7abc239b0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fe7ab923060"/></to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab923e80"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7fe7ab942860"/></to>
    </wire>
    <wire loc="81:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab90bc20"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7fe7ab944020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab906b40"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7fe7ab9447a0"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab902b40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7fe7ab943020"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab8fdb40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7fe7ab9437a0"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab8f9b40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7fe7ab941020"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab8f5b40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7fe7ab9417a0"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab8f0b40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7fe7ab940020"/></to>
    </wire>
    <wire loc="60:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe7ab8d7530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe7ab830470"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fe7ab8d6a20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fe7ab7f9370"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7fe7ab7f3210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe7ab849e60"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe7ab849e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe7aad3c020"/></to>
    </wire>
    <wire loc="64:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fe7ab7f2020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fe7ab77faa0"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7fe7ab7efcd0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7fe7ab77a7f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7ab843c40"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7ab77f1e0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7ab8429d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7ab847400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7ab847400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7aad3a560"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fe7ab77ae40"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7fe7ab771ab0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fe7ab771ab0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7fe7ab769440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7fe7ab7777a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe7ab6fc980"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7fe7ab776de0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe7ab6fc980"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe7ab848bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe7aad3cd80"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7ab846060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7aad39270"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7aad39b60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7ab846930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fe7aad38440"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fe7aad3fe20"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fe7aad367a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fe7ab774480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7fe7ab765020"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7fe7abb1f670"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7fe7ab764360"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7fe7abb1eb20"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fe7ab72e4a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fe7ab72adc0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe7ab704ab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7ab72a7c0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fe7ab726550"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fe7ab7071d0"/></to>
    </wire>
    <wire loc="57:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fe7ab7071d0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7fe7abb3fad0"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fe7ab7257f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fe7ab706510"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fe7ab706510"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7fe7abb3ccb0"/></to>
    </wire>
    <wire loc="56:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fe7ab724b10"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fe7ab705830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fe7ab705830"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7fe7abb3a020"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fe7ab6d1020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fe7ab6c9c30"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fe7ab6c9c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe7ab53d150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe7ab6cce60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7ab6c0c80"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fe7ab6bf500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fe7ab52e790"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe7ab6c0c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7ab5bcba0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fe7ab537640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe7ab58c830"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe7ab587cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7fe7ab6b4960"/></to>
    </wire>
    <wire loc="35:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7fe7ab6b4960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe7ab5bb4b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe7ab52da60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7fe7ab6b0020"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7fe7ab6b0020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe7ab5b78d0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fe7ab5b78d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fe7aaca1d50"/></to>
    </wire>
    <wire loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fe7ab5bcba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fe7aaca51b0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fe7ab5bb4b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fe7aaca59c0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe7aac9d020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe7ab6348f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fe7ab6348f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fe7ab623a10"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fe7aac98190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fe7ab62dc10"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fe7ab62dc10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fe7ab61edb0"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fe7aac973e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe7ab62b060"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fe7ab62b060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fe7ab61c1a0"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7fe7aac94780"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7fe7ab627570"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7fe7ab627570"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7fe7ab618bf0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fe7ab582020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fe7ab532a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fe7ab4d8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab41e6d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7ab4765d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaaaee20"/></to>
    </wire>
    <wire loc="260:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fe7ab4e9670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7ab465c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7ab465c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaa3c3f0"/></to>
    </wire>
    <wire loc="269:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fe7ab4de020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7ab454020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7ab454020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aa9d13f0"/></to>
    </wire>
    <wire loc="280:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7fe7ab4d2350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab404c90"/></to>
    </wire>
    <wire loc="284:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH2" scoped="" ref="0x7fe7ab4cfcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3dec90"/></to>
    </wire>
    <wire loc="289:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH7" scoped="" ref="0x7fe7ab4c9cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3c59b0"/></to>
    </wire>
    <wire loc="297:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ6" scoped="" ref="0x7fe7ab4bf350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3a1180"/></to>
    </wire>
    <wire loc="300:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK0" scoped="" ref="0x7fe7ab4bd990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab398c90"/></to>
    </wire>
    <wire loc="311:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL2" scoped="" ref="0x7fe7ab4b1990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab366180"/></to>
    </wire>
    <wire loc="227:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fe7ab50d990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7ab49e5d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7ab49e5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aabdf3f0"/></to>
    </wire>
    <wire loc="267:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fe7ab4e1990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7ab457c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7ab457c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aa9d8e20"/></to>
    </wire>
    <wire loc="230:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fe7ab50a020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7ab497d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7ab497d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab87a60"/></to>
    </wire>
    <wire loc="241:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fe7ab4fd020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7ab484440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7ab484440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab150a0"/></to>
    </wire>
    <wire loc="252:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fe7ab4f1060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7ab473a80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7ab473a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaaa46d0"/></to>
    </wire>
    <wire loc="263:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fe7ab4e4020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7ab4602b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7ab4602b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaa33e20"/></to>
    </wire>
    <wire loc="222:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fe7ab513b20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7ab4a5c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7ab4a5c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aabef460"/></to>
    </wire>
    <wire loc="233:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fe7ab507990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7ab4922b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7ab4922b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab7d3f0"/></to>
    </wire>
    <wire loc="244:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fe7ab4fa990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7ab4818f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7ab4818f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab0c9b0"/></to>
    </wire>
    <wire loc="255:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fe7ab4ee990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7ab46e020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7ab46e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaa9a0a0"/></to>
    </wire>
    <wire loc="272:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fe7ab4db990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7ab4515d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7ab4515d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aa9c8e20"/></to>
    </wire>
    <wire loc="278:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fe7ab4d5cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab40e6d0"/></to>
    </wire>
    <wire loc="282:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH0" scoped="" ref="0x7fe7ab4d1670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3e8020"/></to>
    </wire>
    <wire loc="258:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fe7ab4eb020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7ab4678f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7ab4678f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaa43e20"/></to>
    </wire>
    <wire loc="287:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH5" scoped="" ref="0x7fe7ab4cb670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3cfe20"/></to>
    </wire>
    <wire loc="292:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ1" scoped="" ref="0x7fe7ab4c5350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3bb6d0"/></to>
    </wire>
    <wire loc="295:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ4" scoped="" ref="0x7fe7ab4c2cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3ac6d0"/></to>
    </wire>
    <wire loc="303:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK3" scoped="" ref="0x7fe7ab4b9350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab389c90"/></to>
    </wire>
    <wire loc="306:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK6" scoped="" ref="0x7fe7ab4b6cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab37ac90"/></to>
    </wire>
    <wire loc="309:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL0" scoped="" ref="0x7fe7ab4b3350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3706d0"/></to>
    </wire>
    <wire loc="314:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL5" scoped="" ref="0x7fe7ab4ad350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3576d0"/></to>
    </wire>
    <wire loc="225:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fe7ab50f350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7ab4a12b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7ab4a12b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aabe6e20"/></to>
    </wire>
    <wire loc="236:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fe7ab503350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7ab48f760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7ab48f760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab74e20"/></to>
    </wire>
    <wire loc="276:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fe7ab4d7670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab418160"/></to>
    </wire>
    <wire loc="239:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fe7ab500990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7ab486020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7ab486020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab1cc90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7ab475760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaaaa0a0"/></to>
    </wire>
    <wire loc="261:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fe7ab4e8990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7ab463da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7ab463da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaa396d0"/></to>
    </wire>
    <wire loc="270:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fe7ab4dd350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7ab4532b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7ab4532b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aa9ce6d0"/></to>
    </wire>
    <wire loc="285:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH3" scoped="" ref="0x7fe7ab4cd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3d9180"/></to>
    </wire>
    <wire loc="298:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ7" scoped="" ref="0x7fe7ab4be670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab39d6d0"/></to>
    </wire>
    <wire loc="301:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK1" scoped="" ref="0x7fe7ab4bccb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab392180"/></to>
    </wire>
    <wire loc="312:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL3" scoped="" ref="0x7fe7ab4b0cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3616d0"/></to>
    </wire>
    <wire loc="293:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ2" scoped="" ref="0x7fe7ab4c4670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3b6c90"/></to>
    </wire>
    <wire loc="228:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fe7ab50ccb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7ab49d760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7ab49d760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aabdb6d0"/></to>
    </wire>
    <wire loc="304:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK4" scoped="" ref="0x7fe7ab4b8670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab383180"/></to>
    </wire>
    <wire loc="315:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL6" scoped="" ref="0x7fe7ab4ac670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab352c90"/></to>
    </wire>
    <wire loc="231:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fe7ab509350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7ab496e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7ab496e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab84e20"/></to>
    </wire>
    <wire loc="242:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fe7ab4fc350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7ab4835d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7ab4835d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab123f0"/></to>
    </wire>
    <wire loc="253:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fe7ab4f0350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7ab472c10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7ab472c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaaa19b0"/></to>
    </wire>
    <wire loc="264:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fe7ab4e3350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7ab45f440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7ab45f440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaa2f0a0"/></to>
    </wire>
    <wire loc="223:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fe7ab512e40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7ab4a4da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7ab4a4da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aabec6d0"/></to>
    </wire>
    <wire loc="234:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fe7ab506cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7ab491440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7ab491440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab7a6d0"/></to>
    </wire>
    <wire loc="245:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fe7ab4f9cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7ab480a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7ab480a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab09e20"/></to>
    </wire>
    <wire loc="273:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fe7ab4dacb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7ab450760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7ab450760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aa9c40a0"/></to>
    </wire>
    <wire loc="283:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH1" scoped="" ref="0x7fe7ab4d0990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3e36d0"/></to>
    </wire>
    <wire loc="248:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fe7ab4f6350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7ab4773f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7ab4773f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaab1c90"/></to>
    </wire>
    <wire loc="259:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fe7ab4ea350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7ab466a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7ab466a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaa3f0a0"/></to>
    </wire>
    <wire loc="268:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fe7ab4e0cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7ab456da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7ab456da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aa9d40a0"/></to>
    </wire>
    <wire loc="279:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fe7ab4d3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab408160"/></to>
    </wire>
    <wire loc="288:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH6" scoped="" ref="0x7fe7ab4ca990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3ca460"/></to>
    </wire>
    <wire loc="296:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ5" scoped="" ref="0x7fe7ab4c0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3a7c90"/></to>
    </wire>
    <wire loc="307:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK7" scoped="" ref="0x7fe7ab4b4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab375180"/></to>
    </wire>
    <wire loc="310:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL1" scoped="" ref="0x7fe7ab4b2670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab36bc90"/></to>
    </wire>
    <wire loc="226:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fe7ab50e670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7ab49f440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7ab49f440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aabe20a0"/></to>
    </wire>
    <wire loc="237:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fe7ab502670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7ab48e8f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7ab48e8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab700a0"/></to>
    </wire>
    <wire loc="266:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fe7ab4e2670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7ab459a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7ab459a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aa9dbc90"/></to>
    </wire>
    <wire loc="240:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fe7ab4ffcb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fe7ab4852b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fe7ab4852b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab19e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7ab4748f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaaa73f0"/></to>
    </wire>
    <wire loc="262:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fe7ab4e7cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7ab461020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7ab461020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaa369b0"/></to>
    </wire>
    <wire loc="271:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fe7ab4dc670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7ab452440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7ab452440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aa9cb9b0"/></to>
    </wire>
    <wire loc="221:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fe7ab5167f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7ab4a6a80"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7ab4a6a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aabf2270"/></to>
    </wire>
    <wire loc="232:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fe7ab508670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fe7ab493020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fe7ab493020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab800a0"/></to>
    </wire>
    <wire loc="243:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fe7ab4fb670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fe7ab482760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fe7ab482760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab0f6d0"/></to>
    </wire>
    <wire loc="254:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fe7ab4ef670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fe7ab471da0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fe7ab471da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaa9ee20"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fe7ab4d6990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab414c90"/></to>
    </wire>
    <wire loc="286:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH4" scoped="" ref="0x7fe7ab4cc350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3d4830"/></to>
    </wire>
    <wire loc="291:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ0" scoped="" ref="0x7fe7ab4c6020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3bf160"/></to>
    </wire>
    <wire loc="257:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fe7ab4edcb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fe7ab4687a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fe7ab4687a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aaa46c90"/></to>
    </wire>
    <wire loc="294:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ3" scoped="" ref="0x7fe7ab4c3990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab3b0180"/></to>
    </wire>
    <wire loc="302:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK2" scoped="" ref="0x7fe7ab4ba020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab38e6d0"/></to>
    </wire>
    <wire loc="305:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK5" scoped="" ref="0x7fe7ab4b7990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab37f6d0"/></to>
    </wire>
    <wire loc="313:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL4" scoped="" ref="0x7fe7ab4ae020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab35b0a0"/></to>
    </wire>
    <wire loc="316:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL7" scoped="" ref="0x7fe7ab4aa990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7ab34c180"/></to>
    </wire>
    <wire loc="246:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fe7ab4f7020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fe7ab47fc10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fe7ab47fc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab050a0"/></to>
    </wire>
    <wire loc="224:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fe7ab510060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fe7ab4a2020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fe7ab4a2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aabe99b0"/></to>
    </wire>
    <wire loc="235:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fe7ab504020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fe7ab4905d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fe7ab4905d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fe7aab779b0"/></to>
    </wire>
    <wire loc="21:PS2/PS2C.nc">
      <from><interface-ref name="ClockIRQ" scoped="" ref="0x7fe7ab2c6d90"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7fe7ab2f2ca0"/></to>
    </wire>
    <wire loc="23:PS2/PS2C.nc">
      <from><interface-ref name="ClockPin" scoped="" ref="0x7fe7ab2cb1c0"/></from>
      <to><interface-ref name="PortK7" scoped="" ref="0x7fe7ab4b4020"/></to>
    </wire>
    <wire loc="24:PS2/PS2C.nc">
      <from><interface-ref name="DataPin" scoped="" ref="0x7fe7ab2c44f0"/></from>
      <to><interface-ref name="PortK6" scoped="" ref="0x7fe7ab4b6cb0"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fe7ab130980"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fe7ab26b450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="VolumePin" scoped="" ref="0x7fe7ab27e020"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x7fe7ab4e2670"/></to>
    </wire>
    <wire loc="26:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fe7ab12e060"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fe7ab27bc80"/></to>
    </wire>
    <wire loc="27:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7ab12e950"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7ab27f6c0"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fe7ab263280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fe7ab12e060"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe7ab2621d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe7ab261e40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7ab25b210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7ab12e950"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fe7ab26b450"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fe7ab154c90"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7fe7ab2684f0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7fe7ab17d1d0"/></to>
    </wire>
    <wire loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe7ab138020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe7ab2621d0"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fe7ab17ba10"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fe7ab263280"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fe7ab13a6d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fe7ab180410"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7fe7ab17c9f0"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7fe7ab257450"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7fe7ab257450"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7fe7ab24e830"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fe7ab17a740"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fe7ab95c290"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe7ab261e40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe7ab19be70"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fe7ab19be70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fe7aa7d64d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7fe7ab251420"/></from>
      <to><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7fe7ab24d330"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7ab197930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7ab25b210"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7fe7ab23d710"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7fe7ab20a460"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7fe7ab20a460"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7fe7ab2057d0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe7ab24bbe0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe7abda1020"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7ab193020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7ab24e020"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7ab193d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7ab199400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7ab199400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7aa7d5b20"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fe7ab203c10"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fe7abe117d0"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fe7ab19ac00"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fe7aa7d53a0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7ab197060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7aa7d48b0"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7aa7d3210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7ab197930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fe7aa7d39d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fe7aa7d82b0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fe7aa7d0c50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7aa79d660"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7ab193020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe7aa79ddc0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe7ab193780"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7aa79c3d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7ab193d50"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7aa79b020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7ab189990"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7fe7ab168510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../tinyos_ws18/tos/system/MainC.nc">
      <documentation loc="45:../tinyos_ws18/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <documentation loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../tinyos_ws18/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../tinyos_ws18/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../tinyos_ws18/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc" safe="">
      <documentation loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioScannerP" loc="15:RadioScannerP.nc">
      <documentation loc="1:RadioScannerP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file RadioScannerP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-20&#10;&#10; Implementation of the RadioScanner app.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC" loc="11:FMClick/FMClickC.nc">
      <documentation loc="1:FMClick/FMClickC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; Configuration of the FMClick module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FMClickP" loc="19:FMClick/FMClickP.nc">
      <documentation loc="1:FMClick/FMClickP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; FMClick module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="GlcdC" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
        <short>&#10; High level implementation for KS0108 Glcd&#10; </short>
        <long>&#10; High level implementation for KS0108 Glcd&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="GlcdP" loc="41:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <module/>
    </component>
    <component qname="HplKS0108C" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
        <short>&#10; Configuration for KS0108 GLCD Display&#10; </short>
        <long>&#10; Configuration for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplKS0108P" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
        <short>&#10; Hpl implementation for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl implementation for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10; Based on an implementation of Andreas Hagmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC" loc="6:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortAP" loc="6(HplAtm128GeneralIOFastPortC.PortAP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortBP" loc="6(HplAtm128GeneralIOFastPortC.PortBP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortCP" loc="6(HplAtm128GeneralIOFastPortC.PortCP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortDP" loc="6(HplAtm128GeneralIOFastPortC.PortDP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortEP" loc="6(HplAtm128GeneralIOFastPortC.PortEP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortFP" loc="6(HplAtm128GeneralIOFastPortC.PortFP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortGP" loc="6(HplAtm128GeneralIOFastPortC.PortGP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortHP" loc="6(HplAtm128GeneralIOFastPortC.PortHP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortJP" loc="6(HplAtm128GeneralIOFastPortC.PortJP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortKP" loc="6(HplAtm128GeneralIOFastPortC.PortKP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortLP" loc="6(HplAtm128GeneralIOFastPortC.PortLP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:9">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="38:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc" safe="">
      <documentation loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FMClickC.I2C" loc="43(FMClickC.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../tinyos_ws18/tos/system/LedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc" safe="">
      <documentation loc="35:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../tinyos_ws18/tos/system/NoLedsC.nc">
      <documentation loc="35:../tinyos_ws18/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.Timer" loc="44(FMClickC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <documentation loc="11:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC" loc="32(AlarmCounterMilliP.Atm1280AlarmSyncC):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:124">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP" loc="33(AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fe7ab6a6160"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280Timer2SyncC" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <documentation loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280Timer2SyncP" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc" safe="">
      <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changed to sync mode&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; Changed for Atm1280&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA" loc="40(HplAtm1280GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit0" loc="41(HplAtm1280GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="48">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit1" loc="41(HplAtm1280GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="49">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit2" loc="41(HplAtm1280GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="50">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit3" loc="41(HplAtm1280GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="51">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit4" loc="41(HplAtm1280GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="52">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit5" loc="41(HplAtm1280GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="53">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit6" loc="41(HplAtm1280GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="54">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit7" loc="41(HplAtm1280GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="55">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB" loc="40(HplAtm1280GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit0" loc="41(HplAtm1280GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="56">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit1" loc="41(HplAtm1280GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="57">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit2" loc="41(HplAtm1280GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="58">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit3" loc="41(HplAtm1280GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="59">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit4" loc="41(HplAtm1280GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="60">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit5" loc="41(HplAtm1280GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="61">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit6" loc="41(HplAtm1280GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="62">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit7" loc="41(HplAtm1280GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="63">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC" loc="40(HplAtm1280GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit0" loc="41(HplAtm1280GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="64">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit1" loc="41(HplAtm1280GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="65">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit2" loc="41(HplAtm1280GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="66">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit3" loc="41(HplAtm1280GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="67">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit4" loc="41(HplAtm1280GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="68">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit5" loc="41(HplAtm1280GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="69">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit6" loc="41(HplAtm1280GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="70">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit7" loc="41(HplAtm1280GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="71">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD" loc="40(HplAtm1280GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit0" loc="41(HplAtm1280GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="72">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit1" loc="41(HplAtm1280GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="73">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit2" loc="41(HplAtm1280GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="74">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit3" loc="41(HplAtm1280GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="75">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit4" loc="41(HplAtm1280GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="76">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit5" loc="41(HplAtm1280GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="77">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit6" loc="41(HplAtm1280GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="78">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit7" loc="41(HplAtm1280GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="79">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE" loc="40(HplAtm1280GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit0" loc="41(HplAtm1280GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="80">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit1" loc="41(HplAtm1280GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="81">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit2" loc="41(HplAtm1280GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="82">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit3" loc="41(HplAtm1280GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="83">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit4" loc="41(HplAtm1280GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="84">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit5" loc="41(HplAtm1280GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="85">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit6" loc="41(HplAtm1280GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="86">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit7" loc="41(HplAtm1280GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="87">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF" loc="40(HplAtm1280GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit0" loc="41(HplAtm1280GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="88">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit1" loc="41(HplAtm1280GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="89">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit2" loc="41(HplAtm1280GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="90">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit3" loc="41(HplAtm1280GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="91">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit4" loc="41(HplAtm1280GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="92">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit5" loc="41(HplAtm1280GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="93">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit6" loc="41(HplAtm1280GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="94">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit7" loc="41(HplAtm1280GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="95">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F0" loc="42(HplAtm1280GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F1" loc="42(HplAtm1280GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F2" loc="42(HplAtm1280GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F3" loc="42(HplAtm1280GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F4" loc="42(HplAtm1280GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F5" loc="42(HplAtm1280GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F6" loc="42(HplAtm1280GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F7" loc="42(HplAtm1280GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G0" loc="42(HplAtm1280GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G1" loc="42(HplAtm1280GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G2" loc="42(HplAtm1280GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G3" loc="42(HplAtm1280GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G4" loc="42(HplAtm1280GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G5" loc="42(HplAtm1280GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H0" loc="42(HplAtm1280GeneralIOC.H0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H1" loc="42(HplAtm1280GeneralIOC.H1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H2" loc="42(HplAtm1280GeneralIOC.H2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H3" loc="42(HplAtm1280GeneralIOC.H3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H4" loc="42(HplAtm1280GeneralIOC.H4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H5" loc="42(HplAtm1280GeneralIOC.H5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H6" loc="42(HplAtm1280GeneralIOC.H6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H7" loc="42(HplAtm1280GeneralIOC.H7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J0" loc="42(HplAtm1280GeneralIOC.J0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J1" loc="42(HplAtm1280GeneralIOC.J1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J2" loc="42(HplAtm1280GeneralIOC.J2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J3" loc="42(HplAtm1280GeneralIOC.J3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J4" loc="42(HplAtm1280GeneralIOC.J4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J5" loc="42(HplAtm1280GeneralIOC.J5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J6" loc="42(HplAtm1280GeneralIOC.J6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J7" loc="42(HplAtm1280GeneralIOC.J7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K0" loc="42(HplAtm1280GeneralIOC.K0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K1" loc="42(HplAtm1280GeneralIOC.K1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K2" loc="42(HplAtm1280GeneralIOC.K2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K3" loc="42(HplAtm1280GeneralIOC.K3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K4" loc="42(HplAtm1280GeneralIOC.K4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K5" loc="42(HplAtm1280GeneralIOC.K5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K6" loc="42(HplAtm1280GeneralIOC.K6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K7" loc="42(HplAtm1280GeneralIOC.K7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L0" loc="42(HplAtm1280GeneralIOC.L0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L1" loc="42(HplAtm1280GeneralIOC.L1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L2" loc="42(HplAtm1280GeneralIOC.L2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L3" loc="42(HplAtm1280GeneralIOC.L3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L4" loc="42(HplAtm1280GeneralIOC.L4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L5" loc="42(HplAtm1280GeneralIOC.L5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L6" loc="42(HplAtm1280GeneralIOC.L6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L7" loc="42(HplAtm1280GeneralIOC.L7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PS2C" loc="11:PS2/PS2C.nc">
      <documentation loc="1:PS2/PS2C.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file    PS2C.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the PS2 module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PS2P" loc="18:PS2/PS2P.nc">
      <module/>
    </component>
    <component qname="HplAtmegaPinChange2C" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <module/>
    </component>
    <component qname="VolumeAdcC" loc="13:VolumeAdc/VolumeAdcC.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the VolumeAdc module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="VolumeAdcP" loc="13:VolumeAdc/VolumeAdcP.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; VolumeAdc module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="VolumeAdcC.Adc" loc="21(VolumeAdcC.Adc):../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <documentation loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcP" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc" safe="">
      <documentation loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
        <short>&#10; Internal component of the Atmega1280 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1280 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm1280AdcC" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280AdcP" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc" safe="">
      <documentation loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter" loc="89(Atm1280AdcC.AdcArbiter):../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Queue" loc="42(Atm1280AdcC.AdcArbiter.Queue):../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Arbiter" loc="52(Atm1280AdcC.AdcArbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.PM" loc="67(Atm1280AdcC.PM):../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.PM.PowerManager" loc="58(Atm1280AdcC.PM.PowerManager):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc" safe="">
      <documentation loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
        <short>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RadioScannerAppC.Timer" loc="44(RadioScannerAppC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fe7abaf7c00" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fe7abaf4020" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fe7abaf4390" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fe7abae5020" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fe7abae53b0" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fe7abae5740" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fe7abae5a90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fe7aba53e30" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fe7aba50200" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fe7aba50590" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fe7aba508e0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortP" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fe7ab9ae810" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fe7ab9aeb80" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fe7ab9ab020" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7fe7ab9223d0" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7fe7ab922760" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7fe7ab922af0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fe7ab922e40" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fe7ab8cd6f0" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fe7ab8ba210" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fe7ab8a1bd0" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../tinyos_ws18/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncC" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc" abstract="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fe7ab6a6160" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fe7ab6a6160"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7fe7ab6a64f0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7fe7ab6a6880" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncP" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fe7ab69a200" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fe7ab69a200"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7fe7ab69a590" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7fe7ab69a920" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe7ab5b0160" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe7ab5b0160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe7ab57e230" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe7ab57e230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fe7ab57e560" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe7ab52fde0" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe7ab52fde0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fe7ab3fd4c0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fe7ab3fd860" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fe7ab3fdc00" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fe7ab3fc020" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fe7ab1c85c0" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7fe7ab1c2e80" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadC" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7fe7ab155d60" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7fe7ab155d60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fe7abda4bf0" loc="58:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fe7abda4bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abda7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fe7abda5720" loc="57:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fe7abda5720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe7abda5aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fe7abda1d50" loc="52:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fe7abda1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abda0100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7abda7d00" loc="46:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7abda7d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abda20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fe7abda1020" loc="50:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe7abda1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fe7abda13a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fe7abda1530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fe7abda16c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fe7abda1850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fe7abda19e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fe7abd997a0" loc="45:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7fe7abd997a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abd99b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7abd990c0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7abd990c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abd99440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7fe7abd98020" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7fe7abd98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abd983a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fe7abd916f0" loc="4:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fe7abd916f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abd91a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fe7abd91020" loc="3:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fe7abd91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abd913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7abd88860" loc="51:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7abd88860"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fe7abf333a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fe7abf333a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abd88be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fe7abd87020" loc="52:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe7abd87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fe7abd873a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fe7abd87530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fe7abd876c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fe7abd87850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fe7abd879e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fe7abd74720" loc="60:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fe7abd74720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abd74aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fe7abda3e20" loc="57:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fe7abda3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe7abd751c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fe7abd74020" loc="59:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fe7abd74020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abd743a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fe7abd754b0" loc="58:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fe7abd754b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abd75830"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe7abd759c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe7abd75b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fe7abf277b0" loc="48:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abf277b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7abf27b30"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7abf27cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fe7abf31a20" loc="47:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fe7abf31a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abf31da0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe7ac8df020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe7ac8df1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fe7abe30020" loc="56:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fe7abe30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7abe303a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7abe30530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fe7abe2d590" loc="57:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fe7abe2d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fe7abe2d910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fe7abe32120" loc="55:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fe7abe32120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abe324a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fe7abe32630"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fe7abe327c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fe7abe12080" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe7abe12080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fe7abe12400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fe7abe4b2d0" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fe7abe4b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fe7abe4b650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fe7abe117d0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fe7abe117d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fe7abe11b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fe7abd690c0" loc="18:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fe7abd690c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fe7abd69440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x7fe7abd68e30" loc="20:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x7fe7abd68e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abd671e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="volumeKnob" ref="0x7fe7abd4b060" loc="23:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="volumeKnob" scoped="" ref="0x7fe7abd4b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7abd4bc50"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7abd47110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inputTuneChannel" ref="0x7fe7abd36e50" loc="46:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inputTuneChannel" scoped="" ref="0x7fe7abd36e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7abd35210"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7abd353a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Keyboard" ref="0x7fe7abd4a600" loc="22:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Keyboard" scoped="" ref="0x7fe7abd4a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abd4a980"/>
        <function-ref name="receivedChar" scoped="" ref="0x7fe7abd4ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="handleChar" ref="0x7fe7abd31680" loc="57:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="handleChar" scoped="" ref="0x7fe7abd31680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7abd31a00"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7abd31b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioInitFail" ref="0x7fe7abd1a550" loc="151:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioInitFail" scoped="" ref="0x7fe7abd1a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7abd1a8d0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7abd1aa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedSeeking" ref="0x7fe7abd13660" loc="167:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedSeeking" scoped="" ref="0x7fe7abd13660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7abd139e0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7abd13b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune2Station" ref="0x7fe7abd20020" loc="137:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune2Station" scoped="" ref="0x7fe7abd20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7abd203a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7abd20530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Radio" ref="0x7fe7abd4ed60" loc="21:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Radio" scoped="" ref="0x7fe7abd4ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7fe7abd56e00"/>
        <function-ref name="initDone" scoped="" ref="0x7fe7abd56310"/>
        <function-ref name="setVolume" scoped="" ref="0x7fe7abd564a0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7fe7abd56630"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7fe7abd567c0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7fe7abd56950"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7abd56ae0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7fe7abd56c70"/>
        <function-ref name="seek" scoped="" ref="0x7fe7abd56180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedTuning" ref="0x7fe7abd18840" loc="157:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedTuning" scoped="" ref="0x7fe7abd18840"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7abd18cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7abd18e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readyScreen" ref="0x7fe7abd1c020" loc="145:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readyScreen" scoped="" ref="0x7fe7abd1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7abd1c3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7abd1c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7fe7abd57980" loc="19:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7fe7abd57980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7fe7abd68b10"/>
        <function-ref name="drawRect" scoped="" ref="0x7fe7abd68020"/>
        <function-ref name="drawLine" scoped="" ref="0x7fe7abd681b0"/>
        <function-ref name="setPixel" scoped="" ref="0x7fe7abd68340"/>
        <function-ref name="invertPixel" scoped="" ref="0x7fe7abd684d0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7fe7abd68660"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7fe7abd687f0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7fe7abd57d00"/>
        <function-ref name="drawText" scoped="" ref="0x7fe7abd68980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe7abd46220" loc="24:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe7abd46220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7abd3a6e0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7abd45c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe7abd3ba70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe7abd3b5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe7abd39020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe7abd3ab60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7abd3b170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe7abd46e10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe7abd3a0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe7abd45340"/>
        <function-ref name="stop" scoped="" ref="0x7fe7abd45810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7abcf55e0" loc="14:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7abcf55e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abcf5960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7fe7abcf5c00" loc="15:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7fe7abcf5c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7fe7abcf2ca0"/>
        <function-ref name="initDone" scoped="" ref="0x7fe7abcf21b0"/>
        <function-ref name="setVolume" scoped="" ref="0x7fe7abcf2340"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7fe7abcf24d0"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7fe7abcf2660"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7fe7abcf27f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7abcf2980"/>
        <function-ref name="seekComplete" scoped="" ref="0x7fe7abcf2b10"/>
        <function-ref name="seek" scoped="" ref="0x7fe7abcf2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seek" ref="0x7fe7abc79d20" loc="420:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seek" scoped="" ref="0x7fe7abc79d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7abc781c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7abc78350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDIOPin" ref="0x7fe7abcca060" loc="32:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SDIOPin" scoped="" ref="0x7fe7abcca060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abcca3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abcca570"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abcca700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abcca890"/>
        <function-ref name="get" scoped="" ref="0x7fe7abccaa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abccabb0"/>
        <function-ref name="set" scoped="" ref="0x7fe7abccad40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abcc4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="INTPin" ref="0x7fe7abcc4350" loc="33:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="INTPin" scoped="" ref="0x7fe7abcc4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abcc46d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abcc4860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abcc49f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abcc4b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7abcc4d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abcc3020"/>
        <function-ref name="set" scoped="" ref="0x7fe7abcc31b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abcc3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Int" ref="0x7fe7abce7e10" loc="27:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int" scoped="" ref="0x7fe7abce7e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7abceb1c0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7abceb350"/>
        <function-ref name="disable" scoped="" ref="0x7fe7abceb4e0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7abceb670"/>
        <function-ref name="enable" scoped="" ref="0x7fe7abceb800"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7abceb990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7fe7abcd5de0" loc="29:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fe7abcd5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fe7abce0830"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fe7abce0af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7abce6ac0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe7abcd2020"/>
        <function-ref name="write" scoped="" ref="0x7fe7abce1710"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7abcd43c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7fe7abca1740" loc="242:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init" scoped="" ref="0x7fe7abca1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7abca1ac0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7abca1c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7abcf1920" loc="22:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7abcf1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abcf1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7fe7abcea0f0" loc="28:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7fe7abcea0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7abcea470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7abcea600"/>
        <function-ref name="request" scoped="" ref="0x7fe7abcea790"/>
        <function-ref name="granted" scoped="" ref="0x7fe7abcea920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7abceaab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTPin" ref="0x7fe7abcc6e60" loc="31:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTPin" scoped="" ref="0x7fe7abcc6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abccb210"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abccb3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abccb530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abccb6c0"/>
        <function-ref name="get" scoped="" ref="0x7fe7abccb850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abccb9e0"/>
        <function-ref name="set" scoped="" ref="0x7fe7abccbb70"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abccbd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7fe7abcee020" loc="23:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7fe7abcee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7fe7abced1b0"/>
        <function-ref name="initDone" scoped="" ref="0x7fe7abcee530"/>
        <function-ref name="setVolume" scoped="" ref="0x7fe7abcee6c0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7fe7abcee850"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7fe7abcee9e0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7fe7abceeb70"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7abceed00"/>
        <function-ref name="seekComplete" scoped="" ref="0x7fe7abced020"/>
        <function-ref name="seek" scoped="" ref="0x7fe7abcee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7fe7abcc35c0" loc="34:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7fe7abcc35c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7fe7abcc2660"/>
        <function-ref name="drawRect" scoped="" ref="0x7fe7abcc3ad0"/>
        <function-ref name="drawLine" scoped="" ref="0x7fe7abcc3c60"/>
        <function-ref name="setPixel" scoped="" ref="0x7fe7abcc3df0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7fe7abcc2020"/>
        <function-ref name="clearPixel" scoped="" ref="0x7fe7abcc21b0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7fe7abcc2340"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7fe7abcc3940"/>
        <function-ref name="drawText" scoped="" ref="0x7fe7abcc24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe7abcd2d80" loc="30:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe7abcd2d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7abccd220"/>
        <function-ref name="fired" scoped="" ref="0x7fe7abccf7f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe7abcce5b0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe7abcce130"/>
        <function-ref name="getdt" scoped="" ref="0x7fe7abccdb20"/>
        <function-ref name="gett0" scoped="" ref="0x7fe7abccd6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7abccfc70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe7abcd19a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe7abccebc0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe7abcd1e70"/>
        <function-ref name="stop" scoped="" ref="0x7fe7abccf370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune" ref="0x7fe7abc88380" loc="346:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune" scoped="" ref="0x7fe7abc88380"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7abc88700"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7abc88890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7fe7abc25c60" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <component-ref qname="GlcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7fe7abc25c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7fe7abc22ca0"/>
        <function-ref name="drawRect" scoped="" ref="0x7fe7abc221b0"/>
        <function-ref name="drawLine" scoped="" ref="0x7fe7abc22340"/>
        <function-ref name="setPixel" scoped="" ref="0x7fe7abc224d0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7fe7abc22660"/>
        <function-ref name="clearPixel" scoped="" ref="0x7fe7abc227f0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7fe7abc22980"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7fe7abc22020"/>
        <function-ref name="drawText" scoped="" ref="0x7fe7abc22b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7abbf0ab0" loc="44:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7abbf0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7abbf0e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hpl" ref="0x7fe7abbe8210" loc="45:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hpl" scoped="" ref="0x7fe7abbe8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7fe7abbe8590"/>
        <function-ref name="init" scoped="" ref="0x7fe7abbe8720"/>
        <function-ref name="dataRead" scoped="" ref="0x7fe7abbe88b0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7fe7abbe8a40"/>
        <function-ref name="controlRead" scoped="" ref="0x7fe7abbe8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7fe7abbf16b0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7fe7abbf16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7fe7abbf07f0"/>
        <function-ref name="drawRect" scoped="" ref="0x7fe7abbf1bc0"/>
        <function-ref name="drawLine" scoped="" ref="0x7fe7abbf1d50"/>
        <function-ref name="setPixel" scoped="" ref="0x7fe7abbf0020"/>
        <function-ref name="invertPixel" scoped="" ref="0x7fe7abbf01b0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7fe7abbf0340"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7fe7abbf04d0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7fe7abbf1a30"/>
        <function-ref name="drawText" scoped="" ref="0x7fe7abbf0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7fe7abb7a2c0" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <component-ref qname="HplKS0108C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7fe7abb7a2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7fe7abb7a640"/>
        <function-ref name="init" scoped="" ref="0x7fe7abb7a7d0"/>
        <function-ref name="dataRead" scoped="" ref="0x7fe7abb7a960"/>
        <function-ref name="controlWrite" scoped="" ref="0x7fe7abb7aaf0"/>
        <function-ref name="controlRead" scoped="" ref="0x7fe7abb7ac80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EN" ref="0x7fe7abb70370" loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EN" scoped="" ref="0x7fe7abb70370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb706f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb70880"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb70a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb70ba0"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb70d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb6f020"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb6f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb6f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fe7abb64d20" loc="34:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fe7abb64d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7cd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe7abe7a180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fe7abb66b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_0" ref="0x7fe7abb756a0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_0" scoped="" ref="0x7fe7abb756a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb75a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb75bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb75d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb74020"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb741b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb74340"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb744d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb74660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RST" ref="0x7fe7abb6f690" loc="30:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RST" scoped="" ref="0x7fe7abb6f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb6fa10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb6fba0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb6fd30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb6e020"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb6e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb6e340"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb6e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb6e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RS" ref="0x7fe7abb73cd0" loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RS" scoped="" ref="0x7fe7abb73cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb720a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb72230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb723c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb72550"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb726e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb72870"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb72a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb72b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_1" ref="0x7fe7abb749c0" loc="26:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_1" scoped="" ref="0x7fe7abb749c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb74d40"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb73020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb73340"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb73660"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb737f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb73980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7fe7abb788c0" loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7fe7abb788c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7fe7abb78c40"/>
        <function-ref name="init" scoped="" ref="0x7fe7abb78dd0"/>
        <function-ref name="dataRead" scoped="" ref="0x7fe7abb75020"/>
        <function-ref name="controlWrite" scoped="" ref="0x7fe7abb751b0"/>
        <function-ref name="controlRead" scoped="" ref="0x7fe7abb75340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RW" ref="0x7fe7abb71020" loc="28:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RW" scoped="" ref="0x7fe7abb71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb713a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb71530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb716c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb71850"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb719e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb71b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb71d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb70020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Data" ref="0x7fe7abb6d060" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Data" scoped="" ref="0x7fe7abb6d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb6d3e0"/>
        <function-ref name="clear" scoped="" ref="0x7fe7abb6d570"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb6d700"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb6d890"/>
        <function-ref name="read" scoped="" ref="0x7fe7abb6da20"/>
        <function-ref name="write" scoped="" ref="0x7fe7abb6dbb0"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb6dd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fe7abb01350" loc="98:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fe7abb01350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb01ad0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb01c60"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb01df0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb00020"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb00340"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb004d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb00660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fe7abb1eb20" loc="72:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fe7abb1eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb1d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb1d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb1d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb1d4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb1d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb1d7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb1d980"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb1db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fe7abb11990" loc="83:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fe7abb11990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb11d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb10020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb101b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb10340"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb104d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb10660"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb107f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb10980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fe7abb07350" loc="92:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fe7abb07350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb076d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb07860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb079f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb07b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb07d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb06020"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb061b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb06340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7fe7abafa670" loc="103:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7fe7abafa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abafa9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abafab80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abafad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abaf9020"/>
        <function-ref name="get" scoped="" ref="0x7fe7abaf91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abaf9340"/>
        <function-ref name="set" scoped="" ref="0x7fe7abaf94d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abaf9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fe7abb35cb0" loc="50:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fe7abb35cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb340a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb34230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb343c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb34550"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb346e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb34870"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb34a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb34b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fe7abb0acb0" loc="90:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fe7abb0acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb090a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb09230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb093c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb09550"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb096e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb09870"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb09a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb09b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fe7abb32350" loc="53:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fe7abb32350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb326d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb32860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb329f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb32b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb32d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb31020"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb311b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb31340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fe7abb26350" loc="64:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fe7abb26350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb266d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb26860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb269f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb26b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb26d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb25020"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb251b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb25340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fe7abb19350" loc="75:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fe7abb19350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb196d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb19860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb199f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb19b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb19d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb18020"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb181b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb18340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fe7abb0d350" loc="86:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fe7abb0d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb0d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb0d860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb0d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb0db80"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb0dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb0c020"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb0c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb0c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fe7abb3ccb0" loc="45:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fe7abb3ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb3b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb3b230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb3b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb3b550"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb3b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb3b870"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb3ba00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb3bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fe7abb2fcb0" loc="56:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fe7abb2fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb2e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb2e230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb2e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb2e550"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb2e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb2e870"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb2ea00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb2eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fe7abb23cb0" loc="67:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fe7abb23cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb220a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb22230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb223c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb22550"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb226e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb22870"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb22a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb22b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fe7abb16cb0" loc="78:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fe7abb16cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb150a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb15230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb153c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb15550"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb156e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb15870"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb15a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb15b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fe7abb04cb0" loc="95:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fe7abb04cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb030a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb03230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb033c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb03550"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb036e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb03870"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb03a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb03b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fe7abafc020" loc="101:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fe7abafc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abafc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abafc530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abafc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abafc850"/>
        <function-ref name="get" scoped="" ref="0x7fe7abafc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abafcb70"/>
        <function-ref name="set" scoped="" ref="0x7fe7abafcd00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abafb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fe7abb13350" loc="81:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fe7abb13350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb136d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb13860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb139f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb13b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb13d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb12020"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb121b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb12340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fe7abb37670" loc="48:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fe7abb37670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb379f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb37b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb37d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb36020"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb361b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb36340"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb364d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb36660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fe7abb2b670" loc="59:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fe7abb2b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb2b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb2bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb2bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb2a020"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb2a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb2a340"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb2a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb2a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fe7abb00990" loc="99:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fe7abb00990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb00d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abafe020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abafe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abafe340"/>
        <function-ref name="get" scoped="" ref="0x7fe7abafe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abafe660"/>
        <function-ref name="set" scoped="" ref="0x7fe7abafe7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abafe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fe7abb29cb0" loc="62:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fe7abb29cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb280a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb28230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb283c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb28550"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb286e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb28870"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb28a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb28b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fe7abb1de40" loc="73:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fe7abb1de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb1b1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb1b370"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb1b500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb1b690"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb1b820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb1b9b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb1bb40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb1bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fe7abb10cb0" loc="84:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fe7abb10cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb0f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb0f230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb0f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb0f550"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb0f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb0f870"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb0fa00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb0fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fe7abb06670" loc="93:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fe7abb06670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb069f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb06b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb06d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb05020"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb05340"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb054d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fe7abb33020" loc="51:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fe7abb33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb333a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb33530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb336c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb33850"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb339e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb33b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb33d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fe7abb31670" loc="54:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fe7abb31670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb319f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb31b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb31d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb30020"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb301b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb30340"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb304d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb30660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fe7abb25670" loc="65:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fe7abb25670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb259f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb25b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb25d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb24020"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb241b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb24340"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb244d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb24660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fe7abb18670" loc="76:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fe7abb18670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb189f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb18b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb18d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb17020"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb171b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb17340"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb174d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb17660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fe7abb0c670" loc="87:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fe7abb0c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb0c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb0cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb0cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb0b020"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb0b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb0b340"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb0b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb0b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fe7abb3a020" loc="46:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fe7abb3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb3a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb3a530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb3a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb3a850"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb3a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb3ab70"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb3ad00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fe7abb2d020" loc="57:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fe7abb2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb2d4a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb2d630"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb2d7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb2d950"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb2dae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb2dc70"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb2de00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fe7abb21020" loc="68:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fe7abb21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb21530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb216c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb21850"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb219e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb21b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb21d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fe7abb02020" loc="96:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fe7abb02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb023a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb02530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb026c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb02850"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb029e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb02b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb02d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fe7abb1f670" loc="71:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fe7abb1f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb1fbf0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb1fd80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb1e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb1e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb1e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb1e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb1e660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb1e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fe7abb12670" loc="82:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fe7abb12670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb129f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb12b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb12d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb11020"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb111b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb11340"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb114d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb11660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fe7abb08020" loc="91:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fe7abb08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb083a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb08530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb086c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb08850"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb089e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb08b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb08d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fe7abafb350" loc="102:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fe7abafb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abafb6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abafb860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abafb9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abafbb80"/>
        <function-ref name="get" scoped="" ref="0x7fe7abafbd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abafa020"/>
        <function-ref name="set" scoped="" ref="0x7fe7abafa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abafa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fe7abb36990" loc="49:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fe7abb36990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb36d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb35020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb35340"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb35660"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb357f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb35980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fe7abb2a990" loc="60:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fe7abb2a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb2ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb29020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb29340"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb29660"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb297f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb29980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fe7abb0b990" loc="89:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fe7abb0b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb0bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb0a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb0a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb0a340"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb0a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb0a660"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb0a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb0a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fe7abb27020" loc="63:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fe7abb27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb273a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb27530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb276c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb27850"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb279e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb27b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb27d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fe7abb1a060" loc="74:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fe7abb1a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb1a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb1a570"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb1a700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb1a890"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb1aa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb1abb0"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb1ad40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fe7abb0e020" loc="85:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fe7abb0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb0e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb0e530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb0e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb0e850"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb0e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb0eb70"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb0ed00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fe7abb05990" loc="94:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fe7abb05990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb05d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb04020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb041b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb04340"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb044d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb04660"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb047f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb04980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fe7abb3fad0" loc="44:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fe7abb3fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb3fe50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb3c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb3c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb3c340"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb3c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb3c660"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb3c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb3c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fe7abb30990" loc="55:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fe7abb30990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb30d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb2f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb2f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb2f340"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb2f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb2f660"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb2f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb2f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fe7abb24990" loc="66:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fe7abb24990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb24d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb23020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb23340"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb23660"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb237f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb23980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fe7abb17990" loc="77:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fe7abb17990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb17d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb16020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb161b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb16340"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb164d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb16660"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb167f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb16980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fe7abafecb0" loc="100:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fe7abafecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abafd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abafd230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abafd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abafd550"/>
        <function-ref name="get" scoped="" ref="0x7fe7abafd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abafd870"/>
        <function-ref name="set" scoped="" ref="0x7fe7abafda00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abafdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fe7abb14020" loc="80:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fe7abb14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb143a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb14530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb146c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb14850"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb149e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb14b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb14d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fe7abb20350" loc="69:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fe7abb20350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb206d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb20860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb209f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb20b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb20d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb1f020"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb1f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb1f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fe7abb39350" loc="47:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fe7abb39350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb396d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb39860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb399f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb39b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb39d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb37020"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb371b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb37340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fe7abb2c350" loc="58:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fe7abb2c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abb2c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abb2c860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abb2c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abb2cb80"/>
        <function-ref name="get" scoped="" ref="0x7fe7abb2cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abb2b020"/>
        <function-ref name="set" scoped="" ref="0x7fe7abb2b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abb2b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7abaac760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7abaac760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abaacae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abaacc70"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abaace00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abaab020"/>
        <function-ref name="get" scoped="" ref="0x7fe7abaab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abaab340"/>
        <function-ref name="set" scoped="" ref="0x7fe7abaab4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abaab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7abaa9c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7abaa9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abaa8020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abaa81b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abaa8340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abaa84d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7abaa8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abaa87f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7abaa8980"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abaa8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7abaaf3f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7abaaf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abaaf770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abaaf900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abaafa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abaafc20"/>
        <function-ref name="get" scoped="" ref="0x7fe7abaafdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abaad020"/>
        <function-ref name="set" scoped="" ref="0x7fe7abaad1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abaad340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7abaab8f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7abaab8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abaabc70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abaabe00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abaaa020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abaaa1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7abaaa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abaaa4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7abaaa660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abaaa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7abaa8da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7abaa8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abaa7180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abaa7310"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abaa74a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abaa7630"/>
        <function-ref name="get" scoped="" ref="0x7fe7abaa77c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abaa7950"/>
        <function-ref name="set" scoped="" ref="0x7fe7abaa7ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abaa7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7abaad5d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7abaad5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abaad950"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abaadae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abaadc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abaade00"/>
        <function-ref name="get" scoped="" ref="0x7fe7abaac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abaac1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7abaac340"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abaac4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7abaaaa80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7abaaaa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abaaae00"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abaa9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abaa91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abaa9340"/>
        <function-ref name="get" scoped="" ref="0x7fe7abaa94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abaa9660"/>
        <function-ref name="set" scoped="" ref="0x7fe7abaa97f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abaa9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7abaa6020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7abaa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7abaa63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7abaa6530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7abaa66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7abaa6850"/>
        <function-ref name="get" scoped="" ref="0x7fe7abaa69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7abaa6b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7abaa6d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7abaa5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab0e2020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab0e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab0e23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab0e2530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab0e26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab0e2850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab0e29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab0e2b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab0e2d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab0e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab0df3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab0df3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab0df770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab0df900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab0dfa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab0dfc20"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab0dfdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab0de020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab0de1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab0de340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab0d56d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab0d56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab0d5a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab0d5be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab0d5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab0d4020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab0d41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab0d4340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab0d44d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab0d4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab0d29b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab0d29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab0d2d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab0d1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab0d11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab0d1340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab0d14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab0d1660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab0d17f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab0d1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab0cfe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab0cfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab0ce1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab0ce350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab0ce4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab0ce670"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab0ce800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab0ce990"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab0ceb20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab0cecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab0cb0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab0cb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab0cb420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab0cb5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab0cb740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab0cb8d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab0cba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab0cbbf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab0cbd80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab0ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab0c83f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab0c83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab0c8770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab0c8900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab0c8a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab0c8c20"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab0c8db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab0c7020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab0c71b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab0c7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab0c56d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab0c56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab0c5a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab0c5be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab0c5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab0c4020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab0c41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab0c4340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab0c44d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab0c4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7aba9da80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7aba9da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba9de00"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba9c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba9c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba9c340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba9c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba9c660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba9c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba9c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7aba99020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7aba99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba993a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba99530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba996c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba99850"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba999e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba99b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba99d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7aba9f7a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7aba9f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba9fb20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba9fcb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba9fe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba9e020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba9e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba9e340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba9e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba9e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7aba9cc10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7aba9cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba9b020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba9b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba9b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba9b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba9b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba9b7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba9b980"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba9bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7aba982b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7aba982b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba98630"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba987c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba98950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba98ae0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba98c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba98e00"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba97020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7aba9e8f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7aba9e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba9ec70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba9ee00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba9d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba9d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba9d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba9d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba9d660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba9d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7aba9bda0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7aba9bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba9a180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba9a310"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba9a4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba9a630"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba9a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba9a950"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba9aae0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba9ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7aba97440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7aba97440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba977c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba97950"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba97ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba97c70"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba97e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba96020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba961b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba96340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab070a60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab070a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab070de0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab06f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab06f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab06f340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab06f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab06f660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab06f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab06f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab06de20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab06de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab06c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab06c350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab06c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab06c670"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab06c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab06c990"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab06cb20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab06ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab0690a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab0690a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab069420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab0695b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab069740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab0698d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab069a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab069bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab069d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab068020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab0663f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab0663f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab066770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab066900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab066a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab066c20"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab066db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab065020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab0651b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab065340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab0636d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab0636d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab063a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab063be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab063d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab062020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab0621b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab062340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab0624d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab062660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab0609b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab0609b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab060d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab05f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab05f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab05f340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab05f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab05f660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab05f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab05f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab05de20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab05de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab05c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab05c350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab05c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab05c670"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab05c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab05c990"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab05cb20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab05ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab0590a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab0590a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab059420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab0595b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab059740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab0598d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab059a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab059bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab059d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab058020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7aba8eda0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7aba8eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba8d180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba8d310"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba8d4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba8d630"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba8d7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba8d950"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba8dae0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba8dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7aba8a440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7aba8a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba8a7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba8a950"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba8aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba8ac70"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba8ae00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba89020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba891b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7aba90a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7aba90a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba90da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba8f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba8f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba8f340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba8f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba8f660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba8f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba8f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7aba8c020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7aba8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba8c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba8c530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba8c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba8c850"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba8c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba8cb70"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba8cd00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7aba895d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7aba895d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba89950"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba89ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba89c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba89e00"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba87020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba871b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba87340"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7aba8fc10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7aba8fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba8e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba8e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba8e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba8e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba8e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba8e7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba8e980"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba8eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7aba8b2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7aba8b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba8b630"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba8b7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba8b950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba8bae0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba8bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba8be00"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba8a020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba8a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7aba87760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7aba87760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba87ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba87c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba87e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba86020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba86340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba864d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba86660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab005c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab005c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab0040a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab004230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab0043c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab004550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab0046e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab004870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab004a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab004b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab002e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab002e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab0011c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab001350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab0014e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab001670"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab001800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab001990"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab001b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab001cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaffe0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaffe0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaffe420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaffe5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaffe740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaffe8d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaffea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaffebf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaffed80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaffd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaffb3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaffb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaffb770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaffb900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaffba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaffbc20"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaffbdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaffa020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaffa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaffa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaff86d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaff86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaff8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaff8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaff8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaff7020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaff71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaff7340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaff74d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaff7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaff59b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaff59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaff5d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaff4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaff41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaff4340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaff44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaff4660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaff47f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaff4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaff2e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaff2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaff11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaff1350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaff14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaff1670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaff1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaff1990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaff1b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaff1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aafee0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aafee0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aafee420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aafee5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aafee740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aafee8d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aafeea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aafeebf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aafeed80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aafed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7aba7e020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7aba7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba7e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba7e530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba7e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba7e850"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba7e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba7eb70"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba7ed00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7aba7a5d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7aba7a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba7a950"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba7aae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba7ac70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba7ae00"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba79020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba791b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba79340"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7aba81d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7aba81d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba800e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba80270"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba80400"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba80590"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba80720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba808b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba80a40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba80bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7aba7d2b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7aba7d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba7d630"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba7d7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba7d950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba7dae0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba7dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba7de00"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba7b020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba7b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7aba79760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7aba79760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba79ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba79c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba79e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba78020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba781b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba78340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba784d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba78660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7aba80e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7aba80e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba7f210"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba7f3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba7f530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba7f6c0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba7f850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba7f9e0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba7fb70"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba7fd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7aba7b440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7aba7b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba7b7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba7b950"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba7bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba7bc70"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba7be00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba7a020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba7a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba7a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7aba788f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7aba788f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba78c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba78e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba77020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba771b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba77340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba774d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba77660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba777f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf9ac90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf9ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf990a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf99230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf993c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf99550"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf996e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf99870"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf99a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf99b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf97e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf97e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf961c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf96350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf964e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf96670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf96800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf96990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf96b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf96cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf930a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf930a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf93420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf935b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf93740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf938d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf93a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf93bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf93d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf903f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf903f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf90770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf90900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf90a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf90c20"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf90db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf8f020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf8f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf8f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf8d6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf8d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf8da50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf8dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf8dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf8c020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf8c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf8c340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf8c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf8c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf8a9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf8a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf8ad30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf89020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf891b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf89340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf894d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf89660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf897f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf89980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf87e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf87e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf861c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf86350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf864e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf86670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf86800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf86990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf86b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf86cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf830a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf830a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf83420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf835b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf83740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf838d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf83a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf83bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf83d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7aba6e440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7aba6e440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba6e7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba6e950"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba6eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba6ec70"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba6ee00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba6d020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba6d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba6d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7aba6b8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7aba6b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba6bc70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba6be00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba6a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba6a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba6a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba6a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba6a660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba6a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7aba71020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7aba71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba713a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba71530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba716c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba71850"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba719e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba71b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba71d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7aba6d5d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7aba6d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba6d950"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba6dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba6dc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba6de00"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba6c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba6c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba6c340"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba6c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7aba6aa80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7aba6aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba6ae00"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba69020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba691b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba69340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba694d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba69660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba697f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba69980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7aba6f2b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7aba6f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba6f630"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba6f7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba6f950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba6fae0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba6fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba6fe00"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba6e020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7aba6c760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7aba6c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba6cae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba6cc70"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba6ce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba6b020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba6b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba6b340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba6b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba6b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7aba69c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7aba69c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba68020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba681b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba68340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba684d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba68660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba687f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba68980"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba68b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf2fc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf2fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf2e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf2e230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf2e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf2e550"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf2e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf2e870"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf2ea00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf2eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf2ce20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf2ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf2b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf2b350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf2b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf2b670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf2b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf2b990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf2bb20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf2bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf280a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf280a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf28420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf285b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf28740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf288d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf28a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf28bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf28d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf253f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf253f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf25770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf25900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf25a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf25c20"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf25db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf24020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf241b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf24340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf226d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf226d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf22a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf22be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf22d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf21020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf211b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf21340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf214d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf21660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf1f9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf1f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf1fd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf1e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf1e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf1e340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf1e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf1e660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf1e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf1e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf1ce20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf1ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf1b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf1b350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf1b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf1b670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf1b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf1b990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf1bb20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf1bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaf180a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaf180a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaf18420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaf185b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaf18740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaf188d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaf18a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaf18bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaf18d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaf17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7aba5f760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7aba5f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba5fae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba5fc70"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba5fe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba5e020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba5e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba5e340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba5e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba5e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7aba5cc10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7aba5cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba5b020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba5b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba5b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba5b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba5b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba5b7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba5b980"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba5bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7aba613f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7aba613f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba61770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba61900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba61a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba61c20"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba61db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba60020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba601b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba60340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7aba5e8f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7aba5e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba5ec70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba5ee00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba5d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba5d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba5d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba5d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba5d660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba5d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7aba5bda0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7aba5bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba5a180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba5a310"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba5a4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba5a630"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba5a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba5a950"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba5aae0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba5ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7aba605d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7aba605d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba60950"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba60ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba60c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba60e00"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba5f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba5f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba5f340"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba5f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7aba5da80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7aba5da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba5de00"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba5c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba5c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba5c340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba5c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba5c660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba5c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba5c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7aba59020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7aba59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba593a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba59530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba596c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba59850"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba599e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba59b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba59d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaebbc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaebbc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaeba0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaeba230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaeba3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaeba550"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaeba6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaeba870"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaebaa00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaebab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaeb8e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaeb8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaeb71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaeb7350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaeb74e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaeb7670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaeb7800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaeb7990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaeb7b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaeb7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaeb40a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaeb40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaeb4420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaeb45b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaeb4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaeb48d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaeb4a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaeb4bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaeb4d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaeb3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaeb13f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaeb13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaeb1770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaeb1900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaeb1a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaeb1c20"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaeb1db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaeb0020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaeb01b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaeb0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaeae6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaeae6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaeaea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaeaebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaeaed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaead020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaead1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaead340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaead4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaead660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaeab9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaeab9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaeabd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaeaa020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaeaa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaeaa340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaeaa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaeaa660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaeaa7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaeaa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaea8e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaea8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaea71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaea7350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaea74e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaea7670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaea7800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaea7990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaea7b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaea7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaea40a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaea40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaea4420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaea45b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaea4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaea48d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaea4a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaea4bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaea4d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaea3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aba51a20" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aba51a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba51da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba3a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba3a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba3a340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba3a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba3a660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba3a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba3a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aba366d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aba366d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba36a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba36be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba36d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba35020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba35340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba354d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba35660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aba30160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aba30160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba304e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba30670"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba30800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba30990"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba30b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba30cb0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba30e40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aba2bc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aba2bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba2a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba2a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba2a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba2a550"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba2a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba2a870"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba2aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba2ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aba266d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aba266d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba26a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba26be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba26d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba25020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba251b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba25340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba254d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba25660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aba20160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aba20160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba204e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba20670"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba20800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba20990"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba20b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba20cb0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba20e40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aba1bc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aba1bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba1a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba1a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba1a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba1a550"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba1a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba1a870"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba1aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba1ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aba166d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aba166d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba16a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba16be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba16d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba15020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba151b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba15340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba154d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba15660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aba10160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aba10160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba104e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba10670"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba10800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba10990"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba10b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba10cb0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba10e40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aba0bc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aba0bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba0a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba0a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba0a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba0a550"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba0a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba0a870"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba0aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba0ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aba066d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aba066d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba06a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba06be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba06d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba05020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba05340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba054d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aba05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aba00160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aba00160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aba004e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aba00670"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aba00800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aba00990"/>
        <function-ref name="get" scoped="" ref="0x7fe7aba00b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aba00cb0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aba00e40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab9ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab9fcc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab9fcc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9fa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab9fa230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9fa3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab9fa550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab9fa6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9fa870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9faa00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab9fab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab9f66d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab9f66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9f6a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab9f6be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9f6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab9f5020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab9f51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9f5340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9f54d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab9f5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA" ref="0x7fe7ab9c48d0" loc="7:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA" scoped="" ref="0x7fe7ab9c48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9c4c50"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9c4de0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9bc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9bc1b0"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9bc340"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab9bc4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9bc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL" ref="0x7fe7ab9b1550" loc="18:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL" scoped="" ref="0x7fe7ab9b1550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9b18d0"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9b1a60"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9b1bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9b1d80"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9b0020"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab9b01b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9b0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD" ref="0x7fe7ab9bad20" loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD" scoped="" ref="0x7fe7ab9bad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9b90e0"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9b9270"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9b9400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9b9590"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9b9720"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab9b98b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9b9a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG" ref="0x7fe7ab9b5020" loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG" scoped="" ref="0x7fe7ab9b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9b53a0"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9b5530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9b56c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9b5850"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9b59e0"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab9b5b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9b5d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ" ref="0x7fe7ab9b31d0" loc="16:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ" scoped="" ref="0x7fe7ab9b31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9b3550"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9b36e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9b3870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9b3a00"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9b3b90"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab9b3d20"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB" ref="0x7fe7ab9bca00" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB" scoped="" ref="0x7fe7ab9bca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9bcd80"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9bb020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9bb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9bb340"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9bb4d0"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab9bb660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9bb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE" ref="0x7fe7ab9b9de0" loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE" scoped="" ref="0x7fe7ab9b9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9b8180"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9b8310"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9b84a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9b8630"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9b87c0"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab9b8950"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9b8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH" ref="0x7fe7ab9b4100" loc="15:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH" scoped="" ref="0x7fe7ab9b4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9b4480"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9b4610"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9b47a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9b4930"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9b4ac0"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab9b4c50"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9b4de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK" ref="0x7fe7ab9b23c0" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK" scoped="" ref="0x7fe7ab9b23c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9b2740"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9b28d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9b2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9b2bf0"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9b2d80"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab9b1020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9b11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC" ref="0x7fe7ab9bbb90" loc="9:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC" scoped="" ref="0x7fe7ab9bbb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9ba020"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9ba1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9ba340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9ba4d0"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9ba660"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab9ba7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9ba980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF" ref="0x7fe7ab9b8e80" loc="12:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF" scoped="" ref="0x7fe7ab9b8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9b6220"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9b63b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9b6540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9b66d0"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9b6860"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab9b69f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9b6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fe7ab9acaa0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortAP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab9acaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9ace20"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab998020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9981b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab998340"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9984d0"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab998660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9987f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fe7ab994e80" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortBP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab994e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab993220"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9933b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab993540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9936d0"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab993860"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab9939f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab993b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fe7ab98f390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab98f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab98f710"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab98f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab98fa30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab98fbc0"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab98fd50"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab98e020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab98e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fe7ab98a910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab98a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab98ac90"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab98ae20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab989020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab9891b0"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab989340"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab9894d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab989660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fe7ab985cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortEP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab985cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab9840a0"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab984230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab9843c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab984550"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9846e0"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab984870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab984a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fe7ab980390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortFP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab980390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab980710"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9808a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab980a30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab980bc0"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab980d50"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab97f020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab97f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fe7ab97b910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortGP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab97b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab97bc90"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab97be20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab97a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab97a1b0"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab97a340"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab97a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab97a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fe7ab977780" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortHP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab977780"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab977b00"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab977c90"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab977e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab975020"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9751b0"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab975340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9754d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fe7ab9726c0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortJP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab9726c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab972a40"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab972bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab972d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab971020"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9711b0"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab971340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fe7ab96d6c0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortKP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab96d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab96da40"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab96dbd0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab96dd60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab96c020"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab96c1b0"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab96c340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab96c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fe7ab9696c0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortLP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fe7ab9696c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab969a40"/>
        <function-ref name="clear" scoped="" ref="0x7fe7ab969bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab969d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab967020"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab9671b0"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab967340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab9674d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fe7ab95c290" loc="40:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fe7ab95c290"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7cd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe7abe7a180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fe7ab95b0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7fe7ab94a9e0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7fe7ab94a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab94ad60"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab949020"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab9491b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab949340"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab9494d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab949660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7fe7ab94f9e0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7fe7ab94f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab94fd60"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab94e020"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab94e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab94e340"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab94e4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab94e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7fe7ab94c9e0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7fe7ab94c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab94cd60"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab94b020"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab94b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab94b340"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab94b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab94b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7fe7ab9499e0" loc="52:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7fe7ab9499e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab949d60"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab948020"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab9481b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab948340"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab9484d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab948660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7fe7ab94e9e0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7fe7ab94e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab94ed60"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab94d020"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab94d1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab94d340"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab94d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab94d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7fe7ab94b9e0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7fe7ab94b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab94bd60"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab94a020"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab94a1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab94a340"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab94a4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab94a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7fe7abc239b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7fe7abc239b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7abc23d30"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab94f020"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab94f1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab94f340"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab94f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab94f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7fe7ab94d9e0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7fe7ab94d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab94dd60"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab94c020"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab94c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab94c340"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab94c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab94c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7fe7ab9417a0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7fe7ab9417a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab941b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7fe7ab944020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7fe7ab944020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab9443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7fe7ab9437a0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7fe7ab9437a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab943b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7fe7ab940020" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7fe7ab940020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab9403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7fe7ab9447a0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7fe7ab9447a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab944b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7fe7ab941020" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7fe7ab941020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab9413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7fe7ab942860" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7fe7ab942860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab942be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7fe7ab943020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7fe7ab943020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab9433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fe7ab923060" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fe7ab923060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9233e0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab923570"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab923700"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab923890"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab923a20"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab923bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fe7ab923e80" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab923e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab90e220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fe7ab90cda0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fe7ab90cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab90b180"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab90b310"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab90b4a0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab90b630"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab90b7c0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab90b950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fe7ab90bc20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab90bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab90a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fe7ab907c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fe7ab907c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9060a0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab906230"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab9063c0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab906550"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab9066e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab906870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fe7ab906b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab906b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab905020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fe7ab903c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fe7ab903c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab9020a0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab902230"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab9023c0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab902550"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab9026e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab902870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fe7ab902b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab902b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab901020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fe7ab8ffc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fe7ab8ffc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab8fd0a0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab8fd230"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab8fd3c0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab8fd550"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab8fd6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab8fd870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fe7ab8fdb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab8fdb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab8fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fe7ab8fac90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fe7ab8fac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab8f90a0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab8f9230"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab8f93c0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab8f9550"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab8f96e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab8f9870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fe7ab8f9b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab8f9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab8f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fe7ab8f6c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fe7ab8f6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab8f50a0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab8f5230"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab8f53c0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab8f5550"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab8f56e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab8f5870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fe7ab8f5b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab8f5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab8f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fe7ab8f1c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fe7ab8f1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fe7ab8f00a0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab8f0230"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab8f03c0"/>
        <function-ref name="edge" scoped="" ref="0x7fe7ab8f0550"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab8f06e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab8f0870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fe7ab8f0b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fe7ab8f0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fe7ab8ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe7ab8e49f0" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe7ab8e49f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7ab8e4d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7ab6e2020"/>
        <function-ref name="request" scoped="" ref="0x7fe7ab6e21b0"/>
        <function-ref name="granted" scoped="" ref="0x7fe7ab6e2340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7ab6e24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fe7ab6e2880" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fe7ab6e2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fe7abce0830"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fe7abce0af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7ab6e1500"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe7ab6df9b0"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab6e0150"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7ab6e0d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe7ab8d7530" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe7ab8d7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7ab8d78b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7ab8d7a40"/>
        <function-ref name="request" scoped="" ref="0x7fe7ab8d7bd0"/>
        <function-ref name="granted" scoped="" ref="0x7fe7ab8d7d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7ab8d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fe7ab8d6a20" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fe7ab8d6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fe7abce0830"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fe7abce0af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7ab8d56b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe7ab8d2c30"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab8d3330"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7ab8d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe7ab848bf0" loc="92:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe7ab848bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe7ab847020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7ab8471b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe7ab846930" loc="96:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7ab846930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe7ab846cd0"/>
        <function-ref name="configure" scoped="" ref="0x7fe7ab846e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fe7ab847400" loc="93:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7ab847400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7ab847780"/>
        <function-ref name="requested" scoped="" ref="0x7fe7ab847910"/>
        <function-ref name="granted" scoped="" ref="0x7fe7ab847aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7ab847c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7ab847dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe7ab849e60" loc="91:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe7ab849e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7ab848230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7ab8483c0"/>
        <function-ref name="request" scoped="" ref="0x7fe7ab848550"/>
        <function-ref name="granted" scoped="" ref="0x7fe7ab8486e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7ab848870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe7ab846060" loc="94:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7ab846060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe7ab8463e0"/>
        <function-ref name="userId" scoped="" ref="0x7fe7ab846570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7aad3f810" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7aad3f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7aad3fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fe7aad3fe20" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fe7aad3fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe7aad3e1c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe7aad3e350"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe7aad3e4e0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe7aad3e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe7aad3cd80" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe7aad3cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe7aad3a180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7aad3a310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe7aad39b60" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7aad39b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe7aad38020"/>
        <function-ref name="configure" scoped="" ref="0x7fe7aad381b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fe7aad38440" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fe7aad38440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe7aad387c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe7aad38950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe7aad38ae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe7aad38c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fe7aad3a560" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7aad3a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7aad3a8e0"/>
        <function-ref name="requested" scoped="" ref="0x7fe7aad3aa70"/>
        <function-ref name="granted" scoped="" ref="0x7fe7aad3ac00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7aad3ad90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7aad39020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe7aad37020" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe7aad37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe7aad373a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe7aad37530"/>
        <function-ref name="led1On" scoped="" ref="0x7fe7aad376c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe7aad37850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe7aad379e0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aad37b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe7aad37d00"/>
        <function-ref name="led0On" scoped="" ref="0x7fe7aad364d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aad361b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe7aad36020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe7aad36340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe7aad3c020" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe7aad3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7aad3c3c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7aad3c550"/>
        <function-ref name="request" scoped="" ref="0x7fe7aad3c6e0"/>
        <function-ref name="granted" scoped="" ref="0x7fe7aad3c870"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7aad3ca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe7aad39270" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7aad39270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe7aad395f0"/>
        <function-ref name="userId" scoped="" ref="0x7fe7aad39780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fe7aad367a0" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fe7aad367a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7aad36b20"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7aad36cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fe7ab842400" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe7ab842400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fe7ab842780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fe7ab8429d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7ab8429d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7ab842d50"/>
        <function-ref name="requested" scoped="" ref="0x7fe7ab833020"/>
        <function-ref name="granted" scoped="" ref="0x7fe7ab8331b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7ab833340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7ab8334d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fe7ab843c40" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7ab843c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7ab842020"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab8421b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fe7ab833720" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7ab833720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe7ab833aa0"/>
        <function-ref name="userId" scoped="" ref="0x7fe7ab833c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7fe7ab7efcd0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7fe7ab7efcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7fe7ab7ee0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fe7ab7f2020" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fe7ab7f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fe7abce0830"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fe7abce0af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7ab7f2c50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe7ab7ef150"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab7f18c0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7ab7f0510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe7ab7ee330" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe7ab7ee330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe7ab7ee6b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe7ab7ee840"/>
        <function-ref name="led1On" scoped="" ref="0x7fe7ab7ee9d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe7ab7eeb60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe7ab7eecf0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab7eee80"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe7ab7ec030"/>
        <function-ref name="led2On" scoped="" ref="0x7fe7ab7ec670"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab7ec350"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe7ab7ec1c0"/>
        <function-ref name="led0On" scoped="" ref="0x7fe7ab7ec4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe7ab830470" loc="41:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe7ab830470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7ab830810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7ab8309a0"/>
        <function-ref name="request" scoped="" ref="0x7fe7ab830b30"/>
        <function-ref name="granted" scoped="" ref="0x7fe7ab830cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7ab830e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fe7ab7f9370" loc="42:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fe7ab7f9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fe7abce0830"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fe7abce0af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7ab7f8020"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe7ab7f5510"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab7f8c50"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7ab7f68c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7fe7ab7f3210" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7fe7ab7f3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7ab7f35b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7ab7f3740"/>
        <function-ref name="request" scoped="" ref="0x7fe7ab7f38d0"/>
        <function-ref name="granted" scoped="" ref="0x7fe7ab7f3a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7ab7f3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7fe7ab77a7f0" loc="79:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7fe7ab77a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7fe7ab77ab70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7fe7ab77ae40" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fe7ab77ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fe7ab7791e0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fe7ab779370"/>
        <function-ref name="setStart" scoped="" ref="0x7fe7ab779500"/>
        <function-ref name="status" scoped="" ref="0x7fe7ab779690"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fe7ab779820"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fe7ab7799b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fe7ab779b40"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab779cd0"/>
        <function-ref name="init" scoped="" ref="0x7fe7ab779e60"/>
        <function-ref name="enableAck" scoped="" ref="0x7fe7ab778020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fe7ab7781b0"/>
        <function-ref name="hasStart" scoped="" ref="0x7fe7ab778340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe7ab7784d0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fe7ab778760"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab7788f0"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab778a80"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fe7ab778c10"/>
        <function-ref name="off" scoped="" ref="0x7fe7ab778da0"/>
        <function-ref name="setStop" scoped="" ref="0x7fe7ab777020"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fe7ab7771b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fe7ab777340"/>
        <function-ref name="hasStop" scoped="" ref="0x7fe7ab7774d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7fe7ab7777a0" loc="82:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7fe7ab7777a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe7ab777b20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe7ab777cb0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe7ab777e40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe7ab776020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe7ab7761b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab776340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe7ab7764d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe7ab776b10"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab7767f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe7ab776660"/>
        <function-ref name="led0On" scoped="" ref="0x7fe7ab776980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7fe7ab776de0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7fe7ab776de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe7ab775180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe7ab775310"/>
        <function-ref name="led1On" scoped="" ref="0x7fe7ab7754a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe7ab775630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe7ab7757c0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab775950"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe7ab775ae0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe7ab7741b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab775e00"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe7ab775c70"/>
        <function-ref name="led0On" scoped="" ref="0x7fe7ab774020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fe7ab774480" loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fe7ab774480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7ab774800"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7ab774990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fe7ab77f1e0" loc="77:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7ab77f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7ab77f560"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab77f6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fe7ab77faa0" loc="78:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fe7ab77faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fe7abce0830"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fe7abce0af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7ab77e6f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fe7ab77bc30"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab77d330"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7ab77b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7fe7ab771ab0" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fe7ab771ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fe7ab771e30"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fe7ab76e020"/>
        <function-ref name="setStart" scoped="" ref="0x7fe7ab76e1b0"/>
        <function-ref name="status" scoped="" ref="0x7fe7ab76e340"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fe7ab76e4d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fe7ab76e660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fe7ab76e7f0"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab76e980"/>
        <function-ref name="init" scoped="" ref="0x7fe7ab76eb10"/>
        <function-ref name="enableAck" scoped="" ref="0x7fe7ab76eca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fe7ab76ee30"/>
        <function-ref name="hasStart" scoped="" ref="0x7fe7ab76d020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe7ab76d1b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fe7ab76d440"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab76d5d0"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab76d760"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fe7ab76d8f0"/>
        <function-ref name="off" scoped="" ref="0x7fe7ab76da80"/>
        <function-ref name="setStop" scoped="" ref="0x7fe7ab76dc10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fe7ab76dda0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fe7ab76c020"/>
        <function-ref name="hasStop" scoped="" ref="0x7fe7ab76c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7fe7ab769440" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fe7ab769440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fe7ab7697c0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fe7ab769950"/>
        <function-ref name="setStart" scoped="" ref="0x7fe7ab769ae0"/>
        <function-ref name="status" scoped="" ref="0x7fe7ab769c70"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fe7ab769e00"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fe7ab768020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fe7ab7681b0"/>
        <function-ref name="read" scoped="" ref="0x7fe7ab768340"/>
        <function-ref name="init" scoped="" ref="0x7fe7ab7684d0"/>
        <function-ref name="enableAck" scoped="" ref="0x7fe7ab768660"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fe7ab7687f0"/>
        <function-ref name="hasStart" scoped="" ref="0x7fe7ab768980"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fe7ab768b10"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fe7ab768da0"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab767020"/>
        <function-ref name="write" scoped="" ref="0x7fe7ab7671b0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fe7ab767340"/>
        <function-ref name="off" scoped="" ref="0x7fe7ab7674d0"/>
        <function-ref name="setStop" scoped="" ref="0x7fe7ab767660"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fe7ab7677f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fe7ab767980"/>
        <function-ref name="hasStop" scoped="" ref="0x7fe7ab767b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7fe7ab765020" loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7fe7ab765020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab7653a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab765530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab7656c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab765850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab7659e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab765b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab765d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab764020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7fe7ab764360" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7fe7ab764360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab7646e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab764870"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab764a00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab764b90"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab764d20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab763020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab7631b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab763340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fe7ab72e4a0" loc="46:../tinyos_ws18/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe7ab72e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe7ab72e820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe7ab72e9b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe7ab72eb40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe7ab72ecd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe7ab72ee60"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab72b020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe7ab72b1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe7ab72b7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab72b340"/>
        <function-ref name="led0On" scoped="" ref="0x7fe7ab72b4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fe7ab72b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fe7ab726550" loc="50:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fe7ab726550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab7268d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab726a60"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab726bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab726d80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab725020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab7251b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab725340"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab7254d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7ab72a7c0" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7ab72a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7ab72ab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fe7ab7257f0" loc="51:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fe7ab7257f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab725b70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab725d00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab724020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab7241b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab724340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab7244d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab724660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab7247f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fe7ab72adc0" loc="47:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe7ab72adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe7ab727180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe7ab727310"/>
        <function-ref name="led1On" scoped="" ref="0x7fe7ab7274a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe7ab727630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe7ab7277c0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab727950"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe7ab727ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe7ab7261b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab727c70"/>
        <function-ref name="led0On" scoped="" ref="0x7fe7ab727e00"/>
        <function-ref name="led2On" scoped="" ref="0x7fe7ab726020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fe7ab724b10" loc="52:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fe7ab724b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab723020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab7231b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab723340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab7234d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab723660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab7237f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab723980"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab723b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fe7ab7071d0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fe7ab7071d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab707550"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab7076e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab707870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab707a00"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab707b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab707d20"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab706020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab7061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fe7ab706510" loc="45:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fe7ab706510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab706890"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab706a20"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab706bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab706d40"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab705020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab7051b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab705340"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab7054d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fe7ab704ab0" loc="48:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7ab704ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7ab704e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fe7ab705830" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fe7ab705830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab705bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab705d40"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab704020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab7041b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab704340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab7044d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab704660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab7047f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7ab6fc340" loc="46:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7ab6fc340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7ab6fc6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fe7ab6fc980" loc="47:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe7ab6fc980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe7ab6fcd00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe7ab6fb020"/>
        <function-ref name="led1On" scoped="" ref="0x7fe7ab6fb1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe7ab6fb340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe7ab6fb4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab6fb660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe7ab6fb7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe7ab6fbe30"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab6fb980"/>
        <function-ref name="led0On" scoped="" ref="0x7fe7ab6fbb10"/>
        <function-ref name="led2On" scoped="" ref="0x7fe7ab6fbca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe7ab51c140" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="FMClickC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe7ab51c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7ab519630"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab51bb70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe7ab51a920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe7ab51a4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe7ab517020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe7ab519ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7ab51a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe7ab51cd30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe7ab519020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe7ab51b220"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab51b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fe7ab6d1020" loc="49:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fe7ab6d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7ab6ce630"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab6d0a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe7ab6cf920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe7ab6cf4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe7ab6cc020"/>
        <function-ref name="gett0" scoped="" ref="0x7fe7ab6ceab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7ab6cf020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe7ab6d1c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe7ab6ce020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe7ab6d0110"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab6d05e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fe7ab6c9c30" loc="46:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fe7ab6c9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7ab6c4110"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab6c66a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe7ab6c54a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe7ab6c5020"/>
        <function-ref name="getdt" scoped="" ref="0x7fe7ab6c4a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fe7ab6c4590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7ab6c6b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe7ab6c8860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe7ab6c5ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe7ab6c8d30"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab6c6220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe7ab6bf500" loc="47:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fe7ab6bf500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7ab6c1170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7ab6cce60" loc="45:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7ab6cce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7ab6c9210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7fe7ab6b0020" loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7fe7ab6b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7ab6b0e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe7ab6af800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe7ab6af340"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7ab6afcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7ab6c0c80" loc="27:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7ab6c0c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7ab6bc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7fe7ab6b4960" loc="28:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7fe7ab6b4960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7ab6b21b0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab6ba1b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe7ab6bab30"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7ab6ba670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe7ab6b2670"/>
        <function-ref name="start" scoped="" ref="0x7fe7ab6bb7c0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab6bbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe7ab5bb4b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fe7ab5bb4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7ab5b8db0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab5bada0"/>
        <function-ref name="startAt" scoped="" ref="0x7fe7ab5b8760"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7ab5b82a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe7ab5b72a0"/>
        <function-ref name="start" scoped="" ref="0x7fe7ab5ba3d0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab5ba8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7ab5bcba0" loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7ab5bcba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fe7abf33020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fe7abf33020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7ab5bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe7ab5b78d0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe7ab5b78d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7ab5b6780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe7ab5b5150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe7ab5b6c40"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7ab5b5610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7fe7aac98190" loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fe7aac98190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fe7aac98510"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fe7aac986a0"/>
        <function-ref name="getControlA" scoped="" ref="0x7fe7aac98830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fe7aac989c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7fe7aac98b50"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fe7aac98ce0"/>
        <function-ref name="getControlB" scoped="" ref="0x7fe7aac98e70"/>
        <function-ref name="setControlA" scoped="" ref="0x7fe7aac97030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fe7aaca59c0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fe7aaca59c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7aaca1260"/>
        <function-ref name="fired" scoped="" ref="0x7fe7aaca2220"/>
        <function-ref name="startAt" scoped="" ref="0x7fe7aaca2ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7aaca26e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe7aaca1720"/>
        <function-ref name="start" scoped="" ref="0x7fe7aaca3810"/>
        <function-ref name="stop" scoped="" ref="0x7fe7aaca3d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7aaca51b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7aaca51b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7aaca5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fe7aaca1d50" loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe7aaca1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7aaca0ba0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe7aac9f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe7aac9f090"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7aac9fa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x7fe7aac94780" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7fe7aac94780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7fe7aac94b00"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7fe7aac94c90"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fe7aac94e20"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fe7aac92020"/>
        <function-ref name="countBusy" scoped="" ref="0x7fe7aac921b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fe7aac92340"/>
        <function-ref name="getAssr" scoped="" ref="0x7fe7aac924d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7fe7aac92660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7fe7aac973e0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fe7aac973e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe7aac95e60"/>
        <function-ref name="fired" scoped="" ref="0x7fe7aac96a60"/>
        <function-ref name="get" scoped="" ref="0x7fe7aac96090"/>
        <function-ref name="reset" scoped="" ref="0x7fe7aac95020"/>
        <function-ref name="isOn" scoped="" ref="0x7fe7aac94350"/>
        <function-ref name="set" scoped="" ref="0x7fe7aac96550"/>
        <function-ref name="start" scoped="" ref="0x7fe7aac954e0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7aac959a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fe7aac9d020" loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe7aac9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe7aac9a350"/>
        <function-ref name="test" scoped="" ref="0x7fe7aac9b9a0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aac9dc50"/>
        <function-ref name="setScale" scoped="" ref="0x7fe7aac9a810"/>
        <function-ref name="getScale" scoped="" ref="0x7fe7aac9ad20"/>
        <function-ref name="reset" scoped="" ref="0x7fe7aac9cb20"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7aac9c660"/>
        <function-ref name="isOn" scoped="" ref="0x7fe7aac9be60"/>
        <function-ref name="set" scoped="" ref="0x7fe7aac9c150"/>
        <function-ref name="start" scoped="" ref="0x7fe7aac9b020"/>
        <function-ref name="stop" scoped="" ref="0x7fe7aac9b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fe7ab62dc10" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fe7ab62dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fe7ab62c020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fe7ab62c1b0"/>
        <function-ref name="getControlA" scoped="" ref="0x7fe7ab62c340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fe7ab62c4d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7fe7ab62c660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fe7ab62c7f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7fe7ab62c980"/>
        <function-ref name="setControlA" scoped="" ref="0x7fe7ab62cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7fe7ab627570" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7fe7ab627570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7fe7ab6278f0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7fe7ab627a80"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fe7ab627c10"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fe7ab627da0"/>
        <function-ref name="countBusy" scoped="" ref="0x7fe7ab626020"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fe7ab6261b0"/>
        <function-ref name="getAssr" scoped="" ref="0x7fe7ab626340"/>
        <function-ref name="setAssr" scoped="" ref="0x7fe7ab6264d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe7ab62b060" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fe7ab62b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe7ab628a10"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab62a6c0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab62bc90"/>
        <function-ref name="reset" scoped="" ref="0x7fe7ab62ab80"/>
        <function-ref name="isOn" scoped="" ref="0x7fe7ab627020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab62a1b0"/>
        <function-ref name="start" scoped="" ref="0x7fe7ab628090"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab628550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe7ab6348f0" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe7ab6348f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe7ab62ecd0"/>
        <function-ref name="test" scoped="" ref="0x7fe7ab62e350"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab6315a0"/>
        <function-ref name="setScale" scoped="" ref="0x7fe7ab62d1b0"/>
        <function-ref name="getScale" scoped="" ref="0x7fe7ab62d6c0"/>
        <function-ref name="reset" scoped="" ref="0x7fe7ab6304e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7ab630020"/>
        <function-ref name="isOn" scoped="" ref="0x7fe7ab62e810"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab631a60"/>
        <function-ref name="start" scoped="" ref="0x7fe7ab6309a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab630e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fe7ab61edb0" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fe7ab61edb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fe7ab61d180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fe7ab61d310"/>
        <function-ref name="getControlA" scoped="" ref="0x7fe7ab61d4a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fe7ab61d630"/>
        <function-ref name="setControlB" scoped="" ref="0x7fe7ab61d7c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fe7ab61d950"/>
        <function-ref name="getControlB" scoped="" ref="0x7fe7ab61dae0"/>
        <function-ref name="setControlA" scoped="" ref="0x7fe7ab61dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fe7ab6184c0" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fe7ab6184c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fe7ab618840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7fe7ab618bf0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7fe7ab618bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7fe7ab617020"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7fe7ab6171b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fe7ab617340"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fe7ab6174d0"/>
        <function-ref name="countBusy" scoped="" ref="0x7fe7ab617660"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fe7ab6177f0"/>
        <function-ref name="getAssr" scoped="" ref="0x7fe7ab617980"/>
        <function-ref name="setAssr" scoped="" ref="0x7fe7ab617b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fe7ab61c1a0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fe7ab61c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe7ab619b30"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab61a7f0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab61cdd0"/>
        <function-ref name="reset" scoped="" ref="0x7fe7ab61acb0"/>
        <function-ref name="isOn" scoped="" ref="0x7fe7ab618020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab61a2e0"/>
        <function-ref name="start" scoped="" ref="0x7fe7ab6191b0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab619670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe7ab623a10" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe7ab623a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fe7ab61fe60"/>
        <function-ref name="test" scoped="" ref="0x7fe7ab61f4e0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab6226b0"/>
        <function-ref name="setScale" scoped="" ref="0x7fe7ab61e350"/>
        <function-ref name="getScale" scoped="" ref="0x7fe7ab61e860"/>
        <function-ref name="reset" scoped="" ref="0x7fe7ab621590"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7ab6210d0"/>
        <function-ref name="isOn" scoped="" ref="0x7fe7ab61f9a0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab622b70"/>
        <function-ref name="start" scoped="" ref="0x7fe7ab621a50"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab61f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fe7ab582020" loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7fe7ab582020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7ab5823a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7ab582530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fe7ab587cd0" loc="49:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fe7ab587cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7ab583670"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab584550"/>
        <function-ref name="startAt" scoped="" ref="0x7fe7ab583020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7ab584a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fe7ab583b30"/>
        <function-ref name="start" scoped="" ref="0x7fe7ab585b60"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab584090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe7ab58c830" loc="48:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe7ab58c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7ab588cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab589300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe7ab5880d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe7ab589c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fe7ab587660"/>
        <function-ref name="gett0" scoped="" ref="0x7fe7ab5871e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7ab589780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe7ab58b480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe7ab5886e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe7ab58b950"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab58be20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fe7ab532a00" loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7fe7ab532a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7ab532d80"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7ab530020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fe7ab537640" loc="49:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7fe7ab537640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7ab533c40"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab5341e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe7ab533020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe7ab534ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe7ab532590"/>
        <function-ref name="gett0" scoped="" ref="0x7fe7ab532110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7ab534660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe7ab536390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe7ab533630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe7ab536860"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab536d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe7ab53d150" loc="48:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe7ab53d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7ab538700"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab53bc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe7ab53aa50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe7ab53a5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7fe7ab537090"/>
        <function-ref name="gett0" scoped="" ref="0x7fe7ab538ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7ab53a110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe7ab53dd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe7ab5380d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe7ab53b2a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab53b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fe7ab52e790" loc="48:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fe7ab52e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7ab52d3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fe7ab52da60" loc="49:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fe7ab52da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fe7ab523890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fe7ab522260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fe7ab523d50"/>
        <function-ref name="overflow" scoped="" ref="0x7fe7ab522720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fe7ab4d8020" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fe7ab4d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4d87a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4d8930"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4d8ac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4d8c50"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4d8de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4d7020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4d71b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4d7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fe7ab4f5800" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fe7ab4f5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4f5b80"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4f5d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4f4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4f41b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4f4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4f44d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4f4660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4f47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fe7ab4e9670" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fe7ab4e9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4e99f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4e9b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4e9d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4e8020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4e81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4e8340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4e84d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fe7ab4de020" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fe7ab4de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4de3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4de530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4de6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4de850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4de9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4deb70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4ded00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7fe7ab4d2350" loc="108:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7fe7ab4d2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4d26d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4d2860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4d29f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4d2b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4d2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4d1020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4d11b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH2" ref="0x7fe7ab4cfcb0" loc="112:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH2" scoped="" ref="0x7fe7ab4cfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4ce0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4ce230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4ce3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4ce550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4ce6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4ce870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4cea00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4ceb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH7" ref="0x7fe7ab4c9cb0" loc="117:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH7" scoped="" ref="0x7fe7ab4c9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4c70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4c7230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4c73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4c7550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4c76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4c7870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4c7a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4c7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ6" ref="0x7fe7ab4bf350" loc="125:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ6" scoped="" ref="0x7fe7ab4bf350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4bf6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4bf860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4bf9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4bfb80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4bfd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4be020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4be1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4be340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK0" ref="0x7fe7ab4bd990" loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK0" scoped="" ref="0x7fe7ab4bd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4bdd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4bc020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4bc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4bc340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4bc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4bc660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4bc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4bc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL2" ref="0x7fe7ab4b1990" loc="139:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL2" scoped="" ref="0x7fe7ab4b1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4b1d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4b0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4b01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4b0340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4b04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4b0660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4b07f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4b0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fe7ab50d990" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fe7ab50d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab50dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab50c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab50c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab50c340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab50c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab50c660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab50c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab50c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fe7ab4e1990" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fe7ab4e1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4e1d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4e0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4e01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4e0340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4e04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4e0660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4e07f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4e0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fe7ab50a020" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fe7ab50a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab50a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab50a530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab50a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab50a850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab50a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab50ab70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab50ad00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab509020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fe7ab4fd020" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fe7ab4fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4fd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4fd530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4fd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4fd850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4fd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4fdb70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4fdd00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fe7ab4f1060" loc="80:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fe7ab4f1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4f13e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4f1570"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4f1700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4f1890"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4f1a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4f1bb0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4f1d40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fe7ab4e4020" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fe7ab4e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4e43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4e4530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4e46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4e4850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4e49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4e4b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4e4d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fe7ab513b20" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fe7ab513b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab512020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab5121b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab512340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab5124d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab512660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab5127f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab512980"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab512b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fe7ab507990" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fe7ab507990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab507d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab506020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab5061b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab506340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab5064d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab506660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab5067f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab506980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fe7ab4fa990" loc="72:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fe7ab4fa990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4fad10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4f9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4f91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4f9340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4f94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4f9660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4f97f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4f9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fe7ab4ee990" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fe7ab4ee990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4eed10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4ed020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4ed1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4ed340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4ed4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4ed660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4ed7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4ed980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fe7ab4db990" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fe7ab4db990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4dbd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4da020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4da1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4da340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4da4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4da660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4da7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4da980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fe7ab4d5cb0" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fe7ab4d5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4d40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4d4230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4d43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4d4550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4d46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4d4870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4d4a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4d4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH0" ref="0x7fe7ab4d1670" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH0" scoped="" ref="0x7fe7ab4d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4d19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4d1b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4d1d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4d0020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4d01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4d0340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4d04d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fe7ab4eb020" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fe7ab4eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4eb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4eb530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4eb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4eb850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4eb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4ebb70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4ebd00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH5" ref="0x7fe7ab4cb670" loc="115:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH5" scoped="" ref="0x7fe7ab4cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4cb9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4cbb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4cbd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4ca020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4ca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4ca340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4ca4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ1" ref="0x7fe7ab4c5350" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ1" scoped="" ref="0x7fe7ab4c5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4c56d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4c5860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4c59f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4c5b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4c5d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4c4020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4c41b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4c4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ4" ref="0x7fe7ab4c2cb0" loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ4" scoped="" ref="0x7fe7ab4c2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4c10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4c1230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4c13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4c1550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4c16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4c1870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4c1a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4c1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK3" ref="0x7fe7ab4b9350" loc="131:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK3" scoped="" ref="0x7fe7ab4b9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4b96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4b9860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4b99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4b9b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4b9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4b8020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4b81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4b8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK6" ref="0x7fe7ab4b6cb0" loc="134:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK6" scoped="" ref="0x7fe7ab4b6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4b50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4b5230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4b53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4b5550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4b56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4b5870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4b5a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4b5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL0" ref="0x7fe7ab4b3350" loc="137:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL0" scoped="" ref="0x7fe7ab4b3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4b36d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4b3860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4b39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4b3b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4b3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4b2020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4b21b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4b2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL5" ref="0x7fe7ab4ad350" loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL5" scoped="" ref="0x7fe7ab4ad350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4ad6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4ad860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4ad9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4adb80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4add10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4ac020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4ac1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4ac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fe7ab50f350" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fe7ab50f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab50f6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab50f860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab50f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab50fb80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab50fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab50e020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab50e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab50e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fe7ab503350" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fe7ab503350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab5036d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab503860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab5039f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab503b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab503d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab502020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab5021b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab502340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fe7ab4d7670" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fe7ab4d7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4d79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4d7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4d7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4d6020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4d61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4d6340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4d64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fe7ab500990" loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fe7ab500990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab500d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4ff020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4ff1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4ff340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4ff4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4ff660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4ff7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4ff980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fe7ab4f4b20" loc="78:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fe7ab4f4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4f3020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4f31b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4f3340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4f34d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4f3660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4f37f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4f3980"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4f3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fe7ab4e8990" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fe7ab4e8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4e8d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4e7020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4e71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4e7340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4e74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4e7660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4e77f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4e7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fe7ab4dd350" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fe7ab4dd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4dd6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4dd860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4dd9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4ddb80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4ddd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4dc020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4dc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4dc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH3" ref="0x7fe7ab4cd020" loc="113:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH3" scoped="" ref="0x7fe7ab4cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4cd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4cd530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4cd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4cd850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4cd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4cdb70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4cdd00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ7" ref="0x7fe7ab4be670" loc="126:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ7" scoped="" ref="0x7fe7ab4be670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4be9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4beb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4bed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4bd020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4bd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4bd340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4bd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4bd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK1" ref="0x7fe7ab4bccb0" loc="129:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK1" scoped="" ref="0x7fe7ab4bccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4bb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4bb230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4bb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4bb550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4bb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4bb870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4bba00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4bbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL3" ref="0x7fe7ab4b0cb0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL3" scoped="" ref="0x7fe7ab4b0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4af0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4af230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4af3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4af550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4af6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4af870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4afa00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4afb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ2" ref="0x7fe7ab4c4670" loc="121:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ2" scoped="" ref="0x7fe7ab4c4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4c49f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4c4b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4c4d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4c3020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4c31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4c3340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4c34d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4c3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fe7ab50ccb0" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fe7ab50ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab50b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab50b230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab50b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab50b550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab50b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab50b870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab50ba00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab50bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK4" ref="0x7fe7ab4b8670" loc="132:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK4" scoped="" ref="0x7fe7ab4b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4b89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4b8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4b8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4b7020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4b71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4b7340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4b74d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4b7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL6" ref="0x7fe7ab4ac670" loc="143:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL6" scoped="" ref="0x7fe7ab4ac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4ac9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4acb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4acd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4aa020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4aa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4aa340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4aa4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4aa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fe7ab509350" loc="59:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fe7ab509350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab5096d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab509860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab5099f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab509b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab509d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab508020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab5081b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab508340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fe7ab4fc350" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fe7ab4fc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4fc6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4fc860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4fc9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4fcb80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4fcd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4fb020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4fb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4fb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fe7ab4f0350" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fe7ab4f0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4f06d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4f0860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4f09f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4f0b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4f0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4ef020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4ef1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4ef340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fe7ab4e3350" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fe7ab4e3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4e36d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4e3860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4e39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4e3b80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4e3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4e2020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4e21b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fe7ab512e40" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fe7ab512e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab5111e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab511370"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab511500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab511690"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab511820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab5119b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab511b40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab511cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fe7ab506cb0" loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fe7ab506cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab505180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab505310"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab5054a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab505630"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab5057c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab505950"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab505ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab505c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fe7ab4f9cb0" loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fe7ab4f9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4f80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4f8230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4f83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4f8550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4f86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4f8870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4f8a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4f8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fe7ab4dacb0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fe7ab4dacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4d90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4d9230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4d93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4d9550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4d96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4d9870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4d9a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4d9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH1" ref="0x7fe7ab4d0990" loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH1" scoped="" ref="0x7fe7ab4d0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4d0d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4cf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4cf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4cf340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4cf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4cf660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4cf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4cf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fe7ab4f6350" loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fe7ab4f6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4f68d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4f6a60"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4f6bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4f6d80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4f5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4f51b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4f5340"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4f54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fe7ab4ea350" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fe7ab4ea350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4ea6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4ea860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4ea9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4eab80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4ead10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4e9020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4e91b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4e9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fe7ab4e0cb0" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fe7ab4e0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4df0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4df230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4df3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4df550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4df6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4df870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4dfa00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4dfb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fe7ab4d3020" loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fe7ab4d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4d33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4d3530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4d36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4d3850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4d39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4d3b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4d3d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH6" ref="0x7fe7ab4ca990" loc="116:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH6" scoped="" ref="0x7fe7ab4ca990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4cad10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4c9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4c91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4c9340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4c94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4c9660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4c97f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4c9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ5" ref="0x7fe7ab4c0020" loc="124:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ5" scoped="" ref="0x7fe7ab4c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4c03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4c0530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4c06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4c0850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4c09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4c0b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4c0d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK7" ref="0x7fe7ab4b4020" loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK7" scoped="" ref="0x7fe7ab4b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4b43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4b4530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4b46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4b4850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4b49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4b4b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4b4d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL1" ref="0x7fe7ab4b2670" loc="138:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL1" scoped="" ref="0x7fe7ab4b2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4b29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4b2b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4b2d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4b1020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4b11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4b1340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4b14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4b1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fe7ab50e670" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fe7ab50e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab50e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab50eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab50ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab50d020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab50d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab50d340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab50d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab50d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fe7ab502670" loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fe7ab502670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab5029f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab502b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab502d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab500020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab5001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab500340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab5004d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab500660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fe7ab4e2670" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fe7ab4e2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4e29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4e2b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4e2d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4e1020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4e11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4e1340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4e14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4e1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fe7ab4ffcb0" loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fe7ab4ffcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4fe0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4fe230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4fe3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4fe550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4fe6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4fe870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4fea00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4feb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fe7ab4f3e40" loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fe7ab4f3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4f21e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4f2370"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4f2500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4f2690"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4f2820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4f29b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4f2b40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4f2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fe7ab4e7cb0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fe7ab4e7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4e60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4e6230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4e63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4e6550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4e66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4e6870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4e6a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4e6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fe7ab4dc670" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fe7ab4dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4dc9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4dcb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4dcd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4db020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4db1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4db340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4db4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4db660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fe7ab5167f0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fe7ab5167f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab516b70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab516d00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab513020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab5131b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab513340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab5134d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab513660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab5137f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fe7ab508670" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fe7ab508670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab5089f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab508b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab508d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab507020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab5071b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab507340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab5074d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab507660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fe7ab4fb670" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fe7ab4fb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4fb9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4fbb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4fbd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4fa020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4fa1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4fa340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4fa4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4fa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fe7ab4ef670" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fe7ab4ef670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4ef9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4efb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4efd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4ee020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4ee1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4ee340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4ee4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4ee660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fe7ab4d6990" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fe7ab4d6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4d6d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4d5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4d51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4d5340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4d54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4d5660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4d57f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4d5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH4" ref="0x7fe7ab4cc350" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH4" scoped="" ref="0x7fe7ab4cc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4cc6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4cc860"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4cc9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4ccb80"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4ccd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4cb020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4cb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ0" ref="0x7fe7ab4c6020" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ0" scoped="" ref="0x7fe7ab4c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4c63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4c6530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4c66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4c6850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4c69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4c6b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4c6d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fe7ab4edcb0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fe7ab4edcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4ec0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4ec230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4ec3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4ec550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4ec6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4ec870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4eca00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4ecb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ3" ref="0x7fe7ab4c3990" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ3" scoped="" ref="0x7fe7ab4c3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4c3d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4c2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4c21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4c2340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4c24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4c2660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4c27f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4c2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK2" ref="0x7fe7ab4ba020" loc="130:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK2" scoped="" ref="0x7fe7ab4ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4ba3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4ba530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4ba6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4ba850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4ba9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4bab70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4bad00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK5" ref="0x7fe7ab4b7990" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK5" scoped="" ref="0x7fe7ab4b7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4b7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4b6020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4b61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4b6340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4b64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4b6660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4b67f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4b6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL4" ref="0x7fe7ab4ae020" loc="141:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL4" scoped="" ref="0x7fe7ab4ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4ae3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4ae530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4ae6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4ae850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4ae9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4aeb70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4aed00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL7" ref="0x7fe7ab4aa990" loc="144:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL7" scoped="" ref="0x7fe7ab4aa990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4aad10"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4a9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4a91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4a9340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4a94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4a9660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4a97f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4a9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fe7ab4f7020" loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fe7ab4f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4f73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4f7530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4f76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4f7850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4f79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4f7b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4f7d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fe7ab510060" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fe7ab510060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab5103e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab510570"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab510700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab510890"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab510a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab510bb0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab510d40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab50f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fe7ab504020" loc="63:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fe7ab504020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab5043a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab504530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab5046c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab504850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab5049e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab504b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab504d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab503020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7ab4a4da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7ab4a4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4a3180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4a3310"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4a34a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4a3630"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4a37c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4a3950"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4a3ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4a3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7ab49f440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7ab49f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab49f7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab49f950"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab49fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab49fc70"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab49fe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab49e020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab49e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab49e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7ab4a6a80" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7ab4a6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4a6e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4a5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4a51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4a5340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4a54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4a5660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4a57f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4a5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7ab4a2020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7ab4a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4a23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4a2530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4a26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4a2850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4a29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4a2b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4a2d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7ab49e5d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7ab49e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab49e950"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab49eae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab49ec70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab49ee00"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab49d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab49d1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab49d340"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab49d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7ab4a5c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7ab4a5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4a4020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4a41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4a4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4a44d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4a4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4a47f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4a4980"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4a4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7ab4a12b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7ab4a12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4a1630"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4a17c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4a1950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4a1ae0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4a1c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4a1e00"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab49f020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab49f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7ab49d760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7ab49d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab49dae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab49dc70"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab49de00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab49c020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab49c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab49c340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab49c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab49c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aabf2270" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aabf2270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aabf25f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aabf2780"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aabf2910"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aabf2aa0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aabf2c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aabf2dc0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aabf1020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aabf11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aabef460" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aabef460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aabef7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aabef970"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aabefb00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aabefc90"/>
        <function-ref name="get" scoped="" ref="0x7fe7aabefe20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aabee020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aabee1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aabee340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aabec6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aabec6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aabeca50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aabecbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aabecd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aabeb020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aabeb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aabeb340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aabeb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aabeb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aabe99b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aabe99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aabe9d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aabe8020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aabe81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aabe8340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aabe84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aabe8660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aabe87f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aabe8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aabe6e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aabe6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aabe51c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aabe5350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aabe54e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aabe5670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aabe5800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aabe5990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aabe5b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aabe5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aabe20a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aabe20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aabe2420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aabe25b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aabe2740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aabe28d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aabe2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aabe2bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aabe2d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aabe1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aabdf3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aabdf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aabdf770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aabdf900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aabdfa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aabdfc20"/>
        <function-ref name="get" scoped="" ref="0x7fe7aabdfdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aabdd020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aabdd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aabdd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aabdb6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aabdb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aabdba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aabdbbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aabdbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aabda020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aabda1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aabda340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aabda4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aabda660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7ab493020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7ab493020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4933a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab493530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4936c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab493850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4939e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab493b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab493d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab492020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7ab4905d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7ab4905d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab490950"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab490ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab490c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab490e00"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab48f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab48f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab48f340"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab48f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7ab497d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7ab497d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4960e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab496270"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab496400"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab496590"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab496720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4968b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab496a40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab496bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7ab4922b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7ab4922b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab492630"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4927c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab492950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab492ae0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab492c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab492e00"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab491020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7ab48f760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7ab48f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab48fae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab48fc70"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab48fe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab48e020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab48e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab48e340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab48e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab48e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7ab496e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7ab496e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab494210"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4943a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab494530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4946c0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab494850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4949e0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab494b70"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab494d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7ab491440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7ab491440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4917c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab491950"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab491ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab491c70"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab491e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab490020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4901b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab490340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7ab48e8f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7ab48e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab48ec70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab48ee00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab48d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab48d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab48d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab48d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab48d660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab48d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab87a60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab87a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab87de0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab86020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab861b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab86340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab864d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab86660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab867f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab86980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab84e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab84e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab831c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab83350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab834e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab83670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab83800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab83990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab83b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab83cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab800a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab800a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab80420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab805b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab80740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab808d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab80a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab80bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab80d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab7d3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab7d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab7d770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab7d900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab7da90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab7dc20"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab7ddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab7c020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab7c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab7c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab7a6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab7a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab7aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab7abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab7ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab79020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab791b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab79340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab794d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab79660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab779b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab779b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab77d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab76020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab761b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab76340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab764d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab76660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab767f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab76980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab74e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab74e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab731c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab73350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab734e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab73670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab73800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab73990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab73b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab73cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab700a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab700a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab70420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab705b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab70740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab708d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab70a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab70bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab70d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7ab484440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7ab484440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4847c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab484950"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab484ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab484c70"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab484e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab483020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4831b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab483340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7ab4818f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7ab4818f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab481c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab481e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab480020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4801b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab480340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4804d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab480660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7ab486020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7ab486020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4863a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab486530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4866c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab486850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4869e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab486b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab486d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab485020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7ab4835d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7ab4835d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab483950"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab483ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab483c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab483e00"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab482020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4821b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab482340"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7ab480a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7ab480a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab480e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab47f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab47f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab47f340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab47f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab47f660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab47f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab47f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7ab4852b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7ab4852b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab485630"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4857c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab485950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab485ae0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab485c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab485e00"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab484020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7ab482760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7ab482760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab482ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab482c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab482e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab481020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4811b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab481340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4814d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab481660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7ab47fc10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7ab47fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab47e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab47e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab47e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab47e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab47e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab47e7f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab47e980"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab47eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab1cc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab1cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab1b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab1b230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab1b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab1b550"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab1b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab1b870"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab1ba00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab1bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab19e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab19e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab181c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab18350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab184e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab18670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab18800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab18990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab18b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab18cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab150a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab150a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab15420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab155b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab15740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab158d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab15a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab15bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab15d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab14020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab123f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab123f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab12770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab12900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab12a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab12c20"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab12db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab11020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab111b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab11340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab0f6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab0f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab0fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab0fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab0fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab0e020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab0e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab0e340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab0e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab0e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab0c9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab0c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab0cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab0b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab0b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab0b340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab0b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab0b660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab0b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab0b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab09e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab09e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab081c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab08350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab084e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab08670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab08800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab08990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab08b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab08cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aab050a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aab050a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aab05420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aab055b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aab05740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aab058d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aab05a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aab05bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aab05d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aab03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7ab475760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7ab475760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab475ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab475c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab475e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab474020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4741b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab474340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4744d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab474660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7ab472c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7ab472c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab471020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4711b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab471340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4714d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab471660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4717f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab471980"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab471b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7ab4773f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7ab4773f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab477770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab477900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab477a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab477c20"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab477db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab476020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4761b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab476340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7ab4748f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7ab4748f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab474c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab474e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab473020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4731b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab473340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4734d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab473660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4737f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7ab471da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7ab471da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab46f180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab46f310"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab46f4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab46f630"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab46f7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab46f950"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab46fae0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab46fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7ab4765d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7ab4765d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab476950"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab476ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab476c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab476e00"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab475020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4751b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab475340"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4754d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7ab473a80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7ab473a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab473e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab472020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4721b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab472340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4724d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab472660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4727f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab472980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7ab46e020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7ab46e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab46e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab46e530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab46e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab46e850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab46e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab46eb70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab46ed00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab46d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaab1c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaab1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaab00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaab0230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaab03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaab0550"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaab06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaab0870"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaab0a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaab0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaaaee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaaaee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaaad1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaaad350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaaad4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaaad670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaaad800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaaad990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaaadb20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaaadcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaaaa0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaaaa0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaaaa420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaaaa5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaaaa740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaaaa8d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaaaaa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaaaabf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaaaad80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaaa9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaaa73f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaaa73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaaa7770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaaa7900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaaa7a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaaa7c20"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaaa7db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaaa6020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaaa61b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaaa6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaaa46d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaaa46d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaaa4a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaaa4be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaaa4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaaa3020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaaa31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaaa3340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaaa34d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaaa3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaaa19b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaaa19b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaaa1d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaaa0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaaa01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaaa0340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaaa04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaaa0660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaaa07f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaaa0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaa9ee20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaa9ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaa9d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaa9d350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaa9d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaa9d670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaa9d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaa9d990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaa9db20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaa9dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaa9a0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaa9a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaa9a420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaa9a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaa9a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaa9a8d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaa9aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaa9abf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaa9ad80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaa99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7ab466a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7ab466a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab466e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab465020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4651b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab465340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4654d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab465660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4657f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab465980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7ab461020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7ab461020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4613a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab461530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4616c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab461850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4619e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab461b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab461d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab460020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7ab4687a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7ab4687a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab468b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab468cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab468e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab467020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4671b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab467340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4674d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab467660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7ab465c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7ab465c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab463020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4631b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab463340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4634d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab463660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4637f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab463980"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab463b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7ab4602b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7ab4602b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab460630"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4607c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab460950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab460ae0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab460c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab460e00"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab45f020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab45f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7ab4678f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7ab4678f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab467c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab467e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab466020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4661b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab466340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4664d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab466660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4667f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7ab463da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7ab463da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab462180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab462310"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4624a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab462630"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4627c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab462950"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab462ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab462c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7ab45f440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7ab45f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab45f7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab45f950"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab45fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab45fc70"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab45fe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab45e020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab45e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab45e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaa46c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaa46c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaa450a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaa45230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaa453c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaa45550"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaa456e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaa45870"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaa45a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaa45b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaa43e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaa43e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaa421c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaa42350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaa424e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaa42670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaa42800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaa42990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaa42b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaa42cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaa3f0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaa3f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaa3f420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaa3f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaa3f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaa3f8d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaa3fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaa3fbf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaa3fd80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaa3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaa3c3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaa3c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaa3c770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaa3c900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaa3ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaa3cc20"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaa3cdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaa3b020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaa3b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaa3b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaa396d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaa396d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaa39a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaa39be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaa39d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaa38020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaa381b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaa38340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaa384d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaa38660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaa369b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaa369b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaa36d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaa35020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaa351b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaa35340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaa354d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaa35660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaa357f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaa35980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaa33e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaa33e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaa321c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaa32350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaa324e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaa32670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaa32800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaa32990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaa32b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaa32cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aaa2f0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aaa2f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aaa2f420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aaa2f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aaa2f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aaa2f8d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aaa2fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aaa2fbf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aaa2fd80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aaa2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fe7ab456da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fe7ab456da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab455180"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab455310"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4554a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab455630"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4557c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab455950"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab455ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab455c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fe7ab452440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fe7ab452440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4527c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab452950"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab452ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab452c70"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab452e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab451020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4511b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab451340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fe7ab459a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fe7ab459a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab459da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab457020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4571b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab457340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4574d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab457660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab4577f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab457980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fe7ab454020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fe7ab454020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab454530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4546c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab454850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4549e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab454b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab454d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab453020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fe7ab4515d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fe7ab4515d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab451950"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab451ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab451c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab451e00"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab450020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4501b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab450340"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fe7ab457c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fe7ab457c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab456020"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4561b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab456340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab4564d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab456660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab4567f0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab456980"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab456b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fe7ab4532b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fe7ab4532b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab453630"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab4537c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab453950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab453ae0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab453c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab453e00"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab452020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4521b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fe7ab450760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fe7ab450760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab450ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab450c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab450e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab44f020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab44f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab44f340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab44f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab44f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aa9dbc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aa9dbc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aa9da0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aa9da230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aa9da3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aa9da550"/>
        <function-ref name="get" scoped="" ref="0x7fe7aa9da6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aa9da870"/>
        <function-ref name="set" scoped="" ref="0x7fe7aa9daa00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aa9dab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aa9d8e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aa9d8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aa9d71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aa9d7350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aa9d74e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aa9d7670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aa9d7800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aa9d7990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aa9d7b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aa9d7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aa9d40a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aa9d40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aa9d4420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aa9d45b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aa9d4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aa9d48d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aa9d4a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aa9d4bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aa9d4d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aa9d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aa9d13f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aa9d13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aa9d1770"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aa9d1900"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aa9d1a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aa9d1c20"/>
        <function-ref name="get" scoped="" ref="0x7fe7aa9d1db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aa9d0020"/>
        <function-ref name="set" scoped="" ref="0x7fe7aa9d01b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aa9d0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aa9ce6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aa9ce6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aa9cea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aa9cebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aa9ced70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aa9cd020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aa9cd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aa9cd340"/>
        <function-ref name="set" scoped="" ref="0x7fe7aa9cd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aa9cd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aa9cb9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aa9cb9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aa9cbd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aa9ca020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aa9ca1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aa9ca340"/>
        <function-ref name="get" scoped="" ref="0x7fe7aa9ca4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aa9ca660"/>
        <function-ref name="set" scoped="" ref="0x7fe7aa9ca7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aa9ca980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aa9c8e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aa9c8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aa9c71c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aa9c7350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aa9c74e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aa9c7670"/>
        <function-ref name="get" scoped="" ref="0x7fe7aa9c7800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aa9c7990"/>
        <function-ref name="set" scoped="" ref="0x7fe7aa9c7b20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aa9c7cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7aa9c40a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7aa9c40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7aa9c4420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7aa9c45b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7aa9c4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7aa9c48d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7aa9c4a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7aa9c4bf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7aa9c4d80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7aa9c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab448160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab448160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4484e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab448670"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab448800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab448990"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab448b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab448cb0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab448e40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab447020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab444c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab444c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4430a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab443230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4433c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab443550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4436e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab443870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab443a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab443b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab43e6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab43e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab43ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab43ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab43ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab43d020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab43d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab43d340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab43d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab43d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab438160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab438160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4384e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab438670"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab438800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab438990"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab438b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab438cb0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab438e40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab437020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab434c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab434c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4330a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab433230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4333c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab433550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4336e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab433870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab433a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab433b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab42e6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab42e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab42ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab42ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab42ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab42d020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab42d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab42d340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab42d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab42d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab428270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab428270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4285f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab428780"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab428910"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab428aa0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab428c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab428dc0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab427020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab4271b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab424d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab424d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4230a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab423230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4233c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab423550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4236e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab423870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab423a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab423b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab41e6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab41e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab41ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab41ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab41ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab41d020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab41d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab41d340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab41d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab41d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab418160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab418160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4184e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab418670"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab418800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab418990"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab418b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab418cb0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab418e40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab417020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab414c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab414c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4130a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab413230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4133c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab413550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4136e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab413870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab413a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab413b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab40e6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab40e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab40ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab40ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab40ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab40d020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab40d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab40d340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab40d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab40d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab408160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab408160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4084e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab408670"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab408800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab408990"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab408b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab408cb0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab408e40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab407020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab404c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab404c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab4030a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab403230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab4033c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab403550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab4036e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab403870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab403a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab403b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3e8020" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3e83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3e8530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3e86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3e8850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3e89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3e8b70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3e8d00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3e36d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3e36d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3e3a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3e3be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3e3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3e2020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3e21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3e2340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3e24d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3e2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3dec90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3dec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3dd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3dd230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3dd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3dd550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3dd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3dd870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3dda00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3ddb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3d9180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3d9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3d9500"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3d9690"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3d9820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3d99b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3d9b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3d9cd0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3d9e60"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3d4830" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3d4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3d4bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3d4d40"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3d31b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3d3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3d34d0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3d3660"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3d37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3cfe20" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3cfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3ce1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3ce350"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3ce4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3ce670"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3ce800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3ce990"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3ceb20"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3cecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3ca460" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3ca460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3ca7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3ca970"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3cab00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3cac90"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3cae20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3c9020"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3c91b0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3c9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3c59b0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3c59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3c5d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3c4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3c41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3c4340"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3c44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3c4660"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3c47f0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3c4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3bf160" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3bf160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3bf4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3bf670"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3bf800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3bf990"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3bfb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3bfcb0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3bfe40"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3bb6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3bb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3bba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3bbbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3bbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3ba020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3ba1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3ba340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3ba4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3ba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3b6c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3b6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3b50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3b5230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3b53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3b5550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3b56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3b5870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3b5a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3b5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3b0180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3b0180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3b0500"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3b0690"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3b0820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3b09b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3b0b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3b0cd0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3b0e60"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3ac6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3ac6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3aca50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3acbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3acd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3ab020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3ab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3ab340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3ab4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3ab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3a7c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3a7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3a60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3a6230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3a63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3a6550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3a66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3a6870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3a6a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3a6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3a1180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3a1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3a1500"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab3a1690"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3a1820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3a19b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3a1b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab3a1cd0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3a1e60"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab3a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab39d6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab39d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab39da50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab39dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab39dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab39c020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab39c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab39c340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab39c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab39c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab398c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab398c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3970a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab397230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3973c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab397550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3976e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab397870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab397a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab397b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab392180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab392180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab392500"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab392690"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab392820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3929b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab392b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab392cd0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab392e60"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab391020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab38e6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab38e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab38ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab38ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab38ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab38d020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab38d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab38d340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab38d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab38d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab389c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab389c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3880a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab388230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3883c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab388550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3886e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab388870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab388a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab388b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab383180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab383180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab383500"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab383690"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab383820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3839b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab383b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab383cd0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab383e60"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab382020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab37f6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab37f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab37fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab37fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab37fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab37e020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab37e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab37e340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab37e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab37e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab37ac90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab37ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3790a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab379230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3793c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab379550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3796e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab379870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab379a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab379b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab375180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab375180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab375500"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab375690"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab375820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3759b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab375b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab375cd0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab375e60"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab373020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3706d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3706d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab370a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab370be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab370d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab36f020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab36f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab36f340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab36f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab36f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab36bc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab36bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab36a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab36a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab36a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab36a550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab36a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab36a870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab36aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab36ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab366180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab366180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab366500"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab366690"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab366820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab3669b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab366b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab366cd0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab366e60"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab364020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3616d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3616d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab361a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab361be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab361d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab360020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3601b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab360340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3604d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab360660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab35b0a0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab35b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab35b420"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab35b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab35b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab35b8d0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab35ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab35bbf0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab35bd80"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab35a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab3576d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab3576d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab357a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab357be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab357d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab356020"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3561b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab356340"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab3564d0"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab356660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab352c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab352c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab3510a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab351230"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab3513c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab351550"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab3516e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab351870"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab351a00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab351b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fe7ab34c180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fe7ab34c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab34c500"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab34c690"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab34c820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab34c9b0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab34cb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab34ccd0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab34ce60"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab34b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7fe7ab2f7e60" loc="12:PS2/PS2C.nc">
      <component-ref qname="PS2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7fe7ab2f7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7ab2f4210"/>
        <function-ref name="receivedChar" scoped="" ref="0x7fe7ab2f43a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockIRQ" ref="0x7fe7ab2c6d90" loc="22:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockIRQ" scoped="" ref="0x7fe7ab2c6d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe7ab2cc180"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab2cc310"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab2cc4a0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fe7ab2cc630"/>
        <function-ref name="reset" scoped="" ref="0x7fe7ab2cc7c0"/>
        <function-ref name="setMask" scoped="" ref="0x7fe7ab2cc950"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab2ccae0"/>
        <function-ref name="getPins" scoped="" ref="0x7fe7ab2ccc70"/>
        <function-ref name="getMask" scoped="" ref="0x7fe7ab2cce00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockPin" ref="0x7fe7ab2cb1c0" loc="23:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockPin" scoped="" ref="0x7fe7ab2cb1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab2cb540"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab2cb6d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab2cb860"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab2cb9f0"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab2cbb80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab2cbd10"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab2c4020"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab2c41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataPin" ref="0x7fe7ab2c44f0" loc="24:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPin" scoped="" ref="0x7fe7ab2c44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab2c4870"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab2c4a00"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab2c4b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab2c4d20"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab2c3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab2c31b0"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab2c3340"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab2c34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7fe7ab2ce860" loc="19:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7fe7ab2ce860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7ab2cebe0"/>
        <function-ref name="receivedChar" scoped="" ref="0x7fe7ab2ced70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x7fe7ab2f2ca0" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <component-ref qname="HplAtmegaPinChange2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7fe7ab2f2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fe7ab29c0a0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab29c230"/>
        <function-ref name="disable" scoped="" ref="0x7fe7ab29c3c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fe7ab29c550"/>
        <function-ref name="reset" scoped="" ref="0x7fe7ab29c6e0"/>
        <function-ref name="setMask" scoped="" ref="0x7fe7ab29c870"/>
        <function-ref name="enable" scoped="" ref="0x7fe7ab29ca00"/>
        <function-ref name="getPins" scoped="" ref="0x7fe7ab29cb90"/>
        <function-ref name="getMask" scoped="" ref="0x7fe7ab29cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fe7ab287c40" loc="14:VolumeAdc/VolumeAdcC.nc">
      <component-ref qname="VolumeAdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fe7ab287c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7ab284860"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7ab284ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fe7ab27f6c0" loc="17:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7ab27f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe7ab27fa40"/>
        <function-ref name="configure" scoped="" ref="0x7fe7ab27fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumePin" ref="0x7fe7ab27e020" loc="19:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumePin" scoped="" ref="0x7fe7ab27e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fe7ab27e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fe7ab27e530"/>
        <function-ref name="toggle" scoped="" ref="0x7fe7ab27e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fe7ab27e850"/>
        <function-ref name="get" scoped="" ref="0x7fe7ab27e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fe7ab27eb70"/>
        <function-ref name="set" scoped="" ref="0x7fe7ab27ed00"/>
        <function-ref name="clr" scoped="" ref="0x7fe7ab27a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcConfig" ref="0x7fe7ab27bc80" loc="16:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fe7ab27bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fe7ab27f0a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7ab27f230"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fe7ab27f3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe7ab12e950" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7ab12e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe7ab12ecd0"/>
        <function-ref name="configure" scoped="" ref="0x7fe7ab12ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fe7ab130980" loc="22:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fe7ab130980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7ab12f5a0"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7ab12fa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7fe7ab12e060" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fe7ab12e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fe7ab12e3e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7ab12e570"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fe7ab12e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fe7ab26b450" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fe7ab26b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7ab26a090"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7ab26a510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fe7ab2684f0" loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7fe7ab2684f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7ab267150"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7ab267610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fe7ab2621d0" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe7ab2621d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7ab262550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7ab2626e0"/>
        <function-ref name="request" scoped="" ref="0x7fe7ab262870"/>
        <function-ref name="granted" scoped="" ref="0x7fe7ab262a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7ab262b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7fe7ab263280" loc="23:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fe7ab263280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fe7ab263600"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7ab263790"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fe7ab263920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe7ab25b210" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7ab25b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe7ab25b590"/>
        <function-ref name="configure" scoped="" ref="0x7fe7ab25b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7fe7ab257450" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7fe7ab257450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe7ab2577d0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7ab257960"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7ab257af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe7ab261e40" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe7ab261e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7ab25e1e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7ab25e370"/>
        <function-ref name="request" scoped="" ref="0x7fe7ab25e500"/>
        <function-ref name="granted" scoped="" ref="0x7fe7ab25e690"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7ab25e820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7fe7ab251420" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7fe7ab251420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe7ab2517a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7ab251930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm1280Adc" ref="0x7fe7ab23d710" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7fe7ab23d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fe7ab23da90"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fe7ab23dc20"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fe7ab23ddb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fe7ab24c020"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fe7ab24c1b0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fe7ab24c340"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fe7ab24c4d0"/>
        <function-ref name="isComplete" scoped="" ref="0x7fe7ab24c660"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7ab24c7f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fe7ab24c980"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fe7ab24cb10"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fe7ab24cca0"/>
        <function-ref name="startConversion" scoped="" ref="0x7fe7ab24ce30"/>
        <function-ref name="isStarted" scoped="" ref="0x7fe7ab24b120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fe7ab24b2b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fe7ab24b440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fe7ab24b5d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab24b760"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7ab24b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7fe7ab24e830" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7fe7ab24e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe7ab24ebb0"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7ab24ed40"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7ab24d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7ab24f830" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7ab24f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7ab24fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7fe7ab24bbe0" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fe7ab24bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fe7ab23c020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fe7ab23c1b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fe7ab23c340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fe7ab23c4d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fe7ab23c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fe7ab24e020" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7ab24e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7ab24e3a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab24e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7fe7ab24d330" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7fe7ab24d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe7ab24d6b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7ab24d840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7fe7ab20a460" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <component-ref qname="HplAtm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7fe7ab20a460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fe7ab20a7e0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fe7ab20a970"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fe7ab20ab00"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fe7ab20ac90"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fe7ab20ae20"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fe7ab209020"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fe7ab2091b0"/>
        <function-ref name="isComplete" scoped="" ref="0x7fe7ab209340"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7ab2094d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fe7ab209660"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fe7ab2097f0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fe7ab209980"/>
        <function-ref name="startConversion" scoped="" ref="0x7fe7ab209b10"/>
        <function-ref name="isStarted" scoped="" ref="0x7fe7ab209da0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fe7ab208020"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fe7ab2081b0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fe7ab208340"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab2084d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7ab208660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fe7ab203c10" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fe7ab203c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fe7ab202020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7fe7ab2057d0" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7fe7ab2057d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fe7ab205b50"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fe7ab205ce0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fe7ab205e70"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fe7ab204030"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fe7ab2041c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fe7ab204350"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fe7ab2044e0"/>
        <function-ref name="isComplete" scoped="" ref="0x7fe7ab204670"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7ab204800"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fe7ab204990"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fe7ab204b20"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fe7ab204cb0"/>
        <function-ref name="startConversion" scoped="" ref="0x7fe7ab204e40"/>
        <function-ref name="isStarted" scoped="" ref="0x7fe7ab203120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fe7ab2032b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fe7ab203440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fe7ab2035d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fe7ab203760"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7ab2038f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe7ab19ac00" loc="92:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe7ab19ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe7ab199020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7ab1991b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe7ab197930" loc="96:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7ab197930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe7ab197cd0"/>
        <function-ref name="configure" scoped="" ref="0x7fe7ab197e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fe7ab199400" loc="93:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7ab199400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7ab199780"/>
        <function-ref name="requested" scoped="" ref="0x7fe7ab199910"/>
        <function-ref name="granted" scoped="" ref="0x7fe7ab199aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7ab199c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7ab199dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe7ab19be70" loc="91:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe7ab19be70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7ab19a240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7ab19a3d0"/>
        <function-ref name="request" scoped="" ref="0x7fe7ab19a560"/>
        <function-ref name="granted" scoped="" ref="0x7fe7ab19a6f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7ab19a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe7ab197060" loc="94:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7ab197060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe7ab1973e0"/>
        <function-ref name="userId" scoped="" ref="0x7fe7ab197570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fe7aa7d9c00" loc="44:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fe7aa7d9c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fe7aa7d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fe7aa7d82b0" loc="45:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fe7aa7d82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe7aa7d8630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe7aa7d87c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe7aa7d8950"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe7aa7d8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fe7aa7d53a0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fe7aa7d53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fe7aa7d5740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7aa7d58d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fe7aa7d3210" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fe7aa7d3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fe7aa7d35b0"/>
        <function-ref name="configure" scoped="" ref="0x7fe7aa7d3740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fe7aa7d39d0" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fe7aa7d39d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fe7aa7d3d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fe7aa7d1020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fe7aa7d11b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fe7aa7d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fe7aa7d5b20" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7aa7d5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7aa7d4020"/>
        <function-ref name="requested" scoped="" ref="0x7fe7aa7d41b0"/>
        <function-ref name="granted" scoped="" ref="0x7fe7aa7d4340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7aa7d44d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7aa7d4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fe7aa7d1590" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fe7aa7d1590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fe7aa7d1910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fe7aa7d1aa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fe7aa7d1c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fe7aa7d1dc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fe7aa7d0020"/>
        <function-ref name="get" scoped="" ref="0x7fe7aa7d01b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fe7aa7d0340"/>
        <function-ref name="led0On" scoped="" ref="0x7fe7aa7d0980"/>
        <function-ref name="set" scoped="" ref="0x7fe7aa7d0660"/>
        <function-ref name="led2On" scoped="" ref="0x7fe7aa7d04d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fe7aa7d07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fe7aa7d64d0" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe7aa7d64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7aa7d6870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7aa7d6a00"/>
        <function-ref name="request" scoped="" ref="0x7fe7aa7d6b90"/>
        <function-ref name="granted" scoped="" ref="0x7fe7aa7d6d20"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7aa7d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fe7aa7d48b0" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7aa7d48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe7aa7d4c30"/>
        <function-ref name="userId" scoped="" ref="0x7fe7aa7d4dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fe7aa7d0c50" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fe7aa7d0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7aa7cf020"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7aa7cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fe7ab193780" loc="72:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe7ab193780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fe7ab193b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fe7ab193d50" loc="73:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7ab193d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7ab189100"/>
        <function-ref name="requested" scoped="" ref="0x7fe7ab189290"/>
        <function-ref name="granted" scoped="" ref="0x7fe7ab189420"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7ab1895b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7ab189740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fe7ab193020" loc="70:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7ab193020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7ab1933a0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab193530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fe7ab189990" loc="74:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7ab189990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe7ab189d10"/>
        <function-ref name="userId" scoped="" ref="0x7fe7ab188020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fe7aa79ddc0" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fe7aa79ddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fe7aa79c180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fe7aa79c3d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fe7aa79c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7aa79c750"/>
        <function-ref name="requested" scoped="" ref="0x7fe7aa79c8e0"/>
        <function-ref name="granted" scoped="" ref="0x7fe7aa79ca70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7aa79cc00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fe7aa79cd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fe7aa79d660" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fe7aa79d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fe7aa79d9e0"/>
        <function-ref name="stop" scoped="" ref="0x7fe7aa79db70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fe7aa79b020" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fe7aa79b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fe7aa79b3a0"/>
        <function-ref name="userId" scoped="" ref="0x7fe7aa79b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fe7ab17a740" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fe7ab17a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7cd50"/>
            <typename><typedef-ref name="TMicro" ref="0x7fe7abe7a180"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fe7ab1785b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcSingle" ref="0x7fe7ab17c9f0" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7fe7ab17c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fe7ab17cd70"/>
        <function-ref name="cancel" scoped="" ref="0x7fe7ab17b020"/>
        <function-ref name="dataReady" scoped="" ref="0x7fe7ab17b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fe7ab180410" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fe7ab180410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7ab17f020"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7ab17f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fe7ab17d1d0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7fe7ab17d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7ab17de00"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7ab17c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7fe7ab17ba10" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fe7ab17ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fe7ab17bd90"/>
        <function-ref name="getChannel" scoped="" ref="0x7fe7ab17a020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fe7ab17a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7fe7ab168510" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7fe7ab168510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fe7ab168890"/>
        <function-ref name="runTask" scoped="" ref="0x7fe7ab168a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fe7ab154c90" loc="24:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fe7ab154c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7ab153940"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7ab153de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fe7ab13a6d0" loc="26:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fe7ab13a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fe7ab139390"/>
        <function-ref name="readDone" scoped="" ref="0x7fe7ab139830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fe7ab138020" loc="27:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fe7ab138020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fe7ab1383c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fe7ab138550"/>
        <function-ref name="request" scoped="" ref="0x7fe7ab1386e0"/>
        <function-ref name="granted" scoped="" ref="0x7fe7ab138870"/>
        <function-ref name="isOwner" scoped="" ref="0x7fe7ab138a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fe7ab12b870" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fe7ab12b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe7e9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fe7abe7ed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fe7ab127cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fe7ab129300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fe7ab1270d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fe7ab129c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fe7ab126660"/>
        <function-ref name="gett0" scoped="" ref="0x7fe7ab1261e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fe7ab129780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fe7ab12a480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fe7ab1276e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fe7ab12a950"/>
        <function-ref name="stop" scoped="" ref="0x7fe7ab12ae20"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../tinyos_ws18/tos/interfaces/Init.nc">
      <documentation loc="34:../tinyos_ws18/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fe7abda4740" loc="62:../tinyos_ws18/tos/interfaces/Init.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../tinyos_ws18/tos/interfaces/Boot.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fe7abda5350" loc="60:../tinyos_ws18/tos/interfaces/Boot.nc">
        <documentation loc="51:../tinyos_ws18/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7fe7abd9cb70" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7fe7abd9c8f0" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7fe7abd9f070" loc="31:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7fe7abd9faf0" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fe7abd9f870" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7fe7abd9d630" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fe7abd9d3b0" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7fe7abd9c020" loc="53:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../tinyos_ws18/tos/interfaces/Scheduler.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fe7abf326c0" loc="57:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="54:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fe7abf316a0" loc="72:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fe7abf32e30" loc="65:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fe7abf29610" loc="67:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fe7abf29e60" loc="75:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../tinyos_ws18/tos/interfaces/McuSleep.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7fe7abe2d270" loc="76:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fe7abe13b90" loc="62:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fe7abeae470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fe7abe11420" loc="52:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fe7abd4c420" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe7abd4c420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fe7abd4cce0" loc="55:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="50:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fe7abd48a60" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe7abd4c420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe7abd484b0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fe7abd487d0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe7abd4c420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PS2" loc="1:PS2/PS2.nc">
      <function command="" provided="0" name="init" ref="0x7fe7abd55890" loc="4:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChar" ref="0x7fe7abd4a2a0" loc="7:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="chr" ref="0x7fe7abd4a020" loc="7:PS2/PS2.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FMClick" loc="9:FMClick/FMClick.nc">
      <function command="" provided="0" name="seek" ref="0x7fe7abd53580" loc="12:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7fe7abd53300" loc="12:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x7fe7abd50940" loc="20:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="res" ref="0x7fe7abd506c0" loc="20:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setVolume" ref="0x7fe7abd52610" loc="16:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7fe7abd52390" loc="16:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rdsReceived" ref="0x7fe7abd4ea20" loc="26:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7fe7abd677d0"/>
              <typename><typedef-ref name="RDSType" ref="0x7fe7abd541c0"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fe7abd4e470" loc="26:FMClick/FMClick.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref ref="0x7fe7abd677d0"/>
              <typename><typedef-ref name="RDSType" ref="0x7fe7abd541c0"/></typename>
            </type-tag>
          </variable>
          <variable name="buf" ref="0x7fe7abd4e790" loc="26:FMClick/FMClick.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveRDS" ref="0x7fe7abd50020" loc="18:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fe7abd52d10" loc="18:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tuneComplete" ref="0x7fe7abd4f350" loc="22:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fe7abd4f0d0" loc="22:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fe7abd53cc0" loc="14:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="seekComplete" ref="0x7fe7abd4fd10" loc="24:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fe7abd4fa90" loc="24:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tune" ref="0x7fe7abd54bf0" loc="10:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fe7abd54970" loc="10:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Glcd" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
      <function command="" provided="0" name="drawTextPgm" ref="0x7fe7abd57620" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="109:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawTextPgm&#10;&#10; </short>
          <long>&#10; drawTextPgm&#10;&#10; @param text stored in program memory&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7fe7abd59bf0" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7fe7abd57020" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fe7abd57380" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawRect" ref="0x7fe7abd5c2d0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw rectangle&#10;&#10; </short>
          <long>&#10; Draw rectangle&#10;&#10; @param upper left x&#10; @param upper left y&#10; @param lower right x&#10; @param lower right y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7fe7abd5e560" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7fe7abd5e8d0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7fe7abd5ec60" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7fe7abd5c020" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawLine" ref="0x7fe7abd5fd40" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="45:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw line&#10;&#10; </short>
          <long>&#10; Draw line&#10;&#10; @param first point x&#10; @param first point y&#10; @param second point x&#10; @param second point y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7fe7abd5f020" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7fe7abd5f390" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7fe7abd5f720" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7fe7abd5fa90" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x7fe7abd63b60" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="12:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Set pixel&#10;&#10; </short>
          <long>&#10; Set pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fe7abd63570" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fe7abd638d0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="invertPixel" ref="0x7fe7abd60710" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="34:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Invert pixel&#10;&#10; </short>
          <long>&#10; Invert pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fe7abd60120" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fe7abd60480" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPixel" ref="0x7fe7abd61940" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="23:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Clear pixel&#10;&#10; </short>
          <long>&#10; Clear pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fe7abd61350" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fe7abd616b0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawEllipse" ref="0x7fe7abd5b8a0" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw ellipse&#10;&#10; </short>
          <long>&#10; Draw ellipse&#10;&#10; @param center x&#10; @param center y&#10; @param radius horizontal&#10; @param radius vertical&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fe7abd5cac0" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fe7abd5ce20" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_h" ref="0x7fe7abd5b240" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_v" ref="0x7fe7abd5b5f0" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawText" ref="0x7fe7abd59450" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="97:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawText&#10;&#10; </short>
          <long>&#10; drawText&#10;&#10; @param text&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7fe7abd5aac0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7fe7abd5ae20" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fe7abd591b0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x7fe7abd5a350" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="87:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Fill Display with pattern&#10;&#10; </short>
          <long>&#10; Fill Display with pattern&#10;&#10; @param pattern&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x7fe7abd5a0d0" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe7abd47e40" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe7abd47e40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fe7abd3ec10" loc="136:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="132:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe7abd42420" loc="83:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fe7abd3f2b0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe7abd40bd0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fe7abd3f020" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fe7abd40420" loc="98:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="94:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fe7abd3dc60" loc="151:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="146:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fe7abd3d3e0" loc="144:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="138:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fe7abd42c00" loc="92:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="86:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fe7abd449d0" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe7abd44750" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fe7abd3e2b0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="116:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe7abd3fc50" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fe7abd3e020" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fe7abd434d0" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe7abd43250" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe7abd43cd0" loc="78:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fe7abcc7560" loc="44:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fe7abcc7c90" loc="45:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fe7abcc8710" loc="42:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fe7abcc6b20" loc="47:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe7abcc8e10" loc="43:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fe7abcc63e0" loc="46:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe7abccc890" loc="40:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fe7abcc8020" loc="41:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fe7abce8020" loc="56:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe7abce7ac0" loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fe7abce9780" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fe7abce72a0" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fe7abce7020" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fe7abce9020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fe7abce87d0" loc="63:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7fe7abcde020" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7fe7abcde020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fe7abcdc650" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fe7abcdf020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fe7abcde930" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fe7abcdf020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fe7abcdec80" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fe7abcdc020" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fe7abcdc3a0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fe7abcd50e0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fe7abcd63a0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fe7abcd66f0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fe7abcd6a40" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fe7abcd6dc0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe7abcdb650" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fe7abcdf020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fe7abcda830" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fe7abcdf020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fe7abcdab80" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fe7abcdb020" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fe7abcdb3a0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fe7abcd9430" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fe7abcd8720" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fe7abcd8a70" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fe7abcd8dc0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fe7abcd9180" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../tinyos_ws18/tos/interfaces/Resource.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fe7abce21f0" loc="120:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fe7abce31f0" loc="97:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fe7abce5820" loc="88:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fe7abce39e0" loc="102:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fe7abce2c50" loc="128:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="122:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplKS0108" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <short>&#10; Hpl interface for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl interface for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="dataWrite" ref="0x7fe7abbe9e30" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="48:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write data&#10;&#10; </short>
          <long>&#10; Write data&#10;&#10; @param The controller to write to&#10; @param data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7fe7abbe9820" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7fe7abbe9ba0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7fe7abbefaf0" loc="15:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="10:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Initialize GLCD&#10; &#10; </short>
          <long>&#10; Initialize GLCD&#10; &#10; @return SUCCESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataRead" ref="0x7fe7abbe9020" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="38:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read data&#10;&#10; </short>
          <long>&#10; Read data&#10;&#10; @param The controller to be read from&#10; &#10; @return data&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7fe7abbeac40" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlWrite" ref="0x7fe7abbea410" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write to controller&#10;&#10; </short>
          <long>&#10; Write to controller&#10;&#10; @param The controller to write to&#10; @param controller data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7fe7abbebde0" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7fe7abbea180" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlRead" ref="0x7fe7abbeb590" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="17:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read controller state&#10;&#10; </short>
          <long>&#10; Read controller state&#10;&#10; @param The controller to be checked&#10; &#10; @return state of the controller&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7fe7abbeb310" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe7abb6c910" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe7abb6c910"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe7abb6cb50" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7abb6cb50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fe7abb646b0" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7abb6cb50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe7abb64430" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7abb6cb50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIOPort" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fe7abb6a020" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fe7abb6bca0" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fe7abb692e0" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fe7abb69060" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fe7abb69c30" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fe7abb699b0" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fe7abb6b5b0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fe7abb6b330" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fe7abb67ce0" loc="13:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe7abb675b0" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe7abb67330" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe7abb6a950" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fe7abb6a6d0" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fe7ab9424e0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fe7ab8caa70" loc="53:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fe7ab8c73e0" loc="61:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fe7ab8bebb0" loc="65:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fe7ab8be390" loc="59:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fe7ab8c5970" loc="56:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fe7ab8c3aa0" loc="73:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fe7ab8c50e0" loc="46:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fe7ab8c3270" loc="65:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fe7ab8c2420" loc="81:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fe7ab8c0270" loc="90:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fe7ab8c0ad0" loc="98:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fe7ab8b5c10" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe7ab8bfcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fe7ab8b5990" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe7ab8bfcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fe7ab8b9c50" loc="53:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fe7ab8b67a0" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe7ab8bfcb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fe7ab8b6520" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fe7ab8bfcb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fe7ab8b50e0" loc="70:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fe7ab8bfcb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../tinyos_ws18/tos/interfaces/Leds.nc">
      <documentation loc="33:../tinyos_ws18/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fe7ab892190" loc="61:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fe7ab892940" loc="67:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fe7ab891190" loc="72:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fe7ab88f120" loc="83:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="79:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fe7ab88e890" loc="100:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="96:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe7ab88d0e0" loc="117:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="103:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fe7ab891920" loc="77:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe7ab88dc50" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="120:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fe7ab88d9d0" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fe7ab8939d0" loc="56:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fe7ab88f900" loc="89:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="86:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fe7ab88e0e0" loc="94:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fe7ab83a020" loc="62:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fe7ab841db0" loc="95:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe7ab83d6a0" loc="105:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7fe7ab821a10" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7fe7ab7ded00" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7fe7ab7dd490" loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7fe7ab7dc580" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fe7ab7dc300" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7fe7ab7de5e0" loc="52:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7fe7ab7d9e40" loc="65:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fe7ab7d4be0" loc="84:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fe7ab7d8830" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fe7ab7d85b0" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fe7ab7d1450" loc="89:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7fe7ab7df7a0" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7fe7ab7df520" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7fe7ab7d9710" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fe7ab7d9490" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fe7ab7d7120" loc="68:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7fe7ab7dccc0" loc="61:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fe7ab7d5120" loc="75:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7fe7ab7ddbe0" loc="56:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fe7ab7d44a0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fe7ab7d4220" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fe7ab7d3d00" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe7ab7d3a80" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7fe7ab7d7920" loc="72:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7fe7ab7dfe70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7fe7ab7da650" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fe7ab7da3d0" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7fe7ab7d5b40" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fe7ab7d58c0" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fe7ab7d3390" loc="85:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7fe7ab7dad80" loc="63:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe7ab6c26d0" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe7ab6c26d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fe7ab6bf020" loc="61:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fe7ac84e170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe7ab6ae410" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe7ab6ae410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe7ab6ae650" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6ae650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fe7ab6ad020" loc="64:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6ae650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fe7ab6ac120" loc="76:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fe7ab6ad8a0" loc="71:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fe7ab6ac880" loc="82:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="78:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fe7ab6bcba0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fe7ab6bcba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fe7ab6bcde0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6bcde0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fe7ab6b59c0" loc="109:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="105:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6bcde0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe7ab6b79b0" loc="78:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fe7ab6b5020" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="90:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6bcde0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6bcde0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fe7ab6b6a10" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6bcde0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fe7ab6b6d50" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6bcde0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fe7ab6b61f0" loc="88:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="81:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fe7ab6b41f0" loc="116:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="111:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6bcde0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fe7ab6b9960" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6bcde0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fe7ab6b96e0" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6bcde0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe7ab6b71f0" loc="73:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="68:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fe7ab67ee50" loc="89:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fe7ab67fc40" loc="85:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7fe7ab6828c0" loc="79:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fe7ab67e680" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fe7ab67e400" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7fe7ab67f470" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe7ab67f1f0" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fe7ab67d890" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fe7ab67d610" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7fe7ab6800e0" loc="80:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7fe7ab680a80" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fe7ab680800" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280TimerSync" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
      <documentation loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changedto Sync for Atm1280&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer2Synchronous" ref="0x7fe7ab66e020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Turn on timer 2 synchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBBusy" ref="0x7fe7ab66b0e0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7fe7ab66d020" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7fe7ab66e7a0" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7fe7ab66b8f0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7fe7ab66d850" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7fe7ab672be0" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fe7abe61da0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fe7abe60230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7fe7ab66f660" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fe7abe61da0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fe7abe60230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fe7ab66f3e0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fe7abe61da0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fe7abe60230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fe7ab6833d0" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6833d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7fe7ab675020" loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe7ab678020" loc="58:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe7ab683d10" loc="48:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6833d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fe7ab678790" loc="62:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fe7ab6757e0" loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe7ab679710" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6833d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fe7ab679490" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fe7ab6833d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fe7ab677020" loc="65:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe7ab677770" loc="68:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fe7ab691a20" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fe7ab691a20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7fe7ab6892d0" loc="98:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fe7ab68a350" loc="87:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fe7ab68e390" loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fe7ab691a20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7fe7ab689cb0" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fe7ab689a30" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7fe7ab688510" loc="110:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fe7ab68dc90" loc="75:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fe7ab68d500" loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fe7ab68ab10" loc="93:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fe7ab68ed40" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fe7ab691a20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fe7ab68eac0" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fe7ab691a20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fe7ab68c420" loc="78:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fe7ab68cb70" loc="81:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x7fe7ab2ca270" loc="43:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fe7ab2cdad0" loc="40:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fe7ab2c8800" loc="54:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fe7ab2c7020" loc="57:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fe7ab2ca980" loc="46:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x7fe7ab2c62a0" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7fe7ab2c6020" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fe7ab2c80e0" loc="51:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x7fe7ab2c6a30" loc="70:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x7fe7ab2c77b0" loc="62:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcConfig" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
      <documentation loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7fe7ab27b0e0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM1280_ADC_VREF_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fe7ab27c800" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM1280_ADC_SNGL_xxx&#10;   or ATM1280_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7fe7ab27b930" loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM1280_ADC_PRESCALE_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fe7ab266390" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe7ab266390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fe7ab266c90" loc="58:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fe7ab265a20" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe7ab266390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fe7ab265470" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fe7abf2b020"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fe7ab265790" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fe7ab266390"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcSingle" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fe7ab259460" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega1280 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fe7ab25a710" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7fe7ab25aa90" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7fe7ab25ae10" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7fe7ab2591b0" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe7ab257020" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fe7ab2585f0" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe7ab258020" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7fe7ab258360" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcMultiple" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm1280ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fe7ab255d40" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fe7ab255020" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7fe7ab2553a0" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7fe7ab255720" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7fe7ab255a90" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fe7ab252b90" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe7ab253a40" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7fe7ab253d80" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7fe7ab252110" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7fe7ab2524f0" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7fe7ab2528d0" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280Adc" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <short>&#10; HPL interface to the Atmega1280 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega1280 A/D conversion subsystem. Please see the&#10; Atmega1280 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega1280 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7fe7ab242c40" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7fe7ab24a8a0" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe89720"/>
            <typename><typedef-ref name="Atm1280Admux_t" ref="0x7fe7abe89bf0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7fe7ab23e040" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM1280_ADC_PRESCALE_xxx&#10;   values from Atm1280Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fe7ab240da0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fe7ac850ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fe7ab241530" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="118:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7fe7ab246650" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7fe7ab248350" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe89720"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7fe7abe89bf0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7fe7ab2480d0" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fe7abe89720"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7fe7abe89bf0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7fe7ab2455a0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7fe7ab240540" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fe7ab23e840" loc="150:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7fe7ab246db0" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7fe7ab2434f0" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7fe7ab245d50" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7fe7ab243c80" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7fe7ab241d00" loc="127:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fe7abf35500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7fe7ab247650" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe7abe825a0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7fe7abe82c80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7fe7ab2473d0" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe7abe825a0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7fe7abe82c80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7fe7ab2424f0" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7fe7ab248ba0" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fe7abe825a0"/>
            <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7fe7abe82c80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fe7ab247e60" loc="75:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fe7ab23d400" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="152:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fe7ab23d180" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fe7ac84f610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
