<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="20:RadioScannerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1c8ac5c0c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1c8ac98720"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f1c8ac98720"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f1c8ac96e20"/></to>
    </wire>
    <wire loc="21:RadioScannerAppC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f1c8ac4a980"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f1c8aacf440"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f1c8aacf440"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f1c8aa9be10"/></to>
    </wire>
    <wire loc="22:RadioScannerAppC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x7f1c8ac5be30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c8abce020"/></to>
    </wire>
    <wire loc="26:FMClick/FMClickC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1c8abce020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c8abca290"/></to>
    </wire>
    <wire loc="23:RadioScannerAppC.nc">
      <from><interface-ref name="Radio" scoped="" ref="0x7f1c8ac40d60"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f1c8abce640"/></to>
    </wire>
    <wire loc="27:FMClick/FMClickC.nc">
      <from><interface-ref name="FMClick" scoped="" ref="0x7f1c8abce640"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7f1c8abca8b0"/></to>
    </wire>
    <wire loc="24:RadioScannerAppC.nc">
      <from><interface-ref name="Keyboard" scoped="" ref="0x7f1c8ac3c600"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f1c8a1a1e60"/></to>
    </wire>
    <wire loc="20:PS2/PS2C.nc">
      <from><interface-ref name="PS2" scoped="" ref="0x7f1c8a1a1e60"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7f1c8a178860"/></to>
    </wire>
    <wire loc="25:RadioScannerAppC.nc">
      <from><interface-ref name="volumeKnob" scoped="" ref="0x7f1c8ac3d060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1c8a131cd0"/></to>
    </wire>
    <wire loc="22:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1c8a131cd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1c89fdbbe0"/></to>
    </wire>
    <wire loc="26:RadioScannerAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1c8ac38220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1c8a12fb00"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1c8a12fb00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1c8a57c020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1c8ac97bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c89683c00"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1c8ac97bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c8a577e60"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1c8ac97bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c89be8810"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1c8ac97bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c8aa99150"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1c8ac684b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1c8ae25a20"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f1c8ae25a20"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f1c8ad26990"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f1c8ac67020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c8ac9ad00"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1c8ac9ad00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c8ac8c0c0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f1c8ac67720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f1c8ac97bf0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f1c8ac94d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c8a0f9830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f1c8ac94020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f1c8ac7a020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f1c8ac8b020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c8ac7b860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f1c8ac8c7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c8a5aeab0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f1c8ac8c7a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f1c8ac84020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f1c8ac846f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f1c8ac94d50"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ad259e0"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f1c8ad200d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f1c8ad3e080"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1c8ad03de0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1c8a4c24c0"/></to>
    </wire>
    <wire loc="205:RadioScannerP.nc">
      <from><interface-ref name="handleRDS" scoped="" ref="0x7f1c8abfe500"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:RadioScannerP.nc">
      <from><interface-ref name="inputTuneChannel" scoped="" ref="0x7f1c8ac269d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:RadioScannerP.nc">
      <from><interface-ref name="handleChar" scoped="" ref="0x7f1c8ac24d40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:RadioScannerP.nc">
      <from><interface-ref name="radioInitFail" scoped="" ref="0x7f1c8ac0b9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:RadioScannerP.nc">
      <from><interface-ref name="seekBand" scoped="" ref="0x7f1c8ac107e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:RadioScannerP.nc">
      <from><interface-ref name="finishedSeeking" scoped="" ref="0x7f1c8ac03400"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:RadioScannerP.nc">
      <from><interface-ref name="finishedTuning" scoped="" ref="0x7f1c8ac09d10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:RadioScannerP.nc">
      <from><interface-ref name="readyScreen" scoped="" ref="0x7f1c8ac0e460"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:FMClick/FMClickC.nc">
      <from><interface-ref name="Int" scoped="" ref="0x7f1c8abc2600"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7f1c8a7f89e0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f1c8a7f89e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f1c8a7adc90"/></to>
    </wire>
    <wire loc="31:FMClick/FMClickC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7f1c8abbe8e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1c8a78e9f0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1c8a78e9f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1c8a781530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:FMClick/FMClickC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f1c8abaf6f0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f1c8a58d880"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f1c8a58d880"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f1c8a780a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:FMClick/FMClickC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1c8abad620"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1c8a3c7140"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1c8a3c7140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1c8a57c020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:FMClick/FMClickC.nc">
      <from><interface-ref name="RSTPin" scoped="" ref="0x7f1c8aba1920"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f1c8a39eb20"/></to>
    </wire>
    <wire loc="250:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f1c8a39eb20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1c8a31f760"/></to>
    </wire>
    <wire loc="37:FMClick/FMClickC.nc">
      <from><interface-ref name="SDIOPin" scoped="" ref="0x7f1c8aba7b30"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f1c8a39f800"/></to>
    </wire>
    <wire loc="249:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f1c8a39f800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1c8a3205d0"/></to>
    </wire>
    <wire loc="38:FMClick/FMClickC.nc">
      <from><interface-ref name="INTPin" scoped="" ref="0x7f1c8aba6e40"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7f1c8a39de40"/></to>
    </wire>
    <wire loc="251:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f1c8a39de40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1c8a31e8f0"/></to>
    </wire>
    <wire loc="40:FMClick/FMClickC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7f1c8ab9f020"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7f1c8aacf440"/></to>
    </wire>
    <wire loc="184:FMClick/FMClickP.nc">
      <from><interface-ref name="seek" scoped="" ref="0x7f1c8ab8d2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="182:FMClick/FMClickP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7f1c8ab8f2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:FMClick/FMClickP.nc">
      <from><interface-ref name="decodeRDS" scoped="" ref="0x7f1c8ab8c2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:FMClick/FMClickP.nc">
      <from><interface-ref name="tune" scoped="" ref="0x7f1c8ab8e2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Hpl" scoped="" ref="0x7f1c8aa927f0"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f1c8aacb640"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="HplKS0108" scoped="" ref="0x7f1c8aacb640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7f1c8aa23be0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_0" scoped="" ref="0x7f1c8aa209c0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x7f1c8a9bb020"/></to>
    </wire>
    <wire loc="175:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f1c8a9bb020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1c8a919760"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_1" scoped="" ref="0x7f1c8aa1fce0"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x7f1c8a9ba350"/></to>
    </wire>
    <wire loc="176:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f1c8a9ba350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1c8a9188f0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RS" scoped="" ref="0x7f1c8aa1d020"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f1c8a9b9670"/></to>
    </wire>
    <wire loc="177:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f1c8a9b9670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1c8a917a80"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RW" scoped="" ref="0x7f1c8aa1c370"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f1c8a9b8990"/></to>
    </wire>
    <wire loc="178:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f1c8a9b8990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1c8a915c10"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="EN" scoped="" ref="0x7f1c8aa1b690"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f1c8a9b7cb0"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f1c8a9b7cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1c8a914da0"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RST" scoped="" ref="0x7f1c8aa1a9b0"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f1c8a9b5020"/></to>
    </wire>
    <wire loc="180:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f1c8a9b5020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1c8a912020"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="Data" scoped="" ref="0x7f1c8aa10410"/></from>
      <to><interface-ref name="PortA" scoped="" ref="0x7f1c8a86e8d0"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortA" scoped="" ref="0x7f1c8a86e8d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a856aa0"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f1c8aa17200"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f1c8a807290"/></to>
    </wire>
    <wire loc="191:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f1c8a9abcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a8ba160"/></to>
    </wire>
    <wire loc="165:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f1c8a9c7350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1c8a9292b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1c8a9292b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89e41e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1c8a9188f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89dce3f0"/></to>
    </wire>
    <wire loc="185:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f1c8a9b1cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1c8a908c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1c8a908c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89d5b3f0"/></to>
    </wire>
    <wire loc="196:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f1c8a9a4060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a8a06d0"/></to>
    </wire>
    <wire loc="143:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f1c8a9df350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1c8a9512b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1c8a9512b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f71e20"/></to>
    </wire>
    <wire loc="183:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f1c8a9b3670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1c8a90b8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1c8a90b8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89d62e20"/></to>
    </wire>
    <wire loc="146:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f1c8a9dd990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1c8a94aa20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1c8a94aa20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f1ac90"/></to>
    </wire>
    <wire loc="157:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f1c8a9d0990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1c8a937020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1c8a937020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89ea70a0"/></to>
    </wire>
    <wire loc="168:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f1c8a9c4cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1c8a926760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1c8a926760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89e366d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1c8a914da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89dc5e20"/></to>
    </wire>
    <wire loc="138:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f1c8a9e5350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1c8a9588f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1c8a9588f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f81e20"/></to>
    </wire>
    <wire loc="149:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f1c8a9d9350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1c8a945020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1c8a945020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f0f3f0"/></to>
    </wire>
    <wire loc="160:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f1c8a9cc350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1c8a9345d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1c8a9345d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89e9e9b0"/></to>
    </wire>
    <wire loc="171:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f1c8a9c0670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1c8a923c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1c8a923c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89e2c0a0"/></to>
    </wire>
    <wire loc="188:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f1c8a9ad670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1c8a9042b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1c8a9042b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89d51e20"/></to>
    </wire>
    <wire loc="194:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f1c8a9a7b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a8ab160"/></to>
    </wire>
    <wire loc="174:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f1c8a9becb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1c8a91a5d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1c8a91a5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89dd6e20"/></to>
    </wire>
    <wire loc="141:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f1c8a9e2cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1c8a955da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1c8a955da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f776d0"/></to>
    </wire>
    <wire loc="152:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f1c8a9d5cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1c8a9425d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1c8a9425d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f06e20"/></to>
    </wire>
    <wire loc="192:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f1c8a9a94e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a8b6c90"/></to>
    </wire>
    <wire loc="155:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f1c8a9d2350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1c8a93ad30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1c8a93ad30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89eafc90"/></to>
    </wire>
    <wire loc="166:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f1c8a9c6670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1c8a928440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1c8a928440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89e3d0a0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1c8a917a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89dcb6d0"/></to>
    </wire>
    <wire loc="186:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f1c8a9af020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1c8a907da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1c8a907da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89d576d0"/></to>
    </wire>
    <wire loc="144:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f1c8a9de670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1c8a950440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1c8a950440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f6d0a0"/></to>
    </wire>
    <wire loc="147:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f1c8a9dccb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1c8a949c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1c8a949c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f17e20"/></to>
    </wire>
    <wire loc="158:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f1c8a9cfcb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1c8a9362b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1c8a9362b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89ea43f0"/></to>
    </wire>
    <wire loc="169:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f1c8a9c2020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1c8a9258f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1c8a9258f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89e339b0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1c8a912020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89dc10a0"/></to>
    </wire>
    <wire loc="139:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f1c8a9e4670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1c8a957a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1c8a957a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f7d0a0"/></to>
    </wire>
    <wire loc="150:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f1c8a9d7670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1c8a9442b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1c8a9442b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f0c6d0"/></to>
    </wire>
    <wire loc="161:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f1c8a9cb670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1c8a933760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1c8a933760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89e9be20"/></to>
    </wire>
    <wire loc="189:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f1c8a9ac990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1c8a903440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1c8a903440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89d4d0a0"/></to>
    </wire>
    <wire loc="164:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f1c8a9c9cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1c8a92a020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1c8a92a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89e44c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1c8a919760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89dd20a0"/></to>
    </wire>
    <wire loc="184:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f1c8a9b2990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1c8a909a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1c8a909a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89d5e0a0"/></to>
    </wire>
    <wire loc="195:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f1c8a9a6e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a8a6c90"/></to>
    </wire>
    <wire loc="142:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f1c8a9e0020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1c8a952020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1c8a952020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f749b0"/></to>
    </wire>
    <wire loc="153:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f1c8a9d3020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1c8a941760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1c8a941760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f020a0"/></to>
    </wire>
    <wire loc="182:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f1c8a9b4350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1c8a90c7a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1c8a90c7a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89d65c90"/></to>
    </wire>
    <wire loc="156:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f1c8a9d1670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1c8a939e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1c8a939e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89eace20"/></to>
    </wire>
    <wire loc="167:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f1c8a9c5990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1c8a9275d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1c8a9275d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89e393f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1c8a915c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89dc89b0"/></to>
    </wire>
    <wire loc="187:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f1c8a9ae350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1c8a905020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1c8a905020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89d549b0"/></to>
    </wire>
    <wire loc="137:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f1c8a9e6020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1c8a9596b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1c8a9596b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f859b0"/></to>
    </wire>
    <wire loc="148:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f1c8a9da020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1c8a947da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1c8a947da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f120a0"/></to>
    </wire>
    <wire loc="159:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f1c8a9cd020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1c8a935440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1c8a935440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89ea16d0"/></to>
    </wire>
    <wire loc="170:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f1c8a9c1350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1c8a924a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1c8a924a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89e30e20"/></to>
    </wire>
    <wire loc="193:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f1c8a9a8800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a8b06d0"/></to>
    </wire>
    <wire loc="173:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f1c8a9bf990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1c8a91b3f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1c8a91b3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89dd9c90"/></to>
    </wire>
    <wire loc="162:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f1c8a9ca990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1c8a9328f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1c8a9328f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89e970a0"/></to>
    </wire>
    <wire loc="140:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f1c8a9e3990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1c8a956c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1c8a956c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f7a3f0"/></to>
    </wire>
    <wire loc="151:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f1c8a9d6990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1c8a943440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1c8a943440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89f099b0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortL" scoped="" ref="0x7f1c8a85c550"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a8136c0"/></to>
    </wire>
    <wire loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortD" scoped="" ref="0x7f1c8a869d20"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a834910"/></to>
    </wire>
    <wire loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortG" scoped="" ref="0x7f1c8a865020"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a826910"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortJ" scoped="" ref="0x7f1c8a85e1d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a81c6c0"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortB" scoped="" ref="0x7f1c8a86ba00"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a83fe80"/></to>
    </wire>
    <wire loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortE" scoped="" ref="0x7f1c8a868de0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a830cd0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortH" scoped="" ref="0x7f1c8a85f100"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a821780"/></to>
    </wire>
    <wire loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortK" scoped="" ref="0x7f1c8a85d3c0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a8186c0"/></to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortC" scoped="" ref="0x7f1c8a86ab90"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a839390"/></to>
    </wire>
    <wire loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortF" scoped="" ref="0x7f1c8a867e80"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a82a390"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f1c8a7f49e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f1c8a7a0c90"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f1c8a7fa9e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f1c8a7b6da0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f1c8a7f79e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f1c8a7a9c90"/></to>
    </wire>
    <wire loc="78:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f1c8a7f39e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f1c8a79cc90"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f1c8a7f99e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f1c8a7b2c90"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f1c8a7f69e0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f1c8a7a4c90"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f1c8aacd9b0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f1c8a7cd060"/></to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a7cde80"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f1c8a7ec860"/></to>
    </wire>
    <wire loc="81:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a7b5c20"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f1c8a7ee020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a7b1b40"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f1c8a7ee7a0"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a7acb40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f1c8a7ed020"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a7a8b40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f1c8a7ed7a0"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a7a3b40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f1c8a7eb020"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a79fb40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f1c8a7eb7a0"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a79bb40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f1c8a7ea020"/></to>
    </wire>
    <wire loc="60:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1c8a781530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1c8a6da470"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7f1c8a780a20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f1c8a6a3370"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f1c8a69e210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1c8a6f4e60"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1c8a6f4e60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1c89be5020"/></to>
    </wire>
    <wire loc="64:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7f1c8a69d020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7f1c8a629c00"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7f1c8a699cd0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7f1c8a6248e0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1c8a6edc40"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1c8a629340"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c8a6eb9d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c8a6f2400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c8a6f2400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c89be4560"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f1c8a623020"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f1c8a6180e0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7f1c8a6180e0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7f1c8a615a70"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f1c8a621ac0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1c8a5a6980"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f1c8a61f160"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1c8a5a6980"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1c8a6f3bf0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1c89be5d80"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1c8a6f0060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1c89be3270"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c89be3b60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c8a6f0930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1c89be2440"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f1c89be8e20"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1c89bdf7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f1c8a61e7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7f1c8a610540"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7f1c8a9c9cb0"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7f1c8a60f810"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7f1c8a9c7350"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f1c8a5d84a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f1c8a5d4dc0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1c8a5aeab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c8a5d47c0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1c8a5d0550"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f1c8a5b11d0"/></to>
    </wire>
    <wire loc="57:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f1c8a5b11d0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f1c8a9e6020"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1c8a5cf7f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f1c8a5b0510"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f1c8a5b0510"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f1c8a9e5350"/></to>
    </wire>
    <wire loc="56:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1c8a5ceb10"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f1c8a5af830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f1c8a5af830"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f1c8a9e4670"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1c8a57c020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f1c8a573c30"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f1c8a573c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1c8a3e7150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1c8a577e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c8a56bc80"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f1c8a569500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f1c8a3d9790"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1c8a56bc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c8a466ba0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f1c8a3e1640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1c8a436830"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1c8a431cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f1c8a55e960"/></to>
    </wire>
    <wire loc="35:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f1c8a55e960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1c8a4654b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1c8a3d8a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f1c8a55b020"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f1c8a55b020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1c8a4618d0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f1c8a4618d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f1c89b4ad50"/></to>
    </wire>
    <wire loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f1c8a466ba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f1c89b4e1b0"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f1c8a4654b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f1c89b4e9c0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1c89b47020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1c8a4de8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f1c8a4de8f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f1c8a4cda10"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f1c89b42190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f1c8a4d7c10"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f1c8a4d7c10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f1c8a4c8db0"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f1c89b403e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1c8a4d5060"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f1c8a4d5060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f1c8a4c61a0"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f1c89b3d780"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f1c8a4d1570"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7f1c8a4d1570"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7f1c8a4c2bf0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f1c8a42c020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f1c8a3dca00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f1c8a382020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a2c86d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1c8a3205d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89957e20"/></to>
    </wire>
    <wire loc="260:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f1c8a393670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1c8a30fc10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1c8a30fc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c898e53f0"/></to>
    </wire>
    <wire loc="269:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f1c8a389020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1c8a2ff020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1c8a2ff020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8987a3f0"/></to>
    </wire>
    <wire loc="280:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7f1c8a37c350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a2aec90"/></to>
    </wire>
    <wire loc="284:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH2" scoped="" ref="0x7f1c8a379cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a289c90"/></to>
    </wire>
    <wire loc="289:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH7" scoped="" ref="0x7f1c8a373cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a26f9b0"/></to>
    </wire>
    <wire loc="297:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ6" scoped="" ref="0x7f1c8a36a350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a24c180"/></to>
    </wire>
    <wire loc="300:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK0" scoped="" ref="0x7f1c8a367990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a242c90"/></to>
    </wire>
    <wire loc="311:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL2" scoped="" ref="0x7f1c8a35b990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a210180"/></to>
    </wire>
    <wire loc="227:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f1c8a3b7990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1c8a3495d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1c8a3495d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a883f0"/></to>
    </wire>
    <wire loc="267:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f1c8a38c990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1c8a302c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1c8a302c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89882e20"/></to>
    </wire>
    <wire loc="230:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f1c8a3b4020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1c8a341d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1c8a341d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a30a60"/></to>
    </wire>
    <wire loc="241:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f1c8a3a8020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1c8a32f440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1c8a32f440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c899be0a0"/></to>
    </wire>
    <wire loc="252:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f1c8a39b060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1c8a31da80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1c8a31da80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8994d6d0"/></to>
    </wire>
    <wire loc="263:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f1c8a38f020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1c8a30b2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1c8a30b2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c898dce20"/></to>
    </wire>
    <wire loc="222:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f1c8a3bdb20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1c8a34fc10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1c8a34fc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a98460"/></to>
    </wire>
    <wire loc="233:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f1c8a3b1990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1c8a33d2b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1c8a33d2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a263f0"/></to>
    </wire>
    <wire loc="244:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f1c8a3a5990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1c8a32b8f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1c8a32b8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c899b59b0"/></to>
    </wire>
    <wire loc="255:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f1c8a398990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1c8a319020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1c8a319020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c899430a0"/></to>
    </wire>
    <wire loc="272:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f1c8a386990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1c8a2fb5d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1c8a2fb5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89871e20"/></to>
    </wire>
    <wire loc="278:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f1c8a37fcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a2b86d0"/></to>
    </wire>
    <wire loc="282:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH0" scoped="" ref="0x7f1c8a37b670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a292020"/></to>
    </wire>
    <wire loc="258:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f1c8a395020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1c8a3118f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1c8a3118f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c898ede20"/></to>
    </wire>
    <wire loc="287:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH5" scoped="" ref="0x7f1c8a375670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a27ae20"/></to>
    </wire>
    <wire loc="292:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ1" scoped="" ref="0x7f1c8a370350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a2656d0"/></to>
    </wire>
    <wire loc="295:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ4" scoped="" ref="0x7f1c8a36dcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a2566d0"/></to>
    </wire>
    <wire loc="303:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK3" scoped="" ref="0x7f1c8a363350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a233c90"/></to>
    </wire>
    <wire loc="306:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK6" scoped="" ref="0x7f1c8a360cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a225c90"/></to>
    </wire>
    <wire loc="309:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL0" scoped="" ref="0x7f1c8a35d350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a21a6d0"/></to>
    </wire>
    <wire loc="314:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL5" scoped="" ref="0x7f1c8a357350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a2016d0"/></to>
    </wire>
    <wire loc="225:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f1c8a3b9350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1c8a34b2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1c8a34b2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a8fe20"/></to>
    </wire>
    <wire loc="236:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f1c8a3ad350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1c8a339760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1c8a339760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a1de20"/></to>
    </wire>
    <wire loc="276:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f1c8a381670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a2c3160"/></to>
    </wire>
    <wire loc="239:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f1c8a3ab990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1c8a331020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1c8a331020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c899c6c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1c8a31f760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c899530a0"/></to>
    </wire>
    <wire loc="261:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f1c8a392990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1c8a30eda0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1c8a30eda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c898e26d0"/></to>
    </wire>
    <wire loc="270:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f1c8a388350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1c8a2fe2b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1c8a2fe2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c898776d0"/></to>
    </wire>
    <wire loc="285:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH3" scoped="" ref="0x7f1c8a377020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a283180"/></to>
    </wire>
    <wire loc="298:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ7" scoped="" ref="0x7f1c8a369670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a2476d0"/></to>
    </wire>
    <wire loc="301:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK1" scoped="" ref="0x7f1c8a366cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a23d180"/></to>
    </wire>
    <wire loc="312:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL3" scoped="" ref="0x7f1c8a35acb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a20b6d0"/></to>
    </wire>
    <wire loc="293:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ2" scoped="" ref="0x7f1c8a36f670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a260c90"/></to>
    </wire>
    <wire loc="228:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f1c8a3b6cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1c8a348760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1c8a348760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a856d0"/></to>
    </wire>
    <wire loc="304:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK4" scoped="" ref="0x7f1c8a362670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a22e180"/></to>
    </wire>
    <wire loc="315:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL6" scoped="" ref="0x7f1c8a356670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a1fcc90"/></to>
    </wire>
    <wire loc="231:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f1c8a3b3350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1c8a340e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1c8a340e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a2de20"/></to>
    </wire>
    <wire loc="242:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f1c8a3a7350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1c8a32d5d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1c8a32d5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c899bb3f0"/></to>
    </wire>
    <wire loc="253:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f1c8a39a350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1c8a31cc10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1c8a31cc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8994a9b0"/></to>
    </wire>
    <wire loc="264:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f1c8a38e350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1c8a30a440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1c8a30a440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c898d80a0"/></to>
    </wire>
    <wire loc="223:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f1c8a3bce40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1c8a34eda0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1c8a34eda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a956d0"/></to>
    </wire>
    <wire loc="234:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f1c8a3b0cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1c8a33c440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1c8a33c440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a236d0"/></to>
    </wire>
    <wire loc="245:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f1c8a3a4cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1c8a32aa80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1c8a32aa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c899b2e20"/></to>
    </wire>
    <wire loc="273:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f1c8a384cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1c8a2fa760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1c8a2fa760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8986d0a0"/></to>
    </wire>
    <wire loc="283:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH1" scoped="" ref="0x7f1c8a37a990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a28d6d0"/></to>
    </wire>
    <wire loc="248:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f1c8a3a0350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1c8a3213f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1c8a3213f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8995bc90"/></to>
    </wire>
    <wire loc="259:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f1c8a394350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1c8a310a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1c8a310a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c898e80a0"/></to>
    </wire>
    <wire loc="268:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f1c8a38bcb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1c8a301da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1c8a301da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8987d0a0"/></to>
    </wire>
    <wire loc="279:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f1c8a37d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a2b3160"/></to>
    </wire>
    <wire loc="288:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH6" scoped="" ref="0x7f1c8a374990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a274460"/></to>
    </wire>
    <wire loc="296:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ5" scoped="" ref="0x7f1c8a36b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a251c90"/></to>
    </wire>
    <wire loc="307:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK7" scoped="" ref="0x7f1c8a35e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a21f180"/></to>
    </wire>
    <wire loc="310:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL1" scoped="" ref="0x7f1c8a35c670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a216c90"/></to>
    </wire>
    <wire loc="226:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f1c8a3b8670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1c8a34a440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1c8a34a440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a8b0a0"/></to>
    </wire>
    <wire loc="237:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f1c8a3ac670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1c8a3388f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1c8a3388f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a190a0"/></to>
    </wire>
    <wire loc="266:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f1c8a38d670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1c8a303a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1c8a303a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89885c90"/></to>
    </wire>
    <wire loc="240:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f1c8a3aacb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f1c8a3302b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f1c8a3302b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c899c2e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1c8a31e8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c899503f0"/></to>
    </wire>
    <wire loc="262:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f1c8a391cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1c8a30c020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1c8a30c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c898df9b0"/></to>
    </wire>
    <wire loc="271:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f1c8a387670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1c8a2fc440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1c8a2fc440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c898749b0"/></to>
    </wire>
    <wire loc="221:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f1c8a3c07f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1c8a350a80"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1c8a350a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a9b270"/></to>
    </wire>
    <wire loc="232:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f1c8a3b2670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f1c8a33e020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f1c8a33e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a290a0"/></to>
    </wire>
    <wire loc="243:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f1c8a3a6670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f1c8a32c760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f1c8a32c760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c899b86d0"/></to>
    </wire>
    <wire loc="254:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f1c8a399670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f1c8a31bda0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f1c8a31bda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89947e20"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f1c8a380990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a2bec90"/></to>
    </wire>
    <wire loc="286:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH4" scoped="" ref="0x7f1c8a376350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a27e830"/></to>
    </wire>
    <wire loc="291:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ0" scoped="" ref="0x7f1c8a371020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a26a160"/></to>
    </wire>
    <wire loc="257:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f1c8a397cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f1c8a3127a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f1c8a3127a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c898f0c90"/></to>
    </wire>
    <wire loc="294:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ3" scoped="" ref="0x7f1c8a36e990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a25b180"/></to>
    </wire>
    <wire loc="302:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK2" scoped="" ref="0x7f1c8a364020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a2386d0"/></to>
    </wire>
    <wire loc="305:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK5" scoped="" ref="0x7f1c8a361990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a2296d0"/></to>
    </wire>
    <wire loc="313:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL4" scoped="" ref="0x7f1c8a358020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a2060a0"/></to>
    </wire>
    <wire loc="316:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL7" scoped="" ref="0x7f1c8a355990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c8a1f7180"/></to>
    </wire>
    <wire loc="246:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f1c8a3a1020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f1c8a329c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f1c8a329c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c899ae0a0"/></to>
    </wire>
    <wire loc="224:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f1c8a3ba060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f1c8a34c020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f1c8a34c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a929b0"/></to>
    </wire>
    <wire loc="235:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f1c8a3ae020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f1c8a33b5d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f1c8a33b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f1c89a209b0"/></to>
    </wire>
    <wire loc="21:PS2/PS2C.nc">
      <from><interface-ref name="ClockIRQ" scoped="" ref="0x7f1c8a170d90"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f1c8a19cca0"/></to>
    </wire>
    <wire loc="23:PS2/PS2C.nc">
      <from><interface-ref name="ClockPin" scoped="" ref="0x7f1c8a1751c0"/></from>
      <to><interface-ref name="PortK7" scoped="" ref="0x7f1c8a35e020"/></to>
    </wire>
    <wire loc="24:PS2/PS2C.nc">
      <from><interface-ref name="DataPin" scoped="" ref="0x7f1c8a16f4f0"/></from>
      <to><interface-ref name="PortK6" scoped="" ref="0x7f1c8a360cb0"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1c89fdbbe0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1c8a115450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="VolumePin" scoped="" ref="0x7f1c8a128020"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x7f1c8a38d670"/></to>
    </wire>
    <wire loc="26:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f1c89fd9320"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f1c8a126d30"/></to>
    </wire>
    <wire loc="27:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c89fd9c10"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c8a12a700"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f1c8a10e280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f1c89fd9320"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1c8a10c1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1c8a10be40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c8a106210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c89fd9c10"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f1c8a115450"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1c89ffd150"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f1c8a1134f0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f1c8a0281d0"/></to>
    </wire>
    <wire loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1c89fe2300"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1c8a10c1d0"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f1c8a025a10"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f1c8a10e280"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f1c89fe5af0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f1c8a02a410"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f1c8a0269f0"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f1c8a101450"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f1c8a101450"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f1c8a0f8830"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f1c8a024740"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f1c8a807290"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1c8a10be40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1c8a045e70"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f1c8a045e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f1c8967f4d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f1c8a0fb420"/></from>
      <to><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f1c8a0f7330"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c8a042930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c8a106210"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f1c8a0e7710"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f1c8a0b5460"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f1c8a0b5460"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f1c8a0af7d0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f1c8a0f5be0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f1c8ac94020"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1c8a03e020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1c8a0f8020"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c8a03ed50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c8a043400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c8a043400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c8967eb20"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f1c8a0adc10"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f1c8ad045a0"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f1c8a044c00"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f1c8967e3a0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1c8a042060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1c8967d8b0"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c8967c210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c8a042930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f1c8967c9d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1c896822b0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f1c8967ac50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1c89647660"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1c8a03e020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1c89647dc0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1c8a03e780"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c896463d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c8a03ed50"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1c89645020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1c8a034990"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f1c8a012820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../tinyos_ws18/tos/system/MainC.nc">
      <documentation loc="45:../tinyos_ws18/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <documentation loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../tinyos_ws18/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../tinyos_ws18/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../tinyos_ws18/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc" safe="">
      <documentation loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioScannerP" loc="15:RadioScannerP.nc">
      <documentation loc="1:RadioScannerP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file RadioScannerP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-20&#10;&#10; Implementation of the RadioScanner app.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC" loc="11:FMClick/FMClickC.nc">
      <documentation loc="1:FMClick/FMClickC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; Configuration of the FMClick module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FMClickP" loc="17:FMClick/FMClickP.nc">
      <documentation loc="1:FMClick/FMClickP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; FMClick module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="GlcdC" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
        <short>&#10; High level implementation for KS0108 Glcd&#10; </short>
        <long>&#10; High level implementation for KS0108 Glcd&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="GlcdP" loc="41:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <module/>
    </component>
    <component qname="HplKS0108C" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
        <short>&#10; Configuration for KS0108 GLCD Display&#10; </short>
        <long>&#10; Configuration for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplKS0108P" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
        <short>&#10; Hpl implementation for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl implementation for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10; Based on an implementation of Andreas Hagmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC" loc="6:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortAP" loc="6(HplAtm128GeneralIOFastPortC.PortAP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortBP" loc="6(HplAtm128GeneralIOFastPortC.PortBP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortCP" loc="6(HplAtm128GeneralIOFastPortC.PortCP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortDP" loc="6(HplAtm128GeneralIOFastPortC.PortDP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortEP" loc="6(HplAtm128GeneralIOFastPortC.PortEP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortFP" loc="6(HplAtm128GeneralIOFastPortC.PortFP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortGP" loc="6(HplAtm128GeneralIOFastPortC.PortGP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortHP" loc="6(HplAtm128GeneralIOFastPortC.PortHP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortJP" loc="6(HplAtm128GeneralIOFastPortC.PortJP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortKP" loc="6(HplAtm128GeneralIOFastPortC.PortKP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortLP" loc="6(HplAtm128GeneralIOFastPortC.PortLP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:9">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="38:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc" safe="">
      <documentation loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FMClickC.I2C" loc="43(FMClickC.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../tinyos_ws18/tos/system/LedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc" safe="">
      <documentation loc="35:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../tinyos_ws18/tos/system/NoLedsC.nc">
      <documentation loc="35:../tinyos_ws18/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.Timer" loc="44(FMClickC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <documentation loc="11:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC" loc="32(AlarmCounterMilliP.Atm1280AlarmSyncC):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:124">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP" loc="33(AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f1c8a551160"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280Timer2SyncC" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <documentation loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280Timer2SyncP" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc" safe="">
      <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changed to sync mode&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; Changed for Atm1280&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA" loc="40(HplAtm1280GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit0" loc="41(HplAtm1280GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="48">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit1" loc="41(HplAtm1280GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="49">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit2" loc="41(HplAtm1280GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="50">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit3" loc="41(HplAtm1280GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="51">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit4" loc="41(HplAtm1280GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="52">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit5" loc="41(HplAtm1280GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="53">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit6" loc="41(HplAtm1280GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="54">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit7" loc="41(HplAtm1280GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="55">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB" loc="40(HplAtm1280GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit0" loc="41(HplAtm1280GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="56">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit1" loc="41(HplAtm1280GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="57">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit2" loc="41(HplAtm1280GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="58">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit3" loc="41(HplAtm1280GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="59">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit4" loc="41(HplAtm1280GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="60">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit5" loc="41(HplAtm1280GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="61">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit6" loc="41(HplAtm1280GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="62">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit7" loc="41(HplAtm1280GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="63">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC" loc="40(HplAtm1280GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit0" loc="41(HplAtm1280GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="64">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit1" loc="41(HplAtm1280GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="65">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit2" loc="41(HplAtm1280GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="66">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit3" loc="41(HplAtm1280GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="67">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit4" loc="41(HplAtm1280GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="68">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit5" loc="41(HplAtm1280GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="69">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit6" loc="41(HplAtm1280GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="70">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit7" loc="41(HplAtm1280GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="71">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD" loc="40(HplAtm1280GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit0" loc="41(HplAtm1280GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="72">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit1" loc="41(HplAtm1280GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="73">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit2" loc="41(HplAtm1280GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="74">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit3" loc="41(HplAtm1280GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="75">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit4" loc="41(HplAtm1280GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="76">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit5" loc="41(HplAtm1280GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="77">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit6" loc="41(HplAtm1280GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="78">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit7" loc="41(HplAtm1280GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="79">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE" loc="40(HplAtm1280GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit0" loc="41(HplAtm1280GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="80">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit1" loc="41(HplAtm1280GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="81">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit2" loc="41(HplAtm1280GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="82">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit3" loc="41(HplAtm1280GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="83">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit4" loc="41(HplAtm1280GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="84">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit5" loc="41(HplAtm1280GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="85">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit6" loc="41(HplAtm1280GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="86">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit7" loc="41(HplAtm1280GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="87">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF" loc="40(HplAtm1280GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit0" loc="41(HplAtm1280GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="88">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit1" loc="41(HplAtm1280GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="89">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit2" loc="41(HplAtm1280GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="90">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit3" loc="41(HplAtm1280GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="91">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit4" loc="41(HplAtm1280GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="92">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit5" loc="41(HplAtm1280GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="93">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit6" loc="41(HplAtm1280GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="94">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit7" loc="41(HplAtm1280GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="95">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F0" loc="42(HplAtm1280GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F1" loc="42(HplAtm1280GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F2" loc="42(HplAtm1280GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F3" loc="42(HplAtm1280GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F4" loc="42(HplAtm1280GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F5" loc="42(HplAtm1280GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F6" loc="42(HplAtm1280GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F7" loc="42(HplAtm1280GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G0" loc="42(HplAtm1280GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G1" loc="42(HplAtm1280GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G2" loc="42(HplAtm1280GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G3" loc="42(HplAtm1280GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G4" loc="42(HplAtm1280GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G5" loc="42(HplAtm1280GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H0" loc="42(HplAtm1280GeneralIOC.H0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H1" loc="42(HplAtm1280GeneralIOC.H1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H2" loc="42(HplAtm1280GeneralIOC.H2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H3" loc="42(HplAtm1280GeneralIOC.H3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H4" loc="42(HplAtm1280GeneralIOC.H4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H5" loc="42(HplAtm1280GeneralIOC.H5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H6" loc="42(HplAtm1280GeneralIOC.H6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H7" loc="42(HplAtm1280GeneralIOC.H7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J0" loc="42(HplAtm1280GeneralIOC.J0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J1" loc="42(HplAtm1280GeneralIOC.J1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J2" loc="42(HplAtm1280GeneralIOC.J2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J3" loc="42(HplAtm1280GeneralIOC.J3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J4" loc="42(HplAtm1280GeneralIOC.J4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J5" loc="42(HplAtm1280GeneralIOC.J5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J6" loc="42(HplAtm1280GeneralIOC.J6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J7" loc="42(HplAtm1280GeneralIOC.J7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K0" loc="42(HplAtm1280GeneralIOC.K0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K1" loc="42(HplAtm1280GeneralIOC.K1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K2" loc="42(HplAtm1280GeneralIOC.K2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K3" loc="42(HplAtm1280GeneralIOC.K3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K4" loc="42(HplAtm1280GeneralIOC.K4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K5" loc="42(HplAtm1280GeneralIOC.K5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K6" loc="42(HplAtm1280GeneralIOC.K6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K7" loc="42(HplAtm1280GeneralIOC.K7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L0" loc="42(HplAtm1280GeneralIOC.L0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L1" loc="42(HplAtm1280GeneralIOC.L1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L2" loc="42(HplAtm1280GeneralIOC.L2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L3" loc="42(HplAtm1280GeneralIOC.L3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L4" loc="42(HplAtm1280GeneralIOC.L4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L5" loc="42(HplAtm1280GeneralIOC.L5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L6" loc="42(HplAtm1280GeneralIOC.L6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L7" loc="42(HplAtm1280GeneralIOC.L7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PS2C" loc="11:PS2/PS2C.nc">
      <documentation loc="1:PS2/PS2C.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file    PS2C.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the PS2 module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PS2P" loc="18:PS2/PS2P.nc">
      <module/>
    </component>
    <component qname="HplAtmegaPinChange2C" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <module/>
    </component>
    <component qname="VolumeAdcC" loc="13:VolumeAdc/VolumeAdcC.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the VolumeAdc module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="VolumeAdcP" loc="13:VolumeAdc/VolumeAdcP.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; VolumeAdc module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="VolumeAdcC.Adc" loc="21(VolumeAdcC.Adc):../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <documentation loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcP" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc" safe="">
      <documentation loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
        <short>&#10; Internal component of the Atmega1280 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1280 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm1280AdcC" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280AdcP" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc" safe="">
      <documentation loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter" loc="89(Atm1280AdcC.AdcArbiter):../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Queue" loc="42(Atm1280AdcC.AdcArbiter.Queue):../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Arbiter" loc="52(Atm1280AdcC.AdcArbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.PM" loc="67(Atm1280AdcC.PM):../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.PM.PowerManager" loc="58(Atm1280AdcC.PM.PowerManager):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc" safe="">
      <documentation loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
        <short>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RadioScannerAppC.Timer" loc="44(RadioScannerAppC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f1c8a9a0590" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f1c8a9a0900" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f1c8a9a0c70" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f1c8a9929e0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f1c8a992d70" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f1c8a98f170" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f1c8a98f4c0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f1c8a8fa0d0" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f1c8a8fa460" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f1c8a8fa7f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f1c8a8fab40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortP" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f1c8a858810" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f1c8a858b80" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f1c8a855020" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f1c8a7cc3d0" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f1c8a7cc760" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f1c8a7ccaf0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f1c8a7cce40" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f1c8a7776f0" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f1c8a764210" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f1c8a74bbd0" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../tinyos_ws18/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncC" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc" abstract="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f1c8a551160" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f1c8a551160"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f1c8a5514f0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f1c8a551880" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncP" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f1c8a545200" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f1c8a545200"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7f1c8a545590" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7f1c8a545920" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1c8a45b160" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1c8a45b160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1c8a428230" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1c8a428230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f1c8a428560" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1c8a3dade0" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1c8a3dade0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f1c8a2a84c0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f1c8a2a8860" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f1c8a2a8c00" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f1c8a2a6020" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f1c8a0725c0" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f1c8a06ce80" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadC" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f1c89ffc1f0" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f1c89ffc1f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f1c8ac97bf0" loc="58:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1c8ac97bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ac9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1c8ac98720" loc="57:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f1c8ac98720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1c8ac98aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f1c8ac94d50" loc="52:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f1c8ac94d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ac93100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c8ac9ad00" loc="46:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c8ac9ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ac950a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f1c8ac94020" loc="50:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f1c8ac94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f1c8ac943a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f1c8ac94530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f1c8ac946c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f1c8ac94850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f1c8ac949e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f1c8ac8c7a0" loc="45:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f1c8ac8c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ac8cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c8ac8c0c0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c8ac8c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ac8c440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f1c8ac8b020" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f1c8ac8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ac8b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f1c8ac846f0" loc="4:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f1c8ac846f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ac84a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f1c8ac84020" loc="3:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f1c8ac84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ac843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c8ac7b860" loc="51:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c8ac7b860"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f1c8ae273a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f1c8ae273a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ac7bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f1c8ac7a020" loc="52:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f1c8ac7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f1c8ac7a3a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f1c8ac7a530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f1c8ac7a6c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f1c8ac7a850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f1c8ac7a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f1c8ac67720" loc="60:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f1c8ac67720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ac67aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f1c8ac96e20" loc="57:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f1c8ac96e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1c8ac681c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f1c8ac67020" loc="59:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f1c8ac67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ac673a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f1c8ac684b0" loc="58:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f1c8ac684b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ac68830"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1c8ac689c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1c8ac68b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1c8ae1bbd0" loc="48:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ae1bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8ae4f020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8ae4f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1c8ae25a20" loc="47:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f1c8ae25a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ae25da0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1c8b7d3020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1c8b7d31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f1c8ad259e0" loc="56:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f1c8ad259e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8ad25d60"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8ad23020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f1c8ad200d0" loc="57:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f1c8ad200d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f1c8ad20450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f1c8ad26990" loc="55:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f1c8ad26990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ad26d10"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f1c8ad25020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f1c8ad251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f1c8ad03de0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1c8ad03de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1c8ad06180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f1c8ad3e080" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f1c8ad3e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f1c8ad3e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f1c8ad045a0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f1c8ad045a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f1c8ad04920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="handleRDS" ref="0x7f1c8abfe500" loc="205:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="handleRDS" scoped="" ref="0x7f1c8abfe500"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8abfe880"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8abfea10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f1c8ac5c0c0" loc="18:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f1c8ac5c0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f1c8ac5c440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x7f1c8ac5be30" loc="20:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x7f1c8ac5be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ac5a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="volumeKnob" ref="0x7f1c8ac3d060" loc="23:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="volumeKnob" scoped="" ref="0x7f1c8ac3d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c8ac3dc50"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c8ac3b110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inputTuneChannel" ref="0x7f1c8ac269d0" loc="57:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inputTuneChannel" scoped="" ref="0x7f1c8ac269d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8ac26d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8ac24020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Keyboard" ref="0x7f1c8ac3c600" loc="22:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Keyboard" scoped="" ref="0x7f1c8ac3c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8ac3c980"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f1c8ac3cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="handleChar" ref="0x7f1c8ac24d40" loc="63:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="handleChar" scoped="" ref="0x7f1c8ac24d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8ac230e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8ac23270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioInitFail" ref="0x7f1c8ac0b9c0" loc="165:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="radioInitFail" scoped="" ref="0x7f1c8ac0b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8ac0bd40"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8ac0a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seekBand" ref="0x7f1c8ac107e0" loc="154:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seekBand" scoped="" ref="0x7f1c8ac107e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8ac10b60"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8ac10cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedSeeking" ref="0x7f1c8ac03400" loc="189:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedSeeking" scoped="" ref="0x7f1c8ac03400"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8ac03780"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8ac03910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Radio" ref="0x7f1c8ac40d60" loc="21:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Radio" scoped="" ref="0x7f1c8ac40d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f1c8ac49e00"/>
        <function-ref name="initDone" scoped="" ref="0x7f1c8ac49310"/>
        <function-ref name="setVolume" scoped="" ref="0x7f1c8ac494a0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f1c8ac49630"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f1c8ac497c0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f1c8ac49950"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1c8ac49ae0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f1c8ac49c70"/>
        <function-ref name="seek" scoped="" ref="0x7f1c8ac49180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="finishedTuning" ref="0x7f1c8ac09d10" loc="171:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="finishedTuning" scoped="" ref="0x7f1c8ac09d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8ac081c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8ac08350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readyScreen" ref="0x7f1c8ac0e460" loc="159:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readyScreen" scoped="" ref="0x7f1c8ac0e460"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8ac0e7e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8ac0e970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f1c8ac4a980" loc="19:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f1c8ac4a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f1c8ac5bb10"/>
        <function-ref name="drawRect" scoped="" ref="0x7f1c8ac5b020"/>
        <function-ref name="drawLine" scoped="" ref="0x7f1c8ac5b1b0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f1c8ac5b340"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f1c8ac5b4d0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f1c8ac5b660"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f1c8ac5b7f0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f1c8ac4ad00"/>
        <function-ref name="drawText" scoped="" ref="0x7f1c8ac5b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1c8ac38220" loc="24:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1c8ac38220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1c8ac2c6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8ac37c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1c8ac2da70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1c8ac2d5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1c8ac2a020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1c8ac2cb60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1c8ac2d170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1c8ac38e10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1c8ac2c0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1c8ac37340"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8ac37810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c8abce020" loc="14:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c8abce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8abce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f1c8abce640" loc="15:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f1c8abce640"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f1c8abcd670"/>
        <function-ref name="initDone" scoped="" ref="0x7f1c8abceb50"/>
        <function-ref name="setVolume" scoped="" ref="0x7f1c8abcece0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f1c8abcee70"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f1c8abcd030"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f1c8abcd1c0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1c8abcd350"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f1c8abcd4e0"/>
        <function-ref name="seek" scoped="" ref="0x7f1c8abce9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seek" ref="0x7f1c8ab8d2a0" loc="184:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seek" scoped="" ref="0x7f1c8ab8d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8ab8d720"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8ab8d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDIOPin" ref="0x7f1c8aba7b30" loc="30:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SDIOPin" scoped="" ref="0x7f1c8aba7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8aba6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8aba61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8aba6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8aba64d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8aba6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8aba67f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8aba6980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8aba6b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="INTPin" ref="0x7f1c8aba6e40" loc="31:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="INTPin" scoped="" ref="0x7f1c8aba6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8aba01e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8aba0370"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8aba0500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8aba0690"/>
        <function-ref name="get" scoped="" ref="0x7f1c8aba0820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8aba09b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8aba0b40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8aba0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Int" ref="0x7f1c8abc2600" loc="25:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int" scoped="" ref="0x7f1c8abc2600"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8abc2980"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8abc2b10"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8abc2ca0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8abc2e30"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8abc8020"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8abc81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f1c8abaf6f0" loc="27:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f1c8abaf6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f1c8abbb110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f1c8abbb3d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c8abc13d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1c8abae880"/>
        <function-ref name="write" scoped="" ref="0x7f1c8abbd020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c8abbdc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7f1c8ab8f2a0" loc="182:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init" scoped="" ref="0x7f1c8ab8f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8ab8f620"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8ab8f7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="decodeRDS" ref="0x7f1c8ab8c2a0" loc="185:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="decodeRDS" scoped="" ref="0x7f1c8ab8c2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8ab8c620"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8ab8c7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c8abca290" loc="20:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c8abca290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8abca610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7f1c8abbe8e0" loc="26:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7f1c8abbe8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8abbec60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1c8abbedf0"/>
        <function-ref name="request" scoped="" ref="0x7f1c8abc7020"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8abc71b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8abc7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTPin" ref="0x7f1c8aba1920" loc="29:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTPin" scoped="" ref="0x7f1c8aba1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8aba1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8aba1e30"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8aba7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8aba71b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8aba7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8aba74d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8aba7660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8aba77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7f1c8abca8b0" loc="21:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7f1c8abca8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7f1c8abc9980"/>
        <function-ref name="initDone" scoped="" ref="0x7f1c8abcadc0"/>
        <function-ref name="setVolume" scoped="" ref="0x7f1c8abc9020"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7f1c8abc91b0"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7f1c8abc9340"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7f1c8abc94d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1c8abc9660"/>
        <function-ref name="seekComplete" scoped="" ref="0x7f1c8abc97f0"/>
        <function-ref name="seek" scoped="" ref="0x7f1c8abcac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7f1c8ab9f020" loc="32:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f1c8ab9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f1c8ab9e1b0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f1c8ab9f530"/>
        <function-ref name="drawLine" scoped="" ref="0x7f1c8ab9f6c0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f1c8ab9f850"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f1c8ab9f9e0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f1c8ab9fb70"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f1c8ab9fd00"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f1c8ab9f3a0"/>
        <function-ref name="drawText" scoped="" ref="0x7f1c8ab9e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1c8abad620" loc="28:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1c8abad620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1c8abaac40"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8abab1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1c8abaa020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1c8ababae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1c8aba8590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1c8aba8110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1c8abab660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1c8abac390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1c8abaa630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1c8abac860"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8abacd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune" ref="0x7f1c8ab8e2a0" loc="183:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune" scoped="" ref="0x7f1c8ab8e2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8ab8e620"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8ab8e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f1c8aacf440" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <component-ref qname="GlcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f1c8aacf440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f1c8aacc4d0"/>
        <function-ref name="drawRect" scoped="" ref="0x7f1c8aacf950"/>
        <function-ref name="drawLine" scoped="" ref="0x7f1c8aacfae0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f1c8aacfc70"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f1c8aacfe00"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f1c8aacc020"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f1c8aacc1b0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f1c8aacf7c0"/>
        <function-ref name="drawText" scoped="" ref="0x7f1c8aacc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c8aa99150" loc="44:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c8aa99150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8aa994d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hpl" ref="0x7f1c8aa927f0" loc="45:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hpl" scoped="" ref="0x7f1c8aa927f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f1c8aa92b70"/>
        <function-ref name="init" scoped="" ref="0x7f1c8aa92d00"/>
        <function-ref name="dataRead" scoped="" ref="0x7f1c8aa98020"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f1c8aa981b0"/>
        <function-ref name="controlRead" scoped="" ref="0x7f1c8aa98340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7f1c8aa9be10" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7f1c8aa9be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7f1c8aa9ae40"/>
        <function-ref name="drawRect" scoped="" ref="0x7f1c8aa9a350"/>
        <function-ref name="drawLine" scoped="" ref="0x7f1c8aa9a4e0"/>
        <function-ref name="setPixel" scoped="" ref="0x7f1c8aa9a670"/>
        <function-ref name="invertPixel" scoped="" ref="0x7f1c8aa9a800"/>
        <function-ref name="clearPixel" scoped="" ref="0x7f1c8aa9a990"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7f1c8aa9ab20"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7f1c8aa9a1c0"/>
        <function-ref name="drawText" scoped="" ref="0x7f1c8aa9acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f1c8aacb640" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <component-ref qname="HplKS0108C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f1c8aacb640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f1c8aacb9c0"/>
        <function-ref name="init" scoped="" ref="0x7f1c8aacbb50"/>
        <function-ref name="dataRead" scoped="" ref="0x7f1c8aacbce0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f1c8aacbe70"/>
        <function-ref name="controlRead" scoped="" ref="0x7f1c8aa23030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EN" ref="0x7f1c8aa1b690" loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EN" scoped="" ref="0x7f1c8aa1b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8aa1ba10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8aa1bba0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8aa1bd30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8aa1a020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8aa1a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8aa1a340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8aa1a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8aa1a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f1c8aa17200" loc="34:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f1c8aa17200"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad6f5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1c8ad6f930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1c8aa0f090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_0" ref="0x7f1c8aa209c0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_0" scoped="" ref="0x7f1c8aa209c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8aa20d40"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8aa1f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8aa1f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8aa1f340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8aa1f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8aa1f660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8aa1f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8aa1f980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RST" ref="0x7f1c8aa1a9b0" loc="30:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RST" scoped="" ref="0x7f1c8aa1a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8aa1ad30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8aa19020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8aa191b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8aa19340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8aa194d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8aa19660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8aa197f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8aa19980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RS" ref="0x7f1c8aa1d020" loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RS" scoped="" ref="0x7f1c8aa1d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8aa1d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8aa1d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8aa1d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8aa1d850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8aa1d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8aa1db70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8aa1dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8aa1c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_1" ref="0x7f1c8aa1fce0" loc="26:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_1" scoped="" ref="0x7f1c8aa1fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8aa1e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8aa1e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8aa1e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8aa1e550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8aa1e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8aa1e870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8aa1ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8aa1eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7f1c8aa23be0" loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7f1c8aa23be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7f1c8aa20020"/>
        <function-ref name="init" scoped="" ref="0x7f1c8aa201b0"/>
        <function-ref name="dataRead" scoped="" ref="0x7f1c8aa20340"/>
        <function-ref name="controlWrite" scoped="" ref="0x7f1c8aa204d0"/>
        <function-ref name="controlRead" scoped="" ref="0x7f1c8aa20660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RW" ref="0x7f1c8aa1c370" loc="28:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RW" scoped="" ref="0x7f1c8aa1c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8aa1c6f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8aa1c880"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8aa1ca10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8aa1cba0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8aa1cd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8aa1b020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8aa1b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8aa1b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Data" ref="0x7f1c8aa10410" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Data" scoped="" ref="0x7f1c8aa10410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8aa10790"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8aa10920"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8aa10ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8aa10c40"/>
        <function-ref name="read" scoped="" ref="0x7f1c8aa10dd0"/>
        <function-ref name="write" scoped="" ref="0x7f1c8aa18020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8aa181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f1c8a9abcb0" loc="98:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f1c8a9abcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9aa610"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9aa7a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9aa930"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9aaac0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9aac50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9aade0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9a9020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9a91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f1c8a9c7350" loc="72:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f1c8a9c7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9c76d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9c7860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9c79f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9c7b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9c7d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9c6020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9c61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9c6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f1c8a9ba350" loc="83:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f1c8a9ba350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9ba6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9ba860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9ba9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9bab80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9bad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9b9020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9b91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9b9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f1c8a9b1cb0" loc="92:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f1c8a9b1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9b00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9b0230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9b03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9b0550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9b06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9b0870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9b0a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9b0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f1c8a9a4060" loc="103:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f1c8a9a4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9a43e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9a4570"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9a4700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9a4890"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9a4a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9a4bb0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9a4d40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f1c8a9df350" loc="50:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f1c8a9df350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9df6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9df860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9df9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9dfb80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9dfd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9de020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9de1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9de340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f1c8a9b3670" loc="90:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f1c8a9b3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9b39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9b3b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9b3d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9b2020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9b21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9b2340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9b24d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9b2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f1c8a9dd990" loc="53:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f1c8a9dd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9ddd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9dc020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9dc1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9dc340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9dc4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9dc660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9dc7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9dc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f1c8a9d0990" loc="64:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f1c8a9d0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9d0d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9cf020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9cf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9cf340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9cf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9cf660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9cf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9cf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f1c8a9c4cb0" loc="75:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f1c8a9c4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9c30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9c3230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9c33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9c3550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9c36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9c3870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9c3a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9c3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f1c8a9b7cb0" loc="86:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f1c8a9b7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9b60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9b6230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9b63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9b6550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9b66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9b6870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9b6a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9b6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f1c8a9e5350" loc="45:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f1c8a9e5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9e56d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9e5860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9e59f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9e5b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9e5d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9e4020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9e41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9e4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f1c8a9d9350" loc="56:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f1c8a9d9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9d96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9d9860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9d99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9d9b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9d9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9d7020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9d71b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9d7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f1c8a9cc350" loc="67:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f1c8a9cc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9cc6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9cc860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9cc9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9ccb80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9ccd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9cb020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9cb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f1c8a9c0670" loc="78:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f1c8a9c0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9c09f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9c0b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9c0d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9bf020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9bf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9bf340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9bf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9bf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f1c8a9ad670" loc="95:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f1c8a9ad670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9ad9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9adb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9add10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9ac020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9ac1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9ac340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9ac4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9ac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f1c8a9a7b20" loc="101:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f1c8a9a7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9a6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9a61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9a6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9a64d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9a6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9a67f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9a6980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9a6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f1c8a9becb0" loc="81:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f1c8a9becb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9bd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9bd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9bd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9bd550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9bd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9bd870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9bda00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9bdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f1c8a9e2cb0" loc="48:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f1c8a9e2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9e10a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9e1230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9e13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9e1550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9e16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9e1870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9e1a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9e1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f1c8a9d5cb0" loc="59:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f1c8a9d5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9d40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9d4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9d43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9d4550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9d46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9d4870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9d4a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9d4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f1c8a9a94e0" loc="99:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f1c8a9a94e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9a9860"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9a99f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9a9b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9a9d10"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9a8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9a81b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9a8340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9a84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f1c8a9d2350" loc="62:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f1c8a9d2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9d26d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9d2860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9d29f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9d2b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9d2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9d1020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9d11b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f1c8a9c6670" loc="73:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f1c8a9c6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9c69f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9c6b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9c6d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9c5020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9c51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9c5340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9c54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f1c8a9b9670" loc="84:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f1c8a9b9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9b99f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9b9b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9b9d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9b8020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9b81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9b8340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9b84d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9b8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f1c8a9af020" loc="93:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f1c8a9af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9af3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9af530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9af6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9af850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9af9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9afb70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9afd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f1c8a9de670" loc="51:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f1c8a9de670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9de9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9deb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9ded10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9dd020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9dd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9dd340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9dd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9dd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f1c8a9dccb0" loc="54:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f1c8a9dccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9db0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9db230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9db3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9db550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9db6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9db870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9dba00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9dbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f1c8a9cfcb0" loc="65:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f1c8a9cfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9ce0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9ce230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9ce3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9ce550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9ce6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9ce870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9cea00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9ceb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f1c8a9c2020" loc="76:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f1c8a9c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9c23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9c2530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9c26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9c2850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9c29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9c2b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9c2d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f1c8a9b5020" loc="87:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f1c8a9b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9b53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9b5530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9b56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9b5850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9b59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9b5b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9b5d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f1c8a9e4670" loc="46:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f1c8a9e4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9e49f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9e4b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9e4d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9e3020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9e31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9e3340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9e34d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9e3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f1c8a9d7670" loc="57:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f1c8a9d7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9d7af0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9d7c80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9d7e10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9d6020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9d61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9d6340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9d64d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f1c8a9cb670" loc="68:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f1c8a9cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9cb9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9cbb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9cbd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9ca020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9ca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9ca340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9ca4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9ca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f1c8a9ac990" loc="96:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f1c8a9ac990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9acd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9ab020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9ab1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9ab340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9ab4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9ab660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9ab7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9ab980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f1c8a9c9cb0" loc="71:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f1c8a9c9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9c8410"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9c85a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9c8730"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9c88c0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9c8a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9c8be0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9c8d70"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f1c8a9bb020" loc="82:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f1c8a9bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9bb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9bb530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9bb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9bb850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9bb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9bbb70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9bbd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f1c8a9b2990" loc="91:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f1c8a9b2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9b2d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9b1020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9b11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9b1340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9b14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9b1660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9b17f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9b1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f1c8a9a6e40" loc="102:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f1c8a9a6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9a51e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9a5370"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9a5500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9a5690"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9a5820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9a59b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9a5b40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9a5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f1c8a9e0020" loc="49:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f1c8a9e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9e03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9e0530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9e06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9e0850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9e09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9e0b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9e0d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f1c8a9d3020" loc="60:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f1c8a9d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9d33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9d3530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9d36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9d3850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9d39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9d3b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9d3d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f1c8a9b4350" loc="89:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f1c8a9b4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9b46d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9b4860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9b49f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9b4b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9b4d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9b3020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9b31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9b3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f1c8a9d1670" loc="63:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f1c8a9d1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9d19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9d1b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9d1d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9d0020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9d01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9d0340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9d04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9d0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f1c8a9c5990" loc="74:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f1c8a9c5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9c5d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9c4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9c41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9c4340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9c44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9c4660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9c47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9c4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f1c8a9b8990" loc="85:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f1c8a9b8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9b8d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9b7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9b71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9b7340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9b74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9b7660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9b77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9b7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f1c8a9ae350" loc="94:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f1c8a9ae350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9ae6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9ae860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9ae9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9aeb80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9aed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9ad020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9ad1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9ad340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f1c8a9e6020" loc="44:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f1c8a9e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9e63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9e6530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9e66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9e6850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9e69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9e6b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9e6d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f1c8a9da020" loc="55:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f1c8a9da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9da3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9da530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9da6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9da850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9da9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9dab70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9dad00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f1c8a9cd020" loc="66:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f1c8a9cd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9cd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9cd530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9cd6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9cd850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9cd9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9cdb70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9cdd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f1c8a9c1350" loc="77:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f1c8a9c1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9c16d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9c1860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9c19f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9c1b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9c1d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9c0020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9c01b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9c0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f1c8a9a8800" loc="100:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f1c8a9a8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9a8b80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9a8d10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9a7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9a71b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9a7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9a74d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9a7660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9a77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f1c8a9bf990" loc="80:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f1c8a9bf990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9bfd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9be020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9be1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9be340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9be4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9be660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9be7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9be980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f1c8a9ca990" loc="69:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f1c8a9ca990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9cad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9c9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9c91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9c9340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9c94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9c9660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9c97f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9c9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f1c8a9e3990" loc="47:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f1c8a9e3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9e3d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9e2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9e21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9e2340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9e24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9e2660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9e27f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9e2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f1c8a9d6990" loc="58:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f1c8a9d6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9d6d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9d5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9d51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9d5340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9d54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9d5660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9d57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9d5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1c8a957a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1c8a957a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a957e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a956020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a956340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a956660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9567f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a956980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1c8a952020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1c8a952020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9523a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a952530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9526c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a952850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9529e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a952b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a952d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a951020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1c8a9596b0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1c8a9596b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a959a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a959bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a959d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a958020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9581b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a958340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9584d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a958660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1c8a956c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1c8a956c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a955020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9551b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a955340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9554d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a955660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9557f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a955980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a955b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1c8a9512b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1c8a9512b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a951630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9517c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a951950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a951ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a951c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a951e00"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a950020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9501b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1c8a9588f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1c8a9588f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a958c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a958e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a957020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9571b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a957340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9574d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a957660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9577f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1c8a955da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1c8a955da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a953180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a953310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9534a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a953630"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9537c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a953950"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a953ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a953c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1c8a950440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1c8a950440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9507c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a950950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a950ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a950c70"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a950e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a94f020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a94f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a94f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f859b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f859b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f85d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f83020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f831b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f83340"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f834d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f83660"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f837f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f83980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f81e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f81e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f801c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f80350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f804e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f80670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f80800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f80990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f80b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f80cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f7d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f7d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f7d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f7d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f7d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f7d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f7da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f7dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f7dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f7a3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f7a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f7a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f7a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f7aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f7ac20"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f7adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f79020"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f791b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f79340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f776d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f776d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f77a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f77be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f77d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f76020"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f761b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f76340"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f764d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f76660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f749b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f749b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f74d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f73020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f73340"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f73660"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f737f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f73980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f71e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f71e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f701c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f70350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f704e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f70670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f70800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f70990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f70b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f70cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f6d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f6d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f6d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f6d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f6d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f6d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f6da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f6dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f6dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1c8a947da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1c8a947da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a946180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a946310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9464a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a946630"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9467c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a946950"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a946ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a946c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1c8a943440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1c8a943440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9437c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a943950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a943ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a943c70"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a943e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a942020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9421b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a942340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1c8a94aa20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1c8a94aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a94ada0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a949020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9491b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a949340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9494d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a949660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9497f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a949980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1c8a945020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1c8a945020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9453a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a945530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9456c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a945850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9459e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a945b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a945d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a944020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1c8a9425d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1c8a9425d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a942950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a942ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a942c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a942e00"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a941020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9411b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a941340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1c8a949c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1c8a949c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a947020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9471b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a947340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9474d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a947660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9477f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a947980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a947b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1c8a9442b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1c8a9442b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a944630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9447c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a944950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a944ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a944c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a944e00"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a943020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9431b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1c8a941760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1c8a941760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a941ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a941c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a941e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a940020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9401b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a940340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9404d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a940660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f1ac90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f1ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f190a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f19230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f193c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f19550"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f196e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f19870"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f19a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f19b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f17e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f17e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f151c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f15350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f154e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f15670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f15800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f15990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f15b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f15cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f120a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f120a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f12420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f125b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f12740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f128d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f12a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f12bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f12d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f0f3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f0f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f0f770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f0f900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f0fa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f0fc20"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f0fdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f0e020"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f0e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f0e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f0c6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f0c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f0ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f0cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f0cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f0b020"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f0b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f0b340"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f0b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f0b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f099b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f099b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f09d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f08020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f081b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f08340"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f08660"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f087f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f08980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f06e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f06e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f051c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f05350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f054e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f05670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f05800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f05990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f05b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f05cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89f020a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89f020a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89f02420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89f025b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89f02740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89f028d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89f02a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89f02bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89f02d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89f01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1c8a937020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1c8a937020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a937530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9376c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a937850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9379e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a937b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a937d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a936020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1c8a9345d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1c8a9345d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a934950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a934ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a934c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a934e00"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a933020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9331b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a933340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9334d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1c8a93ad30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1c8a93ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9390e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a939270"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a939400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a939590"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a939720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9398b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a939a40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a939bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1c8a9362b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1c8a9362b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a936630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9367c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a936950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a936ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a936c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a936e00"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a935020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9351b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1c8a933760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1c8a933760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a933ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a933c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a933e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a932020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9321b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a932340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9324d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a932660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1c8a939e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1c8a939e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a938210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9383a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a938530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9386c0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a938850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9389e0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a938b70"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a938d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1c8a935440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1c8a935440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9357c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a935950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a935ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a935c70"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a935e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a934020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9341b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a934340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1c8a9328f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1c8a9328f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a932c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a932e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a931020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9311b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a931340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9314d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a931660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9317f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89eafc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89eafc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89eae0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89eae230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89eae3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89eae550"/>
        <function-ref name="get" scoped="" ref="0x7f1c89eae6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89eae870"/>
        <function-ref name="set" scoped="" ref="0x7f1c89eaea00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89eaeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89eace20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89eace20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89eaa1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89eaa350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89eaa4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89eaa670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89eaa800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89eaa990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89eaab20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89eaacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89ea70a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89ea70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89ea7420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89ea75b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89ea7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89ea78d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89ea7a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89ea7bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89ea7d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89ea6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89ea43f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89ea43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89ea4770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89ea4900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89ea4a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89ea4c20"/>
        <function-ref name="get" scoped="" ref="0x7f1c89ea4db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89ea3020"/>
        <function-ref name="set" scoped="" ref="0x7f1c89ea31b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89ea3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89ea16d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89ea16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89ea1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89ea1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89ea1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89ea0020"/>
        <function-ref name="get" scoped="" ref="0x7f1c89ea01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89ea0340"/>
        <function-ref name="set" scoped="" ref="0x7f1c89ea04d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89ea0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89e9e9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89e9e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89e9ed30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89e9d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89e9d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89e9d340"/>
        <function-ref name="get" scoped="" ref="0x7f1c89e9d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89e9d660"/>
        <function-ref name="set" scoped="" ref="0x7f1c89e9d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89e9d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89e9be20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89e9be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89e9a1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89e9a350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89e9a4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89e9a670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89e9a800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89e9a990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89e9ab20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89e9acb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89e970a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89e970a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89e97420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89e975b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89e97740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89e978d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89e97a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89e97bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89e97d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89e96020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1c8a928440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1c8a928440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9287c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a928950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a928ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a928c70"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a928e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a927020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9271b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a927340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1c8a9258f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1c8a9258f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a925c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a925e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a924020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9241b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a924340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9244d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a924660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9247f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1c8a92a020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1c8a92a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a92a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a92a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a92a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a92a850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a92a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a92ab70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a92ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a929020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1c8a9275d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1c8a9275d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a927950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a927ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a927c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a927e00"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a926020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9261b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a926340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9264d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1c8a924a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1c8a924a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a924e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a923020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a923340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a923660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9237f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a923980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1c8a9292b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1c8a9292b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a929630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9297c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a929950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a929ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a929c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a929e00"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a928020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1c8a926760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1c8a926760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a926ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a926c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a926e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a925020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9251b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a925340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9254d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a925660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1c8a923c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1c8a923c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a921020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9211b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a921340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9214d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a921660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9217f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a921980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a921b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89e44c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89e44c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89e430a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89e43230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89e433c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89e43550"/>
        <function-ref name="get" scoped="" ref="0x7f1c89e436e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89e43870"/>
        <function-ref name="set" scoped="" ref="0x7f1c89e43a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89e43b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89e41e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89e41e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89e401c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89e40350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89e404e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89e40670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89e40800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89e40990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89e40b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89e40cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89e3d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89e3d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89e3d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89e3d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89e3d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89e3d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89e3da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89e3dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89e3dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89e3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89e393f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89e393f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89e39770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89e39900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89e39a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89e39c20"/>
        <function-ref name="get" scoped="" ref="0x7f1c89e39db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89e38020"/>
        <function-ref name="set" scoped="" ref="0x7f1c89e381b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89e38340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89e366d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89e366d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89e36a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89e36be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89e36d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89e35020"/>
        <function-ref name="get" scoped="" ref="0x7f1c89e351b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89e35340"/>
        <function-ref name="set" scoped="" ref="0x7f1c89e354d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89e35660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89e339b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89e339b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89e33d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89e32020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89e321b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89e32340"/>
        <function-ref name="get" scoped="" ref="0x7f1c89e324d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89e32660"/>
        <function-ref name="set" scoped="" ref="0x7f1c89e327f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89e32980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89e30e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89e30e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89e2f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89e2f350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89e2f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89e2f670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89e2f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89e2f990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89e2fb20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89e2fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89e2c0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89e2c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89e2c420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89e2c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89e2c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89e2c8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89e2ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89e2cbf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89e2cd80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89e2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1c8a919760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1c8a919760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a919ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a919c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a919e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a918020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9181b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a918340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9184d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a918660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1c8a915c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1c8a915c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a914020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9141b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a914340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9144d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a914660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9147f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a914980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a914b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1c8a91b3f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1c8a91b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a91b770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a91b900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a91ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a91bc20"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a91bdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a91a020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a91a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a91a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1c8a9188f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1c8a9188f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a918c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a918e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a917020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9171b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a917340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9174d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a917660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9177f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1c8a914da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1c8a914da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a913180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a913310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9134a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a913630"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9137c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a913950"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a913ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a913c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1c8a91a5d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1c8a91a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a91a950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a91aae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a91ac70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a91ae00"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a919020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9191b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a919340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9194d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1c8a917a80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1c8a917a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a917e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a915020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9151b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a915340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9154d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a915660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9157f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a915980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1c8a912020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1c8a912020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9123a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a912530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9126c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a912850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9129e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a912b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a912d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a911020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89dd9c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89dd9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89dd80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89dd8230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89dd83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89dd8550"/>
        <function-ref name="get" scoped="" ref="0x7f1c89dd86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89dd8870"/>
        <function-ref name="set" scoped="" ref="0x7f1c89dd8a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89dd8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89dd6e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89dd6e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89dd51c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89dd5350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89dd54e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89dd5670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89dd5800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89dd5990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89dd5b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89dd5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89dd20a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89dd20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89dd2420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89dd25b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89dd2740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89dd28d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89dd2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89dd2bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89dd2d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89dd0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89dce3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89dce3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89dce770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89dce900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89dcea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89dcec20"/>
        <function-ref name="get" scoped="" ref="0x7f1c89dcedb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89dcd020"/>
        <function-ref name="set" scoped="" ref="0x7f1c89dcd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89dcd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89dcb6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89dcb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89dcba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89dcbbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89dcbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89dca020"/>
        <function-ref name="get" scoped="" ref="0x7f1c89dca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89dca340"/>
        <function-ref name="set" scoped="" ref="0x7f1c89dca4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89dca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89dc89b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89dc89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89dc8d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89dc7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89dc71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89dc7340"/>
        <function-ref name="get" scoped="" ref="0x7f1c89dc74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89dc7660"/>
        <function-ref name="set" scoped="" ref="0x7f1c89dc77f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89dc7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89dc5e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89dc5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89dc41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89dc4350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89dc44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89dc4670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89dc4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89dc4990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89dc4b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89dc4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89dc10a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89dc10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89dc1420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89dc15b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89dc1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89dc18d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89dc1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89dc1bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89dc1d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89dc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1c8a909a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1c8a909a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a909e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a908020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9081b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a908340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a908660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9087f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a908980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1c8a905020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1c8a905020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9053a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a905530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9056c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a905850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9059e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a905b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a905d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a904020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1c8a90c7a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1c8a90c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a90cb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a90ccb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a90ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a90b020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a90b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a90b340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a90b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a90b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1c8a908c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1c8a908c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a907020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9071b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a907340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9074d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a907660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9077f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a907980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a907b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1c8a9042b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1c8a9042b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a904630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a9047c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a904950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a904ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a904c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a904e00"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a903020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1c8a90b8f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1c8a90b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a90bc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a90be00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a909020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a9091b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a909340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a9094d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a909660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a9097f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1c8a907da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1c8a907da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a906180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a906310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a9064a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a906630"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a9067c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a906950"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a906ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a906c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1c8a903440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1c8a903440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a9037c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a903950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a903ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a903c70"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a903e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a902020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a9021b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a902340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89d65c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89d65c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89d640a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89d64230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89d643c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89d64550"/>
        <function-ref name="get" scoped="" ref="0x7f1c89d646e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89d64870"/>
        <function-ref name="set" scoped="" ref="0x7f1c89d64a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89d64b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89d62e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89d62e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89d611c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89d61350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89d614e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89d61670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89d61800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89d61990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89d61b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89d61cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89d5e0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89d5e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89d5e420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89d5e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89d5e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89d5e8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89d5ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89d5ebf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89d5ed80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89d5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89d5b3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89d5b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89d5b770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89d5b900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89d5ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89d5bc20"/>
        <function-ref name="get" scoped="" ref="0x7f1c89d5bdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89d59020"/>
        <function-ref name="set" scoped="" ref="0x7f1c89d591b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89d59340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89d576d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89d576d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89d57a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89d57be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89d57d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89d56020"/>
        <function-ref name="get" scoped="" ref="0x7f1c89d561b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89d56340"/>
        <function-ref name="set" scoped="" ref="0x7f1c89d564d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89d56660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89d549b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89d549b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89d54d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89d53020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89d531b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89d53340"/>
        <function-ref name="get" scoped="" ref="0x7f1c89d534d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89d53660"/>
        <function-ref name="set" scoped="" ref="0x7f1c89d537f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89d53980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89d51e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89d51e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89d501c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89d50350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89d504e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89d50670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89d50800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89d50990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89d50b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89d50cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89d4d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89d4d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89d4d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89d4d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89d4d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89d4d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89d4da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89d4dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89d4dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89d4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a8fba20" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a8fba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8fbda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a8e5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8e51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a8e5340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a8e54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8e5660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8e57f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a8e5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a8e06d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a8e06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8e0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a8e0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8e0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a8df020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a8df1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8df340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8df4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a8df660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a8da160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a8da160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8da4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a8da670"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8da800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a8da990"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a8dab20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8dacb0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8dae40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a8d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a8d6c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a8d6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8d50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a8d5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8d53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a8d5550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a8d56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8d5870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8d5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a8d5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a8d06d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a8d06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8d0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a8d0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8d0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a8cf020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a8cf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8cf340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8cf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a8cf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a8ca160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a8ca160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8ca4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a8ca670"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8ca800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a8ca990"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a8cab20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8cacb0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8cae40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a8c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a8c6c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a8c6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8c50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a8c5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8c53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a8c5550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a8c56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8c5870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8c5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a8c5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a8c06d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a8c06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8c0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a8c0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8c0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a8bf020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a8bf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8bf340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8bf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a8bf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a8ba160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a8ba160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8ba4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a8ba670"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8ba800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a8ba990"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a8bab20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8bacb0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8bae40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a8b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a8b6c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a8b6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8b50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a8b5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8b53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a8b5550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a8b56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8b5870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8b5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a8b5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a8b06d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a8b06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8b0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a8b0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8b0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a8af020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a8af1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8af340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8af4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a8af660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a8ab160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a8ab160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8ab4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a8ab670"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8ab800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a8ab990"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a8abb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8abcb0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8abe40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a8a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a8a6c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a8a6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8a50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a8a5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8a53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a8a5550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a8a56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8a5870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8a5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a8a5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a8a06d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a8a06d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8a0a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a8a0be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8a0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a89f020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a89f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a89f340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a89f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a89f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA" ref="0x7f1c8a86e8d0" loc="7:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA" scoped="" ref="0x7f1c8a86e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a86ec50"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a86ede0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a86b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a86b1b0"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a86b340"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a86b4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a86b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL" ref="0x7f1c8a85c550" loc="18:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL" scoped="" ref="0x7f1c8a85c550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a85c8d0"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a85ca60"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a85cbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a85cd80"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a85b020"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a85b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a85b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD" ref="0x7f1c8a869d20" loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD" scoped="" ref="0x7f1c8a869d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8680e0"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a868270"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a868400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a868590"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a868720"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a8688b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a868a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG" ref="0x7f1c8a865020" loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG" scoped="" ref="0x7f1c8a865020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a8653a0"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a865530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8656c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a865850"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a8659e0"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a865b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a865d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ" ref="0x7f1c8a85e1d0" loc="16:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ" scoped="" ref="0x7f1c8a85e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a85e550"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a85e6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a85e870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a85ea00"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a85eb90"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a85ed20"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a85d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB" ref="0x7f1c8a86ba00" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB" scoped="" ref="0x7f1c8a86ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a86bd80"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a86a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a86a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a86a340"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a86a4d0"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a86a660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a86a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE" ref="0x7f1c8a868de0" loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE" scoped="" ref="0x7f1c8a868de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a867180"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a867310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8674a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a867630"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a8677c0"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a867950"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a867ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH" ref="0x7f1c8a85f100" loc="15:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH" scoped="" ref="0x7f1c8a85f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a85f480"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a85f610"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a85f7a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a85f930"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a85fac0"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a85fc50"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a85fde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK" ref="0x7f1c8a85d3c0" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK" scoped="" ref="0x7f1c8a85d3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a85d740"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a85d8d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a85da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a85dbf0"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a85dd80"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a85c020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a85c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC" ref="0x7f1c8a86ab90" loc="9:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC" scoped="" ref="0x7f1c8a86ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a869020"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a8691b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a869340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8694d0"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a869660"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a8697f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a869980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF" ref="0x7f1c8a867e80" loc="12:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF" scoped="" ref="0x7f1c8a867e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a866220"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a8663b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a866540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8666d0"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a866860"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a8669f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a866b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f1c8a856aa0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortAP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a856aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a856e20"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a842020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a8421b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a842340"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a8424d0"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a842660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8427f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f1c8a83fe80" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortBP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a83fe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a83e220"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a83e3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a83e540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a83e6d0"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a83e860"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a83e9f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a83eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f1c8a839390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a839390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a839710"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a8398a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a839a30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a839bc0"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a839d50"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a838020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8381b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f1c8a834910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a834910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a834c90"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a834e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a833020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8331b0"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a833340"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a8334d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a833660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f1c8a830cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortEP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a830cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a82f0a0"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a82f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a82f3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a82f550"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a82f6e0"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a82f870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a82fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f1c8a82a390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortFP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a82a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a82a710"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a82a8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a82aa30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a82abc0"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a82ad50"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a829020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f1c8a826910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortGP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a826910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a826c90"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a826e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a824020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a8241b0"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a824340"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a8244d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a824660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f1c8a821780" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortHP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a821780"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a821b00"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a821c90"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a821e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a820020"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a8201b0"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a820340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8204d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f1c8a81c6c0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortJP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a81c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a81ca40"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a81cbd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a81cd60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a81b020"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a81b1b0"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a81b340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a81b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f1c8a8186c0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortKP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a8186c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a818a40"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a818bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a818d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a816020"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a8161b0"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a816340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8164d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7f1c8a8136c0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortLP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7f1c8a8136c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a813a40"/>
        <function-ref name="clear" scoped="" ref="0x7f1c8a813bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a813d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a812020"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a8121b0"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a812340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a8124d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f1c8a807290" loc="40:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f1c8a807290"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad6f5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1c8ad6f930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1c8a8060d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f1c8a7f49e0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f1c8a7f49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a7f4d60"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7f3020"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a7f31b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a7f3340"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a7f34d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a7f3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f1c8a7fa9e0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f1c8a7fa9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a7fad60"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7f9020"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a7f91b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a7f9340"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a7f94d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a7f9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f1c8a7f79e0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f1c8a7f79e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a7f7d60"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7f6020"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a7f61b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a7f6340"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a7f64d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a7f6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f1c8a7f39e0" loc="52:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f1c8a7f39e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a7f3d60"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7f2020"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a7f21b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a7f2340"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a7f24d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a7f2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f1c8a7f99e0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f1c8a7f99e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a7f9d60"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7f8020"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a7f81b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a7f8340"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a7f84d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a7f8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f1c8a7f69e0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f1c8a7f69e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a7f6d60"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7f4020"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a7f41b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a7f4340"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a7f44d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a7f4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f1c8aacd9b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f1c8aacd9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8aacdd30"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7fa020"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a7fa1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a7fa340"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a7fa4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a7fa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f1c8a7f89e0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f1c8a7f89e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a7f8d60"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7f7020"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a7f71b0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a7f7340"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a7f74d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a7f7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f1c8a7eb7a0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f1c8a7eb7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7ebb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f1c8a7ee020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f1c8a7ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7ee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f1c8a7ed7a0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f1c8a7ed7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7edb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f1c8a7ea020" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f1c8a7ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7ea3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f1c8a7ee7a0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f1c8a7ee7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7eeb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f1c8a7eb020" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f1c8a7eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7eb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f1c8a7ec860" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f1c8a7ec860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7ecbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f1c8a7ed020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f1c8a7ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7ed3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f1c8a7cd060" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f1c8a7cd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a7cd3e0"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7cd570"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a7cd700"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a7cd890"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a7cda20"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a7cdbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f1c8a7cde80" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a7cde80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7b8220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f1c8a7b6da0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f1c8a7b6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a7b5180"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7b5310"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a7b54a0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a7b5630"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a7b57c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a7b5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f1c8a7b5c20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a7b5c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f1c8a7b2c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f1c8a7b2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a7b10a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7b1230"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a7b13c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a7b1550"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a7b16e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a7b1870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f1c8a7b1b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a7b1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f1c8a7adc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f1c8a7adc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a7ac0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7ac230"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a7ac3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a7ac550"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a7ac6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a7ac870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f1c8a7acb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a7acb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f1c8a7a9c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f1c8a7a9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a7a80a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7a8230"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a7a83c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a7a8550"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a7a86e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a7a8870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f1c8a7a8b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a7a8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f1c8a7a4c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f1c8a7a4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a7a30a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7a3230"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a7a33c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a7a3550"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a7a36e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a7a3870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f1c8a7a3b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a7a3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a7a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f1c8a7a0c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f1c8a7a0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a79f0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a79f230"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a79f3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a79f550"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a79f6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a79f870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f1c8a79fb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a79fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a79e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f1c8a79cc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f1c8a79cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f1c8a79b0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a79b230"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a79b3c0"/>
        <function-ref name="edge" scoped="" ref="0x7f1c8a79b550"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a79b6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a79b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f1c8a79bb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f1c8a79bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f1c8a79a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1c8a78e9f0" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1c8a78e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8a78ed70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1c8a58d020"/>
        <function-ref name="request" scoped="" ref="0x7f1c8a58d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8a58d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8a58d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f1c8a58d880" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f1c8a58d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f1c8abbb110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f1c8abbb3d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c8a58c500"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1c8a5899b0"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a58a150"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c8a58ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1c8a781530" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1c8a781530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8a7818b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1c8a781a40"/>
        <function-ref name="request" scoped="" ref="0x7f1c8a781bd0"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8a781d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8a780020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f1c8a780a20" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f1c8a780a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f1c8abbb110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f1c8abbb3d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c8a77f6b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1c8a77dc30"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a77e330"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c8a77d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1c8a6f3bf0" loc="92:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1c8a6f3bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1c8a6f2020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1c8a6f21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1c8a6f0930" loc="96:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c8a6f0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1c8a6f0cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f1c8a6f0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1c8a6f2400" loc="93:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c8a6f2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8a6f2780"/>
        <function-ref name="requested" scoped="" ref="0x7f1c8a6f2910"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8a6f2aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8a6f2c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1c8a6f2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1c8a6f4e60" loc="91:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1c8a6f4e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8a6f3230"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1c8a6f33c0"/>
        <function-ref name="request" scoped="" ref="0x7f1c8a6f3550"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8a6f36e0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8a6f3870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1c8a6f0060" loc="94:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1c8a6f0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1c8a6f03e0"/>
        <function-ref name="userId" scoped="" ref="0x7f1c8a6f0570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c89be8810" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c89be8810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c89be8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f1c89be8e20" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f1c89be8e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1c89be71c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1c89be7350"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1c89be74e0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1c89be7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1c89be5d80" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1c89be5d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1c89be4180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1c89be4310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1c89be3b60" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c89be3b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1c89be2020"/>
        <function-ref name="configure" scoped="" ref="0x7f1c89be21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1c89be2440" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f1c89be2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1c89be27c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1c89be2950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1c89be2ae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1c89be2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1c89be4560" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c89be4560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c89be48e0"/>
        <function-ref name="requested" scoped="" ref="0x7f1c89be4a70"/>
        <function-ref name="granted" scoped="" ref="0x7f1c89be4c00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c89be4d90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1c89be3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1c89be0020" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1c89be0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1c89be03a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1c89be0530"/>
        <function-ref name="led1On" scoped="" ref="0x7f1c89be06c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1c89be0850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1c89be09e0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89be0b70"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1c89be0d00"/>
        <function-ref name="led0On" scoped="" ref="0x7f1c89bdf4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89bdf1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1c89bdf020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1c89bdf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1c89be5020" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1c89be5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c89be53c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1c89be5550"/>
        <function-ref name="request" scoped="" ref="0x7f1c89be56e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1c89be5870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c89be5a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1c89be3270" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1c89be3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1c89be35f0"/>
        <function-ref name="userId" scoped="" ref="0x7f1c89be3780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1c89bdf7a0" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f1c89bdf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c89bdfb20"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c89bdfcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1c8a6eb400" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1c8a6eb400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1c8a6eb780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1c8a6eb9d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c8a6eb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8a6ebd50"/>
        <function-ref name="requested" scoped="" ref="0x7f1c8a6dd020"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8a6dd1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8a6dd340"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1c8a6dd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f1c8a6edc40" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1c8a6edc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1c8a6eb020"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a6eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1c8a6dd720" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1c8a6dd720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1c8a6ddaa0"/>
        <function-ref name="userId" scoped="" ref="0x7f1c8a6ddc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7f1c8a699cd0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f1c8a699cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f1c8a6980a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7f1c8a69d020" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7f1c8a69d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f1c8abbb110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f1c8abbb3d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c8a69dc50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1c8a699150"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a69b8c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c8a69a510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1c8a698330" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1c8a698330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1c8a6986b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1c8a698840"/>
        <function-ref name="led1On" scoped="" ref="0x7f1c8a6989d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1c8a698b60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1c8a698cf0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a698e80"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1c8a697030"/>
        <function-ref name="led2On" scoped="" ref="0x7f1c8a697670"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a697350"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1c8a6971c0"/>
        <function-ref name="led0On" scoped="" ref="0x7f1c8a6974e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1c8a6da470" loc="41:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1c8a6da470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8a6da810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1c8a6da9a0"/>
        <function-ref name="request" scoped="" ref="0x7f1c8a6dab30"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8a6dacc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8a6dae50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f1c8a6a3370" loc="42:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f1c8a6a3370"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f1c8abbb110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f1c8abbb3d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c8a6a2020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1c8a69f510"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a6a2c50"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c8a6a08c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f1c8a69e210" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f1c8a69e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8a69e5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1c8a69e740"/>
        <function-ref name="request" scoped="" ref="0x7f1c8a69e8d0"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8a69ea60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8a69ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7f1c8a6248e0" loc="79:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7f1c8a6248e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7f1c8a624c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7f1c8a623020" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f1c8a623020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f1c8a6233a0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f1c8a623530"/>
        <function-ref name="setStart" scoped="" ref="0x7f1c8a6236c0"/>
        <function-ref name="status" scoped="" ref="0x7f1c8a623850"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f1c8a6239e0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f1c8a623b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f1c8a623d00"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a622020"/>
        <function-ref name="init" scoped="" ref="0x7f1c8a6221b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f1c8a622340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f1c8a6224d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f1c8a622660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1c8a6227f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f1c8a622a80"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a622c10"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a622da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f1c8a621020"/>
        <function-ref name="off" scoped="" ref="0x7f1c8a6211b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f1c8a621340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f1c8a6214d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f1c8a621660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f1c8a6217f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7f1c8a621ac0" loc="82:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7f1c8a621ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1c8a621e40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1c8a620020"/>
        <function-ref name="led1On" scoped="" ref="0x7f1c8a6201b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1c8a620340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1c8a6204d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a620660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1c8a6207f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1c8a620e30"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a620b10"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1c8a620980"/>
        <function-ref name="led0On" scoped="" ref="0x7f1c8a620ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7f1c8a61f160" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7f1c8a61f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1c8a61f4e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1c8a61f670"/>
        <function-ref name="led1On" scoped="" ref="0x7f1c8a61f800"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1c8a61f990"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1c8a61fb20"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a61fcb0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1c8a61fe40"/>
        <function-ref name="led2On" scoped="" ref="0x7f1c8a61e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a61e1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1c8a61e020"/>
        <function-ref name="led0On" scoped="" ref="0x7f1c8a61e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f1c8a61e7a0" loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f1c8a61e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8a61eb20"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8a61ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f1c8a629340" loc="77:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1c8a629340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1c8a6296c0"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a629850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7f1c8a629c00" loc="78:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7f1c8a629c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7f1c8abbb110"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7f1c8abbb3d0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c8a6288a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f1c8a626d20"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a6274d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c8a626110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f1c8a6180e0" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f1c8a6180e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f1c8a618460"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f1c8a6185f0"/>
        <function-ref name="setStart" scoped="" ref="0x7f1c8a618780"/>
        <function-ref name="status" scoped="" ref="0x7f1c8a618910"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f1c8a618aa0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f1c8a618c30"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f1c8a618dc0"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a617020"/>
        <function-ref name="init" scoped="" ref="0x7f1c8a6171b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7f1c8a617340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f1c8a6174d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7f1c8a617660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1c8a6177f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f1c8a617a80"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a617c10"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a617da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f1c8a616020"/>
        <function-ref name="off" scoped="" ref="0x7f1c8a6161b0"/>
        <function-ref name="setStop" scoped="" ref="0x7f1c8a616340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f1c8a6164d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f1c8a616660"/>
        <function-ref name="hasStop" scoped="" ref="0x7f1c8a6167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7f1c8a615a70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7f1c8a615a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7f1c8a615df0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7f1c8a612020"/>
        <function-ref name="setStart" scoped="" ref="0x7f1c8a6121b0"/>
        <function-ref name="status" scoped="" ref="0x7f1c8a612340"/>
        <function-ref name="hasAcks" scoped="" ref="0x7f1c8a6124d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f1c8a612660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f1c8a6127f0"/>
        <function-ref name="read" scoped="" ref="0x7f1c8a612980"/>
        <function-ref name="init" scoped="" ref="0x7f1c8a612b10"/>
        <function-ref name="enableAck" scoped="" ref="0x7f1c8a612ca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f1c8a612e30"/>
        <function-ref name="hasStart" scoped="" ref="0x7f1c8a611020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f1c8a6111b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7f1c8a611440"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a6115d0"/>
        <function-ref name="write" scoped="" ref="0x7f1c8a611760"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7f1c8a6118f0"/>
        <function-ref name="off" scoped="" ref="0x7f1c8a611a80"/>
        <function-ref name="setStop" scoped="" ref="0x7f1c8a611c10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7f1c8a611da0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f1c8a610020"/>
        <function-ref name="hasStop" scoped="" ref="0x7f1c8a6101b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7f1c8a610540" loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7f1c8a610540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a6108c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a610a50"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a610be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a610d70"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a60f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a60f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a60f340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a60f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7f1c8a60f810" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7f1c8a60f810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a60fb90"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a60fd20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a60e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a60e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a60e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a60e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a60e660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a60e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1c8a5d84a0" loc="46:../tinyos_ws18/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1c8a5d84a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1c8a5d8820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1c8a5d89b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1c8a5d8b40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1c8a5d8cd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1c8a5d8e60"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a5d5020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1c8a5d51b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1c8a5d57f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a5d5340"/>
        <function-ref name="led0On" scoped="" ref="0x7f1c8a5d54d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f1c8a5d5660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f1c8a5d0550" loc="50:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f1c8a5d0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a5d08d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a5d0a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a5d0bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a5d0d80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a5cf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a5cf1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a5cf340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a5cf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c8a5d47c0" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c8a5d47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8a5d4b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f1c8a5cf7f0" loc="51:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f1c8a5cf7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a5cfb70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a5cfd00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a5ce020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a5ce1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a5ce340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a5ce4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a5ce660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a5ce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1c8a5d4dc0" loc="47:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1c8a5d4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1c8a5d1180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1c8a5d1310"/>
        <function-ref name="led1On" scoped="" ref="0x7f1c8a5d14a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1c8a5d1630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1c8a5d17c0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a5d1950"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1c8a5d1ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1c8a5d01b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a5d1c70"/>
        <function-ref name="led0On" scoped="" ref="0x7f1c8a5d1e00"/>
        <function-ref name="led2On" scoped="" ref="0x7f1c8a5d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f1c8a5ceb10" loc="52:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f1c8a5ceb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a5cd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a5cd1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a5cd340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a5cd4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a5cd660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a5cd7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a5cd980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a5cdb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f1c8a5b11d0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f1c8a5b11d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a5b1550"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a5b16e0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a5b1870"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a5b1a00"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a5b1b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a5b1d20"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a5b0020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a5b01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f1c8a5b0510" loc="45:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f1c8a5b0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a5b0890"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a5b0a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a5b0bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a5b0d40"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a5af020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a5af1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a5af340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a5af4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f1c8a5aeab0" loc="48:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c8a5aeab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8a5aee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f1c8a5af830" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f1c8a5af830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a5afbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a5afd40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a5ae020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a5ae1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a5ae340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a5ae4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a5ae660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a5ae7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c8a5a6340" loc="46:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c8a5a6340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8a5a66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f1c8a5a6980" loc="47:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1c8a5a6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1c8a5a6d00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1c8a5a5020"/>
        <function-ref name="led1On" scoped="" ref="0x7f1c8a5a51b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1c8a5a5340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1c8a5a54d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a5a5660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1c8a5a57f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1c8a5a5e30"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a5a5980"/>
        <function-ref name="led0On" scoped="" ref="0x7f1c8a5a5b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f1c8a5a5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1c8a3c7140" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="FMClickC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1c8a3c7140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1c8a3c3630"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a3c5b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1c8a3c4920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1c8a3c44a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1c8a3c2020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1c8a3c3ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1c8a3c4020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1c8a3c7d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1c8a3c3020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1c8a3c5220"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a3c56f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1c8a57c020" loc="49:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f1c8a57c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1c8a578630"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a57ba60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1c8a579920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1c8a5794a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1c8a577020"/>
        <function-ref name="gett0" scoped="" ref="0x7f1c8a578ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1c8a579020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1c8a57cc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1c8a578020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1c8a57b110"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a57b5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f1c8a573c30" loc="46:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f1c8a573c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1c8a56e110"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a5716a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1c8a5704a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1c8a570020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1c8a56ea10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1c8a56e590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1c8a571b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1c8a572860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1c8a570ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1c8a572d30"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a571220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1c8a569500" loc="47:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f1c8a569500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1c8a56c170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c8a577e60" loc="45:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c8a577e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8a573210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f1c8a55b020" loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f1c8a55b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1c8a55be30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1c8a55a800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1c8a55a340"/>
        <function-ref name="overflow" scoped="" ref="0x7f1c8a55acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c8a56bc80" loc="27:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c8a56bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8a5660a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f1c8a55e960" loc="28:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f1c8a55e960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1c8a55c1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a55d1b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1c8a55db30"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1c8a55d670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1c8a55c670"/>
        <function-ref name="start" scoped="" ref="0x7f1c8a5657c0"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a565cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1c8a4654b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f1c8a4654b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1c8a463db0"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a464da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f1c8a463760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1c8a4632a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1c8a4612a0"/>
        <function-ref name="start" scoped="" ref="0x7f1c8a4643d0"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a4648e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c8a466ba0" loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c8a466ba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f1c8ae27020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f1c8ae27020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8a465020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1c8a4618d0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1c8a4618d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1c8a460780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1c8a45f150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1c8a460c40"/>
        <function-ref name="overflow" scoped="" ref="0x7f1c8a45f610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f1c89b42190" loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f1c89b42190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f1c89b42510"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f1c89b426a0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f1c89b42830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f1c89b429c0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f1c89b42b50"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f1c89b42ce0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f1c89b42e70"/>
        <function-ref name="setControlA" scoped="" ref="0x7f1c89b40030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f1c89b4e9c0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f1c89b4e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1c89b4a260"/>
        <function-ref name="fired" scoped="" ref="0x7f1c89b4c220"/>
        <function-ref name="startAt" scoped="" ref="0x7f1c89b4cba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1c89b4c6e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1c89b4a720"/>
        <function-ref name="start" scoped="" ref="0x7f1c89b4d810"/>
        <function-ref name="stop" scoped="" ref="0x7f1c89b4dd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c89b4e1b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c89b4e1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c89b4e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f1c89b4ad50" loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1c89b4ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1c89b49ba0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1c89b48550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1c89b48090"/>
        <function-ref name="overflow" scoped="" ref="0x7f1c89b48a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x7f1c89b3d780" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f1c89b3d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f1c89b3db00"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f1c89b3dc90"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f1c89b3de20"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f1c89b3c020"/>
        <function-ref name="countBusy" scoped="" ref="0x7f1c89b3c1b0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f1c89b3c340"/>
        <function-ref name="getAssr" scoped="" ref="0x7f1c89b3c4d0"/>
        <function-ref name="setAssr" scoped="" ref="0x7f1c89b3c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f1c89b403e0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f1c89b403e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f1c89b3ee60"/>
        <function-ref name="fired" scoped="" ref="0x7f1c89b3fa60"/>
        <function-ref name="get" scoped="" ref="0x7f1c89b3f090"/>
        <function-ref name="reset" scoped="" ref="0x7f1c89b3e020"/>
        <function-ref name="isOn" scoped="" ref="0x7f1c89b3d350"/>
        <function-ref name="set" scoped="" ref="0x7f1c89b3f550"/>
        <function-ref name="start" scoped="" ref="0x7f1c89b3e4e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1c89b3e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f1c89b47020" loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1c89b47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f1c89b43350"/>
        <function-ref name="test" scoped="" ref="0x7f1c89b449a0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89b47c50"/>
        <function-ref name="setScale" scoped="" ref="0x7f1c89b43810"/>
        <function-ref name="getScale" scoped="" ref="0x7f1c89b43d20"/>
        <function-ref name="reset" scoped="" ref="0x7f1c89b45b20"/>
        <function-ref name="overflow" scoped="" ref="0x7f1c89b45660"/>
        <function-ref name="isOn" scoped="" ref="0x7f1c89b44e60"/>
        <function-ref name="set" scoped="" ref="0x7f1c89b45150"/>
        <function-ref name="start" scoped="" ref="0x7f1c89b44020"/>
        <function-ref name="stop" scoped="" ref="0x7f1c89b444e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f1c8a4d7c10" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f1c8a4d7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f1c8a4d6020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f1c8a4d61b0"/>
        <function-ref name="getControlA" scoped="" ref="0x7f1c8a4d6340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f1c8a4d64d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7f1c8a4d6660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f1c8a4d67f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7f1c8a4d6980"/>
        <function-ref name="setControlA" scoped="" ref="0x7f1c8a4d6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f1c8a4d1570" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f1c8a4d1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f1c8a4d18f0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f1c8a4d1a80"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f1c8a4d1c10"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f1c8a4d1da0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f1c8a4d0020"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f1c8a4d01b0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f1c8a4d0340"/>
        <function-ref name="setAssr" scoped="" ref="0x7f1c8a4d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1c8a4d5060" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f1c8a4d5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f1c8a4d3a10"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a4d46c0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a4d5c90"/>
        <function-ref name="reset" scoped="" ref="0x7f1c8a4d4b80"/>
        <function-ref name="isOn" scoped="" ref="0x7f1c8a4d1020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a4d41b0"/>
        <function-ref name="start" scoped="" ref="0x7f1c8a4d3090"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a4d3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1c8a4de8f0" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1c8a4de8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f1c8a4d9cd0"/>
        <function-ref name="test" scoped="" ref="0x7f1c8a4d9350"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a4db5a0"/>
        <function-ref name="setScale" scoped="" ref="0x7f1c8a4d71b0"/>
        <function-ref name="getScale" scoped="" ref="0x7f1c8a4d76c0"/>
        <function-ref name="reset" scoped="" ref="0x7f1c8a4da4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f1c8a4da020"/>
        <function-ref name="isOn" scoped="" ref="0x7f1c8a4d9810"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a4dba60"/>
        <function-ref name="start" scoped="" ref="0x7f1c8a4da9a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a4dae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f1c8a4c8db0" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f1c8a4c8db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f1c8a4c7180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f1c8a4c7310"/>
        <function-ref name="getControlA" scoped="" ref="0x7f1c8a4c74a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f1c8a4c7630"/>
        <function-ref name="setControlB" scoped="" ref="0x7f1c8a4c77c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f1c8a4c7950"/>
        <function-ref name="getControlB" scoped="" ref="0x7f1c8a4c7ae0"/>
        <function-ref name="setControlA" scoped="" ref="0x7f1c8a4c7c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f1c8a4c24c0" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f1c8a4c24c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f1c8a4c2840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7f1c8a4c2bf0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7f1c8a4c2bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7f1c8a4c1020"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7f1c8a4c11b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7f1c8a4c1340"/>
        <function-ref name="controlABusy" scoped="" ref="0x7f1c8a4c14d0"/>
        <function-ref name="countBusy" scoped="" ref="0x7f1c8a4c1660"/>
        <function-ref name="compareABusy" scoped="" ref="0x7f1c8a4c17f0"/>
        <function-ref name="getAssr" scoped="" ref="0x7f1c8a4c1980"/>
        <function-ref name="setAssr" scoped="" ref="0x7f1c8a4c1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f1c8a4c61a0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f1c8a4c61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f1c8a4c3b30"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a4c57f0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a4c6dd0"/>
        <function-ref name="reset" scoped="" ref="0x7f1c8a4c5cb0"/>
        <function-ref name="isOn" scoped="" ref="0x7f1c8a4c2020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a4c52e0"/>
        <function-ref name="start" scoped="" ref="0x7f1c8a4c31b0"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a4c3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1c8a4cda10" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1c8a4cda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f1c8a4cae60"/>
        <function-ref name="test" scoped="" ref="0x7f1c8a4ca4e0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a4cc6b0"/>
        <function-ref name="setScale" scoped="" ref="0x7f1c8a4c8350"/>
        <function-ref name="getScale" scoped="" ref="0x7f1c8a4c8860"/>
        <function-ref name="reset" scoped="" ref="0x7f1c8a4cb590"/>
        <function-ref name="overflow" scoped="" ref="0x7f1c8a4cb0d0"/>
        <function-ref name="isOn" scoped="" ref="0x7f1c8a4ca9a0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a4ccb70"/>
        <function-ref name="start" scoped="" ref="0x7f1c8a4cba50"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a4ca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f1c8a42c020" loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f1c8a42c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8a42c3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8a42c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f1c8a431cd0" loc="49:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f1c8a431cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1c8a42d670"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a42f550"/>
        <function-ref name="startAt" scoped="" ref="0x7f1c8a42d020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1c8a42fa10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f1c8a42db30"/>
        <function-ref name="start" scoped="" ref="0x7f1c8a430b60"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a42f090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1c8a436830" loc="48:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1c8a436830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1c8a432cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a434300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1c8a4320d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1c8a434c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f1c8a431660"/>
        <function-ref name="gett0" scoped="" ref="0x7f1c8a4311e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1c8a434780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1c8a435480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1c8a4326e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1c8a435950"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a435e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f1c8a3dca00" loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f1c8a3dca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8a3dcd80"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8a3db020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f1c8a3e1640" loc="49:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f1c8a3e1640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1c8a3ddc40"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a3df1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1c8a3dd020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1c8a3dfae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1c8a3dc590"/>
        <function-ref name="gett0" scoped="" ref="0x7f1c8a3dc110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1c8a3df660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1c8a3e0390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1c8a3dd630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1c8a3e0860"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a3e0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1c8a3e7150" loc="48:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1c8a3e7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1c8a3e3700"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a3e6c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1c8a3e4a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1c8a3e45b0"/>
        <function-ref name="getdt" scoped="" ref="0x7f1c8a3e1090"/>
        <function-ref name="gett0" scoped="" ref="0x7f1c8a3e3ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1c8a3e4110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1c8a3e7d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1c8a3e30d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1c8a3e62a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a3e6790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f1c8a3d9790" loc="48:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f1c8a3d9790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1c8a3d83f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f1c8a3d8a60" loc="49:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f1c8a3d8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f1c8a3ce890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f1c8a3cc260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f1c8a3ced50"/>
        <function-ref name="overflow" scoped="" ref="0x7f1c8a3cc720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f1c8a382020" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f1c8a382020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3827a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a382930"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a382ac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a382c50"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a382de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a381020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3811b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a381340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f1c8a39f800" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f1c8a39f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a39fb80"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a39fd10"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a39e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a39e1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a39e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a39e4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a39e660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a39e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f1c8a393670" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f1c8a393670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3939f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a393b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a393d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a392020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3921b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a392340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3924d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a392660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f1c8a389020" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f1c8a389020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3893a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a389530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3896c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a389850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3899e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a389b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a389d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a388020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7f1c8a37c350" loc="108:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7f1c8a37c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a37c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a37c860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a37c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a37cb80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a37cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a37b020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a37b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a37b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH2" ref="0x7f1c8a379cb0" loc="112:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH2" scoped="" ref="0x7f1c8a379cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3780a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a378230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3783c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a378550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3786e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a378870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a378a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a378b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH7" ref="0x7f1c8a373cb0" loc="117:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH7" scoped="" ref="0x7f1c8a373cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3720a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a372230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3723c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a372550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3726e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a372870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a372a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a372b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ6" ref="0x7f1c8a36a350" loc="125:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ6" scoped="" ref="0x7f1c8a36a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a36a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a36a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a36a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a36ab80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a36ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a369020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3691b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a369340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK0" ref="0x7f1c8a367990" loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK0" scoped="" ref="0x7f1c8a367990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a367d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a366020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3661b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a366340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3664d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a366660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3667f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a366980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL2" ref="0x7f1c8a35b990" loc="139:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL2" scoped="" ref="0x7f1c8a35b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a35bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a35a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a35a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a35a340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a35a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a35a660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a35a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a35a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f1c8a3b7990" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f1c8a3b7990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3b7d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3b6020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3b61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3b6340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3b64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3b6660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3b67f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3b6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f1c8a38c990" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f1c8a38c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a38cd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a38b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a38b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a38b340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a38b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a38b660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a38b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a38b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f1c8a3b4020" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f1c8a3b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3b43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3b4530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3b46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3b4850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3b49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3b4b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3b4d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f1c8a3a8020" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f1c8a3a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3a83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3a8530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3a86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3a8850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3a89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3a8b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3a8d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f1c8a39b060" loc="80:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f1c8a39b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a39b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a39b570"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a39b700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a39b890"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a39ba20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a39bbb0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a39bd40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a39a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f1c8a38f020" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f1c8a38f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a38f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a38f530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a38f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a38f850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a38f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a38fb70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a38fd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a38e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f1c8a3bdb20" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f1c8a3bdb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3bc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3bc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3bc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3bc4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3bc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3bc7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3bc980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3bcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f1c8a3b1990" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f1c8a3b1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3b1d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3b0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3b01b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3b0340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3b04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3b0660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3b07f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3b0980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f1c8a3a5990" loc="72:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f1c8a3a5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3a5d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3a4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3a41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3a4340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3a44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3a4660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3a47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3a4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f1c8a398990" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f1c8a398990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a398d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a397020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3971b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a397340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3974d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a397660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3977f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a397980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f1c8a386990" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f1c8a386990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a386d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a384020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3841b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a384340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3844d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a384660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3847f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a384980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f1c8a37fcb0" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f1c8a37fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a37e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a37e230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a37e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a37e550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a37e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a37e870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a37ea00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a37eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH0" ref="0x7f1c8a37b670" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH0" scoped="" ref="0x7f1c8a37b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a37b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a37bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a37bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a37a020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a37a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a37a340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a37a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a37a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f1c8a395020" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f1c8a395020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3953a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a395530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3956c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a395850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3959e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a395b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a395d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a394020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH5" ref="0x7f1c8a375670" loc="115:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH5" scoped="" ref="0x7f1c8a375670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3759f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a375b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a375d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a374020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3741b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a374340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3744d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a374660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ1" ref="0x7f1c8a370350" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ1" scoped="" ref="0x7f1c8a370350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3706d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a370860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3709f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a370b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a370d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a36f020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a36f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a36f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ4" ref="0x7f1c8a36dcb0" loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ4" scoped="" ref="0x7f1c8a36dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a36c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a36c230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a36c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a36c550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a36c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a36c870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a36ca00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a36cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK3" ref="0x7f1c8a363350" loc="131:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK3" scoped="" ref="0x7f1c8a363350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3636d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a363860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3639f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a363b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a363d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a362020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3621b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a362340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK6" ref="0x7f1c8a360cb0" loc="134:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK6" scoped="" ref="0x7f1c8a360cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a35f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a35f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a35f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a35f550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a35f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a35f870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a35fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a35fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL0" ref="0x7f1c8a35d350" loc="137:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL0" scoped="" ref="0x7f1c8a35d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a35d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a35d860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a35d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a35db80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a35dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a35c020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a35c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a35c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL5" ref="0x7f1c8a357350" loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL5" scoped="" ref="0x7f1c8a357350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3576d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a357860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3579f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a357b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a357d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a356020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3561b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a356340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f1c8a3b9350" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f1c8a3b9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3b96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3b9860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3b99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3b9b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3b9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3b8020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3b81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3b8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f1c8a3ad350" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f1c8a3ad350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3ad6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3ad860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3ad9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3adb80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3add10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3ac020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3ac1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3ac340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f1c8a381670" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f1c8a381670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3819f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a381b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a381d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a380020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3801b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a380340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3804d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a380660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f1c8a3ab990" loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f1c8a3ab990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3abd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3aa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3aa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3aa340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3aa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3aa660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3aa7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3aa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f1c8a39eb20" loc="78:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f1c8a39eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a39d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a39d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a39d340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a39d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a39d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a39d7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a39d980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a39db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f1c8a392990" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f1c8a392990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a392d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a391020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3911b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a391340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3914d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a391660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3917f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a391980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f1c8a388350" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f1c8a388350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3886d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a388860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3889f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a388b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a388d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a387020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3871b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a387340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH3" ref="0x7f1c8a377020" loc="113:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH3" scoped="" ref="0x7f1c8a377020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3773a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a377530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3776c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a377850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3779e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a377b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a377d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a376020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ7" ref="0x7f1c8a369670" loc="126:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ7" scoped="" ref="0x7f1c8a369670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3699f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a369b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a369d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a367020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3671b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a367340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3674d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a367660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK1" ref="0x7f1c8a366cb0" loc="129:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK1" scoped="" ref="0x7f1c8a366cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3650a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a365230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3653c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a365550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3656e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a365870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a365a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a365b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL3" ref="0x7f1c8a35acb0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL3" scoped="" ref="0x7f1c8a35acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3590a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a359230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3593c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a359550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3596e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a359870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a359a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a359b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ2" ref="0x7f1c8a36f670" loc="121:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ2" scoped="" ref="0x7f1c8a36f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a36f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a36fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a36fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a36e020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a36e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a36e340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a36e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a36e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f1c8a3b6cb0" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f1c8a3b6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3b50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3b5230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3b53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3b5550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3b56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3b5870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3b5a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3b5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK4" ref="0x7f1c8a362670" loc="132:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK4" scoped="" ref="0x7f1c8a362670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3629f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a362b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a362d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a361020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3611b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a361340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3614d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a361660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL6" ref="0x7f1c8a356670" loc="143:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL6" scoped="" ref="0x7f1c8a356670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3569f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a356b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a356d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a355020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3551b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a355340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3554d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a355660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f1c8a3b3350" loc="59:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f1c8a3b3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3b36d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3b3860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3b39f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3b3b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3b3d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3b2020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3b21b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3b2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f1c8a3a7350" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f1c8a3a7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3a76d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3a7860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3a79f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3a7b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3a7d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3a6020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3a61b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3a6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f1c8a39a350" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f1c8a39a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a39a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a39a860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a39a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a39ab80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a39ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a399020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3991b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a399340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f1c8a38e350" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f1c8a38e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a38e6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a38e860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a38e9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a38eb80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a38ed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a38d020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a38d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a38d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f1c8a3bce40" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f1c8a3bce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3bb1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3bb370"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3bb500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3bb690"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3bb820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3bb9b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3bbb40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3bbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f1c8a3b0cb0" loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f1c8a3b0cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3af180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3af310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3af4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3af630"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3af7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3af950"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3afae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3afc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f1c8a3a4cb0" loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f1c8a3a4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3a30a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3a3230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3a33c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3a3550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3a36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3a3870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3a3a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3a3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f1c8a384cb0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f1c8a384cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3830a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a383230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3833c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a383550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3836e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a383870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a383a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a383b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH1" ref="0x7f1c8a37a990" loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH1" scoped="" ref="0x7f1c8a37a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a37ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a379020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3791b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a379340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3794d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a379660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3797f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a379980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f1c8a3a0350" loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f1c8a3a0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3a08d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3a0a60"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3a0bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3a0d80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a39f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a39f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a39f340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a39f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f1c8a394350" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f1c8a394350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3946d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a394860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3949f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a394b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a394d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a393020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3931b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a393340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f1c8a38bcb0" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f1c8a38bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a38a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a38a230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a38a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a38a550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a38a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a38a870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a38aa00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a38ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f1c8a37d020" loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f1c8a37d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a37d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a37d530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a37d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a37d850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a37d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a37db70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a37dd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a37c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH6" ref="0x7f1c8a374990" loc="116:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH6" scoped="" ref="0x7f1c8a374990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a374d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a373020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a373340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a373660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3737f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a373980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ5" ref="0x7f1c8a36b020" loc="124:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ5" scoped="" ref="0x7f1c8a36b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a36b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a36b530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a36b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a36b850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a36b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a36bb70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a36bd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a36a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK7" ref="0x7f1c8a35e020" loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK7" scoped="" ref="0x7f1c8a35e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a35e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a35e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a35e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a35e850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a35e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a35eb70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a35ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a35d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL1" ref="0x7f1c8a35c670" loc="138:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL1" scoped="" ref="0x7f1c8a35c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a35c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a35cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a35cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a35b020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a35b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a35b340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a35b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a35b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f1c8a3b8670" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f1c8a3b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3b89f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3b8b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3b8d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3b7020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3b71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3b7340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3b74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3b7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f1c8a3ac670" loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f1c8a3ac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3ac9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3acb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3acd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3ab020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3ab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3ab340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3ab4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3ab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f1c8a38d670" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f1c8a38d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a38d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a38db80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a38dd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a38c020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a38c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a38c340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a38c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a38c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f1c8a3aacb0" loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f1c8a3aacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3a90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3a9230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3a93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3a9550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3a96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3a9870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3a9a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3a9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f1c8a39de40" loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f1c8a39de40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a39c1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a39c370"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a39c500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a39c690"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a39c820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a39c9b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a39cb40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a39ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f1c8a391cb0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f1c8a391cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3900a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a390230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3903c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a390550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3906e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a390870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a390a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a390b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f1c8a387670" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f1c8a387670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3879f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a387b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a387d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a386020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a386340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3864d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a386660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f1c8a3c07f0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f1c8a3c07f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3c0b70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3c0d00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3bd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3bd1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3bd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3bd4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3bd660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3bd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f1c8a3b2670" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f1c8a3b2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3b29f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3b2b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3b2d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3b1020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3b11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3b1340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3b14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3b1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f1c8a3a6670" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f1c8a3a6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3a69f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3a6b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3a6d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3a5020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3a51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3a5340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3a54d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3a5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f1c8a399670" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f1c8a399670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3999f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a399b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a399d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a398020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3981b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a398340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3984d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a398660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f1c8a380990" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f1c8a380990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a380d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a37f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a37f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a37f340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a37f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a37f660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a37f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a37f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH4" ref="0x7f1c8a376350" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH4" scoped="" ref="0x7f1c8a376350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3766d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a376860"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3769f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a376b80"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a376d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a375020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3751b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a375340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ0" ref="0x7f1c8a371020" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ0" scoped="" ref="0x7f1c8a371020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3713a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a371530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3716c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a371850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3719e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a371b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a371d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a370020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f1c8a397cb0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f1c8a397cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3960a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a396230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3963c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a396550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3966e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a396870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a396a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a396b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ3" ref="0x7f1c8a36e990" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ3" scoped="" ref="0x7f1c8a36e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a36ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a36d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a36d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a36d340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a36d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a36d660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a36d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a36d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK2" ref="0x7f1c8a364020" loc="130:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK2" scoped="" ref="0x7f1c8a364020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3643a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a364530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3646c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a364850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3649e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a364b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a364d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a363020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK5" ref="0x7f1c8a361990" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK5" scoped="" ref="0x7f1c8a361990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a361d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a360020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a360340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3604d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a360660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3607f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a360980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL4" ref="0x7f1c8a358020" loc="141:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL4" scoped="" ref="0x7f1c8a358020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3583a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a358530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3586c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a358850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3589e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a358b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a358d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a357020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL7" ref="0x7f1c8a355990" loc="144:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL7" scoped="" ref="0x7f1c8a355990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a355d10"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a354020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3541b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a354340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a354660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3547f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a354980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f1c8a3a1020" loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f1c8a3a1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3a13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3a1530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3a16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3a1850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3a19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3a1b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3a1d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f1c8a3ba060" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f1c8a3ba060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3ba3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3ba570"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3ba700"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3ba890"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3baa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3babb0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3bad40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f1c8a3ae020" loc="63:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f1c8a3ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3ae3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3ae530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3ae6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3ae850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3ae9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3aeb70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3aed00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1c8a34eda0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1c8a34eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a34d180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a34d310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a34d4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a34d630"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a34d7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a34d950"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a34dae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a34dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1c8a34a440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1c8a34a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a34a7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a34a950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a34aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a34ac70"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a34ae00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a349020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3491b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a349340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1c8a350a80" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1c8a350a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a350e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a34f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a34f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a34f340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a34f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a34f660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a34f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a34f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1c8a34c020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1c8a34c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a34c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a34c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a34c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a34c850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a34c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a34cb70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a34cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a34b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1c8a3495d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1c8a3495d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a349950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a349ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a349c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a349e00"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a348020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3481b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a348340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3484d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1c8a34fc10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1c8a34fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a34e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a34e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a34e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a34e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a34e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a34e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a34e980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a34eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1c8a34b2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1c8a34b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a34b630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a34b7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a34b950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a34bae0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a34bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a34be00"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a34a020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a34a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1c8a348760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1c8a348760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a348ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a348c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a348e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a347020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3471b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a347340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3474d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a347660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a9b270" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a9b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a9b5f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a9b780"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a9b910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a9baa0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a9bc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a9bdc0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a9a020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a98460" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a98460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a987e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a98970"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a98b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a98c90"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a98e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a97020"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a971b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a97340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a956d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a956d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a95a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a95be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a95d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a94020"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a941b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a94340"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a944d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a94660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a929b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a929b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a92d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a91020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a911b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a91340"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a914d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a91660"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a917f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a91980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a8fe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a8fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a8e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a8e350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a8e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a8e670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a8e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a8e990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a8eb20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a8ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a8b0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a8b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a8b420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a8b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a8b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a8b8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a8ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a8bbf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a8bd80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a883f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a883f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a88770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a88900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a88a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a88c20"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a88db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a87020"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a871b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a87340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a856d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a856d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a85a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a85be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a85d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a84020"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a841b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a84340"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a844d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a84660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1c8a33e020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1c8a33e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a33e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a33e530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a33e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a33e850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a33e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a33eb70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a33ed00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a33d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1c8a33b5d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1c8a33b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a33b950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a33bae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a33bc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a33be00"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a339020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3391b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a339340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3394d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1c8a341d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1c8a341d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3400e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a340270"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a340400"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a340590"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a340720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3408b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a340a40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a340bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1c8a33d2b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1c8a33d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a33d630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a33d7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a33d950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a33dae0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a33dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a33de00"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a33c020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a33c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1c8a339760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1c8a339760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a339ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a339c70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a339e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a338020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3381b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a338340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3384d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a338660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1c8a340e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1c8a340e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a33f210"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a33f3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a33f530"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a33f6c0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a33f850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a33f9e0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a33fb70"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a33fd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1c8a33c440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1c8a33c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a33c7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a33c950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a33cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a33cc70"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a33ce00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a33b020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a33b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a33b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1c8a3388f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1c8a3388f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a338c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a338e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a337020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3371b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a337340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3374d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a337660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a30a60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a30a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a30de0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a2f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a2f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a2f340"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a2f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a2f660"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a2f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a2f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a2de20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a2de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a2c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a2c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a2c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a2c670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a2c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a2c990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a2cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a2ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a290a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a290a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a29420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a295b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a29740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a298d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a29a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a29bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a29d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a263f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a263f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a26770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a26900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a26a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a26c20"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a26db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a25020"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a251b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a25340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a236d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a236d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a23a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a23be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a23d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a22020"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a221b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a22340"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a224d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a22660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a209b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a209b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a20d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a1f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a1f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a1f340"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a1f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a1f660"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a1f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a1f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a1de20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a1de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a1c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a1c350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a1c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a1c670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a1c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a1c990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a1cb20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a1ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89a190a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89a190a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89a19420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89a195b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89a19740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89a198d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89a19a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89a19bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89a19d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89a18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1c8a32f440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1c8a32f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a32f7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a32f950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a32fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a32fc70"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a32fe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a32d020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a32d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a32d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1c8a32b8f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1c8a32b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a32bc70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a32be00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a32a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a32a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a32a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a32a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a32a660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a32a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1c8a331020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1c8a331020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3313a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a331530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3316c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a331850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3319e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a331b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a331d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a330020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1c8a32d5d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1c8a32d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a32d950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a32dae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a32dc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a32de00"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a32c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a32c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a32c340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a32c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1c8a32aa80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1c8a32aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a32ae00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a329020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a329340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a329660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3297f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a329980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1c8a3302b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1c8a3302b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a330630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3307c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a330950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a330ae0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a330c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a330e00"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a32f020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a32f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1c8a32c760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1c8a32c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a32cae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a32cc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a32ce00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a32b020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a32b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a32b340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a32b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a32b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1c8a329c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1c8a329c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a328020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3281b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a328340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3284d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a328660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3287f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a328980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a328b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c899c6c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c899c6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c899c40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c899c4230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c899c43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c899c4550"/>
        <function-ref name="get" scoped="" ref="0x7f1c899c46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c899c4870"/>
        <function-ref name="set" scoped="" ref="0x7f1c899c4a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c899c4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c899c2e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c899c2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c899c11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c899c1350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c899c14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c899c1670"/>
        <function-ref name="get" scoped="" ref="0x7f1c899c1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c899c1990"/>
        <function-ref name="set" scoped="" ref="0x7f1c899c1b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c899c1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c899be0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c899be0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c899be420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c899be5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c899be740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c899be8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c899bea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c899bebf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c899bed80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c899bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c899bb3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c899bb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c899bb770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c899bb900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c899bba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c899bbc20"/>
        <function-ref name="get" scoped="" ref="0x7f1c899bbdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c899ba020"/>
        <function-ref name="set" scoped="" ref="0x7f1c899ba1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c899ba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c899b86d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c899b86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c899b8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c899b8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c899b8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c899b7020"/>
        <function-ref name="get" scoped="" ref="0x7f1c899b71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c899b7340"/>
        <function-ref name="set" scoped="" ref="0x7f1c899b74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c899b7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c899b59b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c899b59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c899b5d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c899b4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c899b41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c899b4340"/>
        <function-ref name="get" scoped="" ref="0x7f1c899b44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c899b4660"/>
        <function-ref name="set" scoped="" ref="0x7f1c899b47f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c899b4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c899b2e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c899b2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c899b11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c899b1350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c899b14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c899b1670"/>
        <function-ref name="get" scoped="" ref="0x7f1c899b1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c899b1990"/>
        <function-ref name="set" scoped="" ref="0x7f1c899b1b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c899b1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c899ae0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c899ae0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c899ae420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c899ae5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c899ae740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c899ae8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c899aea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c899aebf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c899aed80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c899ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1c8a31f760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1c8a31f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a31fae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a31fc70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a31fe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a31e020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a31e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a31e340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a31e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a31e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1c8a31cc10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1c8a31cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a31b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a31b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a31b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a31b4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a31b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a31b7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a31b980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a31bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1c8a3213f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1c8a3213f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a321770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a321900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a321a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a321c20"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a321db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a320020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3201b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a320340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1c8a31e8f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1c8a31e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a31ec70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a31ee00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a31d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a31d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a31d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a31d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a31d660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a31d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1c8a31bda0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1c8a31bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a31a180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a31a310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a31a4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a31a630"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a31a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a31a950"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a31aae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a31ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1c8a3205d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1c8a3205d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a320950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a320ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a320c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a320e00"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a31f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a31f1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a31f340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a31f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1c8a31da80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1c8a31da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a31de00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a31c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a31c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a31c340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a31c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a31c660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a31c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a31c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1c8a319020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1c8a319020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a3193a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a319530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3196c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a319850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3199e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a319b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a319d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a318020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8995bc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8995bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c899590a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89959230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c899593c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89959550"/>
        <function-ref name="get" scoped="" ref="0x7f1c899596e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89959870"/>
        <function-ref name="set" scoped="" ref="0x7f1c89959a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89959b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89957e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89957e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c899561c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89956350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c899564e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89956670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89956800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89956990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89956b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89956cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c899530a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c899530a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89953420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c899535b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89953740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c899538d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89953a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89953bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89953d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89952020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c899503f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c899503f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89950770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89950900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89950a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89950c20"/>
        <function-ref name="get" scoped="" ref="0x7f1c89950db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8994f020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8994f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8994f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8994d6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8994d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8994da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8994dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8994dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8994c020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8994c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8994c340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8994c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8994c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8994a9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8994a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8994ad30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89949020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c899491b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89949340"/>
        <function-ref name="get" scoped="" ref="0x7f1c899494d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89949660"/>
        <function-ref name="set" scoped="" ref="0x7f1c899497f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89949980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89947e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89947e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c899461c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89946350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c899464e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89946670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89946800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89946990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89946b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89946cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c899430a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c899430a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89943420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c899435b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89943740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c899438d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c89943a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89943bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c89943d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89942020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1c8a310a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1c8a310a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a310e00"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a30f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a30f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a30f340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a30f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a30f660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a30f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a30f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1c8a30c020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1c8a30c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a30c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a30c530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a30c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a30c850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a30c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a30cb70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a30cd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a30b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1c8a3127a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1c8a3127a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a312b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a312cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a312e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a311020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3111b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a311340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3114d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a311660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1c8a30fc10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1c8a30fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a30e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a30e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a30e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a30e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a30e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a30e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a30e980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a30eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1c8a30b2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1c8a30b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a30b630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a30b7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a30b950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a30bae0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a30bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a30be00"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a30a020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a30a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1c8a3118f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1c8a3118f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a311c70"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a311e00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a310020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3101b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a310340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3104d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a310660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a3107f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1c8a30eda0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1c8a30eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a30d180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a30d310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a30d4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a30d630"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a30d7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a30d950"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a30dae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a30dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1c8a30a440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1c8a30a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a30a7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a30a950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a30aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a30ac70"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a30ae00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a308020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3081b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a308340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c898f0c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c898f0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c898ef0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c898ef230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c898ef3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c898ef550"/>
        <function-ref name="get" scoped="" ref="0x7f1c898ef6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c898ef870"/>
        <function-ref name="set" scoped="" ref="0x7f1c898efa00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c898efb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c898ede20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c898ede20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c898eb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c898eb350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c898eb4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c898eb670"/>
        <function-ref name="get" scoped="" ref="0x7f1c898eb800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c898eb990"/>
        <function-ref name="set" scoped="" ref="0x7f1c898ebb20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c898ebcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c898e80a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c898e80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c898e8420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c898e85b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c898e8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c898e88d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c898e8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c898e8bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c898e8d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c898e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c898e53f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c898e53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c898e5770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c898e5900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c898e5a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c898e5c20"/>
        <function-ref name="get" scoped="" ref="0x7f1c898e5db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c898e4020"/>
        <function-ref name="set" scoped="" ref="0x7f1c898e41b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c898e4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c898e26d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c898e26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c898e2a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c898e2be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c898e2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c898e1020"/>
        <function-ref name="get" scoped="" ref="0x7f1c898e11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c898e1340"/>
        <function-ref name="set" scoped="" ref="0x7f1c898e14d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c898e1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c898df9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c898df9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c898dfd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c898de020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c898de1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c898de340"/>
        <function-ref name="get" scoped="" ref="0x7f1c898de4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c898de660"/>
        <function-ref name="set" scoped="" ref="0x7f1c898de7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c898de980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c898dce20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c898dce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c898db1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c898db350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c898db4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c898db670"/>
        <function-ref name="get" scoped="" ref="0x7f1c898db800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c898db990"/>
        <function-ref name="set" scoped="" ref="0x7f1c898dbb20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c898dbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c898d80a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c898d80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c898d8420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c898d85b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c898d8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c898d88d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c898d8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c898d8bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c898d8d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c898d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f1c8a301da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f1c8a301da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a300180"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a300310"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3004a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a300630"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3007c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a300950"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a300ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a300c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f1c8a2fc440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f1c8a2fc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2fc7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2fc950"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2fcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2fcc70"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2fce00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2fb020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2fb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2fb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f1c8a303a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f1c8a303a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a303da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a302020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a3021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a302340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a3024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a302660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a3027f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a302980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f1c8a2ff020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f1c8a2ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2ff3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2ff530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2ff6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2ff850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2ff9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2ffb70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2ffd00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f1c8a2fb5d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f1c8a2fb5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2fb950"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2fbae0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2fbc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2fbe00"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2fa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2fa1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2fa340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2fa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f1c8a302c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f1c8a302c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a301020"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a3011b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a301340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a3014d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a301660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a3017f0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a301980"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a301b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f1c8a2fe2b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f1c8a2fe2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2fe630"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2fe7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2fe950"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2feae0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2fec70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2fee00"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2fc020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f1c8a2fa760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f1c8a2fa760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2faae0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2fac70"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2fae00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2f9020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2f91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2f9340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2f94d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2f9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89885c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89885c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c898840a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89884230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c898843c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89884550"/>
        <function-ref name="get" scoped="" ref="0x7f1c898846e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89884870"/>
        <function-ref name="set" scoped="" ref="0x7f1c89884a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89884b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89882e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89882e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c898801c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89880350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c898804e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89880670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89880800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89880990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89880b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89880cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8987d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8987d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8987d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8987d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8987d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8987d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8987da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8987dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8987dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8987c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8987a3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8987a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8987a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8987a900"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8987aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8987ac20"/>
        <function-ref name="get" scoped="" ref="0x7f1c8987adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89879020"/>
        <function-ref name="set" scoped="" ref="0x7f1c898791b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89879340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c898776d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c898776d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89877a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89877be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c89877d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89876020"/>
        <function-ref name="get" scoped="" ref="0x7f1c898761b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89876340"/>
        <function-ref name="set" scoped="" ref="0x7f1c898764d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89876660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c898749b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c898749b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c89874d30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89873020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c898731b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89873340"/>
        <function-ref name="get" scoped="" ref="0x7f1c898734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89873660"/>
        <function-ref name="set" scoped="" ref="0x7f1c898737f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89873980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c89871e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c89871e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c898701c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c89870350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c898704e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c89870670"/>
        <function-ref name="get" scoped="" ref="0x7f1c89870800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c89870990"/>
        <function-ref name="set" scoped="" ref="0x7f1c89870b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c89870cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8986d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8986d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8986d420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8986d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8986d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8986d8d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8986da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8986dbf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8986dd80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8986c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2f3160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2f3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2f34e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2f3670"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2f3800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2f3990"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2f3b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2f3cb0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2f3e40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2eec90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2eec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2ed0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2ed230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2ed3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2ed550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2ed6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2ed870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2eda00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2edb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2e86d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2e86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2e8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2e8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2e8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2e7020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2e71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2e7340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2e74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2e7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2e3160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2e3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2e34e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2e3670"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2e3800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2e3990"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2e3b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2e3cb0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2e3e40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2dec90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2dec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2dd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2dd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2dd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2dd550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2dd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2dd870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2dda00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2ddb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2d86d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2d86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2d8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2d8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2d8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2d7020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2d71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2d7340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2d74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2d7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2d3270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2d3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2d35f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2d3780"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2d3910"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2d3aa0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2d3c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2d3dc0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2d2020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2d21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2ced00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2ced00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2cd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2cd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2cd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2cd550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2cd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2cd870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2cda00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2cdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2c86d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2c86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2c8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2c8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2c8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2c7020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2c71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2c7340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2c74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2c3160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2c3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2c34e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2c3670"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2c3800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2c3990"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2c3b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2c3cb0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2c3e40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2bec90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2bec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2bd0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2bd230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2bd3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2bd550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2bd6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2bd870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2bda00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2bdb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2b86d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2b86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2b8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2b8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2b8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2b7020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2b71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2b7340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2b74d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2b7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2b3160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2b3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2b34e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2b3670"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2b3800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2b3990"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2b3b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2b3cb0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2b3e40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2aec90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2aec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2ad0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2ad230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2ad3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2ad550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2ad6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a2ad870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2ada00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a2adb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a292020" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a292020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2923a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a292530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2926c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a292850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2929e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a292b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a292d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a291020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a28d6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a28d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a28da50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a28dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a28dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a28c020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a28c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a28c340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a28c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a28c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a289c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a289c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2870a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a287230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2873c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a287550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2876e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a287870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a287a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a287b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a283180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a283180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a283500"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a283690"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a283820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2839b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a283b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a283cd0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a283e60"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a282020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a27e830" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a27e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a27ebb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a27ed40"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a27d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a27d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a27d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a27d4d0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a27d660"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a27d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a27ae20" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a27ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2791c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a279350"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2794e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a279670"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a279800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a279990"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a279b20"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a279cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a274460" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a274460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2747e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a274970"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a274b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a274c90"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a274e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a273020"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2731b0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a273340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a26f9b0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a26f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a26fd30"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a26e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a26e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a26e340"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a26e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a26e660"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a26e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a26e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a26a160" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a26a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a26a4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a26a670"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a26a800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a26a990"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a26ab20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a26acb0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a26ae40"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a269020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2656d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2656d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a265a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a265be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a265d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a264020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a264340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2644d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a264660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a260c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a260c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a25f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a25f230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a25f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a25f550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a25f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a25f870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a25fa00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a25fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a25b180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a25b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a25b500"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a25b690"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a25b820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a25b9b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a25bb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a25bcd0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a25be60"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a25a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2566d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2566d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a256a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a256be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a256d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a255020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2551b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a255340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2554d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a255660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a251c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a251c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2500a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a250230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2503c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a250550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2506e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a250870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a250a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a250b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a24c180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a24c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a24c500"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a24c690"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a24c820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a24c9b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a24cb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a24ccd0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a24ce60"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a24b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2476d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2476d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a247a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a247be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a247d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a246020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2461b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a246340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2464d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a246660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a242c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a242c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2410a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a241230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2413c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a241550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2416e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a241870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a241a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a241b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a23d180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a23d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a23d500"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a23d690"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a23d820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a23d9b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a23db40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a23dcd0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a23de60"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a23c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2386d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2386d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a238a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a238be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a238d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a237020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2371b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a237340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2374d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a237660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a233c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a233c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2320a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a232230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2323c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a232550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2326e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a232870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a232a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a232b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a22e180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a22e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a22e500"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a22e690"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a22e820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a22e9b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a22eb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a22ecd0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a22ee60"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a22d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2296d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2296d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a229a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a229be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a229d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a228020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2281b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a228340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2284d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a228660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a225c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a225c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2230a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a223230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2233c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a223550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2236e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a223870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a223a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a223b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a21f180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a21f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a21f500"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a21f690"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a21f820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a21f9b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a21fb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a21fcd0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a21fe60"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a21e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a21a6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a21a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a21aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a21abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a21ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a219020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2191b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a219340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2194d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a219660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a216c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a216c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a2140a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a214230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a2143c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a214550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2146e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a214870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a214a00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a214b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a210180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a210180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a210500"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a210690"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a210820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2109b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a210b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a210cd0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a210e60"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a20f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a20b6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a20b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a20ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a20bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a20bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a20a020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a20a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a20a340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a20a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a20a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2060a0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2060a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a206420"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a2065b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a206740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a2068d0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a206a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a206bf0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a206d80"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a205020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a2016d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a2016d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a201a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a201be0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a201d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a200020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a2001b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a200340"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a2004d0"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a200660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a1fcc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a1fcc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a1fb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a1fb230"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a1fb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a1fb550"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a1fb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a1fb870"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a1fba00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a1fbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f1c8a1f7180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f1c8a1f7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a1f7500"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a1f7690"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a1f7820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a1f79b0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a1f7b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a1f7cd0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a1f7e60"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a1f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f1c8a1a1e60" loc="12:PS2/PS2C.nc">
      <component-ref qname="PS2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f1c8a1a1e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8a19e210"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f1c8a19e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockIRQ" ref="0x7f1c8a170d90" loc="22:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockIRQ" scoped="" ref="0x7f1c8a170d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f1c8a176180"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a176310"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a1764a0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f1c8a176630"/>
        <function-ref name="reset" scoped="" ref="0x7f1c8a1767c0"/>
        <function-ref name="setMask" scoped="" ref="0x7f1c8a176950"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a176ae0"/>
        <function-ref name="getPins" scoped="" ref="0x7f1c8a176c70"/>
        <function-ref name="getMask" scoped="" ref="0x7f1c8a176e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockPin" ref="0x7f1c8a1751c0" loc="23:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockPin" scoped="" ref="0x7f1c8a1751c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a175540"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a1756d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a175860"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a1759f0"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a175b80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a175d10"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a16f020"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a16f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataPin" ref="0x7f1c8a16f4f0" loc="24:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPin" scoped="" ref="0x7f1c8a16f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a16f870"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a16fa00"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a16fb90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a16fd20"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a16e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a16e1b0"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a16e340"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a16e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7f1c8a178860" loc="19:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7f1c8a178860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8a178be0"/>
        <function-ref name="receivedChar" scoped="" ref="0x7f1c8a178d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x7f1c8a19cca0" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <component-ref qname="HplAtmegaPinChange2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7f1c8a19cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f1c8a1470a0"/>
        <function-ref name="fired" scoped="" ref="0x7f1c8a147230"/>
        <function-ref name="disable" scoped="" ref="0x7f1c8a1473c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f1c8a147550"/>
        <function-ref name="reset" scoped="" ref="0x7f1c8a1476e0"/>
        <function-ref name="setMask" scoped="" ref="0x7f1c8a147870"/>
        <function-ref name="enable" scoped="" ref="0x7f1c8a147a00"/>
        <function-ref name="getPins" scoped="" ref="0x7f1c8a147b90"/>
        <function-ref name="getMask" scoped="" ref="0x7f1c8a147d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1c8a131cd0" loc="14:VolumeAdc/VolumeAdcC.nc">
      <component-ref qname="VolumeAdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1c8a131cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c8a12e940"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c8a12edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f1c8a12a700" loc="17:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c8a12a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1c8a12aa80"/>
        <function-ref name="configure" scoped="" ref="0x7f1c8a12ac10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumePin" ref="0x7f1c8a128020" loc="19:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumePin" scoped="" ref="0x7f1c8a128020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f1c8a1283a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f1c8a128530"/>
        <function-ref name="toggle" scoped="" ref="0x7f1c8a1286c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f1c8a128850"/>
        <function-ref name="get" scoped="" ref="0x7f1c8a1289e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f1c8a128b70"/>
        <function-ref name="set" scoped="" ref="0x7f1c8a128d00"/>
        <function-ref name="clr" scoped="" ref="0x7f1c8a124020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcConfig" ref="0x7f1c8a126d30" loc="16:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f1c8a126d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f1c8a12a0e0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1c8a12a270"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f1c8a12a400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1c89fd9c10" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c89fd9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1c89fd7020"/>
        <function-ref name="configure" scoped="" ref="0x7f1c89fd71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1c89fdbbe0" loc="22:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1c89fdbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c89fda860"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c89fdace0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f1c89fd9320" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f1c89fd9320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f1c89fd96a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1c89fd9830"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f1c89fd99c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1c8a115450" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1c8a115450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c8a114090"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c8a114510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f1c8a1134f0" loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f1c8a1134f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c8a112150"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c8a112610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1c8a10c1d0" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1c8a10c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8a10c550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1c8a10c6e0"/>
        <function-ref name="request" scoped="" ref="0x7f1c8a10c870"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8a10ca00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8a10cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f1c8a10e280" loc="23:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f1c8a10e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f1c8a10e600"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1c8a10e790"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f1c8a10e920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1c8a106210" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c8a106210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1c8a106590"/>
        <function-ref name="configure" scoped="" ref="0x7f1c8a106720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7f1c8a101450" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f1c8a101450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1c8a1017d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1c8a101960"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1c8a101af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1c8a10be40" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1c8a10be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8a1081e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1c8a108370"/>
        <function-ref name="request" scoped="" ref="0x7f1c8a108500"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8a108690"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8a108820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7f1c8a0fb420" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f1c8a0fb420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1c8a0fb7a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1c8a0fb930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm1280Adc" ref="0x7f1c8a0e7710" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f1c8a0e7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f1c8a0e7a90"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f1c8a0e7c20"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f1c8a0e7db0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f1c8a0f6020"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f1c8a0f61b0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f1c8a0f6340"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f1c8a0f64d0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f1c8a0f6660"/>
        <function-ref name="cancel" scoped="" ref="0x7f1c8a0f67f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f1c8a0f6980"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f1c8a0f6b10"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f1c8a0f6ca0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f1c8a0f6e30"/>
        <function-ref name="isStarted" scoped="" ref="0x7f1c8a0f5120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f1c8a0f52b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f1c8a0f5440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f1c8a0f55d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a0f5760"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1c8a0f58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7f1c8a0f8830" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f1c8a0f8830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1c8a0f8bb0"/>
        <function-ref name="cancel" scoped="" ref="0x7f1c8a0f8d40"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1c8a0f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c8a0f9830" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c8a0f9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c8a0f9bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f1c8a0f5be0" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f1c8a0f5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f1c8a0e6020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f1c8a0e61b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f1c8a0e6340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f1c8a0e64d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f1c8a0e6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f1c8a0f8020" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1c8a0f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1c8a0f83a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a0f8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7f1c8a0f7330" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7f1c8a0f7330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1c8a0f76b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1c8a0f7840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7f1c8a0b5460" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <component-ref qname="HplAtm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f1c8a0b5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f1c8a0b57e0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f1c8a0b5970"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f1c8a0b5b00"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f1c8a0b5c90"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f1c8a0b5e20"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f1c8a0b4020"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f1c8a0b41b0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f1c8a0b4340"/>
        <function-ref name="cancel" scoped="" ref="0x7f1c8a0b44d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f1c8a0b4660"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f1c8a0b47f0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f1c8a0b4980"/>
        <function-ref name="startConversion" scoped="" ref="0x7f1c8a0b4b10"/>
        <function-ref name="isStarted" scoped="" ref="0x7f1c8a0b4da0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f1c8a0b3020"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f1c8a0b31b0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f1c8a0b3340"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a0b34d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1c8a0b3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f1c8a0adc10" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f1c8a0adc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f1c8a0ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7f1c8a0af7d0" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7f1c8a0af7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f1c8a0afb50"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f1c8a0afce0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f1c8a0afe70"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f1c8a0ae030"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f1c8a0ae1c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f1c8a0ae350"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f1c8a0ae4e0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f1c8a0ae670"/>
        <function-ref name="cancel" scoped="" ref="0x7f1c8a0ae800"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f1c8a0ae990"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f1c8a0aeb20"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f1c8a0aecb0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f1c8a0aee40"/>
        <function-ref name="isStarted" scoped="" ref="0x7f1c8a0ad120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f1c8a0ad2b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f1c8a0ad440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f1c8a0ad5d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f1c8a0ad760"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1c8a0ad8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1c8a044c00" loc="92:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1c8a044c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1c8a043020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1c8a0431b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1c8a042930" loc="96:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c8a042930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1c8a042cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f1c8a042e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1c8a043400" loc="93:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c8a043400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8a043780"/>
        <function-ref name="requested" scoped="" ref="0x7f1c8a043910"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8a043aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8a043c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1c8a043dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1c8a045e70" loc="91:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1c8a045e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8a044240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1c8a0443d0"/>
        <function-ref name="request" scoped="" ref="0x7f1c8a044560"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8a0446f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8a044880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1c8a042060" loc="94:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1c8a042060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1c8a0423e0"/>
        <function-ref name="userId" scoped="" ref="0x7f1c8a042570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f1c89683c00" loc="44:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f1c89683c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f1c89682020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f1c896822b0" loc="45:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f1c896822b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1c89682630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1c896827c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1c89682950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1c89682ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f1c8967e3a0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f1c8967e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f1c8967e740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1c8967e8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f1c8967c210" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f1c8967c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f1c8967c5b0"/>
        <function-ref name="configure" scoped="" ref="0x7f1c8967c740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f1c8967c9d0" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f1c8967c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f1c8967cd50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f1c8967b020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f1c8967b1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f1c8967b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f1c8967eb20" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c8967eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8967d020"/>
        <function-ref name="requested" scoped="" ref="0x7f1c8967d1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8967d340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8967d4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1c8967d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f1c8967b590" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f1c8967b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f1c8967b910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f1c8967baa0"/>
        <function-ref name="led1On" scoped="" ref="0x7f1c8967bc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f1c8967bdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f1c8967a020"/>
        <function-ref name="get" scoped="" ref="0x7f1c8967a1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f1c8967a340"/>
        <function-ref name="led0On" scoped="" ref="0x7f1c8967a980"/>
        <function-ref name="set" scoped="" ref="0x7f1c8967a660"/>
        <function-ref name="led2On" scoped="" ref="0x7f1c8967a4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f1c8967a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f1c8967f4d0" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1c8967f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8967f870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1c8967fa00"/>
        <function-ref name="request" scoped="" ref="0x7f1c8967fb90"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8967fd20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8967e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f1c8967d8b0" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1c8967d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1c8967dc30"/>
        <function-ref name="userId" scoped="" ref="0x7f1c8967ddc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f1c8967ac50" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f1c8967ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c89679020"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c896791b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1c8a03e780" loc="72:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1c8a03e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1c8a03eb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1c8a03ed50" loc="73:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c8a03ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c8a034100"/>
        <function-ref name="requested" scoped="" ref="0x7f1c8a034290"/>
        <function-ref name="granted" scoped="" ref="0x7f1c8a034420"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c8a0345b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1c8a034740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f1c8a03e020" loc="70:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1c8a03e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1c8a03e3a0"/>
        <function-ref name="stop" scoped="" ref="0x7f1c8a03e530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1c8a034990" loc="74:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1c8a034990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1c8a034d10"/>
        <function-ref name="userId" scoped="" ref="0x7f1c8a033020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f1c89647dc0" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f1c89647dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f1c89646180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f1c896463d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f1c896463d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c89646750"/>
        <function-ref name="requested" scoped="" ref="0x7f1c896468e0"/>
        <function-ref name="granted" scoped="" ref="0x7f1c89646a70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c89646c00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f1c89646d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f1c89647660" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f1c89647660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f1c896479e0"/>
        <function-ref name="stop" scoped="" ref="0x7f1c89647b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f1c89645020" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f1c89645020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f1c896453a0"/>
        <function-ref name="userId" scoped="" ref="0x7f1c89645530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f1c8a024740" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7f1c8a024740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad6f5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7f1c8ad6f930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f1c8a0235b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcSingle" ref="0x7f1c8a0269f0" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7f1c8a0269f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f1c8a026d70"/>
        <function-ref name="cancel" scoped="" ref="0x7f1c8a025020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f1c8a0251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1c8a02a410" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1c8a02a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c8a029020"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c8a0294a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f1c8a0281d0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f1c8a0281d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c8a028e00"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c8a026340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7f1c8a025a10" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7f1c8a025a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f1c8a025d90"/>
        <function-ref name="getChannel" scoped="" ref="0x7f1c8a024020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f1c8a0241b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f1c8a012820" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f1c8a012820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f1c8a012ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f1c8a012d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f1c89ffd150" loc="24:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f1c89ffd150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c89ffdd60"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c89fe5260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f1c89fe5af0" loc="26:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f1c89fe5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f1c89fe3750"/>
        <function-ref name="readDone" scoped="" ref="0x7f1c89fe3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f1c89fe2300" loc="27:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f1c89fe2300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f1c89fe26a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f1c89fe2830"/>
        <function-ref name="request" scoped="" ref="0x7f1c89fe29c0"/>
        <function-ref name="granted" scoped="" ref="0x7f1c89fe2b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f1c89fe2ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f1c8a12fb00" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f1c8a12fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad711a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7f1c8ad71510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f1c89fd0110"/>
        <function-ref name="fired" scoped="" ref="0x7f1c89fd35b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f1c89fd24a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f1c89fd2020"/>
        <function-ref name="getdt" scoped="" ref="0x7f1c89fd0a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f1c89fd0590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f1c89fd3a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f1c89fd4750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f1c89fd2ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f1c89fd4c20"/>
        <function-ref name="stop" scoped="" ref="0x7f1c89fd3130"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../tinyos_ws18/tos/interfaces/Init.nc">
      <documentation loc="34:../tinyos_ws18/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1c8ac97740" loc="62:../tinyos_ws18/tos/interfaces/Init.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../tinyos_ws18/tos/interfaces/Boot.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f1c8ac98350" loc="60:../tinyos_ws18/tos/interfaces/Boot.nc">
        <documentation loc="51:../tinyos_ws18/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f1c8ac8fb70" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f1c8ac8f8f0" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f1c8ac92070" loc="31:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f1c8ac92af0" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f1c8ac92870" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f1c8ac90630" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f1c8ac903b0" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f1c8ac8f020" loc="53:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../tinyos_ws18/tos/interfaces/Scheduler.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f1c8ae266c0" loc="57:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="54:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f1c8ae256a0" loc="72:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f1c8ae26e30" loc="65:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f1c8ae1da30" loc="67:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f1c8ae1b2b0" loc="75:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../tinyos_ws18/tos/interfaces/McuSleep.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f1c8ad23d40" loc="76:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f1c8ad03940" loc="62:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f1c8ada2470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f1c8ad041f0" loc="52:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f1c8ac3e420" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1c8ac3e420"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f1c8ac3ece0" loc="55:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="50:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1c8ac3aa60" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1c8ac3e420"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1c8ac3a4b0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1c8ac3a7d0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1c8ac3e420"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PS2" loc="1:PS2/PS2.nc">
      <function command="" provided="0" name="init" ref="0x7f1c8ac48890" loc="4:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChar" ref="0x7f1c8ac3c2a0" loc="7:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="chr" ref="0x7f1c8ac3c020" loc="7:PS2/PS2.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FMClick" loc="19:FMClick/FMClick.nc">
      <function command="" provided="0" name="seek" ref="0x7f1c8ac45470" loc="22:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f1c8ac5a7d0"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7f1c8ac47390"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f1c8ac451f0" loc="22:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f1c8ac5a7d0"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7f1c8ac47390"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x7f1c8ac42940" loc="30:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="res" ref="0x7f1c8ac426c0" loc="30:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setVolume" ref="0x7f1c8ac43540" loc="26:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7f1c8ac432c0" loc="26:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rdsReceived" ref="0x7f1c8ac40a20" loc="36:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f1c8ac47620"/>
              <typename><typedef-ref name="RDSType" ref="0x7f1c8ac46090"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f1c8ac40470" loc="36:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7f1c8ac47620"/>
              <typename><typedef-ref name="RDSType" ref="0x7f1c8ac46090"/></typename>
            </type-tag>
          </variable>
          <variable name="buf" ref="0x7f1c8ac40790" loc="36:FMClick/FMClick.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveRDS" ref="0x7f1c8ac42020" loc="28:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f1c8ac43c40" loc="28:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tuneComplete" ref="0x7f1c8ac41350" loc="32:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f1c8ac410d0" loc="32:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f1c8ac45bb0" loc="24:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="seekComplete" ref="0x7f1c8ac41d10" loc="34:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f1c8ac41a90" loc="34:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tune" ref="0x7f1c8ac46ac0" loc="20:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f1c8ac46840" loc="20:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Glcd" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
      <function command="" provided="0" name="drawTextPgm" ref="0x7f1c8ac4a620" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="109:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawTextPgm&#10;&#10; </short>
          <long>&#10; drawTextPgm&#10;&#10; @param text stored in program memory&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f1c8ac4cbf0" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f1c8ac4a020" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f1c8ac4a380" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawRect" ref="0x7f1c8ac4f2d0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw rectangle&#10;&#10; </short>
          <long>&#10; Draw rectangle&#10;&#10; @param upper left x&#10; @param upper left y&#10; @param lower right x&#10; @param lower right y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f1c8ac51560" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f1c8ac518d0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f1c8ac51c60" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f1c8ac4f020" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawLine" ref="0x7f1c8ac52d40" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="45:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw line&#10;&#10; </short>
          <long>&#10; Draw line&#10;&#10; @param first point x&#10; @param first point y&#10; @param second point x&#10; @param second point y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7f1c8ac52020" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7f1c8ac52390" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7f1c8ac52720" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7f1c8ac52a90" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x7f1c8ac56b60" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="12:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Set pixel&#10;&#10; </short>
          <long>&#10; Set pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f1c8ac56570" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f1c8ac568d0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="invertPixel" ref="0x7f1c8ac53710" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="34:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Invert pixel&#10;&#10; </short>
          <long>&#10; Invert pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f1c8ac53120" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f1c8ac53480" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPixel" ref="0x7f1c8ac54940" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="23:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Clear pixel&#10;&#10; </short>
          <long>&#10; Clear pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f1c8ac54350" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f1c8ac546b0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawEllipse" ref="0x7f1c8ac4e8a0" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw ellipse&#10;&#10; </short>
          <long>&#10; Draw ellipse&#10;&#10; @param center x&#10; @param center y&#10; @param radius horizontal&#10; @param radius vertical&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f1c8ac4fac0" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f1c8ac4fe20" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_h" ref="0x7f1c8ac4e240" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_v" ref="0x7f1c8ac4e5f0" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawText" ref="0x7f1c8ac4c450" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="97:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawText&#10;&#10; </short>
          <long>&#10; drawText&#10;&#10; @param text&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7f1c8ac4dac0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7f1c8ac4de20" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7f1c8ac4c1b0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x7f1c8ac4d350" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="87:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Fill Display with pattern&#10;&#10; </short>
          <long>&#10; Fill Display with pattern&#10;&#10; @param pattern&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x7f1c8ac4d0d0" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1c8ac3be40" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1c8ac3be40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1c8ac30c10" loc="136:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="132:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1c8ac34420" loc="83:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f1c8ac312b0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1c8ac32bd0" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1c8ac31020" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f1c8ac32420" loc="98:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="94:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f1c8ac2fc60" loc="151:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="146:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f1c8ac2f3e0" loc="144:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="138:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1c8ac34c00" loc="92:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="86:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f1c8ac369d0" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1c8ac36750" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f1c8ac302b0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="116:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1c8ac31c50" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f1c8ac30020" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f1c8ac354d0" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1c8ac35250" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1c8ac35cd0" loc="78:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1c8aba3020" loc="44:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f1c8aba3750" loc="45:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1c8aba4190" loc="42:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f1c8aba15e0" loc="47:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1c8aba4890" loc="43:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1c8aba3e70" loc="46:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1c8aba5350" loc="40:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f1c8aba5a20" loc="41:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f1c8abc5770" loc="56:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1c8abc22b0" loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1c8abc5020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f1c8abc4a60" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f1c8abc47e0" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f1c8abc6790" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f1c8abc4020" loc="63:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7f1c8abba7e0" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7f1c8abba7e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f1c8abb9de0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f1c8abbb7b0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f1c8abb9110" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f1c8abbb7b0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1c8abb9460" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f1c8abb97b0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1c8abb9b30" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f1c8abb39a0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1c8abb2c70" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1c8abb3020" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f1c8abb3370" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1c8abb36f0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1c8abb7cf0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f1c8abbb7b0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f1c8abb7020" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7f1c8abbb7b0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1c8abb7370" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f1c8abb76c0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1c8abb7a40" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1c8abb4cf0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f1c8abb4020" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f1c8abb4370" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7f1c8abb46c0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f1c8abb4a40" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../tinyos_ws18/tos/interfaces/Resource.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1c8abbf9c0" loc="120:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f1c8abc09a0" loc="97:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f1c8abc0030" loc="88:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1c8abbf1f0" loc="102:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1c8abbe470" loc="128:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="122:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplKS0108" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <short>&#10; Hpl interface for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl interface for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="dataWrite" ref="0x7f1c8aa92460" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="48:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write data&#10;&#10; </short>
          <long>&#10; Write data&#10;&#10; @param The controller to write to&#10; @param data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f1c8aa93e30" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f1c8aa921d0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f1c8aa961b0" loc="15:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="10:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Initialize GLCD&#10; &#10; </short>
          <long>&#10; Initialize GLCD&#10; &#10; @return SUCCESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataRead" ref="0x7f1c8aa93630" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="38:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read data&#10;&#10; </short>
          <long>&#10; Read data&#10;&#10; @param The controller to be read from&#10; &#10; @return data&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f1c8aa933b0" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlWrite" ref="0x7f1c8aa95b10" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write to controller&#10;&#10; </short>
          <long>&#10; Write to controller&#10;&#10; @param The controller to write to&#10; @param controller data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f1c8aa95500" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7f1c8aa95880" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlRead" ref="0x7f1c8aa96c30" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="17:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read controller state&#10;&#10; </short>
          <long>&#10; Read controller state&#10;&#10; @param The controller to be checked&#10; &#10; @return state of the controller&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7f1c8aa969b0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1c8aa18d30" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1c8aa18d30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1c8aa0e020" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8aa0e020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f1c8aa0eb50" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8aa0e020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1c8aa0e8d0" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8aa0e020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIOPort" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f1c8aa142a0" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f1c8aa14020" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f1c8aa135b0" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f1c8aa13330" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f1c8aa12020" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f1c8aa13c80" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f1c8aa16870" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f1c8aa165f0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f1c8aa100e0" loc="13:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1c8aa12970" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1c8aa126f0" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1c8aa14bd0" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f1c8aa14950" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f1c8a7ec4e0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f1c8a774a70" loc="53:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1c8a7713e0" loc="61:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f1c8a768bb0" loc="65:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f1c8a768390" loc="59:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f1c8a76f970" loc="56:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f1c8a76eaa0" loc="73:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f1c8a76f0e0" loc="46:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f1c8a76e270" loc="65:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f1c8a76c420" loc="81:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f1c8a76a270" loc="90:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f1c8a76aad0" loc="98:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f1c8a75fc10" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1c8a769cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1c8a75f990" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1c8a769cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f1c8a763c50" loc="53:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f1c8a7607a0" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1c8a769cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f1c8a760520" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f1c8a769cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f1c8a75f0e0" loc="70:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f1c8a769cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../tinyos_ws18/tos/interfaces/Leds.nc">
      <documentation loc="33:../tinyos_ws18/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f1c8a73c390" loc="61:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f1c8a73cb40" loc="67:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f1c8a73b350" loc="72:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f1c8a73a2b0" loc="83:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="79:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f1c8a739a20" loc="100:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="96:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1c8a737270" loc="117:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="103:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f1c8a73bae0" loc="77:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1c8a737de0" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="120:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f1c8a737b60" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f1c8a73dbd0" loc="56:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f1c8a73aa90" loc="89:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="86:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f1c8a739270" loc="94:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f1c8a6e5020" loc="62:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f1c8a6eadb0" loc="95:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1c8a6e76a0" loc="105:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7f1c8a6cba10" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7f1c8a689d00" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7f1c8a687490" loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7f1c8a686580" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f1c8a686300" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7f1c8a6895e0" loc="52:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7f1c8a683e40" loc="65:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f1c8a67ebe0" loc="84:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f1c8a682830" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f1c8a6825b0" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f1c8a67c450" loc="89:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7f1c8a68a7a0" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7f1c8a68a520" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7f1c8a683710" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7f1c8a683490" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f1c8a681120" loc="68:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7f1c8a686cc0" loc="61:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f1c8a680120" loc="75:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7f1c8a687be0" loc="56:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f1c8a67e4a0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f1c8a67e220" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f1c8a67dd00" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1c8a67da80" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7f1c8a681920" loc="72:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7f1c8a68ae70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7f1c8a685650" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f1c8a6853d0" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7f1c8a680b40" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f1c8a6808c0" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f1c8a67d390" loc="85:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7f1c8a685d80" loc="63:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1c8a56d6d0" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1c8a56d6d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1c8a569020" loc="61:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f1c8b742170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1c8a558410" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1c8a558410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1c8a558650" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a558650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f1c8a557020" loc="64:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a558650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f1c8a555120" loc="76:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f1c8a5578a0" loc="71:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1c8a555880" loc="82:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="78:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f1c8a566ba0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f1c8a566ba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f1c8a566de0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a566de0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f1c8a55f9c0" loc="109:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="105:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a566de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1c8a5629b0" loc="78:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f1c8a55f020" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="90:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a566de0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a566de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f1c8a560a10" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a566de0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f1c8a560d50" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a566de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f1c8a5601f0" loc="88:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="81:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f1c8a55e1f0" loc="116:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="111:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a566de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1c8a563960" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a566de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f1c8a5636e0" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a566de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1c8a5621f0" loc="73:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="68:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f1c8a528e50" loc="89:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f1c8a529c40" loc="85:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7f1c8a52c8c0" loc="79:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f1c8a528680" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f1c8a528400" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7f1c8a529470" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1c8a5291f0" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f1c8a527890" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f1c8a527610" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7f1c8a52b0e0" loc="80:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7f1c8a52ba80" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f1c8a52b800" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280TimerSync" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
      <documentation loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changedto Sync for Atm1280&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer2Synchronous" ref="0x7f1c8a518020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Turn on timer 2 synchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBBusy" ref="0x7f1c8a5160e0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7f1c8a517020" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7f1c8a5187a0" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f1c8a5168f0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7f1c8a517850" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f1c8a51dbe0" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1c8ad544d0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f1c8ad548f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f1c8a519660" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1c8ad544d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f1c8ad548f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f1c8a5193e0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f1c8ad544d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7f1c8ad548f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f1c8a52d3d0" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a52d3d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f1c8a520020" loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1c8a522020" loc="58:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1c8a52dd10" loc="48:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a52d3d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f1c8a522790" loc="62:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f1c8a5207e0" loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1c8a523710" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a52d3d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f1c8a523490" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f1c8a52d3d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1c8a521020" loc="65:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1c8a521770" loc="68:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f1c8a53ca20" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f1c8a53ca20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f1c8a5342d0" loc="98:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f1c8a535350" loc="87:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f1c8a539390" loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f1c8a53ca20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f1c8a534cb0" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f1c8a534a30" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f1c8a532510" loc="110:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f1c8a537c90" loc="75:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f1c8a537500" loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f1c8a535b10" loc="93:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f1c8a539d40" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f1c8a53ca20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f1c8a539ac0" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f1c8a53ca20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f1c8a536420" loc="78:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f1c8a536b70" loc="81:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x7f1c8a174270" loc="43:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f1c8a177ad0" loc="40:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f1c8a173800" loc="54:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f1c8a171020" loc="57:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f1c8a174980" loc="46:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x7f1c8a1702a0" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7f1c8a170020" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f1c8a1730e0" loc="51:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x7f1c8a170a30" loc="70:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x7f1c8a1717b0" loc="62:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcConfig" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
      <documentation loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f1c8a126190" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM1280_ADC_VREF_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f1c8a1278c0" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM1280_ADC_SNGL_xxx&#10;   or ATM1280_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f1c8a1269e0" loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM1280_ADC_PRESCALE_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f1c8a111390" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1c8a111390"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f1c8a111c90" loc="58:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f1c8a10fa20" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1c8a111390"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f1c8a10f470" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f1c8ae1f3a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f1c8a10f790" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f1c8a111390"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcSingle" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f1c8a104460" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega1280 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f1c8a105710" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f1c8a105a90" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f1c8a105e10" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f1c8a1041b0" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1c8a101020" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f1c8a1025f0" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1c8a102020" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f1c8a102360" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcMultiple" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm1280ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f1c8a0ffd40" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f1c8a0ff020" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f1c8a0ff3a0" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f1c8a0ff720" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f1c8a0ffa90" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f1c8a0fdb90" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1c8a0fea40" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f1c8a0fed80" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f1c8a0fd110" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f1c8a0fd4f0" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f1c8a0fd8d0" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280Adc" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <short>&#10; HPL interface to the Atmega1280 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega1280 A/D conversion subsystem. Please see the&#10; Atmega1280 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega1280 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f1c8a0ecc40" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f1c8a0f48a0" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad7deb0"/>
            <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f1c8ad7c3a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f1c8a0e9040" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM1280_ADC_PRESCALE_xxx&#10;   values from Atm1280Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f1c8a0eada0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f1c8b744ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f1c8a0eb530" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="118:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f1c8a0f0650" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f1c8a0f3350" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad7deb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f1c8ad7c3a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f1c8a0f30d0" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f1c8ad7deb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7f1c8ad7c3a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f1c8a0ef5a0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f1c8a0ea540" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f1c8a0e9840" loc="150:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f1c8a0f0db0" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f1c8a0ee4f0" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f1c8a0efd50" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f1c8a0eec80" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f1c8a0ebd00" loc="127:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f1c8ae29500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f1c8a0f2650" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1c8ad76cb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f1c8ad75440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f1c8a0f23d0" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1c8ad76cb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f1c8ad75440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f1c8a0ec4f0" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f1c8a0f3ba0" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f1c8ad76cb0"/>
            <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7f1c8ad75440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f1c8a0f2e60" loc="75:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f1c8a0e7400" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="152:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f1c8a0e7180" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f1c8b743610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
