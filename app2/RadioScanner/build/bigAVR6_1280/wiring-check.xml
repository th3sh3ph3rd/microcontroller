<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="23:RadioScannerAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fc6e1cee970"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fc6e1d35720"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fc6e1d35720"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fc6e1d33e20"/></to>
    </wire>
    <wire loc="24:RadioScannerAppC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7fc6e1cdc1d0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7fc6e176f220"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7fc6e176f220"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7fc6e173ebf0"/></to>
    </wire>
    <wire loc="25:RadioScannerAppC.nc">
      <from><interface-ref name="Lcd" scoped="" ref="0x7fc6e1ceb100"/></from>
      <to><interface-ref name="BufferedLcd" scoped="" ref="0x7fc6e0c44590"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="BufferedLcd" scoped="" ref="0x7fc6e0c44590"/></from>
      <to><interface-ref name="BufferedLcd" scoped="" ref="0x7fc6e0aaf020"/></to>
    </wire>
    <wire loc="26:RadioScannerAppC.nc">
      <from><interface-ref name="DBInit" scoped="" ref="0x7fc6e1cdb020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e1bcdb70"/></to>
    </wire>
    <wire loc="32:Database/DatabaseC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc6e1bcdb70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e1bbab00"/></to>
    </wire>
    <wire loc="27:RadioScannerAppC.nc">
      <from><interface-ref name="DB" scoped="" ref="0x7fc6e1ccd880"/></from>
      <to><interface-ref name="Database" scoped="" ref="0x7fc6e1bcc2d0"/></to>
    </wire>
    <wire loc="33:Database/DatabaseC.nc">
      <from><interface-ref name="Database" scoped="" ref="0x7fc6e1bcc2d0"/></from>
      <to><interface-ref name="Database" scoped="" ref="0x7fc6e1bb8150"/></to>
    </wire>
    <wire loc="28:RadioScannerAppC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x7fc6e1cd57f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e11da0c0"/></to>
    </wire>
    <wire loc="26:FMClick/FMClickC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc6e11da0c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e11d8440"/></to>
    </wire>
    <wire loc="29:RadioScannerAppC.nc">
      <from><interface-ref name="Radio" scoped="" ref="0x7fc6e1cc1400"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7fc6e11da6e0"/></to>
    </wire>
    <wire loc="27:FMClick/FMClickC.nc">
      <from><interface-ref name="FMClick" scoped="" ref="0x7fc6e11da6e0"/></from>
      <to><interface-ref name="FMClick" scoped="" ref="0x7fc6e11d8a60"/></to>
    </wire>
    <wire loc="30:RadioScannerAppC.nc">
      <from><interface-ref name="Keyboard" scoped="" ref="0x7fc6e1cbfd20"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7fc6e0cb7e60"/></to>
    </wire>
    <wire loc="20:PS2/PS2C.nc">
      <from><interface-ref name="PS2" scoped="" ref="0x7fc6e0cb7e60"/></from>
      <to><interface-ref name="PS2" scoped="" ref="0x7fc6e0c8d860"/></to>
    </wire>
    <wire loc="31:RadioScannerAppC.nc">
      <from><interface-ref name="volumeKnob" scoped="" ref="0x7fc6e1cbc950"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fc6e0c433e0"/></to>
    </wire>
    <wire loc="22:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fc6e0c433e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fc6e0af0be0"/></to>
    </wire>
    <wire loc="32:RadioScannerAppC.nc">
      <from><interface-ref name="VolumeTimer" scoped="" ref="0x7fc6e1cb1a10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc6e0a88d00"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc6e0a88d00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc6e19db1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:RadioScannerAppC.nc">
      <from><interface-ref name="DisplayTimer" scoped="" ref="0x7fc6e1cac020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc6e0a81750"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc6e0a81750"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc6e19db1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:RadioScannerAppC.nc">
      <from><interface-ref name="ErrorTimer" scoped="" ref="0x7fc6e1ca7660"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc6e0a7a0b0"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc6e0a7a0b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc6e19db1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc6e1d34bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e0aa27c0"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc6e1d34bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e0aa9c30"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc6e1d34bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e0027c00"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc6e1d34bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e0525620"/></to>
    </wire>
    <wire loc="96:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc6e1d34bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e05d44c0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc6e1d34bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e173c020"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc6e1d34bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e19d6e60"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc6e1d34bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e1a1a4e0"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc6e1d34bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e1ae7a90"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fc6e1d054b0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fc6e1ec2a20"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fc6e1ec2a20"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fc6e1dc3990"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fc6e1d04020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e1d37d00"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc6e1d37d00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e1d290c0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fc6e1d04720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fc6e1d34bf0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fc6e1d31d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e0c0f830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fc6e1d31020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fc6e1d17020"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7fc6e1d28020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e1d18860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fc6e1d297a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e0f04ab0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fc6e1d297a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fc6e1d21020"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fc6e1d216f0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fc6e1d31d50"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1dc29e0"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fc6e1dbd0d0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fc6e1ddb080"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fc6e1da0de0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fc6e19214c0"/></to>
    </wire>
    <wire loc="101:RadioScannerP.nc">
      <from><interface-ref name="inputTuneChannel" scoped="" ref="0x7fc6e1c976b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:RadioScannerP.nc">
      <from><interface-ref name="setVolume" scoped="" ref="0x7fc6e1c95630"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:RadioScannerP.nc">
      <from><interface-ref name="startSeekUp" scoped="" ref="0x7fc6e1c94530"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:RadioScannerP.nc">
      <from><interface-ref name="handleChar" scoped="" ref="0x7fc6e1c8b1a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="302:RadioScannerP.nc">
      <from><interface-ref name="seekBand" scoped="" ref="0x7fc6e1c65200"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:RadioScannerP.nc">
      <from><interface-ref name="displayHardError" scoped="" ref="0x7fc6e1c90440"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="102:RadioScannerP.nc">
      <from><interface-ref name="displayChannelInfo" scoped="" ref="0x7fc6e1c96770"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:RadioScannerP.nc">
      <from><interface-ref name="startTune" scoped="" ref="0x7fc6e1c91520"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:RadioScannerP.nc">
      <from><interface-ref name="displaySoftError" scoped="" ref="0x7fc6e1c8f390"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:RadioScannerP.nc">
      <from><interface-ref name="startSeekDown" scoped="" ref="0x7fc6e1c92430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="307:RadioScannerP.nc">
      <from><interface-ref name="readyScreen" scoped="" ref="0x7fc6e1c63e60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7fc6e1a9a100"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7fc6e1aa0430"/></to>
    </wire>
    <wire loc="35:Database/DatabaseC.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7fc6e1a9a100"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7fc6e17706f0"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Mac" scoped="" ref="0x7fc6e17706f0"/></from>
      <to><interface-ref name="Mac" scoped="" ref="0x7fc6e1495b00"/></to>
    </wire>
    <wire loc="37:Database/DatabaseC.nc">
      <from><interface-ref name="UdpSend" scoped="" ref="0x7fc6e1bae5f0"/></from>
      <to><interface-ref name="UdpSend" scoped="" ref="0x7fc6e12311f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpSend" scoped="" ref="0x7fc6e12311f0"/></from>
      <to><interface-ref name="UdpSend" scoped="" ref="0x7fc6e0568c50"/></to>
    </wire>
    <wire loc="38:Database/DatabaseC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7fc6e1bab8b0"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7fc6e1231990"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7fc6e1231990"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7fc6e122a330"/>
      <arguments>
        <value cst="I:50000">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:Database/DatabaseC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7fc6e1ba67b0"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7fc6e1b03d00"/></to>
    </wire>
    <wire loc="28:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7fc6e1b03d00"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7fc6e1af7120"/></to>
    </wire>
    <wire loc="40:Database/DatabaseC.nc">
      <from><interface-ref name="Control" scoped="" ref="0x7fc6e1ba2960"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc6e1498330"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fc6e1498330"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fc6e145acf0"/></to>
    </wire>
    <wire loc="42:Database/DatabaseC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7fc6e1baa440"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7fc6e176f220"/></to>
    </wire>
    <wire loc="66:Database/DatabaseP.nc">
      <from><interface-ref name="fetchList" scoped="" ref="0x7fc6e1b9a3a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:Database/DatabaseP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x7fc6e1b9d430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:Database/DatabaseP.nc">
      <from><interface-ref name="recvTask" scoped="" ref="0x7fc6e1b9c320"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1b0a500"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1afbe60"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpPacket" scoped="" ref="0x7fc6e1b01810"/></from>
      <to><interface-ref name="IpPacket" scoped="" ref="0x7fc6e1af1140"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7fc6e1b03690"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7fc6e1af8a80"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7fc6e1af5020"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7fc6e1b00db0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7fc6e1b00db0"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7fc6e0a590c0"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1af0a80"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1aad5a0"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1aad5a0"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1aa6020"/>
      <arguments>
        <value cst="I:2048">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="Arp" scoped="" ref="0x7fc6e1ae72c0"/></from>
      <to><interface-ref name="Arp" scoped="" ref="0x7fc6e1a32820"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="Arp" scoped="" ref="0x7fc6e1a32820"/></from>
      <to><interface-ref name="Arp" scoped="" ref="0x7fc6e1a2e6e0"/></to>
    </wire>
    <wire loc="30:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7fc6e1a2f080"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7fc6e1af7120"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7fc6e0a59860"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7fc6e1a797e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1aa83f0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1aa3dd0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1aa6020"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1a9baa0"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <from><interface-ref name="MacControl" scoped="" ref="0x7fc6e1aa4be0"/></from>
      <to><interface-ref name="MacControl" scoped="" ref="0x7fc6e1a9ac30"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7fc6e1a797e0"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7fc6e1a41210"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1a47880"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1aa83f0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e1a41bf0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e1a75930"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e1a75930"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e0a50140"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7fc6e0a4fe50"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1a47880"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7fc6e0a4a4e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="Timeout" scoped="" ref="0x7fc6e1a27810"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc6e1825140"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc6e1825140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc6e19db1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="ClearCacheTimeout" scoped="" ref="0x7fc6e1a22d20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc6e181fb00"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc6e181fb00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc6e19db1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7fc6e1a1c020"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7fc6e1818700"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcSend" scoped="" ref="0x7fc6e1818700"/></from>
      <to><interface-ref name="LlcSend" scoped="" ref="0x7fc6e09c1380"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1a1c830"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1817020"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1817020"/></from>
      <to><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1aa6020"/>
      <arguments>
        <value cst="I:2054">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="IpControl" scoped="" ref="0x7fc6e1a1b020"/></from>
      <to><interface-ref name="IpControl" scoped="" ref="0x7fc6e1a2f080"/></to>
    </wire>
    <wire loc="28:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="MacControl" scoped="" ref="0x7fc6e1a1be70"/></from>
      <to><interface-ref name="MacControl" scoped="" ref="0x7fc6e1aa4be0"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e1a2a8f0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e18154a0"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e18154a0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e09b90b0"/></to>
    </wire>
    <wire loc="30:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1812360"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1a2b110"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fc6e19db1d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc6e19d2c30"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fc6e19d2c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc6e1846150"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc6e19d6e60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e19c9c80"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fc6e19c8500"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fc6e1838790"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc6e19c9c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e18c5ba0"/></to>
    </wire>
    <wire loc="62:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fc6e1840640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc6e1895830"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fc6e1890cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7fc6e19bd960"/></to>
    </wire>
    <wire loc="35:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7fc6e19bd960"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc6e18c44b0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc6e1837a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7fc6e19ba020"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7fc6e19ba020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc6e18c08d0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fc6e18c08d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fc6e0a28260"/></to>
    </wire>
    <wire loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc6e18c5ba0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e0a2d670"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fc6e18c44b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fc6e0a2de80"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc6e0a265d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc6e193d8f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc6e193d8f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc6e192ca10"/></to>
    </wire>
    <wire loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fc6e0a217d0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fc6e1936c10"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fc6e1936c10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fc6e1927db0"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fc6e0a1fa20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc6e1934060"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fc6e1934060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fc6e19251a0"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7fc6e0a19dd0"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7fc6e1930570"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <from><interface-ref name="TimerSync" scoped="" ref="0x7fc6e1930570"/></from>
      <to><interface-ref name="TimerSync" scoped="" ref="0x7fc6e1921bf0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fc6e188b020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fc6e183ba00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <from><interface-ref name="LlcQueue" scoped="" ref="0x7fc6e09c1b20"/></from>
      <to><interface-ref name="LlcQueue" scoped="" ref="0x7fc6e1a797e0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7fc6e09b7dd0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1812360"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7fc6e09b54e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/ping/PingC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7fc6e17787a0"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7fc6e18065f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7fc6e18065f0"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7fc6e09a2630"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/ping/PingC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7fc6e1778130"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7fc6e1806d90"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7fc6e1806d90"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7fc6e17f5610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7fc6e09a2dd0"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7fc6e1795410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7fc6e18009e0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7fc6e17c1290"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7fc6e17f5610"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7fc6e17c0df0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7fc6e17bfc90"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7fc6e17f2bd0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7fc6e17f2bd0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7fc6e1b03690"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7fc6e17bf490"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7fc6e17f2430"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7fc6e17f2430"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7fc6e099c3f0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7fc6e099cb90"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7fc6e17e1d60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7fc6e17e1d60"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7fc6e17d69f0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e17d34e0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e17db060"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e17db060"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e0994a00"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7fc6e17d9020"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1b0a500"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7fc6e0991770"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7fc6e17d9020"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7fc6e0990d60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7fc6e1795410"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7fc6e178b450"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e178be30"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e1793ae0"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e1793ae0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e0978e30"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7fc6e17909d0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7fc6e18009e0"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7fc6e0976bd0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7fc6e17909d0"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7fc6e0973290"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <from><interface-ref name="Hpl" scoped="" ref="0x7fc6e1735640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7fc6e176d640"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="HplKS0108" scoped="" ref="0x7fc6e176d640"/></from>
      <to><interface-ref name="HplKS0108" scoped="" ref="0x7fc6e16c6be0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_0" scoped="" ref="0x7fc6e16bc7b0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x7fc6e1659350"/></to>
    </wire>
    <wire loc="175:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fc6e1659350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fc6e15b7020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="CS_1" scoped="" ref="0x7fc6e16c29c0"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x7fc6e1658670"/></to>
    </wire>
    <wire loc="176:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fc6e1658670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fc6e15b52b0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RS" scoped="" ref="0x7fc6e16c1cd0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7fc6e1657990"/></to>
    </wire>
    <wire loc="177:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fc6e1657990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fc6e15b4440"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RW" scoped="" ref="0x7fc6e16b9020"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7fc6e1656cb0"/></to>
    </wire>
    <wire loc="178:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fc6e1656cb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fc6e15b35d0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="EN" scoped="" ref="0x7fc6e16b8370"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7fc6e1654020"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fc6e1654020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fc6e15b2760"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="RST" scoped="" ref="0x7fc6e16b7690"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7fc6e1653350"/></to>
    </wire>
    <wire loc="180:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fc6e1653350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fc6e15b18f0"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="Data" scoped="" ref="0x7fc6e16b5060"/></from>
      <to><interface-ref name="PortA" scoped="" ref="0x7fc6e1510c40"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortA" scoped="" ref="0x7fc6e1510c40"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14f5c90"/></to>
    </wire>
    <wire loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fc6e16ab910"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fc6e14a52e0"/></to>
    </wire>
    <wire loc="191:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fc6e1648020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e15596d0"/></to>
    </wire>
    <wire loc="165:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fc6e1665800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fc6e15c8c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fc6e15c8c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07e5e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fc6e15b52b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07733f0"/></to>
    </wire>
    <wire loc="185:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fc6e164e020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fc6e15a65d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fc6e15a65d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07053f0"/></to>
    </wire>
    <wire loc="196:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7fc6e1642350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e153fc90"/></to>
    </wire>
    <wire loc="143:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fc6e167d990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fc6e15f0a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fc6e15f0a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e09169b0"/></to>
    </wire>
    <wire loc="183:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fc6e1651990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fc6e15a82b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fc6e15a82b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e070ce20"/></to>
    </wire>
    <wire loc="146:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fc6e1679020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fc6e15e73f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fc6e15e73f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e08bea60"/></to>
    </wire>
    <wire loc="157:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fc6e166d020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fc6e15d6a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fc6e15d6a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e084c0a0"/></to>
    </wire>
    <wire loc="168:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fc6e1661060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fc6e15c42b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fc6e15c42b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07db6d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fc6e15b2760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e076ae20"/></to>
    </wire>
    <wire loc="138:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fc6e1683b20"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fc6e15f62b0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fc6e15f62b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e092f9b0"/></to>
    </wire>
    <wire loc="149:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fc6e1676990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fc6e15e48f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fc6e15e48f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e08b43f0"/></to>
    </wire>
    <wire loc="160:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fc6e166a990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fc6e15d2020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fc6e15d2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e08439b0"/></to>
    </wire>
    <wire loc="171:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fc6e165d990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fc6e15c0760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fc6e15c0760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07d10a0"/></to>
    </wire>
    <wire loc="188:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fc6e164b990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fc6e15a3a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fc6e15a3a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e06fce20"/></to>
    </wire>
    <wire loc="194:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fc6e1645cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e15496d0"/></to>
    </wire>
    <wire loc="174:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fc6e165a020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fc6e15b9e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fc6e15b9e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e077ae20"/></to>
    </wire>
    <wire loc="141:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fc6e167f350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fc6e15f2760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fc6e15f2760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e091c3f0"/></to>
    </wire>
    <wire loc="152:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fc6e1672350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fc6e15e1da0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fc6e15e1da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e08abe20"/></to>
    </wire>
    <wire loc="192:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fc6e1647670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e1554160"/></to>
    </wire>
    <wire loc="155:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fc6e1670990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fc6e15d87a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fc6e15d87a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0853c90"/></to>
    </wire>
    <wire loc="166:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fc6e1664b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fc6e15c7da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fc6e15c7da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07e10a0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fc6e15b4440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07706d0"/></to>
    </wire>
    <wire loc="186:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fc6e164d350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fc6e15a5760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fc6e15a5760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07026d0"/></to>
    </wire>
    <wire loc="144:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fc6e167ccb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fc6e15efc10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fc6e15efc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0912e20"/></to>
    </wire>
    <wire loc="147:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fc6e1678350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fc6e15e65d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fc6e15e65d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e08bbe20"/></to>
    </wire>
    <wire loc="158:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fc6e166c350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fc6e15d5c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fc6e15d5c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e08493f0"/></to>
    </wire>
    <wire loc="169:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fc6e1660350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fc6e15c3440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fc6e15c3440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07d89b0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fc6e15b18f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07660a0"/></to>
    </wire>
    <wire loc="139:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fc6e1682e40"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fc6e15f5440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fc6e15f5440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e092ce20"/></to>
    </wire>
    <wire loc="150:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fc6e1675cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fc6e15e3a80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fc6e15e3a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e08b16d0"/></to>
    </wire>
    <wire loc="161:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fc6e1669cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fc6e15d12b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fc6e15d12b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0840e20"/></to>
    </wire>
    <wire loc="189:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fc6e164acb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fc6e15a2c10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fc6e15a2c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e06f80a0"/></to>
    </wire>
    <wire loc="164:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fc6e1666350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fc6e15c9a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fc6e15c9a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07e8c90"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fc6e15b7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07760a0"/></to>
    </wire>
    <wire loc="184:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fc6e1650cb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fc6e15a7440"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fc6e15a7440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07080a0"/></to>
    </wire>
    <wire loc="195:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fc6e1643020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e1544160"/></to>
    </wire>
    <wire loc="142:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fc6e167e670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fc6e15f18f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fc6e15f18f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e09196d0"/></to>
    </wire>
    <wire loc="153:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fc6e1671670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fc6e15df020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fc6e15df020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e08a60a0"/></to>
    </wire>
    <wire loc="182:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fc6e1652670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fc6e15a9020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fc6e15a9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e070fc90"/></to>
    </wire>
    <wire loc="156:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fc6e166fcb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fc6e15d78f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fc6e15d78f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0850e20"/></to>
    </wire>
    <wire loc="167:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fc6e1663e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fc6e15c5020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fc6e15c5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07de3f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fc6e15b35d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e076d9b0"/></to>
    </wire>
    <wire loc="187:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fc6e164c670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fc6e15a48f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fc6e15a48f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e06ff9b0"/></to>
    </wire>
    <wire loc="137:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fc6e1686860"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fc6e15f7140"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fc6e15f7140"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e09326d0"/></to>
    </wire>
    <wire loc="148:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fc6e1677670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fc6e15e5760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fc6e15e5760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e08b70a0"/></to>
    </wire>
    <wire loc="159:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fc6e166b670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fc6e15d4da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fc6e15d4da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e08466d0"/></to>
    </wire>
    <wire loc="170:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fc6e165f670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fc6e15c15d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fc6e15c15d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e07d5e20"/></to>
    </wire>
    <wire loc="193:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fc6e1646990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e154fc90"/></to>
    </wire>
    <wire loc="173:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fc6e165ccb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fc6e15bad30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fc6e15bad30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e077dc90"/></to>
    </wire>
    <wire loc="162:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fc6e1667020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fc6e15d0440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fc6e15d0440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e083c0a0"/></to>
    </wire>
    <wire loc="140:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fc6e1680060"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fc6e15f35d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fc6e15f35d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e091f0a0"/></to>
    </wire>
    <wire loc="151:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fc6e1673020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fc6e15e2c10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fc6e15e2c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e08ae9b0"/></to>
    </wire>
    <wire loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortL" scoped="" ref="0x7fc6e14f9870"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14b1c90"/></to>
    </wire>
    <wire loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortD" scoped="" ref="0x7fc6e1502e80"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14d2cd0"/></to>
    </wire>
    <wire loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortG" scoped="" ref="0x7fc6e14fe1d0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14c3cd0"/></to>
    </wire>
    <wire loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortJ" scoped="" ref="0x7fc6e14fc550"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14bac90"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortB" scoped="" ref="0x7fc6e1504d20"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14dc390"/></to>
    </wire>
    <wire loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortE" scoped="" ref="0x7fc6e1500020"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14cd390"/></to>
    </wire>
    <wire loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortH" scoped="" ref="0x7fc6e14fd3c0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14bfc90"/></to>
    </wire>
    <wire loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortK" scoped="" ref="0x7fc6e14fb6e0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14b5c90"/></to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortC" scoped="" ref="0x7fc6e1503de0"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14d7910"/></to>
    </wire>
    <wire loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <from><interface-ref name="PortF" scoped="" ref="0x7fc6e14ff100"/></from>
      <to><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14c8910"/></to>
    </wire>
    <wire loc="27:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Enc28j60Control" scoped="" ref="0x7fc6e1462ba0"/></from>
      <to><interface-ref name="Enc28j60Control" scoped="" ref="0x7fc6e1455880"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fc6e1454430"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fc6e13e9b00"/></to>
    </wire>
    <wire loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fc6e13e9b00"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fc6e13da340"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc6e145a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc6e13e8bd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="ssETH" scoped="" ref="0x7fc6e14606c0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fc6e1679020"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="rstETH" scoped="" ref="0x7fc6e145f9d0"/></from>
      <to><interface-ref name="PortB4" scoped="" ref="0x7fc6e1675cb0"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="intETH" scoped="" ref="0x7fc6e1456620"/></from>
      <to><interface-ref name="Int2" scoped="" ref="0x7fc6e12a0b70"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7fc6e12a0b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fc6e1259c90"/></to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <from><interface-ref name="intPin" scoped="" ref="0x7fc6e145ecf0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7fc6e1664b20"/></to>
    </wire>
    <wire loc="179:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <from><interface-ref name="checkInterruptflag" scoped="" ref="0x7fc6e141e5d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fc6e13dee60"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fc6e13d95f0"/></to>
    </wire>
    <wire loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc6e13ef300"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e13db670"/></to>
    </wire>
    <wire loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fc6e13e5400"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fc6e13da980"/></to>
    </wire>
    <wire loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc6e13e8bd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc6e13d8320"/></to>
    </wire>
    <wire loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="SpiControl" scoped="" ref="0x7fc6e13e94a0"/></from>
      <to><interface-ref name="SpiControl" scoped="" ref="0x7fc6e13dbcb0"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7fc6e13ba740"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc6e12ae520"/></to>
    </wire>
    <wire loc="98:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc6e12ae520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc6e05d19d0"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e13b6cd0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e12adb20"/></to>
    </wire>
    <wire loc="100:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e12adb20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e05cf020"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7fc6e13bb340"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7fc6e1366100"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7fc6e1366100"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7fc6e1360060"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fc6e13b8510"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fc6e1da15a0"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7fc6e1394de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7fc6e1357b30"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fc6e1da15a0"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7fc6e135c020"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7fc6e1679020"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7fc6e135b330"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7fc6e1678350"/></to>
    </wire>
    <wire loc="88:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7fc6e13594e0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7fc6e1677670"/></to>
    </wire>
    <wire loc="89:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7fc6e13587f0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7fc6e1676990"/></to>
    </wire>
    <wire loc="99:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc6e12ad3a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc6e05d0850"/></to>
    </wire>
    <wire loc="101:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e05cf910"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e12ab570"/></to>
    </wire>
    <wire loc="103:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fc6e05ce120"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fc6e05d4ad0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fc6e05cec20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7fc6e129cb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fc6e1248c90"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7fc6e12a1b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fc6e125eda0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7fc6e129eb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fc6e1250c90"/></to>
    </wire>
    <wire loc="78:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7fc6e129bb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fc6e1243c90"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7fc6e129db70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fc6e124cc90"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7fc6e12a4b20"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fc6e1275060"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7fc6e129fb70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7fc6e1255c90"/></to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e1275e80"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7fc6e1294a00"/></to>
    </wire>
    <wire loc="81:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e125dc20"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7fc6e1296230"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e1258b40"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7fc6e12969b0"/></to>
    </wire>
    <wire loc="83:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e1254b40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7fc6e1295150"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e124fb40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7fc6e12958d0"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e124bb40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7fc6e12930b0"/></to>
    </wire>
    <wire loc="86:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e1247b40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7fc6e1293830"/></to>
    </wire>
    <wire loc="87:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e1242b40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7fc6e1291020"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <from><interface-ref name="UdpQueue" scoped="" ref="0x7fc6e0566440"/></from>
      <to><interface-ref name="UdpQueue" scoped="" ref="0x7fc6e11fa1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7fc6e122d710"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1227b90"/></to>
    </wire>
    <wire loc="23:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="UdpReceive" scoped="" ref="0x7fc6e122a330"/></from>
      <to><interface-ref name="UdpReceive" scoped="" ref="0x7fc6e1222730"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7fc6e1221c70"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7fc6e1226e60"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpSend" scoped="" ref="0x7fc6e1226e60"/></from>
      <to><interface-ref name="IcmpSend" scoped="" ref="0x7fc6e0559b10"/></to>
    </wire>
    <wire loc="24:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7fc6e1221600"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7fc6e12282b0"/></to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpReceive" scoped="" ref="0x7fc6e12282b0"/></from>
      <to><interface-ref name="IpReceive" scoped="" ref="0x7fc6e1b03690"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7fc6e1222d80"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7fc6e12299d0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpSend" scoped="" ref="0x7fc6e12299d0"/></from>
      <to><interface-ref name="IpSend" scoped="" ref="0x7fc6e05600c0"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <from><interface-ref name="IpPacket" scoped="" ref="0x7fc6e12204a0"/></from>
      <to><interface-ref name="IpPacket" scoped="" ref="0x7fc6e1b01810"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <from><interface-ref name="IpQueue" scoped="" ref="0x7fc6e0560860"/></from>
      <to><interface-ref name="IpQueue" scoped="" ref="0x7fc6e17e1d60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpReceive" scoped="" ref="0x7fc6e1225630"/></from>
      <to><interface-ref name="IcmpReceive" scoped="" ref="0x7fc6e17f5610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <from><interface-ref name="IcmpQueue" scoped="" ref="0x7fc6e0558440"/></from>
      <to><interface-ref name="IcmpQueue" scoped="" ref="0x7fc6e1795410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="UdpQueue" scoped="" ref="0x7fc6e11fa1d0"/></from>
      <to><interface-ref name="UdpQueue" scoped="" ref="0x7fc6e11ef1d0"/></to>
    </wire>
    <wire loc="20:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e11efbb0"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e11f8790"/></to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e11f8790"/></from>
      <to><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e054c0b0"/></to>
    </wire>
    <wire loc="21:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7fc6e11f5620"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7fc6e122d710"/></to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <from><interface-ref name="PacketSender" scoped="" ref="0x7fc6e054bdd0"/></from>
      <to><interface-ref name="PacketSender" scoped="" ref="0x7fc6e11f5620"/></to>
    </wire>
    <wire loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <from><interface-ref name="sendNext" scoped="" ref="0x7fc6e05484e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:FMClick/FMClickC.nc">
      <from><interface-ref name="Int" scoped="" ref="0x7fc6e11d4020"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x7fc6e129fb70"/></to>
    </wire>
    <wire loc="31:FMClick/FMClickC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x7fc6e11d3020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc6e10c4af0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc6e10c4af0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc6e10b68b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:FMClick/FMClickC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fc6e11c4b50"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fc6e0ee3890"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fc6e0ee3890"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fc6e10b5d40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:FMClick/FMClickC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc6e11c1a80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc6e0eddb80"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc6e0eddb80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc6e19db1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:FMClick/FMClickC.nc">
      <from><interface-ref name="RSTPin" scoped="" ref="0x7fc6e11bddf0"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7fc6e0eb4670"/></to>
    </wire>
    <wire loc="250:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fc6e0eb4670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e34440"/></to>
    </wire>
    <wire loc="37:FMClick/FMClickC.nc">
      <from><interface-ref name="SDIOPin" scoped="" ref="0x7fc6e11ba020"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7fc6e0eb5350"/></to>
    </wire>
    <wire loc="249:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fc6e0eb5350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e362b0"/></to>
    </wire>
    <wire loc="38:FMClick/FMClickC.nc">
      <from><interface-ref name="INTPin" scoped="" ref="0x7fc6e11b9350"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7fc6e0eb3990"/></to>
    </wire>
    <wire loc="251:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fc6e0eb3990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e335d0"/></to>
    </wire>
    <wire loc="40:FMClick/FMClickC.nc">
      <from><interface-ref name="Glcd" scoped="" ref="0x7fc6e11b85c0"/></from>
      <to><interface-ref name="Glcd" scoped="" ref="0x7fc6e176f220"/></to>
    </wire>
    <wire loc="187:FMClick/FMClickP.nc">
      <from><interface-ref name="seek" scoped="" ref="0x7fc6e11a5020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:FMClick/FMClickP.nc">
      <from><interface-ref name="writeI2C" scoped="" ref="0x7fc6e119f2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="193:FMClick/FMClickP.nc">
      <from><interface-ref name="registerWriteback" scoped="" ref="0x7fc6e119d2b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:FMClick/FMClickP.nc">
      <from><interface-ref name="readRegisters" scoped="" ref="0x7fc6e11a2510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:FMClick/FMClickP.nc">
      <from><interface-ref name="init" scoped="" ref="0x7fc6e11a7120"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:FMClick/FMClickP.nc">
      <from><interface-ref name="decodeRDS" scoped="" ref="0x7fc6e11a4020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:FMClick/FMClickP.nc">
      <from><interface-ref name="writeRegisters" scoped="" ref="0x7fc6e11a02b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:FMClick/FMClickP.nc">
      <from><interface-ref name="readI2C" scoped="" ref="0x7fc6e11a13c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:FMClick/FMClickP.nc">
      <from><interface-ref name="tune" scoped="" ref="0x7fc6e11a6020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc6e10b68b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc6e1030470"/></to>
    </wire>
    <wire loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x7fc6e10b5d40"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fc6e0ff9370"/></to>
    </wire>
    <wire loc="63:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7fc6e0ff4210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc6e10467e0"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc6e10467e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc6e0523e40"/></to>
    </wire>
    <wire loc="64:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x7fc6e0ff3020"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x7fc6e0f7fc00"/></to>
    </wire>
    <wire loc="65:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x7fc6e0fefcd0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x7fc6e0f7a8e0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc6e1041dd0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc6e0f7f340"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e1040b30"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e1045e40"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e1045e40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e0520400"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fc6e0f79020"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7fc6e0f6e0e0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x7fc6e0f6e0e0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x7fc6e0f6ba70"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x7fc6e0f77ac0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc6e0efc980"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x7fc6e0f75160"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc6e0efc980"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc6e10456c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc6e0521bd0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e1044a70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e051f060"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e051f950"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e10433e0"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fc6e051e130"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fc6e0525c30"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fc6e051c2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7fc6e0f747a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x7fc6e0f66540"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x7fc6e1666350"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x7fc6e0f65810"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x7fc6e1665800"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fc6e0f2e4a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fc6e0f2adc0"/></to>
    </wire>
    <wire loc="53:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fc6e0f04ab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fc6e0f2a7c0"/></to>
    </wire>
    <wire loc="54:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fc6e0f26550"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fc6e0f071d0"/></to>
    </wire>
    <wire loc="57:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fc6e0f071d0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7fc6e1686860"/></to>
    </wire>
    <wire loc="55:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fc6e0f257f0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fc6e0f06510"/></to>
    </wire>
    <wire loc="58:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fc6e0f06510"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7fc6e1683b20"/></to>
    </wire>
    <wire loc="56:../tinyos_ws18/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fc6e0f24b10"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fc6e0f05830"/></to>
    </wire>
    <wire loc="59:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fc6e0f05830"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7fc6e1682e40"/></to>
    </wire>
    <wire loc="275:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fc6e0e99cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0dde6d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e362b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e02fce20"/></to>
    </wire>
    <wire loc="260:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fc6e0ea8350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e248f0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e248f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e028a3f0"/></to>
    </wire>
    <wire loc="269:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fc6e0e9fcb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e15c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e15c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e021f3f0"/></to>
    </wire>
    <wire loc="280:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7fc6e0e91060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0dc3c90"/></to>
    </wire>
    <wire loc="284:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH2" scoped="" ref="0x7fc6e0e8e990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d9ec90"/></to>
    </wire>
    <wire loc="289:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH7" scoped="" ref="0x7fc6e0e88990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d849b0"/></to>
    </wire>
    <wire loc="297:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ6" scoped="" ref="0x7fc6e0e7f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d61180"/></to>
    </wire>
    <wire loc="300:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK0" scoped="" ref="0x7fc6e0e7d670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d58c90"/></to>
    </wire>
    <wire loc="311:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL2" scoped="" ref="0x7fc6e0e70670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d25180"/></to>
    </wire>
    <wire loc="227:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fc6e0ecc350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e5e2b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e5e2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e042d0a0"/></to>
    </wire>
    <wire loc="267:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fc6e0ea1670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e178f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e178f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0226e20"/></to>
    </wire>
    <wire loc="230:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fc6e0eca990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e56a20"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e56a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e03d5060"/></to>
    </wire>
    <wire loc="241:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fc6e0ebe990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e44020"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e44020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e03630a0"/></to>
    </wire>
    <wire loc="252:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fc6e0eb1cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e32760"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e32760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e02f26d0"/></to>
    </wire>
    <wire loc="263:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fc6e0ea5cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e21da0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e21da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0281e20"/></to>
    </wire>
    <wire loc="222:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fc6e0ed34e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e648f0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e648f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e043d0a0"/></to>
    </wire>
    <wire loc="233:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fc6e0ec6350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e52020"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e52020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e03cc9b0"/></to>
    </wire>
    <wire loc="244:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fc6e0eba350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e405d0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e405d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e035a9b0"/></to>
    </wire>
    <wire loc="255:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fc6e0ead670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e2fc10"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e2fc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e02e80a0"/></to>
    </wire>
    <wire loc="272:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fc6e0e9b670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e112b0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e112b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0216e20"/></to>
    </wire>
    <wire loc="278:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fc6e0e94b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0dce6d0"/></to>
    </wire>
    <wire loc="282:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH0" scoped="" ref="0x7fc6e0e90350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0da7020"/></to>
    </wire>
    <wire loc="258:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fc6e0eabcb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e265d0"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e265d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0291e20"/></to>
    </wire>
    <wire loc="287:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH5" scoped="" ref="0x7fc6e0e8a350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d8fe20"/></to>
    </wire>
    <wire loc="292:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ1" scoped="" ref="0x7fc6e0e85020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d7a6d0"/></to>
    </wire>
    <wire loc="295:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ4" scoped="" ref="0x7fc6e0e82990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d6b6d0"/></to>
    </wire>
    <wire loc="303:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK3" scoped="" ref="0x7fc6e0e78020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d49c90"/></to>
    </wire>
    <wire loc="306:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK6" scoped="" ref="0x7fc6e0e75990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d3ac90"/></to>
    </wire>
    <wire loc="309:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL0" scoped="" ref="0x7fc6e0e72020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d2f6d0"/></to>
    </wire>
    <wire loc="314:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL5" scoped="" ref="0x7fc6e0e6c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d166d0"/></to>
    </wire>
    <wire loc="225:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fc6e0ed0e40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e61da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e61da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e04349b0"/></to>
    </wire>
    <wire loc="236:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fc6e0ec3cb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e4f5d0"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e4f5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e03c23f0"/></to>
    </wire>
    <wire loc="276:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fc6e0e974e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0dd8160"/></to>
    </wire>
    <wire loc="239:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fc6e0ec0350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e47d30"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e47d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e036aa60"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e34440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e02f80a0"/></to>
    </wire>
    <wire loc="261:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fc6e0ea7670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e23a80"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e23a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e02876d0"/></to>
    </wire>
    <wire loc="270:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fc6e0e9d020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e14da0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e14da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e021c6d0"/></to>
    </wire>
    <wire loc="285:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH3" scoped="" ref="0x7fc6e0e8dcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d98180"/></to>
    </wire>
    <wire loc="298:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ7" scoped="" ref="0x7fc6e0e7e350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d5c6d0"/></to>
    </wire>
    <wire loc="301:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK1" scoped="" ref="0x7fc6e0e7c990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d52180"/></to>
    </wire>
    <wire loc="312:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL3" scoped="" ref="0x7fc6e0e6f990"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d206d0"/></to>
    </wire>
    <wire loc="293:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ2" scoped="" ref="0x7fc6e0e84350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d76c90"/></to>
    </wire>
    <wire loc="228:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fc6e0ecb670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e5d440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e5d440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e04293f0"/></to>
    </wire>
    <wire loc="304:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK4" scoped="" ref="0x7fc6e0e77350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d43180"/></to>
    </wire>
    <wire loc="315:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL6" scoped="" ref="0x7fc6e0e6b350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d11c90"/></to>
    </wire>
    <wire loc="231:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fc6e0ec9cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e55c10"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e55c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e03d23f0"/></to>
    </wire>
    <wire loc="242:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fc6e0ebdcb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e432b0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e432b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e03603f0"/></to>
    </wire>
    <wire loc="253:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fc6e0eaf020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e318f0"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e318f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e02ef9b0"/></to>
    </wire>
    <wire loc="264:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fc6e0ea3020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e1f020"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e1f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e027d0a0"/></to>
    </wire>
    <wire loc="223:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fc6e0ed2800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e63a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e63a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e043a3f0"/></to>
    </wire>
    <wire loc="234:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fc6e0ec5670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e512b0"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e512b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e03c9e20"/></to>
    </wire>
    <wire loc="245:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fc6e0eb9670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e3f760"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e3f760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0357e20"/></to>
    </wire>
    <wire loc="273:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fc6e0e9a990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e0f440"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e0f440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e02120a0"/></to>
    </wire>
    <wire loc="283:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH1" scoped="" ref="0x7fc6e0e8f670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0da26d0"/></to>
    </wire>
    <wire loc="248:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fc6e0eb7cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e37020"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e37020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e02ffc90"/></to>
    </wire>
    <wire loc="259:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fc6e0ea9020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e25760"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e25760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e028d0a0"/></to>
    </wire>
    <wire loc="268:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fc6e0ea0990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e16a80"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e16a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e02220a0"/></to>
    </wire>
    <wire loc="279:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fc6e0e93e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0dc8160"/></to>
    </wire>
    <wire loc="288:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH6" scoped="" ref="0x7fc6e0e89670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d89460"/></to>
    </wire>
    <wire loc="296:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ5" scoped="" ref="0x7fc6e0e81cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d67c90"/></to>
    </wire>
    <wire loc="307:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK7" scoped="" ref="0x7fc6e0e74cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d34180"/></to>
    </wire>
    <wire loc="310:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL1" scoped="" ref="0x7fc6e0e71350"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d2bc90"/></to>
    </wire>
    <wire loc="226:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fc6e0ecd060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e5f020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e5f020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0431e20"/></to>
    </wire>
    <wire loc="237:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fc6e0ec1020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e4e760"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e4e760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e03be6d0"/></to>
    </wire>
    <wire loc="266:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fc6e0ea2350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e187a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e187a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0229c90"/></to>
    </wire>
    <wire loc="240:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fc6e0ebf670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e46e60"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e46e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0367e20"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e335d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e02f53f0"/></to>
    </wire>
    <wire loc="262:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fc6e0ea6990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e22c10"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e22c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e02849b0"/></to>
    </wire>
    <wire loc="271:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fc6e0e9c350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e12020"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e12020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e02199b0"/></to>
    </wire>
    <wire loc="221:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fc6e0ed41e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e657a0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e657a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0441da0"/></to>
    </wire>
    <wire loc="232:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fc6e0ec7020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e54da0"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e54da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e03cf6d0"/></to>
    </wire>
    <wire loc="243:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fc6e0ebb020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e42440"/></to>
    </wire>
    <wire loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e42440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e035d6d0"/></to>
    </wire>
    <wire loc="254:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fc6e0eae350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e30a80"/></to>
    </wire>
    <wire loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e30a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e02ece20"/></to>
    </wire>
    <wire loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fc6e0e96800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0dd3c90"/></to>
    </wire>
    <wire loc="286:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortH4" scoped="" ref="0x7fc6e0e8b020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d93830"/></to>
    </wire>
    <wire loc="291:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ0" scoped="" ref="0x7fc6e0e87cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d7f160"/></to>
    </wire>
    <wire loc="257:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fc6e0eac990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e273f0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e273f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0294c90"/></to>
    </wire>
    <wire loc="294:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortJ3" scoped="" ref="0x7fc6e0e83670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d70180"/></to>
    </wire>
    <wire loc="302:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK2" scoped="" ref="0x7fc6e0e7bcb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d4d6d0"/></to>
    </wire>
    <wire loc="305:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortK5" scoped="" ref="0x7fc6e0e76670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d3e6d0"/></to>
    </wire>
    <wire loc="313:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL4" scoped="" ref="0x7fc6e0e6ecb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d1b0a0"/></to>
    </wire>
    <wire loc="316:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortL7" scoped="" ref="0x7fc6e0e6a670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e0d0c180"/></to>
    </wire>
    <wire loc="246:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fc6e0eb8990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e3e8f0"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e3e8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e03530a0"/></to>
    </wire>
    <wire loc="224:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fc6e0ed1b20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e62c10"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e62c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e04376d0"/></to>
    </wire>
    <wire loc="235:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fc6e0ec4990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e50440"/></to>
    </wire>
    <wire loc="71:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e50440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fc6e03c50a0"/></to>
    </wire>
    <wire loc="21:PS2/PS2C.nc">
      <from><interface-ref name="ClockIRQ" scoped="" ref="0x7fc6e0c84d90"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7fc6e0cb2ca0"/></to>
    </wire>
    <wire loc="23:PS2/PS2C.nc">
      <from><interface-ref name="ClockPin" scoped="" ref="0x7fc6e0c891c0"/></from>
      <to><interface-ref name="PortK7" scoped="" ref="0x7fc6e0e74cb0"/></to>
    </wire>
    <wire loc="24:PS2/PS2C.nc">
      <from><interface-ref name="DataPin" scoped="" ref="0x7fc6e0c834f0"/></from>
      <to><interface-ref name="PortK6" scoped="" ref="0x7fc6e0e75990"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fc6e0af0be0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fc6e0c2b920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="VolumePin" scoped="" ref="0x7fc6e0c3d700"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x7fc6e0ea2350"/></to>
    </wire>
    <wire loc="26:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fc6e0aee320"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fc6e0c3b470"/></to>
    </wire>
    <wire loc="27:VolumeAdc/VolumeAdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e0aeec10"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e0c3be10"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fc6e0c276d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fc6e0aee320"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc6e0c235e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc6e0c1e280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e0c1b210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e0aeec10"/></to>
    </wire>
    <wire loc="31:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7fc6e0c2b920"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fc6e0b12150"/></to>
    </wire>
    <wire loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7fc6e0c248f0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7fc6e0b3d1d0"/></to>
    </wire>
    <wire loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc6e0af7300"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc6e0c235e0"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fc6e0b3aa10"/></from>
      <to><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fc6e0c276d0"/></to>
    </wire>
    <wire loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7fc6e0afaaf0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7fc6e0b3f410"/></to>
    </wire>
    <wire loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7fc6e0b3c9f0"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7fc6e0c17780"/></to>
    </wire>
    <wire loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7fc6e0c17780"/></from>
      <to><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7fc6e0c0e830"/></to>
    </wire>
    <wire loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fc6e0b39740"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fc6e14a52e0"/></to>
    </wire>
    <wire loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc6e0c1e280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc6e0b5ae70"/></to>
    </wire>
    <wire loc="105:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fc6e0b5ae70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fc6e00244d0"/></to>
    </wire>
    <wire loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7fc6e0c12420"/></from>
      <to><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7fc6e0c0d330"/></to>
    </wire>
    <wire loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e0b57930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e0c1b210"/></to>
    </wire>
    <wire loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7fc6e0bfe710"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7fc6e0bcb460"/></to>
    </wire>
    <wire loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7fc6e0bcb460"/></from>
      <to><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7fc6e0bc67d0"/></to>
    </wire>
    <wire loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fc6e0c0bbe0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fc6e1d31020"/></to>
    </wire>
    <wire loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc6e0b53020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc6e0c0e020"/></to>
    </wire>
    <wire loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e0b53d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e0b58400"/></to>
    </wire>
    <wire loc="107:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e0b58400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e0023b20"/></to>
    </wire>
    <wire loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7fc6e0bc4c10"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7fc6e1da15a0"/></to>
    </wire>
    <wire loc="106:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fc6e0b59c00"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fc6e00233a0"/></to>
    </wire>
    <wire loc="108:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e0b57060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e00228b0"/></to>
    </wire>
    <wire loc="109:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e0021210"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e0b57930"/></to>
    </wire>
    <wire loc="111:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fc6e00219d0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fc6e00262b0"/></to>
    </wire>
    <wire loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fc6e001ec50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc6dffeb660"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc6e0b53020"/></to>
    </wire>
    <wire loc="82:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fc6dffebdc0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fc6e0b53780"/></to>
    </wire>
    <wire loc="84:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6dffea3d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e0b53d50"/></to>
    </wire>
    <wire loc="85:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6dffe9020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e0b49990"/></to>
    </wire>
    <wire loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7fc6e0b27820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="17:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc6e0aae020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fc6e0ae6560"/></to>
    </wire>
    <wire loc="52:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fc6e0ae6560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fc6e19db1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <from><interface-ref name="Lcd" scoped="" ref="0x7fc6e0aa9490"/></from>
      <to><interface-ref name="HplLcd" scoped="" ref="0x7fc6e0aa3100"/></to>
    </wire>
    <wire loc="18:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="HplLcd" scoped="" ref="0x7fc6e0aa3100"/></from>
      <to><interface-ref name="HplLcd" scoped="" ref="0x7fc6e0aa2e10"/></to>
    </wire>
    <wire loc="34:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <from><interface-ref name="refresh" scoped="" ref="0x7fc6e0aa72f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="16:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="Port" scoped="" ref="0x7fc6e0a9f6e0"/></from>
      <to><interface-ref name="PortC" scoped="" ref="0x7fc6e1503de0"/></to>
    </wire>
    <wire loc="19:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fc6e0a9eaa0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fc6e14a52e0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../tinyos_ws18/tos/system/MainC.nc">
      <documentation loc="45:../tinyos_ws18/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
        <short>&#10; Initialisation component for mica-family platforms.</short>
        <long>&#10; Initialisation component for mica-family platforms. See TEP107. Each &#10; mica-family member must also provide a MotePlatformC with initialisation&#10; specific to that member.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
        <short>&#10; Internal platform boot code.</short>
        <long>&#10; Internal platform boot code.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <documentation loc="36:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../tinyos_ws18/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../tinyos_ws18/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../tinyos_ws18/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc" safe="">
      <documentation loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioScannerP" loc="19:RadioScannerP.nc">
      <module/>
    </component>
    <component qname="DatabaseC" loc="14:Database/DatabaseC.nc">
      <configuration/>
    </component>
    <component qname="DatabaseP" loc="22:Database/DatabaseP.nc">
      <module/>
    </component>
    <component qname="IpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IpTransceiverP" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <module/>
    </component>
    <component qname="IpTransceiverC.LlcC" loc="10(IpTransceiverC.LlcC):../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LlcC"/>
        <arguments>
          <value cst="I:2048">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LlcTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IpTransceiverC.LlcC.LlcP" loc="10(IpTransceiverC.LlcC.LlcP):../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LlcP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LlcQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LlcQueueC.PacketQueueC" loc="8(LlcQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1afb320"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7fc6e1afb8a0"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcQueueC.PacketQueueC.PacketQueueP" loc="11(LlcQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="0">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7fc6e1a777e0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LlcQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArpC" loc="8:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ArpP" loc="11:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArpC.TimerMilliC" loc="44(ArpC.TimerMilliC):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <documentation loc="11:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC" loc="32(AlarmCounterMilliP.Atm1280AlarmSyncC):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:124">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP" loc="33(AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP):../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1280AlarmSyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fc6e19b0160"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280Timer2SyncC" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <documentation loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280Timer2SyncP" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc" safe="">
      <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changed to sync mode&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10; &#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArpC.ClearCacheTimeoutC" loc="44(ArpC.ClearCacheTimeoutC):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.LlcC" loc="10(ArpC.LlcC):../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LlcC"/>
        <arguments>
          <value cst="I:2054">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.LlcC.LlcP" loc="10(ArpC.LlcC.LlcP):../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LlcP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArpC.PacketQueueC" loc="8(ArpC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7fc6e1aeb770"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7fc6e1ae9090"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ArpC.PacketQueueC.PacketQueueP" loc="11(ArpC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="1">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7fc6e1a777e0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PingC.IcmpC" loc="10(PingC.IcmpC):../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <instance number="0">
        <component-ref qname="IcmpC"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC.IpC" loc="10(IcmpTransceiverC.IpC):../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IpC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpTransceiverC.IpC.IpP" loc="10(IcmpTransceiverC.IpC.IpP):../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IpQueueC.PacketQueueC" loc="8(IpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7fc6e1bc27c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7fc6e1bc2d40"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IpQueueC.PacketQueueC.PacketQueueP" loc="11(IpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="2">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7fc6e1a777e0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IcmpTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PingC.IcmpC.IcmpP" loc="10(PingC.IcmpC.IcmpP):../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="IcmpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IcmpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IcmpQueueC.PacketQueueC" loc="8(IcmpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7fc6e1802b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7fc6e1801230"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IcmpQueueC.PacketQueueC.PacketQueueP" loc="11(IcmpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="3">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7fc6e1a777e0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IcmpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PingP" loc="8:../tinyos_ws18/tos/lib_ecs/ping/PingP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ping/PingP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="GlcdC" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
        <short>&#10; High level implementation for KS0108 Glcd&#10; </short>
        <long>&#10; High level implementation for KS0108 Glcd&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="GlcdP" loc="41:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <module/>
    </component>
    <component qname="HplKS0108C" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
        <short>&#10; Configuration for KS0108 GLCD Display&#10; </short>
        <long>&#10; Configuration for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplKS0108P" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
        <short>&#10; Hpl implementation for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl implementation for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10; Based on an implementation of Andreas Hagmann&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC" loc="6:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortAP" loc="6(HplAtm128GeneralIOFastPortC.PortAP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortBP" loc="6(HplAtm128GeneralIOFastPortC.PortBP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortCP" loc="6(HplAtm128GeneralIOFastPortC.PortCP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortDP" loc="6(HplAtm128GeneralIOFastPortC.PortDP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortEP" loc="6(HplAtm128GeneralIOFastPortC.PortEP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortFP" loc="6(HplAtm128GeneralIOFastPortC.PortFP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortGP" loc="6(HplAtm128GeneralIOFastPortC.PortGP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortHP" loc="6(HplAtm128GeneralIOFastPortC.PortHP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortJP" loc="6(HplAtm128GeneralIOFastPortC.PortJP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:5">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortKP" loc="6(HplAtm128GeneralIOFastPortC.PortKP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortC.PortLP" loc="6(HplAtm128GeneralIOFastPortC.PortLP):../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOFastPortP"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:9">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="38:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc" safe="">
      <documentation loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
        <short>&#10; Busy wait component as per TEP102.</short>
        <long>&#10; Busy wait component as per TEP102. Supports waiting for at least some&#10; number of microseconds. This functionality should be used sparingly,&#10; when the overhead of posting a Timer or Alarm is greater than simply&#10; busy waiting.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Enc28j60C" loc="7:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Harald Glanzer, 0727156 TU Wien&#10;&#10; overhauled by Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Enc28j60P" loc="9:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/enc28j60/enc28j60.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Harald Glanzer, 0727156 TU Wien&#10;&#10; overhauled by Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280SpiC" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <documentation loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280SpiP" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc" safe="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.h">
        <short>&#10; </short>
        <long>&#10; @author Markus Hartmann e988811@student.tuwien.ac.at&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280SpiC.Arbiter" loc="83(Atm1280SpiC.Arbiter):../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280SpiC.Arbiter.Queue" loc="42(Atm1280SpiC.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280SpiC.Arbiter.Arbiter" loc="49(Atm1280SpiC.Arbiter.Arbiter):../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpC" loc="10(DatabaseC.UdpC):../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UdpC"/>
        <arguments>
          <value cst="I:50000">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IpC" loc="10(UdpTransceiverC.IpC):../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IpC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IpC.IpP" loc="10(UdpTransceiverC.IpC.IpP):../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpTransceiverP" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UdpTransceiverC.IcmpC" loc="10(UdpTransceiverC.IcmpC):../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <instance number="1">
        <component-ref qname="IcmpC"/>
        <arguments>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpTransceiverC.IcmpC.IcmpP" loc="10(UdpTransceiverC.IcmpC.IcmpP):../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="IcmpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DatabaseC.UdpC.UdpP" loc="10(DatabaseC.UdpC.UdpP):../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="UdpP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpQueueC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UdpQueueC.PacketQueueC" loc="8(UdpQueueC.PacketQueueC):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PacketQueueC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1bb2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7fc6e1bb1390"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpQueueC.PacketQueueC.PacketQueueP" loc="11(UdpQueueC.PacketQueueC.PacketQueueP):../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <instance number="4">
        <component-ref qname="PacketQueueP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7fc6e1a777e0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UdpQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC" loc="11:FMClick/FMClickC.nc">
      <documentation loc="1:FMClick/FMClickC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; Configuration of the FMClick module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FMClickP" loc="17:FMClick/FMClickP.nc">
      <documentation loc="1:FMClick/FMClickP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file FMClickP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-12&#10;&#10; FMClick module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.I2C" loc="43(FMClickC.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:../tinyos_ws18/tos/system/LedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc" safe="">
      <documentation loc="35:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <documentation loc="34:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
        <short>&#10; Platform-specific LED interface.</short>
        <long>&#10; Platform-specific LED interface.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:../tinyos_ws18/tos/system/NoLedsC.nc">
      <documentation loc="35:../tinyos_ws18/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="FMClickC.Timer" loc="44(FMClickC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; Changed for Atm1280&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA" loc="40(HplAtm1280GeneralIOC.PortA):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit0" loc="41(HplAtm1280GeneralIOC.PortA.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="48">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit1" loc="41(HplAtm1280GeneralIOC.PortA.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="49">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit2" loc="41(HplAtm1280GeneralIOC.PortA.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="50">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit3" loc="41(HplAtm1280GeneralIOC.PortA.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="51">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit4" loc="41(HplAtm1280GeneralIOC.PortA.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="52">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit5" loc="41(HplAtm1280GeneralIOC.PortA.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="53">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit6" loc="41(HplAtm1280GeneralIOC.PortA.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="54">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortA.Bit7" loc="41(HplAtm1280GeneralIOC.PortA.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="55">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB" loc="40(HplAtm1280GeneralIOC.PortB):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit0" loc="41(HplAtm1280GeneralIOC.PortB.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="56">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit1" loc="41(HplAtm1280GeneralIOC.PortB.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="57">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit2" loc="41(HplAtm1280GeneralIOC.PortB.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="58">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit3" loc="41(HplAtm1280GeneralIOC.PortB.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="59">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit4" loc="41(HplAtm1280GeneralIOC.PortB.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="60">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit5" loc="41(HplAtm1280GeneralIOC.PortB.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="61">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit6" loc="41(HplAtm1280GeneralIOC.PortB.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="62">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortB.Bit7" loc="41(HplAtm1280GeneralIOC.PortB.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="63">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC" loc="40(HplAtm1280GeneralIOC.PortC):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit0" loc="41(HplAtm1280GeneralIOC.PortC.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="64">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit1" loc="41(HplAtm1280GeneralIOC.PortC.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="65">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit2" loc="41(HplAtm1280GeneralIOC.PortC.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="66">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit3" loc="41(HplAtm1280GeneralIOC.PortC.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="67">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit4" loc="41(HplAtm1280GeneralIOC.PortC.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="68">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit5" loc="41(HplAtm1280GeneralIOC.PortC.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="69">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit6" loc="41(HplAtm1280GeneralIOC.PortC.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="70">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortC.Bit7" loc="41(HplAtm1280GeneralIOC.PortC.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="71">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD" loc="40(HplAtm1280GeneralIOC.PortD):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit0" loc="41(HplAtm1280GeneralIOC.PortD.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="72">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit1" loc="41(HplAtm1280GeneralIOC.PortD.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="73">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit2" loc="41(HplAtm1280GeneralIOC.PortD.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="74">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit3" loc="41(HplAtm1280GeneralIOC.PortD.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="75">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit4" loc="41(HplAtm1280GeneralIOC.PortD.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="76">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit5" loc="41(HplAtm1280GeneralIOC.PortD.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="77">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit6" loc="41(HplAtm1280GeneralIOC.PortD.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="78">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortD.Bit7" loc="41(HplAtm1280GeneralIOC.PortD.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="79">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE" loc="40(HplAtm1280GeneralIOC.PortE):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit0" loc="41(HplAtm1280GeneralIOC.PortE.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="80">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit1" loc="41(HplAtm1280GeneralIOC.PortE.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="81">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit2" loc="41(HplAtm1280GeneralIOC.PortE.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="82">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit3" loc="41(HplAtm1280GeneralIOC.PortE.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="83">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit4" loc="41(HplAtm1280GeneralIOC.PortE.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="84">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit5" loc="41(HplAtm1280GeneralIOC.PortE.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="85">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit6" loc="41(HplAtm1280GeneralIOC.PortE.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="86">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortE.Bit7" loc="41(HplAtm1280GeneralIOC.PortE.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="87">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF" loc="40(HplAtm1280GeneralIOC.PortF):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit0" loc="41(HplAtm1280GeneralIOC.PortF.Bit0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="88">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit1" loc="41(HplAtm1280GeneralIOC.PortF.Bit1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="89">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit2" loc="41(HplAtm1280GeneralIOC.PortF.Bit2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="90">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit3" loc="41(HplAtm1280GeneralIOC.PortF.Bit3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="91">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit4" loc="41(HplAtm1280GeneralIOC.PortF.Bit4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="92">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit5" loc="41(HplAtm1280GeneralIOC.PortF.Bit5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="93">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit6" loc="41(HplAtm1280GeneralIOC.PortF.Bit6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="94">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.PortF.Bit7" loc="41(HplAtm1280GeneralIOC.PortF.Bit7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="95">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F0" loc="42(HplAtm1280GeneralIOC.F0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F1" loc="42(HplAtm1280GeneralIOC.F1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F2" loc="42(HplAtm1280GeneralIOC.F2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F3" loc="42(HplAtm1280GeneralIOC.F3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F4" loc="42(HplAtm1280GeneralIOC.F4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F5" loc="42(HplAtm1280GeneralIOC.F5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F6" loc="42(HplAtm1280GeneralIOC.F6):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.F7" loc="42(HplAtm1280GeneralIOC.F7):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G0" loc="42(HplAtm1280GeneralIOC.G0):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G1" loc="42(HplAtm1280GeneralIOC.G1):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G2" loc="42(HplAtm1280GeneralIOC.G2):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G3" loc="42(HplAtm1280GeneralIOC.G3):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G4" loc="42(HplAtm1280GeneralIOC.G4):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.G5" loc="42(HplAtm1280GeneralIOC.G5):../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H0" loc="42(HplAtm1280GeneralIOC.H0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H1" loc="42(HplAtm1280GeneralIOC.H1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H2" loc="42(HplAtm1280GeneralIOC.H2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H3" loc="42(HplAtm1280GeneralIOC.H3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H4" loc="42(HplAtm1280GeneralIOC.H4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H5" loc="42(HplAtm1280GeneralIOC.H5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H6" loc="42(HplAtm1280GeneralIOC.H6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.H7" loc="42(HplAtm1280GeneralIOC.H7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:258">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:257">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J0" loc="42(HplAtm1280GeneralIOC.J0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J1" loc="42(HplAtm1280GeneralIOC.J1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J2" loc="42(HplAtm1280GeneralIOC.J2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J3" loc="42(HplAtm1280GeneralIOC.J3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J4" loc="42(HplAtm1280GeneralIOC.J4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J5" loc="42(HplAtm1280GeneralIOC.J5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J6" loc="42(HplAtm1280GeneralIOC.J6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.J7" loc="42(HplAtm1280GeneralIOC.J7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:261">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:260">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:259">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K0" loc="42(HplAtm1280GeneralIOC.K0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K1" loc="42(HplAtm1280GeneralIOC.K1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K2" loc="42(HplAtm1280GeneralIOC.K2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K3" loc="42(HplAtm1280GeneralIOC.K3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K4" loc="42(HplAtm1280GeneralIOC.K4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K5" loc="42(HplAtm1280GeneralIOC.K5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K6" loc="42(HplAtm1280GeneralIOC.K6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.K7" loc="42(HplAtm1280GeneralIOC.K7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:264">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:263">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:262">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L0" loc="42(HplAtm1280GeneralIOC.L0):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L1" loc="42(HplAtm1280GeneralIOC.L1):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L2" loc="42(HplAtm1280GeneralIOC.L2):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L3" loc="42(HplAtm1280GeneralIOC.L3):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L4" loc="42(HplAtm1280GeneralIOC.L4):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L5" loc="42(HplAtm1280GeneralIOC.L5):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L6" loc="42(HplAtm1280GeneralIOC.L6):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOC.L7" loc="42(HplAtm1280GeneralIOC.L7):../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:267">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:266">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:265">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PS2C" loc="11:PS2/PS2C.nc">
      <documentation loc="1:PS2/PS2C.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file    PS2C.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the PS2 module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PS2P" loc="18:PS2/PS2P.nc">
      <module/>
    </component>
    <component qname="HplAtmegaPinChange2C" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <module/>
    </component>
    <component qname="VolumeAdcC" loc="13:VolumeAdc/VolumeAdcC.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcC.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; Configuration of the VolumeAdc module.&#10;&#10;*</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="VolumeAdcP" loc="13:VolumeAdc/VolumeAdcP.nc">
      <documentation loc="1:VolumeAdc/VolumeAdcP.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @file VolumeAdcP.nc&#10; @author  Jan Nausner &#60;e01614835@student.tuwien.ac.at>&#10; @date    2018-12-09&#10;&#10; VolumeAdc module implementation.&#10;&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="VolumeAdcC.Adc" loc="21(VolumeAdcC.Adc):../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <documentation loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1280AdcP" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc" safe="">
      <documentation loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
        <short>&#10; Internal component of the Atmega1280 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1280 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm1280AdcC" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1280AdcP" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc" safe="">
      <documentation loc="38:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
        <short>&#10; HPL for the Atmega1280 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1280 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter" loc="89(Atm1280AdcC.AdcArbiter):../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Queue" loc="42(Atm1280AdcC.AdcArbiter.Queue):../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.AdcArbiter.Arbiter" loc="52(Atm1280AdcC.AdcArbiter.Arbiter):../tinyos_ws18/tos/system/ArbiterP.nc">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1280AdcC.PM" loc="67(Atm1280AdcC.PM):../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1280AdcC.PM.PowerManager" loc="58(Atm1280AdcC.PM.PowerManager):../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc" safe="">
      <documentation loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
        <short>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega1280 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BufferedLcdC" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BufferedLcdC.Timer" loc="44(BufferedLcdC.Timer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BufferedLcdC.BufferedLcdP" loc="6(BufferedLcdC.BufferedLcdP):../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BufferedLcdP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:16">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplLcdC" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplLcdP" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioScannerAppC.VolumeTimer" loc="44(RadioScannerAppC.VolumeTimer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioScannerAppC.DisplayTimer" loc="44(RadioScannerAppC.DisplayTimer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioScannerAppC.ErrorTimer" loc="44(RadioScannerAppC.ErrorTimer):../tinyos_ws18/tos/system/TimerMilliC.nc">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LlcC" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="ETHER_TYPE" ref="0x7fc6e1aac0d0" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
          <component-ref qname="LlcC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LlcP" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="ETHER_TYPE" ref="0x7fc6e1a860d0" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
          <component-ref qname="LlcP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketQueueC" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="ITEM_TYPE" ref="0x7fc6e1a777e0" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
          <component-ref qname="PacketQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7fc6e1a777e0"/></type-var>
        </typedef>
        <constant name="LEN" ref="0x7fc6e1a77b10" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
          <component-ref qname="PacketQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketQueueP" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc" abstract="">
      <parameters>
        <typedef name="ITEM_TYPE" ref="0x7fc6e1a68840" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
          <component-ref qname="PacketQueueP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="ITEM_TYPE" scoped="" ref="0x7fc6e1a68840"/></type-var>
        </typedef>
        <constant name="QUEUE_LEN" ref="0x7fc6e1a68bb0" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
          <component-ref qname="PacketQueueP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../tinyos_ws18/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../tinyos_ws18/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncC" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc" abstract="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fc6e19b0160" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fc6e19b0160"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7fc6e19b04f0" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7fc6e19b0880" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
          <component-ref qname="Atm1280AlarmSyncC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1280AlarmSyncP" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc" abstract="" safe="">
      <documentation loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; Based on Atm1281AlarmAsyncP&#10;&#10; @author David Gay&#10; @author Markus Hartmann &#60;e9808811@student.tuwien.ac.at>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fc6e19a4200" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fc6e19a4200"/></type-var>
        </typedef>
        <constant name="hw_prescaler" ref="0x7fc6e19a4590" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="sw_prescaler" ref="0x7fc6e19a4920" loc="33:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
          <component-ref qname="Atm1280AlarmSyncP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc6e18b9160" loc="46:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc6e18b9160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc6e1887230" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc6e1887230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fc6e1887560" loc="46:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc6e1839de0" loc="46:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc6e1839de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="IcmpC" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc" abstract="">
      <parameters>
        <constant name="TYPE" ref="0x7fc6e1801650" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
          <component-ref qname="IcmpC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IpC" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PROTOCOL" ref="0x7fc6e17f46b0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
          <component-ref qname="IpC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="IpP" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PROTOCOL" ref="0x7fc6e17f0650" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
          <component-ref qname="IpP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="IcmpP" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/icmp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="TYPE" ref="0x7fc6e17a3020" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
          <component-ref qname="IcmpP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fc6e163e900" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fc6e163ec70" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fc6e163b020" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fc6e1630d00" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fc6e162d0d0" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fc6e162d460" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fc6e162d7b0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fc6e159b890" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fc6e159bc20" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fc6e1598020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fc6e1598370" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOFastPortP" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fc6e14f6ba0" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fc6e14f3020" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fc6e14f3390" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
          <component-ref qname="HplAtm128GeneralIOFastPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fc6e130de40" loc="83:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fc6e12fd210" loc="42:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../tinyos_ws18/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7fc6e12743d0" loc="39:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7fc6e1274760" loc="40:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7fc6e1274af0" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fc6e1274e40" loc="42:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="UdpC" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PORT" ref="0x7fc6e1233450" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
          <component-ref qname="UdpC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="UdpP" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/udp.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <constant name="PORT" ref="0x7fc6e122ee70" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
          <component-ref qname="UdpP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fc6e10aeaf0" loc="89:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../tinyos_ws18/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fc6e109c5e0" loc="52:../tinyos_ws18/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm1280GeneralIOSlowPinP" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fc6e0dbd4c0" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fc6e0dbd860" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fc6e0dbdc00" loc="44:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fc6e0dbc020" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm1280GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega1280 ADC.  Users of this component must link it to an&#10; implementation of Atm1280AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fc6e0b885c0" loc="89:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7fc6e0b83e80" loc="42:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadC" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7fc6e0b111f0" loc="23:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7fc6e0b111f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="BufferedLcdP" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc" abstract="">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <parameters>
        <constant name="LINES" ref="0x7fc6e0ae0b70" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
          <component-ref qname="BufferedLcdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
        <constant name="LINE_WIDTH" ref="0x7fc6e0add020" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
          <component-ref qname="BufferedLcdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fc6e1d34bf0" loc="58:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fc6e1d34bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1d37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fc6e1d35720" loc="57:../tinyos_ws18/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fc6e1d35720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fc6e1d35aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fc6e1d31d50" loc="52:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fc6e1d31d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1d30100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e1d37d00" loc="46:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e1d37d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1d320a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fc6e1d31020" loc="50:../tinyos_ws18/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fc6e1d31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fc6e1d313a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fc6e1d31530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fc6e1d316c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fc6e1d31850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fc6e1d319e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fc6e1d297a0" loc="45:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7fc6e1d297a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1d29b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e1d290c0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e1d290c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1d29440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7fc6e1d28020" loc="46:../tinyos_ws18/tos/platforms/bigAVR6_1280/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7fc6e1d28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1d283a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fc6e1d216f0" loc="4:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fc6e1d216f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1d21a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fc6e1d21020" loc="3:../tinyos_ws18/tos/platforms/bigAVR6/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fc6e1d21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1d213a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e1d18860" loc="51:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e1d18860"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1d18be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fc6e1d17020" loc="52:../tinyos_ws18/tos/platforms/bigAVR6_1280/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fc6e1d17020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fc6e1d173a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fc6e1d17530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fc6e1d176c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fc6e1d17850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fc6e1d179e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fc6e1d04720" loc="60:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fc6e1d04720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1d04aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fc6e1d33e20" loc="57:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fc6e1d33e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fc6e1d051c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fc6e1d04020" loc="59:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fc6e1d04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1d043a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fc6e1d054b0" loc="58:../tinyos_ws18/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fc6e1d054b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1d05830"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fc6e1d059c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fc6e1d05b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fc6e1eb8bd0" loc="48:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1eb8bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1eec020"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1eec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fc6e1ec2a20" loc="47:../tinyos_ws18/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fc6e1ec2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1ec2da0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fc6e2870020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fc6e28701b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fc6e1dc29e0" loc="56:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fc6e1dc29e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1dc2d60"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1dc0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fc6e1dbd0d0" loc="57:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fc6e1dbd0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fc6e1dbd450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fc6e1dc3990" loc="55:../tinyos_ws18/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fc6e1dc3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1dc3d10"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fc6e1dc2020"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fc6e1dc21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fc6e1da0de0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fc6e1da0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fc6e1da3180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fc6e1ddb080" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fc6e1ddb080"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fc6e1ddb400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fc6e1da15a0" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fc6e1da15a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fc6e1da1920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DB" ref="0x7fc6e1ccd880" loc="26:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DB" scoped="" ref="0x7fc6e1ccd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7fc6e1ccdc00"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7fc6e1ccdd90"/>
        <function-ref name="saveChannel" scoped="" ref="0x7fc6e1cd5020"/>
        <function-ref name="savedChannel" scoped="" ref="0x7fc6e1cd51b0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc6e1cd5340"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7fc6e1cd54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fc6e1cee970" loc="22:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fc6e1cee970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fc6e1ceecf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x7fc6e1cd57f0" loc="27:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x7fc6e1cd57f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1cd5b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="volumeKnob" ref="0x7fc6e1cbc950" loc="30:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="volumeKnob" scoped="" ref="0x7fc6e1cbc950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e1cbe560"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e1cbe9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inputTuneChannel" ref="0x7fc6e1c976b0" loc="101:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inputTuneChannel" scoped="" ref="0x7fc6e1c976b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1c97b30"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1c97cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Keyboard" ref="0x7fc6e1cbfd20" loc="29:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Keyboard" scoped="" ref="0x7fc6e1cbfd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1cca0e0"/>
        <function-ref name="receivedChar" scoped="" ref="0x7fc6e1cca270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumeTimer" ref="0x7fc6e1cb1a10" loc="31:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumeTimer" scoped="" ref="0x7fc6e1cb1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e1cae020"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e1cb9510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e1caf300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e1cb9e10"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e1cae920"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e1cae4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e1cb9990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e1cba670"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e1caf910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e1cbab40"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1cb9090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="setVolume" ref="0x7fc6e1c95630" loc="103:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="setVolume" scoped="" ref="0x7fc6e1c95630"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1c959b0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1c95b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startSeekUp" ref="0x7fc6e1c94530" loc="104:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startSeekUp" scoped="" ref="0x7fc6e1c94530"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1c948b0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1c94a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="handleChar" ref="0x7fc6e1c8b1a0" loc="119:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="handleChar" scoped="" ref="0x7fc6e1c8b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1c8b520"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1c8b6b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seekBand" ref="0x7fc6e1c65200" loc="302:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seekBand" scoped="" ref="0x7fc6e1c65200"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1c65580"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1c65710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DBInit" ref="0x7fc6e1cdb020" loc="25:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DBInit" scoped="" ref="0x7fc6e1cdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1cdb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="displayHardError" ref="0x7fc6e1c90440" loc="107:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="displayHardError" scoped="" ref="0x7fc6e1c90440"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1c907c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1c90950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lcd" ref="0x7fc6e1ceb100" loc="24:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lcd" scoped="" ref="0x7fc6e1ceb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferedLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e1ceb480"/>
        <function-ref name="forceRefresh" scoped="" ref="0x7fc6e1ceb610"/>
        <function-ref name="goTo" scoped="" ref="0x7fc6e1ceb7a0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e1ceb930"/>
        <function-ref name="autoRefresh" scoped="" ref="0x7fc6e1cebac0"/>
        <function-ref name="write_P" scoped="" ref="0x7fc6e1cebc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ErrorTimer" ref="0x7fc6e1ca7660" loc="33:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ErrorTimer" scoped="" ref="0x7fc6e1ca7660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e1ca4c40"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e1ca51e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e1ca4020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e1ca5ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e1ca2590"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e1ca2110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e1ca5660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e1ca6390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e1ca4630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e1ca6860"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1ca6d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisplayTimer" ref="0x7fc6e1cac020" loc="32:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisplayTimer" scoped="" ref="0x7fc6e1cac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e1ca9630"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e1caba60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e1caa920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e1caa4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e1ca7020"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e1ca9ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e1caa020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e1cacc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e1ca9020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e1cab110"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1cab5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Radio" ref="0x7fc6e1cc1400" loc="28:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Radio" scoped="" ref="0x7fc6e1cc1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7fc6e1ccb4d0"/>
        <function-ref name="initDone" scoped="" ref="0x7fc6e1cc1910"/>
        <function-ref name="setVolume" scoped="" ref="0x7fc6e1cc1aa0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7fc6e1cc1c30"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7fc6e1cc1dc0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7fc6e1ccb020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc6e1ccb1b0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7fc6e1ccb340"/>
        <function-ref name="seek" scoped="" ref="0x7fc6e1cc1780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="displayChannelInfo" ref="0x7fc6e1c96770" loc="102:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="displayChannelInfo" scoped="" ref="0x7fc6e1c96770"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1c96af0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1c96c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTune" ref="0x7fc6e1c91520" loc="106:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTune" scoped="" ref="0x7fc6e1c91520"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1c918a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1c91a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="displaySoftError" ref="0x7fc6e1c8f390" loc="108:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="displaySoftError" scoped="" ref="0x7fc6e1c8f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1c8f710"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1c8f8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startSeekDown" ref="0x7fc6e1c92430" loc="105:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startSeekDown" scoped="" ref="0x7fc6e1c92430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1c927b0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1c92940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7fc6e1cdc1d0" loc="23:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7fc6e1cdc1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7fc6e1cec340"/>
        <function-ref name="drawRect" scoped="" ref="0x7fc6e1cdc6e0"/>
        <function-ref name="drawLine" scoped="" ref="0x7fc6e1cdc870"/>
        <function-ref name="setPixel" scoped="" ref="0x7fc6e1cdca00"/>
        <function-ref name="invertPixel" scoped="" ref="0x7fc6e1cdcb90"/>
        <function-ref name="clearPixel" scoped="" ref="0x7fc6e1cdcd20"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7fc6e1cec020"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7fc6e1cdc550"/>
        <function-ref name="drawText" scoped="" ref="0x7fc6e1cec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readyScreen" ref="0x7fc6e1c63e60" loc="307:RadioScannerP.nc">
      <component-ref qname="RadioScannerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readyScreen" scoped="" ref="0x7fc6e1c63e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1c62210"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1c623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e1bcdb70" loc="17:Database/DatabaseC.nc">
      <component-ref qname="DatabaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e1bcdb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1bcc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Database" ref="0x7fc6e1bcc2d0" loc="18:Database/DatabaseC.nc">
      <component-ref qname="DatabaseC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Database" scoped="" ref="0x7fc6e1bcc2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7fc6e1bcc650"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7fc6e1bcc7e0"/>
        <function-ref name="saveChannel" scoped="" ref="0x7fc6e1bcc970"/>
        <function-ref name="savedChannel" scoped="" ref="0x7fc6e1bccb00"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc6e1bccc90"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7fc6e1bcce20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fetchList" ref="0x7fc6e1b9a3a0" loc="66:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fetchList" scoped="" ref="0x7fc6e1b9a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1b9a720"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1b9a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7fc6e1ba67b0" loc="32:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7fc6e1ba67b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7fc6e1ba6b30"/>
        <function-ref name="getGateway" scoped="" ref="0x7fc6e1ba6cc0"/>
        <function-ref name="setNetmask" scoped="" ref="0x7fc6e1ba6e50"/>
        <function-ref name="getIp" scoped="" ref="0x7fc6e1bad020"/>
        <function-ref name="getNetmask" scoped="" ref="0x7fc6e1bad1b0"/>
        <function-ref name="setIp" scoped="" ref="0x7fc6e1bad340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x7fc6e1b9d430" loc="64:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x7fc6e1b9d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1b9d7b0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1b9d940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e1bbab00" loc="25:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e1bbab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1bbae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Database" ref="0x7fc6e1bb8150" loc="26:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Database" scoped="" ref="0x7fc6e1bb8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Database"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannelList" scoped="" ref="0x7fc6e1bb84d0"/>
        <function-ref name="receivedChannelEntry" scoped="" ref="0x7fc6e1bb8660"/>
        <function-ref name="saveChannel" scoped="" ref="0x7fc6e1bb87f0"/>
        <function-ref name="savedChannel" scoped="" ref="0x7fc6e1bb8980"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc6e1bb8b10"/>
        <function-ref name="purgeChannelList" scoped="" ref="0x7fc6e1bb8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpSend" ref="0x7fc6e1bae5f0" loc="30:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7fc6e1bae5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1bae970"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1baeb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Control" ref="0x7fc6e1ba2960" loc="33:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Control" scoped="" ref="0x7fc6e1ba2960"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc6e1ba2ce0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc6e1ba2e70"/>
        <function-ref name="start" scoped="" ref="0x7fc6e1baa030"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1baa1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpReceive" ref="0x7fc6e1bab8b0" loc="31:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7fc6e1bab8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e1babc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7fc6e1baa440" loc="35:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7fc6e1baa440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7fc6e1ba54d0"/>
        <function-ref name="drawRect" scoped="" ref="0x7fc6e1baa950"/>
        <function-ref name="drawLine" scoped="" ref="0x7fc6e1baaae0"/>
        <function-ref name="setPixel" scoped="" ref="0x7fc6e1baac70"/>
        <function-ref name="invertPixel" scoped="" ref="0x7fc6e1baae00"/>
        <function-ref name="clearPixel" scoped="" ref="0x7fc6e1ba5020"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7fc6e1ba51b0"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7fc6e1baa7c0"/>
        <function-ref name="drawText" scoped="" ref="0x7fc6e1ba5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="recvTask" ref="0x7fc6e1b9c320" loc="65:Database/DatabaseP.nc">
      <component-ref qname="DatabaseP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="recvTask" scoped="" ref="0x7fc6e1b9c320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1b9c6a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1b9c830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7fc6e1b0a500" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1b0a500"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7fc6e1bc27c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7fc6e1bc2d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1b09130"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1b09640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpControl" ref="0x7fc6e1b03d00" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7fc6e1b03d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7fc6e1b070a0"/>
        <function-ref name="getGateway" scoped="" ref="0x7fc6e1b07230"/>
        <function-ref name="setNetmask" scoped="" ref="0x7fc6e1b073c0"/>
        <function-ref name="getIp" scoped="" ref="0x7fc6e1b07550"/>
        <function-ref name="getNetmask" scoped="" ref="0x7fc6e1b076e0"/>
        <function-ref name="setIp" scoped="" ref="0x7fc6e1b07870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpPacket" ref="0x7fc6e1b01810" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7fc6e1b01810"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7fc6e1b01b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7fc6e1b03690" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverC.nc">
      <component-ref qname="IpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7fc6e1b03690"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e1b03a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7fc6e1afbe60" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1afbe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7fc6e1bc27c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7fc6e1bc2d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1af9a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1af8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcReceive" ref="0x7fc6e1af0a80" loc="16:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1af0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e1af0e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpControl" ref="0x7fc6e1af7120" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7fc6e1af7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7fc6e1af74a0"/>
        <function-ref name="getGateway" scoped="" ref="0x7fc6e1af7630"/>
        <function-ref name="setNetmask" scoped="" ref="0x7fc6e1af77c0"/>
        <function-ref name="getIp" scoped="" ref="0x7fc6e1af7950"/>
        <function-ref name="getNetmask" scoped="" ref="0x7fc6e1af7ae0"/>
        <function-ref name="setIp" scoped="" ref="0x7fc6e1af7c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcSend" ref="0x7fc6e1af5020" loc="15:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7fc6e1af5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1af53a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1af5530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Arp" ref="0x7fc6e1ae72c0" loc="17:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7fc6e1ae72c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7fc6e1ae7640"/>
        <function-ref name="resolved" scoped="" ref="0x7fc6e1ae77d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e1ae7a90" loc="18:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e1ae7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1ae7e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpPacket" ref="0x7fc6e1af1140" loc="19:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7fc6e1af1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7fc6e1af14c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7fc6e1af8a80" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpTransceiverP.nc">
      <component-ref qname="IpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7fc6e1af8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e1af8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7fc6e1aad5a0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="IpTransceiverC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1aad5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e1aad920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7fc6e1b00db0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="IpTransceiverC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7fc6e1b00db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1aad180"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1aad310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7fc6e1aa83f0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1aa83f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1afb320"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7fc6e1afb8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1aa7020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1aa7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7fc6e1aa6020" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1aa6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e1aa63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacControl" ref="0x7fc6e1aa4be0" loc="14:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7fc6e1aa4be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7fc6e1aa3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mac" ref="0x7fc6e1aa0430" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverC.nc">
      <component-ref qname="LlcTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7fc6e1aa0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1aa07b0"/>
        <function-ref name="received" scoped="" ref="0x7fc6e1aa0940"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1aa0ad0"/>
        <function-ref name="getMac" scoped="" ref="0x7fc6e1aa0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7fc6e1aa3dd0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1aa3dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1afb320"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7fc6e1afb8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1a9ca80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1a9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7fc6e1a9baa0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1a9baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e1a9be20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MacControl" ref="0x7fc6e1a9ac30" loc="14:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7fc6e1a9ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7fc6e1a99020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mac" ref="0x7fc6e1a9a100" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcTransceiverP.nc">
      <component-ref qname="LlcTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7fc6e1a9a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1a9a480"/>
        <function-ref name="received" scoped="" ref="0x7fc6e1a9a610"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1a9a7a0"/>
        <function-ref name="getMac" scoped="" ref="0x7fc6e1a9a930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7fc6e0a590c0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="IpTransceiverC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7fc6e0a590c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e0a59440"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e0a595d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcQueue" ref="0x7fc6e0a59860" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="IpTransceiverC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7fc6e0a59860"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e0a59be0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e0a59d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcQueue" ref="0x7fc6e1a797e0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueC.nc">
      <component-ref qname="LlcQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7fc6e1a797e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1a79b60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1a79cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7fc6e1a47880" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="LlcQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1a47880"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1afb320"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7fc6e1afb8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1a464c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1a469d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7fc6e1a75930" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="LlcQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e1a75930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1afb320"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7fc6e1afb8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1a48a70"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e1a48560"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1a47020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7fc6e0a4fe50" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e0a4fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1afb320"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7fc6e1afb8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e0a4ba80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e0a4a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7fc6e0a50140" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e0a50140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1afb320"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7fc6e1afb8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e0a4f2a0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e0a50d30"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e0a4f770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7fc6e0a4a4e0" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="LlcQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7fc6e0a4a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e0a4a860"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e0a4a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7fc6e1a41bf0" loc="13:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <component-ref qname="LlcQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e1a41bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1afb320"/>
            <typename><typedef-ref name="mac_queue_item_t" ref="0x7fc6e1afb8a0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1a40d70"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e1a40860"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1a3f2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcQueue" ref="0x7fc6e1a41210" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcQueueP.nc">
      <component-ref qname="LlcQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7fc6e1a41210"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1a41590"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1a41720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7fc6e1a2f080" loc="10:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <component-ref qname="ArpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7fc6e1a2f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7fc6e1a2f400"/>
        <function-ref name="getGateway" scoped="" ref="0x7fc6e1a2f590"/>
        <function-ref name="setNetmask" scoped="" ref="0x7fc6e1a2f720"/>
        <function-ref name="getIp" scoped="" ref="0x7fc6e1a2f8b0"/>
        <function-ref name="getNetmask" scoped="" ref="0x7fc6e1a2fa40"/>
        <function-ref name="setIp" scoped="" ref="0x7fc6e1a2fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Arp" ref="0x7fc6e1a32820" loc="9:../tinyos_ws18/tos/lib_ecs/arp/ArpC.nc">
      <component-ref qname="ArpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7fc6e1a32820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7fc6e1a32ba0"/>
        <function-ref name="resolved" scoped="" ref="0x7fc6e1a32d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7fc6e1a2b110" loc="13:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1a2b110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7fc6e1aeb770"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7fc6e1ae9090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1a2bd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1a2a260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timeout" ref="0x7fc6e1a27810" loc="15:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timeout" scoped="" ref="0x7fc6e1a27810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e1a23cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e1a25300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e1a230d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e1a25c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e1a22660"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e1a221e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e1a25780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e1a26480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e1a236e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e1a26950"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1a26e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClearCacheTimeout" ref="0x7fc6e1a22d20" loc="16:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClearCacheTimeout" scoped="" ref="0x7fc6e1a22d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e1a1d220"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e1a207c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e1a1e590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e1a1e110"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e1a1db20"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e1a1d6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e1a20c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e1a21940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e1a1eba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e1a21e10"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1a20340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcReceive" ref="0x7fc6e1a1c830" loc="18:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1a1c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e1a1cbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7fc6e1a2a8f0" loc="14:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e1a2a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7fc6e1aeb770"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7fc6e1ae9090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1a28a70"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e1a28560"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1a27020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Arp" ref="0x7fc6e1a2e6e0" loc="12:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Arp" scoped="" ref="0x7fc6e1a2e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Arp"/>
      </instance>
      <interface-functions>
        <function-ref name="resolve" scoped="" ref="0x7fc6e1a2ea60"/>
        <function-ref name="resolved" scoped="" ref="0x7fc6e1a2ebf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcSend" ref="0x7fc6e1a1c020" loc="17:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7fc6e1a1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1a1c3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1a1c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpControl" ref="0x7fc6e1a1b020" loc="19:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpControl" scoped="" ref="0x7fc6e1a1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setGateway" scoped="" ref="0x7fc6e1a1b3a0"/>
        <function-ref name="getGateway" scoped="" ref="0x7fc6e1a1b530"/>
        <function-ref name="setNetmask" scoped="" ref="0x7fc6e1a1b6c0"/>
        <function-ref name="getIp" scoped="" ref="0x7fc6e1a1b850"/>
        <function-ref name="getNetmask" scoped="" ref="0x7fc6e1a1b9e0"/>
        <function-ref name="setIp" scoped="" ref="0x7fc6e1a1bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MacControl" ref="0x7fc6e1a1be70" loc="20:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MacControl" scoped="" ref="0x7fc6e1a1be70"/></type-interface>
      <instance>
        <interfacedef-ref qname="MacControl"/>
      </instance>
      <interface-functions>
        <function-ref name="getMac" scoped="" ref="0x7fc6e1a1a220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e1a1a4e0" loc="21:../tinyos_ws18/tos/lib_ecs/arp/ArpP.nc">
      <component-ref qname="ArpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e1a1a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e1a1a860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc6e1825140" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="ArpC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fc6e1825140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e1822630"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e1824b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e1823920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e18234a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e1820020"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e1822ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e1823020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e1825d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e1822020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e1824220"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e18246f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fc6e19db1d0" loc="49:../tinyos_ws18/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fc6e19db1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e19d7630"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e19d9c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e19d89d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e19d8550"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e19d6020"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e19d7ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e19d80d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e19dbdc0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e19d7020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e19d92e0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e19d97b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fc6e19d2c30" loc="46:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fc6e19d2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e19cd110"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e19d06a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e19ce4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e19ce020"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e19cda10"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e19cd590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e19d0b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e19d1860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e19ceab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e19d1d30"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e19d0220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fc6e19c8500" loc="47:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fc6e19c8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc6e19ca170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e19d6e60" loc="45:../tinyos_ws18/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e19d6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e19d2210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7fc6e19ba020" loc="29:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7fc6e19ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc6e19bae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc6e19b9800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc6e19b9340"/>
        <function-ref name="overflow" scoped="" ref="0x7fc6e19b9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e19c9c80" loc="27:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e19c9c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e19c50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7fc6e19bd960" loc="28:../tinyos_ws18/tos/platforms/bigAVR6_1280/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7fc6e19bd960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e19bb1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e19bc1b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fc6e19bcb30"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e19bc670"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc6e19bb670"/>
        <function-ref name="start" scoped="" ref="0x7fc6e19c47c0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e19c4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc6e18c44b0" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fc6e18c44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e18c1db0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e18c3da0"/>
        <function-ref name="startAt" scoped="" ref="0x7fc6e18c1760"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e18c12a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc6e18c02a0"/>
        <function-ref name="start" scoped="" ref="0x7fc6e18c33d0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e18c38e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e18c5ba0" loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e18c5ba0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fc6e1ec4020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fc6e1ec4020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e18c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc6e18c08d0" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fc6e18c08d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc6e18bf780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc6e18be150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc6e18bfc40"/>
        <function-ref name="overflow" scoped="" ref="0x7fc6e18be610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7fc6e0a217d0" loc="41:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fc6e0a217d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fc6e0a21b50"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fc6e0a21ce0"/>
        <function-ref name="getControlA" scoped="" ref="0x7fc6e0a21e70"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fc6e0a1f030"/>
        <function-ref name="setControlB" scoped="" ref="0x7fc6e0a1f1c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fc6e0a1f350"/>
        <function-ref name="getControlB" scoped="" ref="0x7fc6e0a1f4e0"/>
        <function-ref name="setControlA" scoped="" ref="0x7fc6e0a1f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fc6e0a2de80" loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fc6e0a2de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e0a296e0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e0a2b6b0"/>
        <function-ref name="startAt" scoped="" ref="0x7fc6e0a29090"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e0a2bb70"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc6e0a29ba0"/>
        <function-ref name="start" scoped="" ref="0x7fc6e0a2ccb0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e0a2b1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e0a2d670" loc="35:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e0a2d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e0a2d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fc6e0a28260" loc="37:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fc6e0a28260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc6e0a27090"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc6e0a27a10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc6e0a27550"/>
        <function-ref name="overflow" scoped="" ref="0x7fc6e0a26020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerSync" ref="0x7fc6e0a19dd0" loc="43:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7fc6e0a19dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7fc6e0a18180"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7fc6e0a18310"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fc6e0a184a0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fc6e0a18630"/>
        <function-ref name="countBusy" scoped="" ref="0x7fc6e0a187c0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fc6e0a18950"/>
        <function-ref name="getAssr" scoped="" ref="0x7fc6e0a18ae0"/>
        <function-ref name="setAssr" scoped="" ref="0x7fc6e0a18c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7fc6e0a1fa20" loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fc6e0a1fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fc6e0a194e0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e0a1a0d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0a1b6b0"/>
        <function-ref name="reset" scoped="" ref="0x7fc6e0a1a590"/>
        <function-ref name="isOn" scoped="" ref="0x7fc6e0a199a0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0a1bb70"/>
        <function-ref name="start" scoped="" ref="0x7fc6e0a1aa50"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e0a19020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc6e0a265d0" loc="40:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/Atm1280AlarmSyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm1280AlarmSyncC.Atm1280AlarmSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fc6e0a265d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fc6e0a229a0"/>
        <function-ref name="test" scoped="" ref="0x7fc6e0a22020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0a24240"/>
        <function-ref name="setScale" scoped="" ref="0x7fc6e0a22e60"/>
        <function-ref name="getScale" scoped="" ref="0x7fc6e0a213a0"/>
        <function-ref name="reset" scoped="" ref="0x7fc6e0a23110"/>
        <function-ref name="overflow" scoped="" ref="0x7fc6e0a24c10"/>
        <function-ref name="isOn" scoped="" ref="0x7fc6e0a224e0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0a24700"/>
        <function-ref name="start" scoped="" ref="0x7fc6e0a235d0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e0a23a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fc6e1936c10" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fc6e1936c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fc6e1935020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fc6e19351b0"/>
        <function-ref name="getControlA" scoped="" ref="0x7fc6e1935340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fc6e19354d0"/>
        <function-ref name="setControlB" scoped="" ref="0x7fc6e1935660"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fc6e19357f0"/>
        <function-ref name="getControlB" scoped="" ref="0x7fc6e1935980"/>
        <function-ref name="setControlA" scoped="" ref="0x7fc6e1935b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7fc6e1930570" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7fc6e1930570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7fc6e19308f0"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7fc6e1930a80"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fc6e1930c10"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fc6e1930da0"/>
        <function-ref name="countBusy" scoped="" ref="0x7fc6e192f020"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fc6e192f1b0"/>
        <function-ref name="getAssr" scoped="" ref="0x7fc6e192f340"/>
        <function-ref name="setAssr" scoped="" ref="0x7fc6e192f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc6e1934060" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fc6e1934060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fc6e1932a10"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e19336c0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1934c90"/>
        <function-ref name="reset" scoped="" ref="0x7fc6e1933b80"/>
        <function-ref name="isOn" scoped="" ref="0x7fc6e1930020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e19331b0"/>
        <function-ref name="start" scoped="" ref="0x7fc6e1932090"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1932550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc6e193d8f0" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncC.nc">
      <component-ref qname="HplAtm1280Timer2SyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fc6e193d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fc6e1938cd0"/>
        <function-ref name="test" scoped="" ref="0x7fc6e1938350"/>
        <function-ref name="get" scoped="" ref="0x7fc6e193a5a0"/>
        <function-ref name="setScale" scoped="" ref="0x7fc6e19361b0"/>
        <function-ref name="getScale" scoped="" ref="0x7fc6e19366c0"/>
        <function-ref name="reset" scoped="" ref="0x7fc6e19394e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fc6e1939020"/>
        <function-ref name="isOn" scoped="" ref="0x7fc6e1938810"/>
        <function-ref name="set" scoped="" ref="0x7fc6e193aa60"/>
        <function-ref name="start" scoped="" ref="0x7fc6e19399a0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1939e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fc6e1927db0" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fc6e1927db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fc6e1926180"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fc6e1926310"/>
        <function-ref name="getControlA" scoped="" ref="0x7fc6e19264a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fc6e1926630"/>
        <function-ref name="setControlB" scoped="" ref="0x7fc6e19267c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fc6e1926950"/>
        <function-ref name="getControlB" scoped="" ref="0x7fc6e1926ae0"/>
        <function-ref name="setControlA" scoped="" ref="0x7fc6e1926c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fc6e19214c0" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fc6e19214c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fc6e1921840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerSync" ref="0x7fc6e1921bf0" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerSync" scoped="" ref="0x7fc6e1921bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
      </instance>
      <interface-functions>
        <function-ref name="setTimer2Synchronous" scoped="" ref="0x7fc6e1920020"/>
        <function-ref name="compareBBusy" scoped="" ref="0x7fc6e19201b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fc6e1920340"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fc6e19204d0"/>
        <function-ref name="countBusy" scoped="" ref="0x7fc6e1920660"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fc6e19207f0"/>
        <function-ref name="getAssr" scoped="" ref="0x7fc6e1920980"/>
        <function-ref name="setAssr" scoped="" ref="0x7fc6e1920b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fc6e19251a0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fc6e19251a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fc6e1922b30"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e19247f0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1925dd0"/>
        <function-ref name="reset" scoped="" ref="0x7fc6e1924cb0"/>
        <function-ref name="isOn" scoped="" ref="0x7fc6e1921020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e19242e0"/>
        <function-ref name="start" scoped="" ref="0x7fc6e19221b0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1922670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc6e192ca10" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280Timer2SyncP.nc">
      <component-ref qname="HplAtm1280Timer2SyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fc6e192ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fc6e1928e60"/>
        <function-ref name="test" scoped="" ref="0x7fc6e19284e0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e192b6b0"/>
        <function-ref name="setScale" scoped="" ref="0x7fc6e1927350"/>
        <function-ref name="getScale" scoped="" ref="0x7fc6e1927860"/>
        <function-ref name="reset" scoped="" ref="0x7fc6e192a590"/>
        <function-ref name="overflow" scoped="" ref="0x7fc6e192a0d0"/>
        <function-ref name="isOn" scoped="" ref="0x7fc6e19289a0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e192bb70"/>
        <function-ref name="start" scoped="" ref="0x7fc6e192aa50"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1928020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fc6e188b020" loc="74:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7fc6e188b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e188b3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e188b530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fc6e1890cd0" loc="49:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fc6e1890cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e188c670"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e188e550"/>
        <function-ref name="startAt" scoped="" ref="0x7fc6e188c020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e188ea10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fc6e188cb30"/>
        <function-ref name="start" scoped="" ref="0x7fc6e188fb60"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e188e090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc6e1895830" loc="48:../tinyos_ws18/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fc6e1895830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e1891cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e1893300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e18910d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e1893c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e1890660"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e18901e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e1893780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e1894480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e18916e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e1894950"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1894e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fc6e183ba00" loc="71:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7fc6e183ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e183bd80"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e183a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fc6e1840640" loc="49:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7fc6e1840640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e183cc40"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e183d1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e183c020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e183dae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e183b590"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e183b110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e183d660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e183f390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e183c630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e183f860"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e183fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc6e1846150" loc="48:../tinyos_ws18/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fc6e1846150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e1842700"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e1845c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e1843a50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e18435b0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e1840090"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e1842ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e1843110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e1846d60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e18420d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e18452a0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1845790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fc6e1838790" loc="48:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fc6e1838790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc6e18373f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fc6e1837a60" loc="49:../tinyos_ws18/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fc6e1837a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fc6e182c890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fc6e182b260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fc6e182cd50"/>
        <function-ref name="overflow" scoped="" ref="0x7fc6e182b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc6e181fb00" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="ArpC.ClearCacheTimeoutC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fc6e181fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e181b110"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e181d5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e181c4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e181c020"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e181ba10"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e181b590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e181da30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e181e750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e181cab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e181ec20"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e181d130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcReceive" ref="0x7fc6e1817020" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="ArpC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcReceive" scoped="" ref="0x7fc6e1817020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e18173a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7fc6e1818700" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcC.nc">
      <component-ref qname="ArpC.LlcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7fc6e1818700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1818a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1818c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LlcSend" ref="0x7fc6e09c1380" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="ArpC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcSend" scoped="" ref="0x7fc6e09c1380"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e09c1700"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e09c1890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LlcQueue" ref="0x7fc6e09c1b20" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcP.nc">
      <component-ref qname="ArpC.LlcC.LlcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LlcQueue" scoped="" ref="0x7fc6e09c1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LlcQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e09c0020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e09c01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7fc6e1812360" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="ArpC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1812360"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7fc6e1aeb770"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7fc6e1ae9090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1811020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1811530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7fc6e18154a0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="ArpC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e18154a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7fc6e1aeb770"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7fc6e1ae9090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e18145e0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e18140d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1814ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7fc6e09b7dd0" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e09b7dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7fc6e1aeb770"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7fc6e1ae9090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e09b6a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e09b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7fc6e09b90b0" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e09b90b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><struct-ref ref="0x7fc6e1aeb770"/>
            <typename><typedef-ref name="arp_packet_t" ref="0x7fc6e1ae9090"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e09b7220"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e09b9ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e09b76f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7fc6e09b54e0" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="ArpC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7fc6e09b54e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e09b5860"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e09b59f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7fc6e1806d90" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="PingC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7fc6e1806d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e177b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7fc6e18065f0" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="PingC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7fc6e18065f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1806970"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1806b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7fc6e18009e0" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <component-ref qname="IcmpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e18009e0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7fc6e1802b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7fc6e1801230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e17f6670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e17f6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7fc6e17f5610" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverC.nc">
      <component-ref qname="IcmpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7fc6e17f5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e17f5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7fc6e17f2430" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="IcmpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7fc6e17f2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e17f27b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e17f2940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7fc6e17f2bd0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="IcmpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7fc6e17f2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e17c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7fc6e099c3f0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="IcmpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7fc6e099c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e099c770"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e099c900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpQueue" ref="0x7fc6e099cb90" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="IcmpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7fc6e099cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e099b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e099b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpQueue" ref="0x7fc6e17e1d60" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpQueueC.nc">
      <component-ref qname="IpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7fc6e17e1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e17de180"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e17de310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7fc6e17d9020" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e17d9020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7fc6e1bc27c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7fc6e1bc2d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e17d9c10"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e17d7170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7fc6e17db060" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e17db060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7fc6e1bc27c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7fc6e1bc2d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e17da1b0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e17dbc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e17da680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7fc6e0991770" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e0991770"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7fc6e1bc27c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7fc6e1bc2d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e0990390"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e09908a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7fc6e0994a00" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e0994a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7fc6e1bc27c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7fc6e1bc2d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e0993b80"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e0993670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e0991090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7fc6e0990d60" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7fc6e0990d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e098d180"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e098d310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpQueue" ref="0x7fc6e17d69f0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <component-ref qname="IpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7fc6e17d69f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e17d6d70"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e17d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7fc6e17d34e0" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpQueueP.nc">
      <component-ref qname="IpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e17d34e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref ref="0x7fc6e1bc27c0"/>
            <typename><typedef-ref name="ip_queue_item_t" ref="0x7fc6e1bc2d40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e17d2620"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e17d2110"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e17d2af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7fc6e17c1290" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e17c1290"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7fc6e1802b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7fc6e1801230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e17c1e80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e17c03b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpSend" ref="0x7fc6e17bf490" loc="13:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7fc6e17bf490"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e17bf810"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e17bf9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7fc6e17c0df0" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7fc6e17c0df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e17bf1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpReceive" ref="0x7fc6e17bfc90" loc="14:../tinyos_ws18/tos/lib_ecs/icmp/IcmpTransceiverP.nc">
      <component-ref qname="IcmpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7fc6e17bfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e17bd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpQueue" ref="0x7fc6e09a2dd0" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="PingC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7fc6e09a2dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e09a1180"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e09a1310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7fc6e09a2630" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="PingC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7fc6e09a2630"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e09a29b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e09a2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpQueue" ref="0x7fc6e1795410" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueC.nc">
      <component-ref qname="IcmpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7fc6e1795410"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1795790"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1795920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7fc6e17909d0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e17909d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7fc6e1802b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7fc6e1801230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e178f5f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e178fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7fc6e1793ae0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e1793ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7fc6e1802b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7fc6e1801230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1792c60"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e1792750"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1790170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7fc6e0976bd0" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e0976bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7fc6e1802b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7fc6e1801230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e0974860"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e0974d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7fc6e0978e30" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e0978e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7fc6e1802b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7fc6e1801230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e0976020"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e0977a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e09764f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7fc6e0973290" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="IcmpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7fc6e0973290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e0973610"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e09737a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpQueue" ref="0x7fc6e178b450" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <component-ref qname="IcmpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7fc6e178b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e178b7d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e178b960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7fc6e178be30" loc="13:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueueP.nc">
      <component-ref qname="IcmpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e178be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref ref="0x7fc6e1802b40"/>
            <typename><typedef-ref name="icmp_queue_item_t" ref="0x7fc6e1801230"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1788020"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e1789a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e17884f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpReceive" ref="0x7fc6e1778130" loc="9:../tinyos_ws18/tos/lib_ecs/ping/PingP.nc">
      <component-ref qname="PingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7fc6e1778130"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e17784b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpSend" ref="0x7fc6e17787a0" loc="10:../tinyos_ws18/tos/lib_ecs/ping/PingP.nc">
      <component-ref qname="PingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7fc6e17787a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1778b20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1778cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7fc6e176f220" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/GlcdC.nc">
      <component-ref qname="GlcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7fc6e176f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7fc6e176e340"/>
        <function-ref name="drawRect" scoped="" ref="0x7fc6e176f730"/>
        <function-ref name="drawLine" scoped="" ref="0x7fc6e176f8c0"/>
        <function-ref name="setPixel" scoped="" ref="0x7fc6e176fa50"/>
        <function-ref name="invertPixel" scoped="" ref="0x7fc6e176fbe0"/>
        <function-ref name="clearPixel" scoped="" ref="0x7fc6e176fd70"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7fc6e176e020"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7fc6e176f5a0"/>
        <function-ref name="drawText" scoped="" ref="0x7fc6e176e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e173c020" loc="44:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e173c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e173c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hpl" ref="0x7fc6e1735640" loc="45:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hpl" scoped="" ref="0x7fc6e1735640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7fc6e17359c0"/>
        <function-ref name="init" scoped="" ref="0x7fc6e1735b50"/>
        <function-ref name="dataRead" scoped="" ref="0x7fc6e1735ce0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7fc6e1735e70"/>
        <function-ref name="controlRead" scoped="" ref="0x7fc6e173b030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Glcd" ref="0x7fc6e173ebf0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/GlcdP.nc">
      <component-ref qname="GlcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7fc6e173ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7fc6e173dca0"/>
        <function-ref name="drawRect" scoped="" ref="0x7fc6e173d1b0"/>
        <function-ref name="drawLine" scoped="" ref="0x7fc6e173d340"/>
        <function-ref name="setPixel" scoped="" ref="0x7fc6e173d4d0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7fc6e173d660"/>
        <function-ref name="clearPixel" scoped="" ref="0x7fc6e173d7f0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7fc6e173d980"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7fc6e173d020"/>
        <function-ref name="drawText" scoped="" ref="0x7fc6e173db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7fc6e176d640" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108C.nc">
      <component-ref qname="HplKS0108C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7fc6e176d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7fc6e176d9c0"/>
        <function-ref name="init" scoped="" ref="0x7fc6e176db50"/>
        <function-ref name="dataRead" scoped="" ref="0x7fc6e176dce0"/>
        <function-ref name="controlWrite" scoped="" ref="0x7fc6e176de70"/>
        <function-ref name="controlRead" scoped="" ref="0x7fc6e16c6030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EN" ref="0x7fc6e16b8370" loc="29:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EN" scoped="" ref="0x7fc6e16b8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16b86f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e16b8880"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16b8a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e16b8ba0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16b8d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e16b7020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16b71b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e16b7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fc6e16ab910" loc="34:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fc6e16ab910"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0c5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc6e1e0c930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fc6e16ae780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_0" ref="0x7fc6e16bc7b0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_0" scoped="" ref="0x7fc6e16bc7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16bcb30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e16bccc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16bce50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e16c2020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16c21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e16c2340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16c24d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e16c2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RST" ref="0x7fc6e16b7690" loc="30:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RST" scoped="" ref="0x7fc6e16b7690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16b7a10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e16b7ba0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16b7d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e16b6020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16b61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e16b6340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16b64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e16b6660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RS" ref="0x7fc6e16c1cd0" loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RS" scoped="" ref="0x7fc6e16c1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16bb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e16bb230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16bb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e16bb550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16bb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e16bb870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16bba00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e16bbb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CS_1" ref="0x7fc6e16c29c0" loc="26:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CS_1" scoped="" ref="0x7fc6e16c29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16c2d40"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e16c1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16c11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e16c1340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16c14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e16c1660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16c17f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e16c1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplKS0108" ref="0x7fc6e16c6be0" loc="23:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplKS0108" scoped="" ref="0x7fc6e16c6be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplKS0108"/>
      </instance>
      <interface-functions>
        <function-ref name="dataWrite" scoped="" ref="0x7fc6e16c3020"/>
        <function-ref name="init" scoped="" ref="0x7fc6e16c31b0"/>
        <function-ref name="dataRead" scoped="" ref="0x7fc6e16c3340"/>
        <function-ref name="controlWrite" scoped="" ref="0x7fc6e16c34d0"/>
        <function-ref name="controlRead" scoped="" ref="0x7fc6e16c3660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RW" ref="0x7fc6e16b9020" loc="28:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RW" scoped="" ref="0x7fc6e16b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16b93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e16b9530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16b96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e16b9850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16b99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e16b9b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16b9d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e16b8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Data" ref="0x7fc6e16b5060" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108P.nc">
      <component-ref qname="HplKS0108P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Data" scoped="" ref="0x7fc6e16b5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16b53e0"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e16b5570"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16b5700"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e16b5890"/>
        <function-ref name="read" scoped="" ref="0x7fc6e16b5a20"/>
        <function-ref name="write" scoped="" ref="0x7fc6e16b5bb0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16b5d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fc6e1648020" loc="98:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fc6e1648020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16487a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1648930"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1648ac0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1648c50"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1648de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1647020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16471b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1647340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fc6e1665800" loc="72:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fc6e1665800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1665b80"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1665d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1664020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e16641b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1664340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e16644d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1664660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e16647f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fc6e1658670" loc="83:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fc6e1658670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16589f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1658b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1658d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1657020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16571b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1657340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16574d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1657660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fc6e164e020" loc="92:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fc6e164e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e164e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e164e530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e164e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e164e850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e164e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e164eb70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e164ed00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e164d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7fc6e1642350" loc="103:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7fc6e1642350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16426d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1642860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16429f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1642b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1642d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1640020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16401b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1640340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fc6e167d990" loc="50:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fc6e167d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e167dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e167c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e167c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e167c340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e167c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e167c660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e167c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e167c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fc6e1651990" loc="90:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fc6e1651990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1651d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1650020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16501b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1650340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16504d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1650660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16507f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1650980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fc6e1679020" loc="53:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fc6e1679020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16793a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1679530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16796c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1679850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16799e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1679b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1679d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1678020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fc6e166d020" loc="64:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fc6e166d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e166d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e166d530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e166d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e166d850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e166d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e166db70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e166dd00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e166c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fc6e1661060" loc="75:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fc6e1661060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16613e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1661570"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1661700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1661890"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1661a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1661bb0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1661d40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1660020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fc6e1654020" loc="86:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fc6e1654020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16543a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1654530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16546c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1654850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16549e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1654b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1654d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1653020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fc6e1683b20" loc="45:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fc6e1683b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1682020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e16821b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1682340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e16824d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1682660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e16827f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1682980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1682b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fc6e1676990" loc="56:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fc6e1676990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1676d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1675020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16751b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1675340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16754d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1675660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16757f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1675980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fc6e166a990" loc="67:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fc6e166a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e166ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1669020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16691b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1669340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16694d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1669660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16697f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1669980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fc6e165d990" loc="78:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fc6e165d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e165dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e165c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e165c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e165c340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e165c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e165c660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e165c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e165c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fc6e164b990" loc="95:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fc6e164b990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e164bd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e164a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e164a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e164a340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e164a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e164a660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e164a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e164a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fc6e1645cb0" loc="101:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fc6e1645cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16440a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1644230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16443c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1644550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16446e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1644870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1644a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1644b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fc6e165a020" loc="81:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fc6e165a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e165a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e165a530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e165a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e165a850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e165a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e165ab70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e165ad00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1659020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fc6e167f350" loc="48:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fc6e167f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e167f6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e167f860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e167f9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e167fb80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e167fd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e167e020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e167e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e167e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fc6e1672350" loc="59:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fc6e1672350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16726d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1672860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16729f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1672b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1672d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1671020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16711b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1671340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fc6e1647670" loc="99:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fc6e1647670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16479f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1647b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1647d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1646020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16461b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1646340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16464d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1646660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fc6e1670990" loc="62:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fc6e1670990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1670d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e166f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e166f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e166f340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e166f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e166f660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e166f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e166f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fc6e1664b20" loc="73:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fc6e1664b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1663020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e16631b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1663340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e16634d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1663660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e16637f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1663980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1663b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fc6e1657990" loc="84:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fc6e1657990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1657d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1656020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1656340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1656660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16567f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1656980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fc6e164d350" loc="93:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fc6e164d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e164d6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e164d860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e164d9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e164db80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e164dd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e164c020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e164c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e164c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fc6e167ccb0" loc="51:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fc6e167ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e167a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e167a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e167a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e167a550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e167a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e167a870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e167aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e167ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fc6e1678350" loc="54:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fc6e1678350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16786d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1678860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16789f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1678b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1678d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1677020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16771b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1677340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fc6e166c350" loc="65:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fc6e166c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e166c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e166c860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e166c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e166cb80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e166cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e166b020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e166b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e166b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fc6e1660350" loc="76:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fc6e1660350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16606d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1660860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16609f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1660b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1660d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e165f020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e165f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e165f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fc6e1653350" loc="87:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fc6e1653350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16536d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1653860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16539f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1653b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1653d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1652020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16521b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1652340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fc6e1682e40" loc="46:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fc6e1682e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16811e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1681370"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1681500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1681690"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1681820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e16819b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1681b40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1681cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fc6e1675cb0" loc="57:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fc6e1675cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1674180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1674310"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16744a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1674630"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16747c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1674950"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1674ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1674c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fc6e1669cb0" loc="68:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fc6e1669cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16680a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1668230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16683c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1668550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16686e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1668870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1668a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1668b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fc6e164acb0" loc="96:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fc6e164acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16490a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1649230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16493c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1649550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16496e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1649870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1649a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1649b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fc6e1666350" loc="71:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fc6e1666350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16668d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1666a60"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1666bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1666d80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1665020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e16651b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1665340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e16654d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fc6e1659350" loc="82:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fc6e1659350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16596d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1659860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16599f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1659b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1659d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1658020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16581b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1658340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fc6e1650cb0" loc="91:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fc6e1650cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e164f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e164f230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e164f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e164f550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e164f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e164f870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e164fa00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e164fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fc6e1643020" loc="102:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fc6e1643020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16433a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1643530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16436c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1643850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16439e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1643b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1643d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1642020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fc6e167e670" loc="49:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fc6e167e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e167e9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e167eb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e167ed10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e167d020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e167d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e167d340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e167d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e167d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fc6e1671670" loc="60:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fc6e1671670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16719f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1671b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1671d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1670020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16701b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1670340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16704d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1670660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fc6e1652670" loc="89:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fc6e1652670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16529f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1652b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1652d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1651020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16511b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1651340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16514d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1651660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fc6e166fcb0" loc="63:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fc6e166fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e166e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e166e230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e166e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e166e550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e166e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e166e870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e166ea00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e166eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fc6e1663e40" loc="74:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fc6e1663e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16621e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1662370"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1662500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1662690"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1662820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e16629b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1662b40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1662cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fc6e1656cb0" loc="85:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fc6e1656cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16550a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1655230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16553c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1655550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16556e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1655870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1655a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1655b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fc6e164c670" loc="94:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fc6e164c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e164c9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e164cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e164cd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e164b020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e164b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e164b340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e164b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e164b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fc6e1686860" loc="44:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fc6e1686860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1686be0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1686d70"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1683020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e16831b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1683340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e16834d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1683660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e16837f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fc6e1677670" loc="55:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fc6e1677670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16779f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1677b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1677d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1676020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16761b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1676340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16764d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1676660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fc6e166b670" loc="66:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fc6e166b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e166b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e166bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e166bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e166a020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e166a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e166a340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e166a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e166a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fc6e165f670" loc="77:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fc6e165f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e165f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e165fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e165fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e165d020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e165d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e165d340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e165d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e165d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fc6e1646990" loc="100:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fc6e1646990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1646d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1645020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16451b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1645340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16454d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1645660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e16457f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1645980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fc6e165ccb0" loc="80:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fc6e165ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e165b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e165b230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e165b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e165b550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e165b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e165b870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e165ba00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e165bb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fc6e1667020" loc="69:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fc6e1667020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16673a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1667530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16676c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1667850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16679e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1667b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1667d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1666020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fc6e1680060" loc="47:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fc6e1680060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16803e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1680570"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1680700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1680890"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1680a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1680bb0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1680d40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e167f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fc6e1673020" loc="58:../tinyos_ws18/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fc6e1673020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e16733a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1673530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e16736c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1673850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e16739e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1673b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1673d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1672020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fc6e15f5440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fc6e15f5440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15f57c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15f5950"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15f5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15f5c70"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15f5e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15f3020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15f31b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15f3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fc6e15f18f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fc6e15f18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15f1c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15f1e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15f0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15f01b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15f0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15f04d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15f0660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15f07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fc6e15f7140" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fc6e15f7140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15f74c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15f7650"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15f77e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15f7970"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15f7b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15f7c90"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15f7e20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fc6e15f35d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fc6e15f35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15f3950"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15f3ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15f3c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15f3e00"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15f2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15f21b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15f2340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15f24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fc6e15f0a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fc6e15f0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15f0e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15ef020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15ef1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15ef340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15ef4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15ef660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15ef7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15ef980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fc6e15f62b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fc6e15f62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15f6630"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15f67c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15f6950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15f6ae0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15f6c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15f6e00"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15f5020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15f51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fc6e15f2760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fc6e15f2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15f2ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15f2c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15f2e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15f1020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15f11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15f1340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15f14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fc6e15efc10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fc6e15efc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15ee020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15ee1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15ee340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15ee4d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15ee660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15ee7f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15ee980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15eeb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e09326d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e09326d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0932a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0932be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0932d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0931020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e09311b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0931340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e09314d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0931660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e092f9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e092f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e092fd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e092e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e092e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e092e340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e092e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e092e660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e092e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e092e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e092ce20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e092ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e092b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e092b350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e092b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e092b670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e092b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e092b990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e092bb20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e092bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e091f0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e091f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e091f420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e091f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e091f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e091f8d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e091fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e091fbf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e091fd80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e091e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e091c3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e091c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e091c770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e091c900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e091ca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e091cc20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e091cdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e091b020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e091b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e091b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e09196d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e09196d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0919a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0919be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0919d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0918020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e09181b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0918340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e09184d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0918660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e09169b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e09169b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0916d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0914020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e09141b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0914340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e09144d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0914660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e09147f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0914980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0912e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0912e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e09111c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0911350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e09114e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0911670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0911800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0911990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0911b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0911cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fc6e15e5760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fc6e15e5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15e5ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15e5c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15e5e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15e4020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15e41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15e4340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15e44d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fc6e15e2c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fc6e15e2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15e1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15e11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15e1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15e14d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15e1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15e17f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15e1980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15e1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fc6e15e73f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fc6e15e73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15e7770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15e7900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15e7a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15e7c20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15e7db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15e6020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15e61b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15e6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fc6e15e48f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fc6e15e48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15e4c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15e4e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15e3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15e31b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15e3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15e34d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15e3660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15e37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fc6e15e1da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fc6e15e1da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15e0180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15e0310"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15e04a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15e0630"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15e07c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15e0950"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15e0ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15e0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fc6e15e65d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fc6e15e65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15e6950"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15e6ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15e6c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15e6e00"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15e5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15e51b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15e5340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15e54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fc6e15e3a80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fc6e15e3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15e3e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15e2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15e21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15e2340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15e24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15e2660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15e27f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15e2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fc6e15df020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fc6e15df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15df3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15df530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15df6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15df850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15df9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15dfb70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15dfd00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e08bea60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e08bea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e08bede0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e08bd020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e08bd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e08bd340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e08bd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e08bd660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e08bd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e08bd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e08bbe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e08bbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e08ba1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e08ba350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e08ba4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e08ba670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e08ba800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e08ba990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e08bab20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e08bacb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e08b70a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e08b70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e08b7420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e08b75b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e08b7740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e08b78d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e08b7a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e08b7bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e08b7d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e08b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e08b43f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e08b43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e08b4770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e08b4900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e08b4a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e08b4c20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e08b4db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e08b3020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e08b31b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e08b3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e08b16d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e08b16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e08b1a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e08b1be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e08b1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e08b0020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e08b01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e08b0340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e08b04d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e08b0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e08ae9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e08ae9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e08aed30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e08ad020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e08ad1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e08ad340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e08ad4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e08ad660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e08ad7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e08ad980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e08abe20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e08abe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e08a91c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e08a9350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e08a94e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e08a9670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e08a9800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e08a9990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e08a9b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e08a9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e08a60a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e08a60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e08a6420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e08a65b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e08a6740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e08a68d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e08a6a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e08a6bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e08a6d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e08a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fc6e15d6a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fc6e15d6a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15d6e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15d5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15d51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15d5340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15d54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15d5660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15d57f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15d5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fc6e15d2020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fc6e15d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15d23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15d2530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15d26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15d2850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15d29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15d2b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15d2d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fc6e15d87a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fc6e15d87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15d8b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15d8cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15d8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15d7020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15d71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15d7340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15d74d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15d7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fc6e15d5c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fc6e15d5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15d4020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15d41b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15d4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15d44d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15d4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15d47f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15d4980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15d4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fc6e15d12b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fc6e15d12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15d1630"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15d17c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15d1950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15d1ae0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15d1c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15d1e00"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15d0020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15d01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fc6e15d78f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fc6e15d78f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15d7c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15d7e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15d6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15d61b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15d6340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15d64d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15d6660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15d67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fc6e15d4da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fc6e15d4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15d3180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15d3310"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15d34a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15d3630"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15d37c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15d3950"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15d3ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15d3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fc6e15d0440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fc6e15d0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15d07c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15d0950"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15d0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15d0c70"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15d0e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15cf020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15cf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15cf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0853c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0853c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e08520a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0852230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e08523c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0852550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e08526e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0852870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0852a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0852b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0850e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0850e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e084f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e084f350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e084f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e084f670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e084f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e084f990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e084fb20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e084fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e084c0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e084c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e084c420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e084c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e084c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e084c8d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e084ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e084cbf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e084cd80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e084b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e08493f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e08493f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0849770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0849900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0849a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0849c20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0849db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0848020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e08481b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0848340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e08466d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e08466d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0846a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0846be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0846d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0845020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e08451b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0845340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e08454d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0845660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e08439b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e08439b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0843d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0842020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e08421b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0842340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e08424d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0842660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e08427f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0842980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0840e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0840e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e083f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e083f350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e083f4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e083f670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e083f800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e083f990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e083fb20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e083fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e083c0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e083c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e083c420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e083c5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e083c740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e083c8d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e083ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e083cbf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e083cd80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e083a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fc6e15c7da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fc6e15c7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15c6180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15c6310"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15c64a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15c6630"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15c67c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15c6950"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15c6ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15c6c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fc6e15c3440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fc6e15c3440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15c37c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15c3950"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15c3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15c3c70"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15c3e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15c1020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15c11b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15c1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fc6e15c9a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fc6e15c9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15c9da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15c8020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15c81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15c8340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15c84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15c8660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15c87f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15c8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fc6e15c5020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fc6e15c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15c53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15c5530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15c56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15c5850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15c59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15c5b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15c5d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fc6e15c15d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fc6e15c15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15c1950"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15c1ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15c1c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15c1e00"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15c0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15c01b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15c0340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15c04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fc6e15c8c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fc6e15c8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15c7020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15c71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15c7340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15c74d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15c7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15c77f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15c7980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15c7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fc6e15c42b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fc6e15c42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15c4630"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15c47c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15c4950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15c4ae0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15c4c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15c4e00"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15c3020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fc6e15c0760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fc6e15c0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15c0ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15c0c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15c0e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15bf020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15bf1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15bf340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15bf4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15bf660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07e8c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07e8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e07e70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e07e7230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e07e73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e07e7550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e07e76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e07e7870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e07e7a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e07e7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07e5e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07e5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e07e41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e07e4350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e07e44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e07e4670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e07e4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e07e4990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e07e4b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e07e4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07e10a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07e10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e07e1420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e07e15b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e07e1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e07e18d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e07e1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e07e1bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e07e1d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e07e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07de3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07de3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e07de770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e07de900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e07dea90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e07dec20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e07dedb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e07dd020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e07dd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e07dd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07db6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07db6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e07dba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e07dbbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e07dbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e07da020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e07da1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e07da340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e07da4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e07da660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07d89b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07d89b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e07d8d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e07d7020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e07d71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e07d7340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e07d74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e07d7660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e07d77f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e07d7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07d5e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07d5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e07d41c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e07d4350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e07d44e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e07d4670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e07d4800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e07d4990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e07d4b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e07d4cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07d10a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07d10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e07d1420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e07d15b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e07d1740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e07d18d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e07d1a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e07d1bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e07d1d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e07cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fc6e15b7020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fc6e15b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15b73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15b7530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15b76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15b7850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15b79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15b7b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15b7d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fc6e15b35d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fc6e15b35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15b3950"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15b3ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15b3c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15b3e00"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15b2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15b21b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15b2340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15b24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fc6e15bad30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fc6e15bad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15b90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15b9270"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15b9400"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15b9590"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15b9720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15b98b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15b9a40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15b9bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fc6e15b52b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fc6e15b52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15b5630"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15b57c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15b5950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15b5ae0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15b5c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15b5e00"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15b4020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15b41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fc6e15b2760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fc6e15b2760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15b2ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15b2c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15b2e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15b1020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15b11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15b1340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15b14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15b1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fc6e15b9e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fc6e15b9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15b8210"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15b83a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15b8530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15b86c0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15b8850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15b89e0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15b8b70"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15b8d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fc6e15b4440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fc6e15b4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15b47c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15b4950"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15b4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15b4c70"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15b4e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15b3020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15b31b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15b3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fc6e15b18f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fc6e15b18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15b1c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15b1e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15b0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15b01b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15b0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15b04d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15b0660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e077dc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e077dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e077c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e077c230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e077c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e077c550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e077c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e077c870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e077ca00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e077cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e077ae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e077ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e07791c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0779350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e07794e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0779670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0779800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0779990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0779b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0779cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07760a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07760a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0776420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e07765b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0776740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e07768d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0776a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0776bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0776d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0775020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07733f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07733f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0773770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0773900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0773a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0773c20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0773db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0772020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e07721b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0772340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07706d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07706d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0770a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0770be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0770d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e076f020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e076f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e076f340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e076f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e076f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e076d9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e076d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e076dd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e076c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e076c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e076c340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e076c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e076c660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e076c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e076c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e076ae20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e076ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e07691c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0769350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e07694e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0769670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0769800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0769990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0769b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0769cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07660a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07660a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0766420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e07665b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0766740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e07668d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0766a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0766bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0766d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0765020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fc6e15a7440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fc6e15a7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15a77c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15a7950"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15a7ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15a7c70"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15a7e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15a6020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15a61b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15a6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fc6e15a48f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fc6e15a48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15a4c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15a4e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15a3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15a31b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15a3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15a34d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15a3660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15a37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fc6e15a9020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fc6e15a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15a93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15a9530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15a96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15a9850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15a99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15a9b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15a9d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fc6e15a65d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fc6e15a65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15a6950"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15a6ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15a6c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15a6e00"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15a5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15a51b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15a5340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15a54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fc6e15a3a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fc6e15a3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15a3e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15a2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15a21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15a2340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15a24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15a2660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15a27f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15a2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fc6e15a82b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fc6e15a82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15a8630"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15a87c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15a8950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15a8ae0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15a8c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15a8e00"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15a7020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fc6e15a5760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fc6e15a5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15a5ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15a5c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15a5e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15a4020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15a41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15a4340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15a44d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15a4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fc6e15a2c10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fc6e15a2c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15a1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e15a11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15a1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e15a14d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15a1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15a17f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15a1980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15a1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e070fc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e070fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e070e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e070e230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e070e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e070e550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e070e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e070e870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e070ea00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e070eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e070ce20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e070ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e070b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e070b350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e070b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e070b670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e070b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e070b990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e070bb20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e070bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07080a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07080a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0708420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e07085b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0708740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e07088d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0708a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0708bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0708d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0707020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07053f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07053f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0705770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0705900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0705a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0705c20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0705db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0704020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e07041b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0704340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e07026d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e07026d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0702a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0702be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0702d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0701020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e07011b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0701340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e07014d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0701660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e06ff9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e06ff9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e06ffd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e06fe020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e06fe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e06fe340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e06fe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e06fe660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e06fe7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e06fe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e06fce20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e06fce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e06fb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e06fb350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e06fb4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e06fb670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e06fb800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e06fb990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e06fbb20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e06fbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e06f80a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e06f80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e06f8420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e06f85b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e06f8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e06f88d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e06f8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e06f8bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e06f8d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e06f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e1599260" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e1599260"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15995e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1599770"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1599900"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1599a90"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1599c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1599db0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1582020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15821b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e157fd00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e157fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e157e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e157e230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e157e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e157e550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e157e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e157e870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e157ea00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e157eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e15796d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e15796d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1579a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1579be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1579d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1578020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15781b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1578340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15784d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1578660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e1574160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e1574160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15744e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1574670"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1574800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1574990"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1574b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1574cb0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1574e40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1572020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e156fc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e156fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e156e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e156e230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e156e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e156e550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e156e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e156e870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e156ea00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e156eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e15696d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e15696d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1569a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1569be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1569d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1568020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15681b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1568340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15684d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1568660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e1564270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e1564270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15645f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1564780"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1564910"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1564aa0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1564c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1564dc0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1563020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e15631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e155fd00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e155fd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e155e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e155e230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e155e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e155e550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e155e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e155e870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e155ea00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e155eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e15596d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e15596d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1559a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1559be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1559d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1558020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15581b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1558340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15584d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1558660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e1554160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e1554160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15544e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1554670"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1554800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1554990"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1554b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1554cb0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1554e40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1553020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e154fc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e154fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e154e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e154e230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e154e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e154e550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e154e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e154e870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e154ea00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e154eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e15496d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e15496d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1549a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1549be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1549d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1548020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e15481b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1548340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e15484d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1548660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e1544160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e1544160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15444e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1544670"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1544800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1544990"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1544b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1544cb0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1544e40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e1543020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e153fc90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e153fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e153e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e153e230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e153e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e153e550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e153e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e153e870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e153ea00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e153eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA" ref="0x7fc6e1510c40" loc="7:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA" scoped="" ref="0x7fc6e1510c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1504020"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e15041b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1504340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15044d0"/>
        <function-ref name="read" scoped="" ref="0x7fc6e1504660"/>
        <function-ref name="write" scoped="" ref="0x7fc6e15047f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1504980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL" ref="0x7fc6e14f9870" loc="18:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL" scoped="" ref="0x7fc6e14f9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14f9bf0"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14f9d80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14f8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14f81b0"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14f8340"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14f84d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14f8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD" ref="0x7fc6e1502e80" loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD" scoped="" ref="0x7fc6e1502e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1501220"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e15013b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1501540"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e15016d0"/>
        <function-ref name="read" scoped="" ref="0x7fc6e1501860"/>
        <function-ref name="write" scoped="" ref="0x7fc6e15019f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1501b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG" ref="0x7fc6e14fe1d0" loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG" scoped="" ref="0x7fc6e14fe1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14fe550"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14fe6e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14fe870"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14fea00"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14feb90"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14fed20"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ" ref="0x7fc6e14fc550" loc="16:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ" scoped="" ref="0x7fc6e14fc550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14fc8d0"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14fca60"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14fcbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14fcd80"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14fb020"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14fb1b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14fb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB" ref="0x7fc6e1504d20" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB" scoped="" ref="0x7fc6e1504d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15030e0"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e1503270"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1503400"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1503590"/>
        <function-ref name="read" scoped="" ref="0x7fc6e1503720"/>
        <function-ref name="write" scoped="" ref="0x7fc6e15038b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1503a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE" ref="0x7fc6e1500020" loc="11:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE" scoped="" ref="0x7fc6e1500020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e15003a0"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e1500530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15006c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1500850"/>
        <function-ref name="read" scoped="" ref="0x7fc6e15009e0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e1500b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1500d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH" ref="0x7fc6e14fd3c0" loc="15:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH" scoped="" ref="0x7fc6e14fd3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14fd740"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14fd8d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14fda60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14fdbf0"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14fdd80"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14fc020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK" ref="0x7fc6e14fb6e0" loc="17:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK" scoped="" ref="0x7fc6e14fb6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14fba60"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14fbbf0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14fbd80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14f9020"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14f91b0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14f9340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14f94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC" ref="0x7fc6e1503de0" loc="9:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC" scoped="" ref="0x7fc6e1503de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1502180"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e1502310"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e15024a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e1502630"/>
        <function-ref name="read" scoped="" ref="0x7fc6e15027c0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e1502950"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1502ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF" ref="0x7fc6e14ff100" loc="12:../tinyos_ws18/tos/chips_ecs/atm1280/HplAtm128GeneralIOFastPortC.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF" scoped="" ref="0x7fc6e14ff100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14ff480"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14ff610"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14ff7a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14ff930"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14ffac0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14ffc50"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14ffde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fc6e14f5c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortAP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14f5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14f40a0"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14f4230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14f43c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14f4550"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14f46e0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14f4870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14f4a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fc6e14dc390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortBP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14dc390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14dc710"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14dc8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14dca30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14dcbc0"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14dcd50"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14db020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14db1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fc6e14d7910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14d7910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14d7c90"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14d7e20"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14d6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14d61b0"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14d6340"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14d64d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14d6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fc6e14d2cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortDP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14d2cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14d10a0"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14d1230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14d13c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14d1550"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14d16e0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14d1870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14d1a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fc6e14cd390" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortEP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14cd390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14cd710"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14cd8a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14cda30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14cdbc0"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14cdd50"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14cc020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14cc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fc6e14c8910" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortFP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14c8910"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14c8c90"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14c8e20"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14c7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14c71b0"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14c7340"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14c74d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14c7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fc6e14c3cd0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortGP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14c3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14c20a0"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14c2230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14c23c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14c2550"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14c26e0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14c2870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14c2a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fc6e14bfc90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortHP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14bfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14be0a0"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14be230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14be3c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14be550"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14be6e0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14be870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14bea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fc6e14bac90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortJP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14bac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14b90a0"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14b9230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14b93c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14b9550"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14b96e0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14b9870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14b9a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fc6e14b5c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortKP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14b5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14b40a0"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14b4230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14b43c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14b4550"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14b46e0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14b4870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14b4a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIOPort" ref="0x7fc6e14b1c90" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/HplAtm128GeneralIOFastPortP.nc">
      <component-ref qname="HplAtm128GeneralIOFastPortC.PortLP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIOPort" scoped="" ref="0x7fc6e14b1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e14b00a0"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e14b0230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e14b03c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e14b0550"/>
        <function-ref name="read" scoped="" ref="0x7fc6e14b06e0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e14b0870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e14b0a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fc6e14a52e0" loc="40:../tinyos_ws18/tos/platforms/bigAVR6_1280/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fc6e14a52e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0c5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc6e1e0c930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fc6e14a3110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc6e1498330" loc="9:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fc6e1498330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc6e14986b0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc6e1498840"/>
        <function-ref name="start" scoped="" ref="0x7fc6e14989d0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1498b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Enc28j60Control" ref="0x7fc6e1462ba0" loc="10:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Enc28j60Control" scoped="" ref="0x7fc6e1462ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Enc28j60Control"/>
      </instance>
      <interface-functions>
        <function-ref name="linkChange" scoped="" ref="0x7fc6e1495020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mac" ref="0x7fc6e17706f0" loc="8:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60C.nc">
      <component-ref qname="Enc28j60C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7fc6e17706f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1770a70"/>
        <function-ref name="received" scoped="" ref="0x7fc6e1770c00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1770d90"/>
        <function-ref name="getMac" scoped="" ref="0x7fc6e1498020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="intPin" ref="0x7fc6e145ecf0" loc="13:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="intPin" scoped="" ref="0x7fc6e145ecf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e145d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e145d230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e145d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e145d550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e145d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e145d870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e145da00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e145db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fc6e145acf0" loc="17:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7fc6e145acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fc6e14550a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fc6e1455230"/>
        <function-ref name="start" scoped="" ref="0x7fc6e14553c0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1455550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Enc28j60Control" ref="0x7fc6e1455880" loc="18:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Enc28j60Control" scoped="" ref="0x7fc6e1455880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Enc28j60Control"/>
      </instance>
      <interface-functions>
        <function-ref name="linkChange" scoped="" ref="0x7fc6e1455c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fc6e1454430" loc="15:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fc6e1454430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fc6e14547b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mac" ref="0x7fc6e1495b00" loc="10:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mac" scoped="" ref="0x7fc6e1495b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mac"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1495e80"/>
        <function-ref name="received" scoped="" ref="0x7fc6e1460030"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e14601c0"/>
        <function-ref name="getMac" scoped="" ref="0x7fc6e1460350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ssETH" ref="0x7fc6e14606c0" loc="11:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ssETH" scoped="" ref="0x7fc6e14606c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1460a40"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1460bd0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1460d60"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e145f020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e145f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e145f340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e145f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e145f660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="rstETH" ref="0x7fc6e145f9d0" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="rstETH" scoped="" ref="0x7fc6e145f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e145fd50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e145e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e145e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e145e340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e145e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e145e660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e145e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e145e980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="intETH" ref="0x7fc6e1456620" loc="14:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="intETH" scoped="" ref="0x7fc6e1456620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e14569a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e1456b30"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e1456cc0"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e1456e50"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e145b020"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e145b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="checkInterruptflag" ref="0x7fc6e141e5d0" loc="179:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="checkInterruptflag" scoped="" ref="0x7fc6e141e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e141e950"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e141eae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fc6e145a020" loc="16:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60P.nc">
      <component-ref qname="Enc28j60P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e145a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e145a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e145a530"/>
        <function-ref name="request" scoped="" ref="0x7fc6e145a6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e145a850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e145a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fc6e13dee60" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fc6e13dee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e13e8210"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e13e83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fc6e13e9b00" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fc6e13e9b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fc6e13e9e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e13ef300" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e13ef300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e13ef680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fc6e13e5400" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fc6e13e5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fc6e13e5780"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fc6e13e5910"/>
        <function-ref name="splitRead" scoped="" ref="0x7fc6e13e5aa0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e13e5c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc6e13e8bd0" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e13e8bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e13e4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e13e41b0"/>
        <function-ref name="request" scoped="" ref="0x7fc6e13e4340"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e13e44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e13e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiControl" ref="0x7fc6e13e94a0" loc="84:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiC.nc">
      <component-ref qname="Atm1280SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiControl" scoped="" ref="0x7fc6e13e94a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setClock" scoped="" ref="0x7fc6e13e9820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fc6e13b8510" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fc6e13b8510"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fc6e13b8890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7fc6e1394de0" loc="277:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7fc6e1394de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e1392180"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e1392310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fc6e13d95f0" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7fc6e13d95f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e13d9970"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e13d9b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7fc6e13ba740" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7fc6e13ba740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e13baac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e13bac50"/>
        <function-ref name="request" scoped="" ref="0x7fc6e13bade0"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e13b9020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e13b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fc6e13da340" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7fc6e13da340"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fc6e13da6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e13db670" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e13db670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e13db9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7fc6e13bb340" loc="102:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7fc6e13bb340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fc6e13bb6c0"/>
        <function-ref name="sleep" scoped="" ref="0x7fc6e13d4ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fc6e13bb9e0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fc6e13d4e30"/>
        <function-ref name="initMaster" scoped="" ref="0x7fc6e13bbd00"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fc6e13d5020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fc6e13d51b0"/>
        <function-ref name="read" scoped="" ref="0x7fc6e13d5340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fc6e13d54d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fc6e13d5660"/>
        <function-ref name="setClock" scoped="" ref="0x7fc6e13d57f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc6e13d5980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fc6e13d5b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fc6e13d5da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fc6e13d4020"/>
        <function-ref name="write" scoped="" ref="0x7fc6e13d41b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc6e13d4340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fc6e13d44d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fc6e13d4660"/>
        <function-ref name="getClock" scoped="" ref="0x7fc6e13d47f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fc6e13d4980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fc6e13bb850"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fc6e13bbb70"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fc6e13d4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fc6e13da980" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7fc6e13da980"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fc6e13dad00"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fc6e13d9020"/>
        <function-ref name="splitRead" scoped="" ref="0x7fc6e13d91b0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e13d9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc6e13d8320" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e13d8320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e13d86a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e13d8830"/>
        <function-ref name="request" scoped="" ref="0x7fc6e13d89c0"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e13d8b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e13d8ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fc6e13b6cd0" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e13b6cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc6e13b80a0"/>
        <function-ref name="userId" scoped="" ref="0x7fc6e13b8230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiControl" ref="0x7fc6e13dbcb0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/spi/Atm1280SpiP.nc">
      <component-ref qname="Atm1280SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiControl" scoped="" ref="0x7fc6e13dbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setClock" scoped="" ref="0x7fc6e13da0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7fc6e1366100" loc="76:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7fc6e1366100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fc6e1366480"/>
        <function-ref name="sleep" scoped="" ref="0x7fc6e1364980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fc6e13667a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fc6e1364b10"/>
        <function-ref name="initMaster" scoped="" ref="0x7fc6e1366ac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fc6e1366c50"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fc6e1366de0"/>
        <function-ref name="read" scoped="" ref="0x7fc6e1365020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fc6e13651b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fc6e1365340"/>
        <function-ref name="setClock" scoped="" ref="0x7fc6e13654d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc6e1365660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fc6e13657f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fc6e1365a80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fc6e1365c10"/>
        <function-ref name="write" scoped="" ref="0x7fc6e1365da0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc6e1364020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fc6e13641b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fc6e1364340"/>
        <function-ref name="getClock" scoped="" ref="0x7fc6e13644d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fc6e1364660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fc6e1366610"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fc6e1366930"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fc6e13647f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7fc6e13587f0" loc="81:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7fc6e13587f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1358b70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e1358d00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1357020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e13571b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1357340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e13574d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1357660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e13577f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7fc6e135b330" loc="79:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7fc6e135b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e135b6b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e135b840"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e135b9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e135bb60"/>
        <function-ref name="get" scoped="" ref="0x7fc6e135bcf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e135be80"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1359030"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e13591c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7fc6e135c020" loc="78:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7fc6e135c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e135c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e135c530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e135c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e135c850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e135c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e135cb70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e135cd00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e135b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fc6e135a770" loc="75:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc6e135a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc6e135aaf0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e135ac80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7fc6e1357b30" loc="82:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7fc6e1357b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fc6e1356020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7fc6e1360060" loc="74:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7fc6e1360060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7fc6e13603e0"/>
        <function-ref name="sleep" scoped="" ref="0x7fc6e135e980"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7fc6e1360700"/>
        <function-ref name="dataReady" scoped="" ref="0x7fc6e135eb10"/>
        <function-ref name="initMaster" scoped="" ref="0x7fc6e1360a20"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7fc6e1360bb0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fc6e1360d40"/>
        <function-ref name="read" scoped="" ref="0x7fc6e135f020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7fc6e135f1b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fc6e135f340"/>
        <function-ref name="setClock" scoped="" ref="0x7fc6e135f4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc6e135f660"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7fc6e135f7f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7fc6e135fa80"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7fc6e135fc10"/>
        <function-ref name="write" scoped="" ref="0x7fc6e135fda0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fc6e135e020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7fc6e135e1b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7fc6e135e340"/>
        <function-ref name="getClock" scoped="" ref="0x7fc6e135e4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fc6e135e660"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7fc6e1360570"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7fc6e1360890"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7fc6e135e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7fc6e13594e0" loc="80:../tinyos_ws18/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7fc6e13594e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e1359860"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e13599f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e1359b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e1359d10"/>
        <function-ref name="get" scoped="" ref="0x7fc6e1358020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e13581b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e1358340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e13584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc6e12ad3a0" loc="86:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc6e12ad3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc6e12ad740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc6e12ad8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc6e12ab570" loc="89:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e12ab570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc6e12ab910"/>
        <function-ref name="configure" scoped="" ref="0x7fc6e12abaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc6e12ae520" loc="85:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e12ae520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e12ae8c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e12aea50"/>
        <function-ref name="request" scoped="" ref="0x7fc6e12aebe0"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e12aed70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e12ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc6e12adb20" loc="87:../tinyos_ws18/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e12adb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc6e12ab020"/>
        <function-ref name="userId" scoped="" ref="0x7fc6e12ab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e05d44c0" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e05d44c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e05d4840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fc6e05d4ad0" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fc6e05d4ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc6e05d4e50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc6e05d3020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc6e05d31b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc6e05d3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc6e05d0850" loc="52:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc6e05d0850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc6e05d0bf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc6e05d0d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc6e05cf910" loc="56:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e05cf910"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc6e05cfcb0"/>
        <function-ref name="configure" scoped="" ref="0x7fc6e05cfe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fc6e05ce120" loc="57:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fc6e05ce120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc6e05ce4a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc6e05ce630"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc6e05ce7c0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc6e05ce950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc6e05d19d0" loc="51:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e05d19d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e05d1d70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e05d0020"/>
        <function-ref name="request" scoped="" ref="0x7fc6e05d01b0"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e05d0340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e05d04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc6e05cf020" loc="53:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e05cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc6e05cf3a0"/>
        <function-ref name="userId" scoped="" ref="0x7fc6e05cf530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fc6e05cec20" loc="68:../tinyos_ws18/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1280SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fc6e05cec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e05cd020"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e05cd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7fc6e129cb70" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7fc6e129cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e129b020"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e129b1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e129b340"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e129b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e129b660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e129b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7fc6e12a1b70" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7fc6e12a1b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e12a0020"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e12a01b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e12a0340"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e12a04d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e12a0660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e12a07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7fc6e129eb70" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7fc6e129eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e129d020"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e129d1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e129d340"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e129d4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e129d660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e129d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7fc6e129bb70" loc="52:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7fc6e129bb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e129a020"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e129a1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e129a340"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e129a4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e129a660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e129a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7fc6e12a0b70" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7fc6e12a0b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e129f020"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e129f1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e129f340"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e129f4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e129f660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e129f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7fc6e129db70" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7fc6e129db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e129c020"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e129c1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e129c340"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e129c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e129c660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e129c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7fc6e12a4b20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7fc6e12a4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e12a1020"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e12a11b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e12a1340"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e12a14d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e12a1660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e12a17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7fc6e129fb70" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7fc6e129fb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e129e020"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e129e1b0"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e129e340"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e129e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e129e660"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e129e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7fc6e1293830" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7fc6e1293830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e1293bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7fc6e1296230" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7fc6e1296230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e12965b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7fc6e12958d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7fc6e12958d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e1295c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7fc6e1291020" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7fc6e1291020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e12913a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7fc6e12969b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7fc6e12969b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e1296d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7fc6e12930b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7fc6e12930b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e1293430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7fc6e1294a00" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7fc6e1294a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e1294d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7fc6e1295150" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7fc6e1295150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e12954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fc6e1275060" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fc6e1275060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e12753e0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e1275570"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e1275700"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e1275890"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e1275a20"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e1275bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fc6e1275e80" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e1275e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e1260220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fc6e125eda0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fc6e125eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e125d180"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e125d310"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e125d4a0"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e125d630"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e125d7c0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e125d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fc6e125dc20" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e125dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e125b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fc6e1259c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fc6e1259c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e12580a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e1258230"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e12583c0"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e1258550"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e12586e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e1258870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fc6e1258b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e1258b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e1257020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fc6e1255c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fc6e1255c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e12540a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e1254230"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e12543c0"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e1254550"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e12546e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e1254870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fc6e1254b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e1254b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e1253020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fc6e1250c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fc6e1250c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e124f0a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e124f230"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e124f3c0"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e124f550"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e124f6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e124f870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fc6e124fb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e124fb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e124e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fc6e124cc90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fc6e124cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e124b0a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e124b230"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e124b3c0"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e124b550"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e124b6e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e124b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fc6e124bb40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e124bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e124a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fc6e1248c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fc6e1248c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e12470a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e1247230"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e12473c0"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e1247550"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e12476e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e1247870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fc6e1247b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e1247b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e1246020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7fc6e1243c90" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7fc6e1243c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e12420a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e1242230"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e12423c0"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e1242550"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e12426e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e1242870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7fc6e1242b40" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7fc6e1242b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fc6e1241020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpSend" ref="0x7fc6e12311f0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <component-ref qname="DatabaseC.UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7fc6e12311f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1231570"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1231700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7fc6e1231990" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpC.nc">
      <component-ref qname="DatabaseC.UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7fc6e1231990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e1231d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7fc6e122d710" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <component-ref qname="UdpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e122d710"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1bb2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7fc6e1bb1390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e122c390"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e122c8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7fc6e122a330" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverC.nc">
      <component-ref qname="UdpTransceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7fc6e122a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e122a6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7fc6e12299d0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="UdpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7fc6e12299d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1229d50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1228020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpReceive" ref="0x7fc6e12282b0" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpC.nc">
      <component-ref qname="UdpTransceiverC.IpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7fc6e12282b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e1228630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IpSend" ref="0x7fc6e05600c0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="UdpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7fc6e05600c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e0560440"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e05605d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpQueue" ref="0x7fc6e0560860" loc="12:../tinyos_ws18/tos/lib_ecs/ip/IpP.nc">
      <component-ref qname="UdpTransceiverC.IpC.IpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpQueue" scoped="" ref="0x7fc6e0560860"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e0560be0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e0560d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSender" ref="0x7fc6e1227b90" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e1227b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1bb2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7fc6e1bb1390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e12247b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1224cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpSend" ref="0x7fc6e1222d80" loc="13:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpSend" scoped="" ref="0x7fc6e1222d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1221180"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e1221310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpPacket" ref="0x7fc6e12204a0" loc="16:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpPacket" scoped="" ref="0x7fc6e12204a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacket" scoped="" ref="0x7fc6e1220820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpReceive" ref="0x7fc6e1222730" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpReceive" scoped="" ref="0x7fc6e1222730"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpReceive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e1222ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpSend" ref="0x7fc6e1221c70" loc="15:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7fc6e1221c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1220020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e12201b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IpReceive" ref="0x7fc6e1221600" loc="14:../tinyos_ws18/tos/lib_ecs/udp/UdpTransceiverP.nc">
      <component-ref qname="UdpTransceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IpReceive" scoped="" ref="0x7fc6e1221600"/></type-interface>
      <instance>
        <interfacedef-ref qname="IpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e1221980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpReceive" ref="0x7fc6e1225630" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="UdpTransceiverC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpReceive" scoped="" ref="0x7fc6e1225630"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="received" scoped="" ref="0x7fc6e12259b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7fc6e1226e60" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpC.nc">
      <component-ref qname="UdpTransceiverC.IcmpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7fc6e1226e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e1225210"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e12253a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IcmpQueue" ref="0x7fc6e0558440" loc="12:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="UdpTransceiverC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpQueue" scoped="" ref="0x7fc6e0558440"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e05587c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e0558950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IcmpSend" ref="0x7fc6e0559b10" loc="11:../tinyos_ws18/tos/lib_ecs/icmp/IcmpP.nc">
      <component-ref qname="UdpTransceiverC.IcmpC.IcmpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IcmpSend" scoped="" ref="0x7fc6e0559b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="IcmpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e0558020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e05581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpSend" ref="0x7fc6e0568c50" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <component-ref qname="DatabaseC.UdpC.UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpSend" scoped="" ref="0x7fc6e0568c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e0566020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e05661b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UdpQueue" ref="0x7fc6e0566440" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpP.nc">
      <component-ref qname="DatabaseC.UdpC.UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7fc6e0566440"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e05667c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e0566950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpQueue" ref="0x7fc6e11fa1d0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueC.nc">
      <component-ref qname="UdpQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7fc6e11fa1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e11fa550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e11fa6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7fc6e11f5620" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="UdpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e11f5620"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fc6e1ec43a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1bb2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7fc6e1bb1390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e11f4390"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e11f48a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7fc6e11f8790" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueC.nc">
      <component-ref qname="UdpQueueC.PacketQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e11f8790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1bb2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7fc6e1bb1390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e11f68c0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e11f63b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e11f6d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketSender" ref="0x7fc6e054bdd0" loc="13:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSender" scoped="" ref="0x7fc6e054bdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketSender"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1bb2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7fc6e1bb1390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e0549a80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e0548020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketQueue" ref="0x7fc6e054c0b0" loc="12:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e054c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1bb2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7fc6e1bb1390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e054b220"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e054cca0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e054b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendNext" ref="0x7fc6e05484e0" loc="26:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueueP.nc">
      <component-ref qname="UdpQueueC.PacketQueueC.PacketQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendNext" scoped="" ref="0x7fc6e05484e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e0548860"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e05489f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketQueue" ref="0x7fc6e11efbb0" loc="13:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <component-ref qname="UdpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketQueue" scoped="" ref="0x7fc6e11efbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketQueue"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x7fc6e1bb2d30"/>
            <typename><typedef-ref name="udp_queue_item_t" ref="0x7fc6e1bb1390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e11eecf0"/>
        <function-ref name="getBuffer" scoped="" ref="0x7fc6e11ee7e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e11ed220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UdpQueue" ref="0x7fc6e11ef1d0" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpQueueP.nc">
      <component-ref qname="UdpQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UdpQueue" scoped="" ref="0x7fc6e11ef1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UdpQueue"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fc6e11ef550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fc6e11ef6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e11da0c0" loc="14:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e11da0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e11da440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7fc6e11da6e0" loc="15:FMClick/FMClickC.nc">
      <component-ref qname="FMClickC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7fc6e11da6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7fc6e11d97f0"/>
        <function-ref name="initDone" scoped="" ref="0x7fc6e11dabf0"/>
        <function-ref name="setVolume" scoped="" ref="0x7fc6e11dad80"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7fc6e11d9020"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7fc6e11d91b0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7fc6e11d9340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc6e11d94d0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7fc6e11d9660"/>
        <function-ref name="seek" scoped="" ref="0x7fc6e11daa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="seek" ref="0x7fc6e11a5020" loc="187:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="seek" scoped="" ref="0x7fc6e11a5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e11a54a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e11a5630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeI2C" ref="0x7fc6e119f2a0" loc="192:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeI2C" scoped="" ref="0x7fc6e119f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e119f620"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e119f7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SDIOPin" ref="0x7fc6e11ba020" loc="30:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SDIOPin" scoped="" ref="0x7fc6e11ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e11ba3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e11ba530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e11ba6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e11ba850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e11ba9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e11bab70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e11bad00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e11b9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="INTPin" ref="0x7fc6e11b9350" loc="31:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="INTPin" scoped="" ref="0x7fc6e11b9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e11b96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e11b9860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e11b99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e11b9b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e11b9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e11b8020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e11b81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e11b8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Int" ref="0x7fc6e11d4020" loc="25:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int" scoped="" ref="0x7fc6e11d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e11d43a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e11d4530"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e11d46c0"/>
        <function-ref name="edge" scoped="" ref="0x7fc6e11d4850"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e11d49e0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e11d4b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7fc6e11c4b50" loc="27:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fc6e11c4b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fc6e11d0770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fc6e11d0a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e11d27d0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc6e11c3ca0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e11d1400"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e11c3090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="registerWriteback" ref="0x7fc6e119d2b0" loc="193:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="registerWriteback" scoped="" ref="0x7fc6e119d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e119d630"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e119d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readRegisters" ref="0x7fc6e11a2510" loc="189:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readRegisters" scoped="" ref="0x7fc6e11a2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e11a2890"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e11a2a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x7fc6e11a7120" loc="185:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init" scoped="" ref="0x7fc6e11a7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e11a74a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e11a7630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="decodeRDS" ref="0x7fc6e11a4020" loc="188:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="decodeRDS" scoped="" ref="0x7fc6e11a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e11a43a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e11a4530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="writeRegisters" ref="0x7fc6e11a02b0" loc="191:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="writeRegisters" scoped="" ref="0x7fc6e11a02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e11a0630"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e11a07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e11d8440" loc="20:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e11d8440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e11d87c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x7fc6e11d3020" loc="26:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x7fc6e11d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e11d33a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e11d3530"/>
        <function-ref name="request" scoped="" ref="0x7fc6e11d36c0"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e11d3850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e11d39e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTPin" ref="0x7fc6e11bddf0" loc="29:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTPin" scoped="" ref="0x7fc6e11bddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e11bb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e11bb350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e11bb4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e11bb670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e11bb800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e11bb990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e11bbb20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e11bbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FMClick" ref="0x7fc6e11d8a60" loc="21:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FMClick" scoped="" ref="0x7fc6e11d8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="FMClick"/>
      </instance>
      <interface-functions>
        <function-ref name="tune" scoped="" ref="0x7fc6e11d5b10"/>
        <function-ref name="initDone" scoped="" ref="0x7fc6e11d5020"/>
        <function-ref name="setVolume" scoped="" ref="0x7fc6e11d51b0"/>
        <function-ref name="rdsReceived" scoped="" ref="0x7fc6e11d5340"/>
        <function-ref name="receiveRDS" scoped="" ref="0x7fc6e11d54d0"/>
        <function-ref name="tuneComplete" scoped="" ref="0x7fc6e11d5660"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc6e11d57f0"/>
        <function-ref name="seekComplete" scoped="" ref="0x7fc6e11d5980"/>
        <function-ref name="seek" scoped="" ref="0x7fc6e11d8de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Glcd" ref="0x7fc6e11b85c0" loc="32:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Glcd" scoped="" ref="0x7fc6e11b85c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Glcd"/>
      </instance>
      <interface-functions>
        <function-ref name="fill" scoped="" ref="0x7fc6e11b7660"/>
        <function-ref name="drawRect" scoped="" ref="0x7fc6e11b8ad0"/>
        <function-ref name="drawLine" scoped="" ref="0x7fc6e11b8c60"/>
        <function-ref name="setPixel" scoped="" ref="0x7fc6e11b8df0"/>
        <function-ref name="invertPixel" scoped="" ref="0x7fc6e11b7020"/>
        <function-ref name="clearPixel" scoped="" ref="0x7fc6e11b71b0"/>
        <function-ref name="drawEllipse" scoped="" ref="0x7fc6e11b7340"/>
        <function-ref name="drawTextPgm" scoped="" ref="0x7fc6e11b8940"/>
        <function-ref name="drawText" scoped="" ref="0x7fc6e11b74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readI2C" ref="0x7fc6e11a13c0" loc="190:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readI2C" scoped="" ref="0x7fc6e11a13c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e11a1740"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e11a18d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc6e11c1a80" loc="28:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fc6e11c1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e11bd020"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e11bf510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e11be300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e11bfe10"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e11bd920"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e11bd4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e11bf990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e11c06b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e11be910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e11c0b80"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e11bf090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tune" ref="0x7fc6e11a6020" loc="186:FMClick/FMClickP.nc">
      <component-ref qname="FMClickP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tune" scoped="" ref="0x7fc6e11a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e11a63a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e11a6530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc6e10c4af0" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e10c4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e10c4e70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e0ee3030"/>
        <function-ref name="request" scoped="" ref="0x7fc6e0ee31c0"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e0ee3350"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e0ee34e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fc6e0ee3890" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="FMClickC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fc6e0ee3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fc6e11d0770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fc6e11d0a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e0ee1500"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc6e0edf9b0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e0ee0150"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e0ee0d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc6e10b68b0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e10b68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e10b6c30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e10b6dc0"/>
        <function-ref name="request" scoped="" ref="0x7fc6e10b5020"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e10b51b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e10b5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fc6e10b5d40" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fc6e10b5d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fc6e11d0770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fc6e11d0a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e10b49c0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc6e10b0020"/>
        <function-ref name="write" scoped="" ref="0x7fc6e10b3620"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e10b22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc6e10456c0" loc="92:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc6e10456c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc6e1045a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc6e1045bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc6e10433e0" loc="96:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e10433e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc6e1043780"/>
        <function-ref name="configure" scoped="" ref="0x7fc6e1043910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fc6e1045e40" loc="93:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e1045e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e10441e0"/>
        <function-ref name="requested" scoped="" ref="0x7fc6e1044370"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e1044500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e1044690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc6e1044820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc6e10467e0" loc="91:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e10467e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e1046b80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e1046d10"/>
        <function-ref name="request" scoped="" ref="0x7fc6e1045020"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e10451b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e1045340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc6e1044a70" loc="94:../tinyos_ws18/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e1044a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc6e1044df0"/>
        <function-ref name="userId" scoped="" ref="0x7fc6e1043020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e0525620" loc="44:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e0525620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e05259a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fc6e0525c30" loc="45:../tinyos_ws18/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7fc6e0525c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc6e0524020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc6e05241b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc6e0524340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc6e05244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc6e0521bd0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc6e0521bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc6e0520020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc6e05201b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc6e051f950" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e051f950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc6e051fcf0"/>
        <function-ref name="configure" scoped="" ref="0x7fc6e051fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fc6e051e130" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fc6e051e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc6e051e4b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc6e051e640"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc6e051e7d0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc6e051e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fc6e0520400" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e0520400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e0520780"/>
        <function-ref name="requested" scoped="" ref="0x7fc6e0520910"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e0520aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e0520c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc6e0520dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc6e051ebb0" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fc6e051ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc6e051d020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc6e051d1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc6e051d340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc6e051d4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc6e051d660"/>
        <function-ref name="get" scoped="" ref="0x7fc6e051d7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc6e051d980"/>
        <function-ref name="led0On" scoped="" ref="0x7fc6e051c020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e051dca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fc6e051db10"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc6e051de30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc6e0523e40" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e0523e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e0521210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e05213a0"/>
        <function-ref name="request" scoped="" ref="0x7fc6e0521530"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e05216c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e0521850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc6e051f060" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e051f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc6e051f3e0"/>
        <function-ref name="userId" scoped="" ref="0x7fc6e051f570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fc6e051c2f0" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fc6e051c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e051c670"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e051c800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fc6e1040560" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fc6e1040560"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fc6e10408e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fc6e1040b30" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e1040b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e1033020"/>
        <function-ref name="requested" scoped="" ref="0x7fc6e10331b0"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e1033340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e10334d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc6e1033660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fc6e1041dd0" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc6e1041dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc6e1040180"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e1040310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fc6e10338b0" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e10338b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc6e1033c30"/>
        <function-ref name="userId" scoped="" ref="0x7fc6e1033dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x7fc6e0fefcd0" loc="45:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7fc6e0fefcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7fc6e0fee0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x7fc6e0ff3020" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x7fc6e0ff3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fc6e11d0770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fc6e11d0a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e0ff3c50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc6e0fef150"/>
        <function-ref name="write" scoped="" ref="0x7fc6e0ff18c0"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e0ff0510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc6e0fee330" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fc6e0fee330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc6e0fee6b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc6e0fee840"/>
        <function-ref name="led1On" scoped="" ref="0x7fc6e0fee9d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc6e0feeb60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc6e0feecf0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0feee80"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc6e0fed030"/>
        <function-ref name="led2On" scoped="" ref="0x7fc6e0fed670"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0fed350"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc6e0fed1c0"/>
        <function-ref name="led0On" scoped="" ref="0x7fc6e0fed4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc6e1030470" loc="41:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e1030470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e1030810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e10309a0"/>
        <function-ref name="request" scoped="" ref="0x7fc6e1030b30"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e1030cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e1030e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fc6e0ff9370" loc="42:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fc6e0ff9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fc6e11d0770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fc6e11d0a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e0ff8020"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc6e0ff5510"/>
        <function-ref name="write" scoped="" ref="0x7fc6e0ff8c50"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e0ff68c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7fc6e0ff4210" loc="43:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7fc6e0ff4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e0ff45b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e0ff4740"/>
        <function-ref name="request" scoped="" ref="0x7fc6e0ff48d0"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e0ff4a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e0ff4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x7fc6e0f7a8e0" loc="79:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x7fc6e0f7a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x7fc6e0f7ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x7fc6e0f79020" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fc6e0f79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fc6e0f793a0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fc6e0f79530"/>
        <function-ref name="setStart" scoped="" ref="0x7fc6e0f796c0"/>
        <function-ref name="status" scoped="" ref="0x7fc6e0f79850"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fc6e0f799e0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fc6e0f79b70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fc6e0f79d00"/>
        <function-ref name="read" scoped="" ref="0x7fc6e0f78020"/>
        <function-ref name="init" scoped="" ref="0x7fc6e0f781b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7fc6e0f78340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fc6e0f784d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7fc6e0f78660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc6e0f787f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fc6e0f78a80"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e0f78c10"/>
        <function-ref name="write" scoped="" ref="0x7fc6e0f78da0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fc6e0f77020"/>
        <function-ref name="off" scoped="" ref="0x7fc6e0f771b0"/>
        <function-ref name="setStop" scoped="" ref="0x7fc6e0f77340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fc6e0f774d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fc6e0f77660"/>
        <function-ref name="hasStop" scoped="" ref="0x7fc6e0f777f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x7fc6e0f77ac0" loc="82:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x7fc6e0f77ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc6e0f77e40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc6e0f76020"/>
        <function-ref name="led1On" scoped="" ref="0x7fc6e0f761b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc6e0f76340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc6e0f764d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0f76660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc6e0f767f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fc6e0f76e30"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0f76b10"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc6e0f76980"/>
        <function-ref name="led0On" scoped="" ref="0x7fc6e0f76ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x7fc6e0f75160" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x7fc6e0f75160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc6e0f754e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc6e0f75670"/>
        <function-ref name="led1On" scoped="" ref="0x7fc6e0f75800"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc6e0f75990"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc6e0f75b20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0f75cb0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc6e0f75e40"/>
        <function-ref name="led2On" scoped="" ref="0x7fc6e0f744d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0f741b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc6e0f74020"/>
        <function-ref name="led0On" scoped="" ref="0x7fc6e0f74340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7fc6e0f747a0" loc="210:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7fc6e0f747a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e0f74b20"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e0f74cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fc6e0f7f340" loc="77:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc6e0f7f340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc6e0f7f6c0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e0f7f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x7fc6e0f7fc00" loc="78:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x7fc6e0f7fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x7fc6e11d0770"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x7fc6e11d0a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e0f7e8a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fc6e0f7cd20"/>
        <function-ref name="write" scoped="" ref="0x7fc6e0f7d4d0"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e0f7c110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7fc6e0f6e0e0" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fc6e0f6e0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fc6e0f6e460"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fc6e0f6e5f0"/>
        <function-ref name="setStart" scoped="" ref="0x7fc6e0f6e780"/>
        <function-ref name="status" scoped="" ref="0x7fc6e0f6e910"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fc6e0f6eaa0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fc6e0f6ec30"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fc6e0f6edc0"/>
        <function-ref name="read" scoped="" ref="0x7fc6e0f6d020"/>
        <function-ref name="init" scoped="" ref="0x7fc6e0f6d1b0"/>
        <function-ref name="enableAck" scoped="" ref="0x7fc6e0f6d340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fc6e0f6d4d0"/>
        <function-ref name="hasStart" scoped="" ref="0x7fc6e0f6d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc6e0f6d7f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fc6e0f6da80"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e0f6dc10"/>
        <function-ref name="write" scoped="" ref="0x7fc6e0f6dda0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fc6e0f6c020"/>
        <function-ref name="off" scoped="" ref="0x7fc6e0f6c1b0"/>
        <function-ref name="setStop" scoped="" ref="0x7fc6e0f6c340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fc6e0f6c4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fc6e0f6c660"/>
        <function-ref name="hasStop" scoped="" ref="0x7fc6e0f6c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x7fc6e0f6ba70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x7fc6e0f6ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x7fc6e0f6bdf0"/>
        <function-ref name="sendCommand" scoped="" ref="0x7fc6e0f68020"/>
        <function-ref name="setStart" scoped="" ref="0x7fc6e0f681b0"/>
        <function-ref name="status" scoped="" ref="0x7fc6e0f68340"/>
        <function-ref name="hasAcks" scoped="" ref="0x7fc6e0f684d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fc6e0f68660"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7fc6e0f687f0"/>
        <function-ref name="read" scoped="" ref="0x7fc6e0f68980"/>
        <function-ref name="init" scoped="" ref="0x7fc6e0f68b10"/>
        <function-ref name="enableAck" scoped="" ref="0x7fc6e0f68ca0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7fc6e0f68e30"/>
        <function-ref name="hasStart" scoped="" ref="0x7fc6e0f67020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fc6e0f671b0"/>
        <function-ref name="commandComplete" scoped="" ref="0x7fc6e0f67440"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e0f675d0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e0f67760"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x7fc6e0f678f0"/>
        <function-ref name="off" scoped="" ref="0x7fc6e0f67a80"/>
        <function-ref name="setStop" scoped="" ref="0x7fc6e0f67c10"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x7fc6e0f67da0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7fc6e0f66020"/>
        <function-ref name="hasStop" scoped="" ref="0x7fc6e0f661b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x7fc6e0f66540" loc="53:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x7fc6e0f66540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0f668c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0f66a50"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0f66be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0f66d70"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0f65020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0f651b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0f65340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0f654d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x7fc6e0f65810" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x7fc6e0f65810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0f65b90"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0f65d20"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0f64020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0f641b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0f64340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0f644d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0f64660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0f647f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fc6e0f2e4a0" loc="46:../tinyos_ws18/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fc6e0f2e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc6e0f2e820"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc6e0f2e9b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc6e0f2eb40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc6e0f2ecd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc6e0f2ee60"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0f2b020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc6e0f2b1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc6e0f2b7f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0f2b340"/>
        <function-ref name="led0On" scoped="" ref="0x7fc6e0f2b4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fc6e0f2b660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fc6e0f26550" loc="50:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fc6e0f26550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0f268d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0f26a60"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0f26bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0f26d80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0f25020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0f251b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0f25340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0f254d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e0f2a7c0" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e0f2a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e0f2ab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fc6e0f257f0" loc="51:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fc6e0f257f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0f25b70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0f25d00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0f24020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0f241b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0f24340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0f244d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0f24660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0f247f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fc6e0f2adc0" loc="47:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fc6e0f2adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc6e0f27180"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc6e0f27310"/>
        <function-ref name="led1On" scoped="" ref="0x7fc6e0f274a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc6e0f27630"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc6e0f277c0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0f27950"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc6e0f27ae0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc6e0f261b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0f27c70"/>
        <function-ref name="led0On" scoped="" ref="0x7fc6e0f27e00"/>
        <function-ref name="led2On" scoped="" ref="0x7fc6e0f26020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fc6e0f24b10" loc="52:../tinyos_ws18/tos/platforms/bigAVR6/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fc6e0f24b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0f23020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0f231b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0f23340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0f234d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0f23660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0f237f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0f23980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0f23b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fc6e0f071d0" loc="44:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fc6e0f071d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0f07550"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0f076e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0f07870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0f07a00"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0f07b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0f07d20"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0f06020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0f061b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fc6e0f06510" loc="45:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fc6e0f06510"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0f06890"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0f06a20"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0f06bb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0f06d40"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0f05020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0f051b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0f05340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0f054d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fc6e0f04ab0" loc="48:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e0f04ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e0f04e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fc6e0f05830" loc="46:../tinyos_ws18/tos/platforms/bigAVR6/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fc6e0f05830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0f05bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0f05d40"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0f04020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0f041b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0f04340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0f044d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0f04660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0f047f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e0efc340" loc="46:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e0efc340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e0efc6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fc6e0efc980" loc="47:../tinyos_ws18/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fc6e0efc980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc6e0efcd00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc6e0efb020"/>
        <function-ref name="led1On" scoped="" ref="0x7fc6e0efb1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc6e0efb340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc6e0efb4d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0efb660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc6e0efb7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc6e0efbe30"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0efb980"/>
        <function-ref name="led0On" scoped="" ref="0x7fc6e0efbb10"/>
        <function-ref name="led2On" scoped="" ref="0x7fc6e0efbca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc6e0eddb80" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="FMClickC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fc6e0eddb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e0ed8110"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e0eda5f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e0ed94a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e0ed9020"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e0ed8a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e0ed8590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e0edaa70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e0edc790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e0ed9ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e0edcc60"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e0eda170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fc6e0e99cb0" loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fc6e0e99cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e98610"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e987a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e98930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e98ac0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e98c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e98de0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e97020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e971b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fc6e0eb5350" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fc6e0eb5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0eb56d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0eb5860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0eb59f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0eb5b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0eb5d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0eb4020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0eb41b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0eb4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fc6e0ea8350" loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fc6e0ea8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ea86d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ea8860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ea89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ea8b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ea8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ea7020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ea71b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ea7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fc6e0e9fcb0" loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fc6e0e9fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e9e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e9e230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e9e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e9e550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e9e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e9e870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e9ea00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e9eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7fc6e0e91060" loc="108:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7fc6e0e91060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e913e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e91570"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e91700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e91890"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e91a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e91bb0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e91d40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH2" ref="0x7fc6e0e8e990" loc="112:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH2" scoped="" ref="0x7fc6e0e8e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e8ed10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e8d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e8d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e8d340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e8d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e8d660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e8d7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e8d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH7" ref="0x7fc6e0e88990" loc="117:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH7" scoped="" ref="0x7fc6e0e88990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e88d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e87020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e871b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e87340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e874d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e87660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e877f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e87980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ6" ref="0x7fc6e0e7f020" loc="125:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ6" scoped="" ref="0x7fc6e0e7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e7f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e7f530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e7f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e7f850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e7f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e7fb70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e7fd00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK0" ref="0x7fc6e0e7d670" loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK0" scoped="" ref="0x7fc6e0e7d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e7d9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e7db80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e7dd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e7c020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e7c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e7c340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e7c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e7c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL2" ref="0x7fc6e0e70670" loc="139:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL2" scoped="" ref="0x7fc6e0e70670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e709f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e70b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e70d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e6f020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e6f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e6f340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e6f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e6f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fc6e0ecc350" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fc6e0ecc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ecc6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ecc860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ecc9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0eccb80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0eccd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ecb020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ecb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ecb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fc6e0ea1670" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fc6e0ea1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ea19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ea1b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ea1d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ea0020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ea01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ea0340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ea04d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ea0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fc6e0eca990" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fc6e0eca990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ecad10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ec9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ec91b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ec9340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ec94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ec9660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ec97f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ec9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fc6e0ebe990" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fc6e0ebe990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ebed10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ebd020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ebd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ebd340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ebd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ebd660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ebd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ebd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fc6e0eb1cb0" loc="80:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fc6e0eb1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0eb00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0eb0230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0eb03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0eb0550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0eb06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0eb0870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0eb0a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0eb0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fc6e0ea5cb0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fc6e0ea5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ea40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ea4230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ea43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ea4550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ea46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ea4870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ea4a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ea4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fc6e0ed34e0" loc="50:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fc6e0ed34e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ed3860"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ed39f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ed3b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ed3d10"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ed2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ed21b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ed2340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ed24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fc6e0ec6350" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fc6e0ec6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ec66d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ec6860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ec69f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ec6b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ec6d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ec5020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ec51b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ec5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fc6e0eba350" loc="72:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fc6e0eba350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0eba6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0eba860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0eba9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ebab80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ebad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0eb9020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0eb91b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0eb9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fc6e0ead670" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fc6e0ead670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ead9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0eadb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0eadd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0eac020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0eac1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0eac340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0eac4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0eac660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fc6e0e9b670" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fc6e0e9b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e9b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e9bb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e9bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e9a020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e9a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e9a340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e9a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e9a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fc6e0e94b20" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fc6e0e94b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e93020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e931b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e93340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e934d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e93660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e937f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e93980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e93b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH0" ref="0x7fc6e0e90350" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH0" scoped="" ref="0x7fc6e0e90350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e906d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e90860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e909f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e90b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e90d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e8f020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e8f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e8f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fc6e0eabcb0" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fc6e0eabcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0eaa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0eaa230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0eaa3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0eaa550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0eaa6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0eaa870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0eaaa00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0eaab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH5" ref="0x7fc6e0e8a350" loc="115:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH5" scoped="" ref="0x7fc6e0e8a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e8a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e8a860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e8a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e8ab80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e8ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e89020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e891b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ1" ref="0x7fc6e0e85020" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ1" scoped="" ref="0x7fc6e0e85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e853a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e85530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e856c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e85850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e859e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e85b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e85d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ4" ref="0x7fc6e0e82990" loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ4" scoped="" ref="0x7fc6e0e82990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e82d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e81020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e811b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e81340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e814d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e81660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e817f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e81980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK3" ref="0x7fc6e0e78020" loc="131:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK3" scoped="" ref="0x7fc6e0e78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e783a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e78530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e786c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e78850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e789e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e78b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e78d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e77020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK6" ref="0x7fc6e0e75990" loc="134:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK6" scoped="" ref="0x7fc6e0e75990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e75d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e74020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e741b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e74340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e744d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e74660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e747f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e74980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL0" ref="0x7fc6e0e72020" loc="137:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL0" scoped="" ref="0x7fc6e0e72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e723a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e72530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e726c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e72850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e729e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e72b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e72d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL5" ref="0x7fc6e0e6c020" loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL5" scoped="" ref="0x7fc6e0e6c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e6c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e6c530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e6c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e6c850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e6c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e6cb70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e6cd00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fc6e0ed0e40" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fc6e0ed0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ece1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ece370"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ece500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ece690"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ece820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ece9b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0eceb40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ececd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fc6e0ec3cb0" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fc6e0ec3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ec20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ec2230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ec23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ec2550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ec26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ec2870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ec2a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ec2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fc6e0e974e0" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fc6e0e974e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e97860"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e979f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e97b80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e97d10"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e96020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e961b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e96340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e964d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fc6e0ec0350" loc="67:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fc6e0ec0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ec06d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ec0860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ec09f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ec0b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ec0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ebf020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ebf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ebf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fc6e0eb4670" loc="78:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fc6e0eb4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0eb49f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0eb4b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0eb4d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0eb3020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0eb31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0eb3340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0eb34d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0eb3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fc6e0ea7670" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fc6e0ea7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ea79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ea7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ea7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ea6020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ea61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ea6340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ea64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ea6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fc6e0e9d020" loc="98:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fc6e0e9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e9d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e9d530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e9d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e9d850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e9d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e9db70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e9dd00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH3" ref="0x7fc6e0e8dcb0" loc="113:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH3" scoped="" ref="0x7fc6e0e8dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e8c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e8c230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e8c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e8c550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e8c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e8c870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e8ca00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e8cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ7" ref="0x7fc6e0e7e350" loc="126:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ7" scoped="" ref="0x7fc6e0e7e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e7e6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e7e860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e7e9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e7eb80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e7ed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e7d020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e7d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e7d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK1" ref="0x7fc6e0e7c990" loc="129:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK1" scoped="" ref="0x7fc6e0e7c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e7cd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e7b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e7b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e7b340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e7b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e7b660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e7b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e7b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL3" ref="0x7fc6e0e6f990" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL3" scoped="" ref="0x7fc6e0e6f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e6fd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e6e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e6e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e6e340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e6e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e6e660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e6e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e6e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ2" ref="0x7fc6e0e84350" loc="121:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ2" scoped="" ref="0x7fc6e0e84350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e846d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e84860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e849f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e84b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e84d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e83020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e831b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e83340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fc6e0ecb670" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fc6e0ecb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ecb9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ecbb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ecbd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0eca020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0eca1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0eca340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0eca4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0eca660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK4" ref="0x7fc6e0e77350" loc="132:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK4" scoped="" ref="0x7fc6e0e77350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e776d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e77860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e779f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e77b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e77d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e76020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e761b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e76340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL6" ref="0x7fc6e0e6b350" loc="143:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL6" scoped="" ref="0x7fc6e0e6b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e6b6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e6b860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e6b9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e6bb80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e6bd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e6a020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e6a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e6a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fc6e0ec9cb0" loc="59:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fc6e0ec9cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ec80a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ec8230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ec83c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ec8550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ec86e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ec8870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ec8a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ec8b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fc6e0ebdcb0" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fc6e0ebdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ebc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ebc230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ebc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ebc550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ebc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ebc870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ebca00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ebcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fc6e0eaf020" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fc6e0eaf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0eaf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0eaf530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0eaf6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0eaf850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0eaf9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0eafb70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0eafd00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0eae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fc6e0ea3020" loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fc6e0ea3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ea33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ea3530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ea36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ea3850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ea39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ea3b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ea3d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ea2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fc6e0ed2800" loc="51:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fc6e0ed2800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ed2b80"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ed2d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ed1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ed11b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ed1340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ed14d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ed1660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ed17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fc6e0ec5670" loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fc6e0ec5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ec5af0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ec5c80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ec5e10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ec4020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ec41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ec4340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ec44d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ec4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fc6e0eb9670" loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fc6e0eb9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0eb99f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0eb9b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0eb9d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0eb8020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0eb81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0eb8340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0eb84d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0eb8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fc6e0e9a990" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fc6e0e9a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e9ad10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e99020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e991b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e99340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e994d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e99660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e997f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e99980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH1" ref="0x7fc6e0e8f670" loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH1" scoped="" ref="0x7fc6e0e8f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e8f9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e8fb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e8fd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e8e020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e8e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e8e340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e8e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e8e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fc6e0eb7cb0" loc="76:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fc6e0eb7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0eb6410"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0eb65a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0eb6730"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0eb68c0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0eb6a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0eb6be0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0eb6d70"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0eb5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fc6e0ea9020" loc="87:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fc6e0ea9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ea93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ea9530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ea96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ea9850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ea99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ea9b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ea9d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ea8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fc6e0ea0990" loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fc6e0ea0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ea0d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e9f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e9f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e9f340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e9f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e9f660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e9f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e9f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fc6e0e93e40" loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fc6e0e93e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e921e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e92370"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e92500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e92690"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e92820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e929b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e92b40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e92cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH6" ref="0x7fc6e0e89670" loc="116:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH6" scoped="" ref="0x7fc6e0e89670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e899f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e89b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e89d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e88020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e881b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e88340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e884d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e88660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ5" ref="0x7fc6e0e81cb0" loc="124:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ5" scoped="" ref="0x7fc6e0e81cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e800a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e80230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e803c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e80550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e806e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e80870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e80a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e80b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK7" ref="0x7fc6e0e74cb0" loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK7" scoped="" ref="0x7fc6e0e74cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e730a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e73230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e733c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e73550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e736e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e73870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e73a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e73b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL1" ref="0x7fc6e0e71350" loc="138:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL1" scoped="" ref="0x7fc6e0e71350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e716d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e71860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e719f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e71b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e71d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e70020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e701b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e70340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fc6e0ecd060" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fc6e0ecd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ecd3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ecd570"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ecd700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ecd890"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ecda20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ecdbb0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ecdd40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ecc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fc6e0ec1020" loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fc6e0ec1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ec13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ec1530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ec16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ec1850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ec19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ec1b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ec1d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ec0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fc6e0ea2350" loc="94:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fc6e0ea2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ea26d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ea2860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ea29f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ea2b80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ea2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ea1020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ea11b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ea1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fc6e0ebf670" loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fc6e0ebf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ebf9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ebfb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ebfd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ebe020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ebe1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ebe340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ebe4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ebe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fc6e0eb3990" loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fc6e0eb3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0eb3d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0eb1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0eb11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0eb1340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0eb14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0eb1660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0eb17f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0eb1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fc6e0ea6990" loc="90:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fc6e0ea6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ea6d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ea5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ea51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ea5340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ea54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ea5660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ea57f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ea5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fc6e0e9c350" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fc6e0e9c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e9c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e9c860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e9c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e9cb80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e9cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e9b020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e9b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e9b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fc6e0ed41e0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fc6e0ed41e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ed4560"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ed46f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ed4880"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ed4a10"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ed4ba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ed4d30"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ed3020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ed31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fc6e0ec7020" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fc6e0ec7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ec73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ec7530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ec76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ec7850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ec79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ec7b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ec7d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ec6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fc6e0ebb020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fc6e0ebb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ebb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ebb530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ebb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ebb850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ebb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ebbb70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ebbd00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0eba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fc6e0eae350" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fc6e0eae350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0eae6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0eae860"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0eae9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0eaeb80"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0eaed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ead020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ead1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ead340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fc6e0e96800" loc="105:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fc6e0e96800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e96b80"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e96d10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e94020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e941b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e94340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e944d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e94660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e947f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortH4" ref="0x7fc6e0e8b020" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortH4" scoped="" ref="0x7fc6e0e8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e8b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e8b530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e8b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e8b850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e8b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e8bb70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e8bd00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e8a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ0" ref="0x7fc6e0e87cb0" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ0" scoped="" ref="0x7fc6e0e87cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e860a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e86230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e863c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e86550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e866e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e86870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e86a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e86b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fc6e0eac990" loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fc6e0eac990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0eacd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0eab020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0eab1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0eab340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0eab4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0eab660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0eab7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0eab980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortJ3" ref="0x7fc6e0e83670" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortJ3" scoped="" ref="0x7fc6e0e83670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e839f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e83b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e83d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e82020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e821b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e82340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e824d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e82660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK2" ref="0x7fc6e0e7bcb0" loc="130:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK2" scoped="" ref="0x7fc6e0e7bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e7a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e7a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e7a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e7a550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e7a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e7a870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e7aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e7ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortK5" ref="0x7fc6e0e76670" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortK5" scoped="" ref="0x7fc6e0e76670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e769f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e76b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e76d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e75020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e751b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e75340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e754d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e75660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL4" ref="0x7fc6e0e6ecb0" loc="141:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL4" scoped="" ref="0x7fc6e0e6ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e6d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e6d230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e6d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e6d550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e6d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e6d870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e6da00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e6db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortL7" ref="0x7fc6e0e6a670" loc="144:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortL7" scoped="" ref="0x7fc6e0e6a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e6a9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e6ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e6ad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e69020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e691b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e69340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e694d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e69660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fc6e0eb8990" loc="74:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fc6e0eb8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0eb8d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0eb7020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0eb71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0eb7340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0eb74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0eb7660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0eb77f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0eb7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fc6e0ed1b20" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fc6e0ed1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ed0020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ed01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ed0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ed04d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ed0660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ed07f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ed0980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ed0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fc6e0ec4990" loc="63:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOC.nc">
      <component-ref qname="HplAtm1280GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fc6e0ec4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ec4d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ec3020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0ec31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ec3340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ec34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ec3660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ec37f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ec3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fc6e0e63a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e63a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e63e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e62020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e621b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e62340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e624d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e62660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e627f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e62980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fc6e0e5f020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e5f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e5f530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e5f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e5f850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e5f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e5fb70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e5fd00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fc6e0e657a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e657a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e65b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e65cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e65e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e64020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e641b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e64340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e644d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e64660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fc6e0e62c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e62c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e61020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e611b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e61340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e614d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e61660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e617f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e61980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e61b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fc6e0e5e2b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e5e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e5e630"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e5e7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e5e950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e5eae0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e5ec70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e5ee00"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e5d020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e5d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fc6e0e648f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e648f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e64c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e64e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e63020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e631b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e63340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e634d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e63660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e637f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fc6e0e61da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e61da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e60180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e60310"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e604a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e60630"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e607c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e60950"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e60ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e60c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fc6e0e5d440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e5d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e5d7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e5d950"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e5dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e5dc70"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e5de00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e5c020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e5c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e5c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0441da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0441da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0440180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0440310"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e04404a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0440630"/>
        <function-ref name="get" scoped="" ref="0x7fc6e04407c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0440950"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0440ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0440c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e043d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e043d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e043d420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e043d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e043d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e043d8d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e043da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e043dbf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e043dd80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e043c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e043a3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e043a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e043a770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e043a900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e043aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e043ac20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e043adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0439020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e04391b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0439340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e04376d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e04376d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0437a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0437be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0437d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0436020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e04361b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0436340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e04364d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0436660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e04349b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e04349b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0434d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0433020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e04331b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0433340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e04334d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0433660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e04337f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0433980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0431e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0431e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e04301c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0430350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e04304e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0430670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0430800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0430990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0430b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0430cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e042d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e042d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e042d420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e042d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e042d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e042d8d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e042da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e042dbf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e042dd80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e042b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e04293f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e04293f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0429770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0429900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0429a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0429c20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0429db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0428020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e04281b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0428340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fc6e0e54da0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e54da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e53180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e53310"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e534a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e53630"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e537c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e53950"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e53ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e53c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fc6e0e50440" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e50440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e507c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e50950"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e50ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e50c70"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e50e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e4f020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e4f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e4f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fc6e0e56a20" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e56a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e56da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e55020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e551b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e55340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e554d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e55660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e557f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e55980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fc6e0e52020" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e52020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e523a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e52530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e526c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e52850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e529e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e52b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e52d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fc6e0e4f5d0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e4f5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e4f950"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e4fae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e4fc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e4fe00"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e4e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e4e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e4e340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e4e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fc6e0e55c10" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e55c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e54020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e541b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e54340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e544d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e54660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e547f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e54980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e54b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fc6e0e512b0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e512b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e51630"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e517c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e51950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e51ae0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e51c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e51e00"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e50020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e501b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fc6e0e4e760" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e4e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e4eae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e4ec70"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e4ee00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e4c020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e4c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e4c340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e4c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e4c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e03d5060" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e03d5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e03d53e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e03d5570"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e03d5700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e03d5890"/>
        <function-ref name="get" scoped="" ref="0x7fc6e03d5a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e03d5bb0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e03d5d40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e03d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e03d23f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e03d23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e03d2770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e03d2900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e03d2a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e03d2c20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e03d2db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e03d1020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e03d11b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e03d1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e03cf6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e03cf6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e03cfa50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e03cfbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e03cfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e03ce020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e03ce1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e03ce340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e03ce4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e03ce660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e03cc9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e03cc9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e03ccd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e03cb020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e03cb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e03cb340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e03cb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e03cb660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e03cb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e03cb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e03c9e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e03c9e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e03c81c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e03c8350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e03c84e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e03c8670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e03c8800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e03c8990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e03c8b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e03c8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e03c50a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e03c50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e03c5420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e03c55b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e03c5740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e03c58d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e03c5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e03c5bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e03c5d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e03c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e03c23f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e03c23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e03c2770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e03c2900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e03c2a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e03c2c20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e03c2db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e03c0020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e03c01b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e03c0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e03be6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e03be6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e03bea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e03bebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e03bed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e03bd020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e03bd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e03bd340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e03bd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e03bd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fc6e0e44020" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e443a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e44530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e446c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e44850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e449e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e44b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e44d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fc6e0e405d0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e405d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e40950"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e40ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e40c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e40e00"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e3f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e3f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e3f340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e3f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fc6e0e47d30" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e47d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e460e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e46270"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e46400"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e46590"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e46720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e468b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e46a40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e46bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fc6e0e432b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e432b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e43630"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e437c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e43950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e43ae0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e43c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e43e00"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e42020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e421b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fc6e0e3f760" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e3f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e3fae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e3fc70"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e3fe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e3e020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e3e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e3e340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e3e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e3e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fc6e0e46e60" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e46e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e45210"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e453a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e45530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e456c0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e45850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e459e0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e45b70"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e45d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fc6e0e42440" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e42440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e427c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e42950"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e42ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e42c70"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e42e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e40020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e401b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e40340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fc6e0e3e8f0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e3e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e3ec70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e3ee00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e3d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e3d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e3d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e3d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e3d660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e3d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e036aa60" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e036aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e036ade0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0369020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e03691b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0369340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e03694d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0369660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e03697f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0369980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0367e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0367e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e03661c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0366350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e03664e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0366670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0366800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0366990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0366b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0366cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e03630a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e03630a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0363420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e03635b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0363740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e03638d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0363a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0363bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0363d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0362020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e03603f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e03603f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0360770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0360900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0360a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0360c20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0360db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e035f020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e035f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e035f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e035d6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e035d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e035da50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e035dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e035dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e035c020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e035c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e035c340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e035c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e035c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e035a9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e035a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e035ad30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0359020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e03591b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0359340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e03594d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0359660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e03597f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0359980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0357e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0357e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e03561c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0356350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e03564e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0356670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0356800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0356990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0356b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0356cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e03530a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e03530a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0353420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e03535b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0353740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e03538d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0353a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0353bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0353d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0351020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fc6e0e34440" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e34440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e347c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e34950"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e34ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e34c70"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e34e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e33020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e331b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e33340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fc6e0e318f0" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e318f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e31c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e31e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e30020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e301b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e30340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e304d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e30660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e307f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fc6e0e37020" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e37020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e373a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e37530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e376c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e37850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e379e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e37b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e37d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fc6e0e335d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e335d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e33950"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e33ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e33c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e33e00"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e32020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e321b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e32340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e324d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fc6e0e30a80" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e30a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e30e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e2f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e2f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e2f340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e2f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e2f660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e2f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e2f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fc6e0e362b0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e362b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e36630"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e367c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e36950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e36ae0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e36c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e36e00"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e34020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e341b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fc6e0e32760" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e32760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e32ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e32c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e32e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e31020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e311b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e31340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e314d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e31660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fc6e0e2fc10" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e2fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e2e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e2e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e2e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e2e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e2e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e2e7f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e2e980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e2eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e02ffc90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e02ffc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e02fe0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e02fe230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02fe3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e02fe550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e02fe6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e02fe870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e02fea00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e02feb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e02fce20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e02fce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e02fb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e02fb350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02fb4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e02fb670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e02fb800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e02fb990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e02fbb20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e02fbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e02f80a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e02f80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e02f8420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e02f85b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02f8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e02f88d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e02f8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e02f8bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e02f8d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e02f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e02f53f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e02f53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e02f5770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e02f5900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02f5a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e02f5c20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e02f5db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e02f4020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e02f41b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e02f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e02f26d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e02f26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e02f2a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e02f2be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02f2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e02f1020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e02f11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e02f1340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e02f14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e02f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e02ef9b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e02ef9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e02efd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e02ee020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02ee1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e02ee340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e02ee4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e02ee660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e02ee7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e02ee980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e02ece20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e02ece20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e02eb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e02eb350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02eb4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e02eb670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e02eb800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e02eb990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e02ebb20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e02ebcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e02e80a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e02e80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e02e8420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e02e85b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02e8740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e02e88d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e02e8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e02e8bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e02e8d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e02e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fc6e0e25760" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e25760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e25ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e25c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e25e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e24020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e241b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e24340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e244d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e24660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fc6e0e22c10" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e22c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e21020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e211b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e21340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e214d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e21660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e217f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e21980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e21b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fc6e0e273f0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e273f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e27770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e27900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e27a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e27c20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e27db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e26020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e261b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e26340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fc6e0e248f0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e248f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e24c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e24e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e23020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e231b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e23340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e234d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e23660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e237f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fc6e0e21da0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e21da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e20180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e20310"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e204a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e20630"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e207c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e20950"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e20ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e20c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fc6e0e265d0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e265d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e26950"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e26ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e26c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e26e00"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e25020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e251b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e25340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e254d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fc6e0e23a80" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e23a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e23e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e22020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e221b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e22340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e224d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e22660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e227f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e22980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fc6e0e1f020" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e1f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e1f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e1f530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e1f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e1f850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e1f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e1fb70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e1fd00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0294c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0294c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e02930a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0293230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02933c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0293550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e02936e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0293870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0293a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0293b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0291e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0291e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e02901c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0290350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02904e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0290670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0290800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0290990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0290b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0290cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e028d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e028d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e028d420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e028d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e028d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e028d8d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e028da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e028dbf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e028dd80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e028c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e028a3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e028a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e028a770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e028a900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e028aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e028ac20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e028adb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0289020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e02891b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0289340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e02876d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e02876d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0287a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0287be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0287d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0286020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e02861b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0286340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e02864d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0286660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e02849b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e02849b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0284d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0283020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02831b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0283340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e02834d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0283660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e02837f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0283980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0281e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0281e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e02801c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0280350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02804e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0280670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0280800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0280990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0280b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0280cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e027d0a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e027d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e027d420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e027d5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e027d740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e027d8d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e027da60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e027dbf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e027dd80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e027c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fc6e0e16a80" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fc6e0e16a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e16e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e15020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e151b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e15340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e154d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e15660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e157f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e15980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fc6e0e12020" loc="49:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fc6e0e12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e123a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e12530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e126c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e12850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e129e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e12b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e12d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e11020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fc6e0e187a0" loc="44:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fc6e0e187a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e18b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e18cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e18e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e17020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e171b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e17340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e174d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e17660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fc6e0e15c10" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fc6e0e15c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e14020"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e141b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e14340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e144d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e14660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e147f0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e14980"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e14b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fc6e0e112b0" loc="50:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fc6e0e112b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e11630"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e117c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e11950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e11ae0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e11c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e11e00"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e0f020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e0f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fc6e0e178f0" loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fc6e0e178f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e17c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e17e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e16020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e161b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e16340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e164d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e16660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e167f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fc6e0e14da0" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fc6e0e14da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e13180"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e13310"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e134a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e13630"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e137c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e13950"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e13ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e13c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fc6e0e0f440" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fc6e0e0f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e0f7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e0f950"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e0fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e0fc70"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e0fe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e0e020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e0e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e0e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0229c90" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0229c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e02280a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0228230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02283c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0228550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e02286e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0228870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0228a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0228b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0226e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0226e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e02251c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0225350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02254e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0225670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0225800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0225990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0225b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0225cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e02220a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e02220a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0222420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e02225b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0222740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e02228d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0222a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0222bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0222d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0221020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e021f3f0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e021f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e021f770"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e021f900"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e021fa90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e021fc20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e021fdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e021e020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e021e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e021e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e021c6d0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e021c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e021ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e021cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e021cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e021b020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e021b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e021b340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e021b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e021b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e02199b0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e02199b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0219d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0218020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02181b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0218340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e02184d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0218660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e02187f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0218980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0216e20" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0216e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e02151c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0215350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e02154e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0215670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0215800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0215990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0215b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0215cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e02120a0" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e02120a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0212420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e02125b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0212740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e02128d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0212a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0212bf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0212d80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0211020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0e09e20" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0e09e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e081c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e08350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e084e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e08670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e08800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e08990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e08b20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e08cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0e039b0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0e039b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0e03d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0e02020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0e021b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0e02340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0e024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0e02660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0e027f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0e02980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0dfe6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0dfe6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0dfea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0dfebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0dfed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0dfc020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0dfc1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0dfc340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0dfc4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0dfc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0df8160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0df8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0df84e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0df8670"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0df8800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0df8990"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0df8b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0df8cb0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0df8e40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0df7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0df3c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0df3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0df20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0df2230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0df23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0df2550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0df26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0df2870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0df2a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0df2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0dee6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0dee6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0deea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0deebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0deed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0dec020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0dec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0dec340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0dec4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0dec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0de8270" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0de8270"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0de85f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0de8780"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0de8910"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0de8aa0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0de8c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0de8dc0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0de7020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0de71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0de3d00" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0de3d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0de20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0de2230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0de23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0de2550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0de26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0de2870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0de2a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0de2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0dde6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0dde6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0ddea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0ddebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0dded70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0ddd020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0ddd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0ddd340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0ddd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0ddd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0dd8160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0dd8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0dd84e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0dd8670"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0dd8800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0dd8990"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0dd8b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0dd8cb0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0dd8e40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0dd7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0dd3c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0dd3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0dd20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0dd2230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0dd23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0dd2550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0dd26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0dd2870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0dd2a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0dd2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0dce6d0" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0dce6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0dcea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0dcebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0dced70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0dcd020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0dcd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0dcd340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0dcd4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0dcd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0dc8160" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0dc8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0dc84e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0dc8670"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0dc8800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0dc8990"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0dc8b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0dc8cb0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0dc8e40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0dc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0dc3c90" loc="47:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0dc3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0dc20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0dc2230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0dc23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0dc2550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0dc26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0dc2870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0dc2a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0dc2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0da7020" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0da7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0da73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0da7530"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0da76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0da7850"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0da79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0da7b70"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0da7d00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0da6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0da26d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0da26d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0da2a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0da2be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0da2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0da1020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0da11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0da1340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0da14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0da1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d9ec90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d9ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d9d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d9d230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d9d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d9d550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d9d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d9d870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d9da00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d9db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d98180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d98180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d98500"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d98690"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d98820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d989b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d98b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d98cd0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d98e60"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d93830" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d93830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d93bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d93d40"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d92020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d921b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d92340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d924d0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d92660"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d927f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d8fe20" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d8fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d8e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d8e350"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d8e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d8e670"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d8e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d8e990"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d8eb20"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d8ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d89460" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d89460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d897e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d89970"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d89b00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d89c90"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d89e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d88020"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d881b0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d88340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d849b0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.H7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d849b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d84d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d83020"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d831b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d83340"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d834d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d83660"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d837f0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d83980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d7f160" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d7f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d7f4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d7f670"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d7f800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d7f990"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d7fb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d7fcb0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d7fe40"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d7a6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d7a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d7aa50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d7abe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d7ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d79020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d791b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d79340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d794d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d79660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d76c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d76c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d740a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d74230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d743c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d74550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d746e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d74870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d74a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d74b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d70180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d70180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d70500"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d70690"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d70820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d709b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d70b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d70cd0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d70e60"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d6b6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d6b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d6ba50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d6bbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d6bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d6a020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d6a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d6a340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d6a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d6a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d67c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d67c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d650a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d65230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d653c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d65550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d656e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d65870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d65a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d65b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d61180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d61180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d61500"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d61690"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d61820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d619b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d61b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d61cd0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d61e60"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d5c6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.J7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d5c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d5ca50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d5cbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d5cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d5b020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d5b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d5b340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d5b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d5b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d58c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d58c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d570a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d57230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d573c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d57550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d576e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d57870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d57a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d57b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d52180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d52180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d52500"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d52690"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d52820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d529b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d52b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d52cd0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d52e60"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d4d6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d4d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d4da50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d4dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d4dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d4c020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d4c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d4c340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d4c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d4c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d49c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d49c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d480a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d48230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d483c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d48550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d486e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d48870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d48a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d48b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d43180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d43180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d43500"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d43690"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d43820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d439b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d43b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d43cd0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d43e60"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d42020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d3e6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d3e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d3ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d3ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d3ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d3d020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d3d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d3d340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d3d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d3d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d3ac90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d3ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d390a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d39230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d393c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d39550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d396e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d39870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d39a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d39b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d34180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.K7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d34180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d34500"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d34690"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d34820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d349b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d34b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d34cd0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d34e60"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d2f6d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d2f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d2fa50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d2fbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d2fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d2e020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d2e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d2e340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d2e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d2e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d2bc90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d2bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d2a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d2a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d2a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d2a550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d2a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d2a870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d2aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d2ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d25180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d25180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d25500"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d25690"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d25820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d259b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d25b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d25cd0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d25e60"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d206d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d206d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d20a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d20be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d20d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d1f020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d1f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d1f340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d1f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d1f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d1b0a0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d1b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d1b420"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d1b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d1b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d1b8d0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d1ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d1bbf0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d1bd80"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d166d0" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d166d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d16a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d16be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d16d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d15020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d151b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d15340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d154d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d15660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d11c90" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d11c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d100a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d10230"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d103c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d10550"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d106e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d10870"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d10a00"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d10b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fc6e0d0c180" loc="47:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtm1280GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm1280GeneralIOC.L7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fc6e0d0c180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0d0c500"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0d0c690"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0d0c820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0d0c9b0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0d0cb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0d0ccd0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0d0ce60"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0d0b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7fc6e0cb7e60" loc="12:PS2/PS2C.nc">
      <component-ref qname="PS2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7fc6e0cb7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e0cb4210"/>
        <function-ref name="receivedChar" scoped="" ref="0x7fc6e0cb43a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockIRQ" ref="0x7fc6e0c84d90" loc="22:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockIRQ" scoped="" ref="0x7fc6e0c84d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fc6e0c8a180"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e0c8a310"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e0c8a4a0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fc6e0c8a630"/>
        <function-ref name="reset" scoped="" ref="0x7fc6e0c8a7c0"/>
        <function-ref name="setMask" scoped="" ref="0x7fc6e0c8a950"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e0c8aae0"/>
        <function-ref name="getPins" scoped="" ref="0x7fc6e0c8ac70"/>
        <function-ref name="getMask" scoped="" ref="0x7fc6e0c8ae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ClockPin" ref="0x7fc6e0c891c0" loc="23:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClockPin" scoped="" ref="0x7fc6e0c891c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0c89540"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0c896d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0c89860"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0c899f0"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0c89b80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0c89d10"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0c83020"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0c831b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataPin" ref="0x7fc6e0c834f0" loc="24:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPin" scoped="" ref="0x7fc6e0c834f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0c83870"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0c83a00"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0c83b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0c83d20"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0c82020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0c821b0"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0c82340"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0c824d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PS2" ref="0x7fc6e0c8d860" loc="19:PS2/PS2P.nc">
      <component-ref qname="PS2P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PS2" scoped="" ref="0x7fc6e0c8d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PS2"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e0c8dbe0"/>
        <function-ref name="receivedChar" scoped="" ref="0x7fc6e0c8dd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x7fc6e0cb2ca0" loc="46:../tinyos_ws18/tos/chips_ecs/atm1280/pins/HplAtmegaPinChange2C.nc">
      <component-ref qname="HplAtmegaPinChange2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x7fc6e0cb2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fc6e0c5b0a0"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e0c5b230"/>
        <function-ref name="disable" scoped="" ref="0x7fc6e0c5b3c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fc6e0c5b550"/>
        <function-ref name="reset" scoped="" ref="0x7fc6e0c5b6e0"/>
        <function-ref name="setMask" scoped="" ref="0x7fc6e0c5b870"/>
        <function-ref name="enable" scoped="" ref="0x7fc6e0c5ba00"/>
        <function-ref name="getPins" scoped="" ref="0x7fc6e0c5bb90"/>
        <function-ref name="getMask" scoped="" ref="0x7fc6e0c5bd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fc6e0c433e0" loc="14:VolumeAdc/VolumeAdcC.nc">
      <component-ref qname="VolumeAdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fc6e0c433e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e0c42020"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e0c424a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fc6e0c3be10" loc="17:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e0c3be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc6e0c3d1c0"/>
        <function-ref name="configure" scoped="" ref="0x7fc6e0c3d350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VolumePin" ref="0x7fc6e0c3d700" loc="19:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VolumePin" scoped="" ref="0x7fc6e0c3d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0c3da80"/>
        <function-ref name="isInput" scoped="" ref="0x7fc6e0c3dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0c3dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fc6e0c3a020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e0c3a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0c3a340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0c3a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fc6e0c3a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcConfig" ref="0x7fc6e0c3b470" loc="16:VolumeAdc/VolumeAdcP.nc">
      <component-ref qname="VolumeAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fc6e0c3b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fc6e0c3b7f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc6e0c3b980"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fc6e0c3bb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc6e0aeec10" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e0aeec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc6e0aed020"/>
        <function-ref name="configure" scoped="" ref="0x7fc6e0aed1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fc6e0af0be0" loc="22:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fc6e0af0be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e0aef860"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e0aefce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7fc6e0aee320" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcReadClientC.nc">
      <component-ref qname="VolumeAdcC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fc6e0aee320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fc6e0aee6a0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc6e0aee830"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fc6e0aee9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fc6e0c2b920" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fc6e0c2b920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e0c2a560"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e0c2a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fc6e0c248f0" loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7fc6e0c248f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e0c285a0"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e0c28a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fc6e0c235e0" loc="24:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e0c235e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e0c23960"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e0c23af0"/>
        <function-ref name="request" scoped="" ref="0x7fc6e0c23c80"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e0c23e10"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e0c22020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7fc6e0c276d0" loc="23:../tinyos_ws18/tos/chips_ecs/atm1280/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fc6e0c276d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fc6e0c27a50"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc6e0c27be0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fc6e0c27d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc6e0c1b210" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e0c1b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc6e0c1b590"/>
        <function-ref name="configure" scoped="" ref="0x7fc6e0c1b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7fc6e0c17780" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7fc6e0c17780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fc6e0c17b00"/>
        <function-ref name="cancel" scoped="" ref="0x7fc6e0c17c90"/>
        <function-ref name="dataReady" scoped="" ref="0x7fc6e0c17e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc6e0c1e280" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e0c1e280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e0c1e600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e0c1e790"/>
        <function-ref name="request" scoped="" ref="0x7fc6e0c1e920"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e0c1eab0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e0c1ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7fc6e0c12420" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcC.nc">
      <component-ref qname="Atm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7fc6e0c12420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fc6e0c127a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fc6e0c12930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm1280Adc" ref="0x7fc6e0bfe710" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7fc6e0bfe710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fc6e0bfea90"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fc6e0bfec20"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fc6e0bfedb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fc6e0c0c020"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fc6e0c0c1b0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fc6e0c0c340"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fc6e0c0c4d0"/>
        <function-ref name="isComplete" scoped="" ref="0x7fc6e0c0c660"/>
        <function-ref name="cancel" scoped="" ref="0x7fc6e0c0c7f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fc6e0c0c980"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fc6e0c0cb10"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fc6e0c0cca0"/>
        <function-ref name="startConversion" scoped="" ref="0x7fc6e0c0ce30"/>
        <function-ref name="isStarted" scoped="" ref="0x7fc6e0c0b120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fc6e0c0b2b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fc6e0c0b440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fc6e0c0b5d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e0c0b760"/>
        <function-ref name="dataReady" scoped="" ref="0x7fc6e0c0b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcSingle" ref="0x7fc6e0c0e830" loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7fc6e0c0e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fc6e0c0ebb0"/>
        <function-ref name="cancel" scoped="" ref="0x7fc6e0c0ed40"/>
        <function-ref name="dataReady" scoped="" ref="0x7fc6e0c0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e0c0f830" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e0c0f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e0c0fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7fc6e0c0bbe0" loc="61:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fc6e0c0bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fc6e0bfc020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fc6e0bfc1b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fc6e0bfc340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fc6e0bfc4d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fc6e0bfc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7fc6e0c0e020" loc="55:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc6e0c0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc6e0c0e3a0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e0c0e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1280AdcMultiple" ref="0x7fc6e0c0d330" loc="57:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcP.nc">
      <component-ref qname="Atm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcMultiple" scoped="" ref="0x7fc6e0c0d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fc6e0c0d6b0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fc6e0c0d840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7fc6e0bcb460" loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcC.nc">
      <component-ref qname="HplAtm1280AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7fc6e0bcb460"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fc6e0bcb7e0"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fc6e0bcb970"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fc6e0bcbb00"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fc6e0bcbc90"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fc6e0bcbe20"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fc6e0bca020"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fc6e0bca1b0"/>
        <function-ref name="isComplete" scoped="" ref="0x7fc6e0bca340"/>
        <function-ref name="cancel" scoped="" ref="0x7fc6e0bca4d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fc6e0bca660"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fc6e0bca7f0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fc6e0bca980"/>
        <function-ref name="startConversion" scoped="" ref="0x7fc6e0bcab10"/>
        <function-ref name="isStarted" scoped="" ref="0x7fc6e0bcada0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fc6e0bc9020"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fc6e0bc91b0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fc6e0bc9340"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e0bc94d0"/>
        <function-ref name="dataReady" scoped="" ref="0x7fc6e0bc9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7fc6e0bc4c10" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fc6e0bc4c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fc6e0bc3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1280Adc" ref="0x7fc6e0bc67d0" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280AdcP.nc">
      <component-ref qname="HplAtm1280AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1280Adc" scoped="" ref="0x7fc6e0bc67d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1280Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7fc6e0bc6b50"/>
        <function-ref name="getAdmux" scoped="" ref="0x7fc6e0bc6ce0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7fc6e0bc6e70"/>
        <function-ref name="isEnabled" scoped="" ref="0x7fc6e0bc5030"/>
        <function-ref name="enableAdc" scoped="" ref="0x7fc6e0bc51c0"/>
        <function-ref name="setAdmux" scoped="" ref="0x7fc6e0bc5350"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7fc6e0bc54e0"/>
        <function-ref name="isComplete" scoped="" ref="0x7fc6e0bc5670"/>
        <function-ref name="cancel" scoped="" ref="0x7fc6e0bc5800"/>
        <function-ref name="disableAdc" scoped="" ref="0x7fc6e0bc5990"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7fc6e0bc5b20"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7fc6e0bc5cb0"/>
        <function-ref name="startConversion" scoped="" ref="0x7fc6e0bc5e40"/>
        <function-ref name="isStarted" scoped="" ref="0x7fc6e0bc4120"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7fc6e0bc42b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x7fc6e0bc4440"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7fc6e0bc45d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fc6e0bc4760"/>
        <function-ref name="dataReady" scoped="" ref="0x7fc6e0bc48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc6e0b59c00" loc="92:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc6e0b59c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc6e0b58020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc6e0b581b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc6e0b57930" loc="96:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e0b57930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc6e0b57cd0"/>
        <function-ref name="configure" scoped="" ref="0x7fc6e0b57e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fc6e0b58400" loc="93:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e0b58400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e0b58780"/>
        <function-ref name="requested" scoped="" ref="0x7fc6e0b58910"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e0b58aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e0b58c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc6e0b58dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc6e0b5ae70" loc="91:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e0b5ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e0b59240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e0b593d0"/>
        <function-ref name="request" scoped="" ref="0x7fc6e0b59560"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e0b596f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e0b59880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc6e0b57060" loc="94:../tinyos_ws18/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e0b57060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc6e0b573e0"/>
        <function-ref name="userId" scoped="" ref="0x7fc6e0b57570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e0027c00" loc="44:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e0027c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e0026020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7fc6e00262b0" loc="45:../tinyos_ws18/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7fc6e00262b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc6e0026630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc6e00267c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc6e0026950"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc6e0026ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fc6e00233a0" loc="55:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7fc6e00233a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fc6e0023740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc6e00238d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fc6e0021210" loc="60:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fc6e0021210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fc6e00215b0"/>
        <function-ref name="configure" scoped="" ref="0x7fc6e0021740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fc6e00219d0" loc="61:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7fc6e00219d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fc6e0021d50"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fc6e001f020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fc6e001f1b0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fc6e001f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fc6e0023b20" loc="56:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e0023b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e0022020"/>
        <function-ref name="requested" scoped="" ref="0x7fc6e00221b0"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e0022340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e00224d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc6e0022660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fc6e001f590" loc="62:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fc6e001f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fc6e001f910"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fc6e001faa0"/>
        <function-ref name="led1On" scoped="" ref="0x7fc6e001fc30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fc6e001fdc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fc6e001e020"/>
        <function-ref name="get" scoped="" ref="0x7fc6e001e1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fc6e001e340"/>
        <function-ref name="led0On" scoped="" ref="0x7fc6e001e980"/>
        <function-ref name="set" scoped="" ref="0x7fc6e001e660"/>
        <function-ref name="led2On" scoped="" ref="0x7fc6e001e4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fc6e001e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fc6e00244d0" loc="54:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e00244d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e0024870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e0024a00"/>
        <function-ref name="request" scoped="" ref="0x7fc6e0024b90"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e0024d20"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e0023020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fc6e00228b0" loc="57:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e00228b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc6e0022c30"/>
        <function-ref name="userId" scoped="" ref="0x7fc6e0022dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fc6e001ec50" loc="75:../tinyos_ws18/tos/system/ArbiterP.nc">
      <component-ref qname="Atm1280AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7fc6e001ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e001d020"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e001d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fc6e0b53780" loc="72:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fc6e0b53780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fc6e0b53b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fc6e0b53d50" loc="73:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6e0b53d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e0b49100"/>
        <function-ref name="requested" scoped="" ref="0x7fc6e0b49290"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e0b49420"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e0b495b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc6e0b49740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fc6e0b53020" loc="70:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc6e0b53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc6e0b533a0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e0b53530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fc6e0b49990" loc="74:../tinyos_ws18/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm1280AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6e0b49990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc6e0b49d10"/>
        <function-ref name="userId" scoped="" ref="0x7fc6e0b48020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7fc6dffebdc0" loc="62:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7fc6dffebdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7fc6dffea180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7fc6dffea3d0" loc="63:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fc6dffea3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6dffea750"/>
        <function-ref name="requested" scoped="" ref="0x7fc6dffea8e0"/>
        <function-ref name="granted" scoped="" ref="0x7fc6dffeaa70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6dffeac00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fc6dffead90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7fc6dffeb660" loc="60:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7fc6dffeb660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fc6dffeb9e0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6dffebb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fc6dffe9020" loc="64:../tinyos_ws18/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm1280AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fc6dffe9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fc6dffe93a0"/>
        <function-ref name="userId" scoped="" ref="0x7fc6dffe9530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fc6e0b39740" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fc6e0b39740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0c5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc6e1e0c930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fc6e0b385b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcSingle" ref="0x7fc6e0b3c9f0" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcSingle" scoped="" ref="0x7fc6e0b3c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7fc6e0b3cd70"/>
        <function-ref name="cancel" scoped="" ref="0x7fc6e0b3a020"/>
        <function-ref name="dataReady" scoped="" ref="0x7fc6e0b3a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fc6e0b3f410" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fc6e0b3f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e0b3e020"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e0b3e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7fc6e0b3d1d0" loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7fc6e0b3d1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e0b3de00"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e0b3c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1280AdcConfig" ref="0x7fc6e0b3aa10" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1280AdcConfig" scoped="" ref="0x7fc6e0b3aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7fc6e0b3ad90"/>
        <function-ref name="getChannel" scoped="" ref="0x7fc6e0b39020"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7fc6e0b391b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7fc6e0b27820" loc="104:../tinyos_ws18/tos/chips_ecs/atm1280/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7fc6e0b27820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e0b27ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e0b27d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7fc6e0b12150" loc="24:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7fc6e0b12150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e0b12d60"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e0afa260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7fc6e0afaaf0" loc="26:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7fc6e0afaaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fc6e0af9750"/>
        <function-ref name="readDone" scoped="" ref="0x7fc6e0af9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fc6e0af7300" loc="27:../tinyos_ws18/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7fc6e0af7300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fc6e0af76a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fc6e0af7830"/>
        <function-ref name="request" scoped="" ref="0x7fc6e0af79c0"/>
        <function-ref name="granted" scoped="" ref="0x7fc6e0af7b50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fc6e0af7ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BufferedLcd" ref="0x7fc6e0c44590" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdC.nc">
      <component-ref qname="BufferedLcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BufferedLcd" scoped="" ref="0x7fc6e0c44590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferedLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e0c44910"/>
        <function-ref name="forceRefresh" scoped="" ref="0x7fc6e0c44aa0"/>
        <function-ref name="goTo" scoped="" ref="0x7fc6e0c44c30"/>
        <function-ref name="write" scoped="" ref="0x7fc6e0c44dc0"/>
        <function-ref name="autoRefresh" scoped="" ref="0x7fc6e0ae7020"/>
        <function-ref name="write_P" scoped="" ref="0x7fc6e0ae71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc6e0ae6560" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="BufferedLcdC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fc6e0ae6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e0ae3a20"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e0ae4020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e0ae4da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e0ae4920"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e0ae14a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e0ae1020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e0ae44a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e0ae51b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e0ae3410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e0ae5680"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e0ae5b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BufferedLcd" ref="0x7fc6e0aaf020" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BufferedLcd" scoped="" ref="0x7fc6e0aaf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BufferedLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fc6e0aaf3a0"/>
        <function-ref name="forceRefresh" scoped="" ref="0x7fc6e0aaf530"/>
        <function-ref name="goTo" scoped="" ref="0x7fc6e0aaf6c0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e0aaf850"/>
        <function-ref name="autoRefresh" scoped="" ref="0x7fc6e0aaf9e0"/>
        <function-ref name="write_P" scoped="" ref="0x7fc6e0aafb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e0aa9c30" loc="10:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e0aa9c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e0aa7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Lcd" ref="0x7fc6e0aa9490" loc="9:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Lcd" scoped="" ref="0x7fc6e0aa9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="writeData" scoped="" ref="0x7fc6e0aa9810"/>
        <function-ref name="writeCommand" scoped="" ref="0x7fc6e0aa99a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="refresh" ref="0x7fc6e0aa72f0" loc="34:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="refresh" scoped="" ref="0x7fc6e0aa72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fc6e0aa7670"/>
        <function-ref name="runTask" scoped="" ref="0x7fc6e0aa7800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fc6e0aae020" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcdP.nc">
      <component-ref qname="BufferedLcdC.BufferedLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fc6e0aae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e0aaa630"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e0aaca60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e0aab920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e0aab4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e0aa9020"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e0aaaab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e0aab020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e0aaec10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e0aaa020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e0aac110"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e0aac5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplLcd" ref="0x7fc6e0aa3100" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdC.nc">
      <component-ref qname="HplLcdC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplLcd" scoped="" ref="0x7fc6e0aa3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="writeData" scoped="" ref="0x7fc6e0aa3480"/>
        <function-ref name="writeCommand" scoped="" ref="0x7fc6e0aa3610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fc6e0a9eaa0" loc="10:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x7fc6e0a9eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0c5c0"/>
            <typename><typedef-ref name="TMicro" ref="0x7fc6e1e0c930"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fc6e0a9d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fc6e0aa27c0" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fc6e0aa27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fc6e0aa2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplLcd" ref="0x7fc6e0aa2e10" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplLcd" scoped="" ref="0x7fc6e0aa2e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplLcd"/>
      </instance>
      <interface-functions>
        <function-ref name="writeData" scoped="" ref="0x7fc6e0a9f1c0"/>
        <function-ref name="writeCommand" scoped="" ref="0x7fc6e0a9f350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port" ref="0x7fc6e0a9f6e0" loc="9:../tinyos_ws18/tos/lib_ecs/lcd/HplLcdP.nc">
      <component-ref qname="HplLcdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Port" scoped="" ref="0x7fc6e0a9f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIOPort"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fc6e0a9fa60"/>
        <function-ref name="clear" scoped="" ref="0x7fc6e0a9fbf0"/>
        <function-ref name="toggle" scoped="" ref="0x7fc6e0a9fd80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fc6e0a9e020"/>
        <function-ref name="read" scoped="" ref="0x7fc6e0a9e1b0"/>
        <function-ref name="write" scoped="" ref="0x7fc6e0a9e340"/>
        <function-ref name="set" scoped="" ref="0x7fc6e0a9e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc6e0a88d00" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.VolumeTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fc6e0a88d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e0a84220"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e0a867c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e0a85590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e0a85110"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e0a84b20"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e0a846a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e0a86c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e0a87940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e0a85ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e0a87e10"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e0a86340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc6e0a81750" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.DisplayTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fc6e0a81750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e0a7ec40"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e0a7f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e0a7e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e0a7fae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e0a7c590"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e0a7c110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e0a7f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e0a80390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e0a7e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e0a80860"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e0a80d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fc6e0a7a0b0" loc="45:../tinyos_ws18/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioScannerAppC.ErrorTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fc6e0a7a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e0e1a0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fc6e1e0e510"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fc6e0a76630"/>
        <function-ref name="fired" scoped="" ref="0x7fc6e0a79b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fc6e0a78920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fc6e0a784a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fc6e0a75020"/>
        <function-ref name="gett0" scoped="" ref="0x7fc6e0a76ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fc6e0a78020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fc6e0a7aca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fc6e0a76020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fc6e0a791b0"/>
        <function-ref name="stop" scoped="" ref="0x7fc6e0a79680"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../tinyos_ws18/tos/interfaces/Init.nc">
      <documentation loc="34:../tinyos_ws18/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fc6e1d34740" loc="62:../tinyos_ws18/tos/interfaces/Init.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../tinyos_ws18/tos/interfaces/Boot.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fc6e1d35350" loc="60:../tinyos_ws18/tos/interfaces/Boot.nc">
        <documentation loc="51:../tinyos_ws18/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7fc6e1d2cb70" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7fc6e1d2c8f0" loc="60:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7fc6e1d2f070" loc="31:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7fc6e1d2faf0" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fc6e1d2f870" loc="39:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7fc6e1d2d630" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fc6e1d2d3b0" loc="46:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7fc6e1d2c020" loc="53:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../tinyos_ws18/tos/interfaces/Scheduler.nc">
      <documentation loc="42:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fc6e1ec36c0" loc="57:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="54:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fc6e1ec26a0" loc="72:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fc6e1ec3e30" loc="65:../tinyos_ws18/tos/interfaces/Scheduler.nc">
        <documentation loc="59:../tinyos_ws18/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fc6e1ebaa30" loc="67:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fc6e1eb82b0" loc="75:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../tinyos_ws18/tos/interfaces/McuSleep.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7fc6e1dc0d40" loc="76:../tinyos_ws18/tos/interfaces/McuSleep.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fc6e1da0940" loc="62:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../tinyos_ws18/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fc6e1e3f470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fc6e1da11f0" loc="52:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Database" loc="23:Database/Database.nc">
      <function command="" provided="0" name="getChannelList" ref="0x7fc6e1cd0530" loc="40:Database/Database.nc">
        <documentation loc="34:Database/Database.nc">
          <short>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10; </short>
          <long>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10; @param onlyFavorites tells server to send only the channels with a&#10;        registered quickDial number, if not zero&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="onlyFavorites" ref="0x7fc6e1cd02b0" loc="40:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChannelEntry" ref="0x7fc6e1cce630" loc="59:Database/Database.nc">
        <documentation loc="54:Database/Database.nc">
          <short>&#10; Received highscore entry from the server.</short>
          <long>&#10; Received highscore entry from the server.&#10; @param id The channel index from the database store&#10; @param channel The channel information, see channelInfo typedef&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7fc6e1cd34a0"/>
              <typename><typedef-ref name="channelInfo" ref="0x7fc6e1cd3ad0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fc6e1cce020" loc="59:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7fc6e1cce3a0" loc="59:Database/Database.nc">
            <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7fc6e1cd34a0"/>
              <typename><typedef-ref name="channelInfo" ref="0x7fc6e1cd3ad0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="saveChannel" ref="0x7fc6e1cd2970" loc="31:Database/Database.nc">
        <documentation loc="25:Database/Database.nc">
          <short>&#10; Save a new channel, or change properties of an existing one.</short>
          <long>&#10; Save a new channel, or change properties of an existing one.&#10; @param id The channel index from the database store, 0xFF to autoselect,&#10;           must be between 0 and 15 if passed manually&#10; @param channel The channel information, see channelInfo typedef&#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7fc6e1cd34a0"/>
                <typename><typedef-ref name="channelInfo" ref="0x7fc6e1cd3ad0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fc6e1cd2320" loc="31:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7fc6e1cd26e0" loc="31:Database/Database.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x7fc6e1cd34a0"/>
                <typename><typedef-ref name="channelInfo" ref="0x7fc6e1cd3ad0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="savedChannel" ref="0x7fc6e1ccd420" loc="67:Database/Database.nc">
        <documentation loc="61:Database/Database.nc">
          <short>&#10; Server proceesed our request to save a Channel&#10; </short>
          <long>&#10; Server proceesed our request to save a Channel&#10; @param id The channel index from the database store, the one we passed&#10;           or the which was choosen if 0xFF was passed.&#10; @param result 0 = OK, 1 = No free index (only ID auto choose), 2 = DB error &#10;</long>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fc6e1ccedf0" loc="67:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="result" ref="0x7fc6e1ccd190" loc="67:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fc6e1ccf020" loc="46:Database/Database.nc">
        <documentation loc="42:Database/Database.nc">
          <short>&#10; Request the channel list from the database server&#10; Received channels will be signaled through receivedChannelEntry&#10;</short>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fc6e1cd0d70" loc="46:Database/Database.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="purgeChannelList" ref="0x7fc6e1ccf7e0" loc="52:Database/Database.nc">
        <documentation loc="48:Database/Database.nc">
          <short>&#10; Request that the Database purges all channels and their state&#10; Received channels will be signaled through receivedChannelEntry&#10;</short>
        </documentation>
        <interfacedef-ref qname="Database"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fc6e1ccad40" loc="49:../tinyos_ws18/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fc6e1ccad40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fc6e1cbd620" loc="55:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="50:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fc6e1cbc3a0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fc6e1ccad40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fc6e1cbdda0" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fc6e1cbc110" loc="63:../tinyos_ws18/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fc6e1ccad40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PS2" loc="1:PS2/PS2.nc">
      <function command="" provided="0" name="init" ref="0x7fc6e1cbf020" loc="4:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedChar" ref="0x7fc6e1cbf9c0" loc="7:PS2/PS2.nc">
        <interfacedef-ref qname="PS2"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="chr" ref="0x7fc6e1cbf740" loc="7:PS2/PS2.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc6e1cbb740" loc="53:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc6e1cbb740"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fc6e1cb2420" loc="136:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="132:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fc6e1cb7d60" loc="83:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fc6e1cb4b10" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fc6e1cb4540" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fc6e1cb4880" loc="114:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fc6e1cb6d60" loc="98:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="94:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fc6e1cb1460" loc="151:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="146:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fc6e1cb2bb0" loc="144:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="138:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fc6e1cb6570" loc="92:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="86:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fc6e1cb82e0" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fc6e1cb8060" loc="64:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fc6e1cb3aa0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="116:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fc6e1cb34d0" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fc6e1cb3810" loc="129:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fc6e1cb8da0" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fc6e1cb8b20" loc="73:../tinyos_ws18/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc6e1cb7650" loc="78:../tinyos_ws18/tos/lib/timer/Timer.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BufferedLcd" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
      <documentation loc="44:/usr/lib/gcc/avr/4.9.1/../../../../avr/include/avr/pgmspace.h">
        <short> \defgroup avr_pgmspace &#60;avr/pgmspace.h>: Program Space Utilities&#10;\code&#10;#include &#60;avr/io.h>&#10;#include &#60;avr/pgmspace.h>&#10;\endcode&#10;The functions in this module provide interfaces for a program to access&#10;data stored in program space (flash memory) of the device.</short>
        <long> \defgroup avr_pgmspace &#60;avr/pgmspace.h>: Program Space Utilities&#10;\code&#10;#include &#60;avr/io.h>&#10;#include &#60;avr/pgmspace.h>&#10;\endcode&#10;The functions in this module provide interfaces for a program to access&#10;data stored in program space (flash memory) of the device.  In order to&#10;use these functions, the target device must support either the \c LPM or&#10;\c ELPM instructions.&#10;\note These functions are an attempt to provide some compatibility with&#10;header files that come with IAR C, to make porting applications between&#10;different compilers easier.  This is not 100% compatibility though (GCC&#10;does not have full support for multiple address spaces yet).&#10;\note If you are working with strings which are completely based in ram,&#10;use the standard string functions described in \ref avr_string.&#10;\note If possible, put your constant tables in the lower 64 KB and use&#10;pgm_read_byte_near() or pgm_read_word_near() instead of&#10;pgm_read_byte_far() or pgm_read_word_far() since it is more efficient that&#10;way, and you can still use the upper 64K for executable code.&#10;All functions that are suffixed with a \c _P \e require their&#10;arguments to be in the lower 64 KB of the flash ROM, as they do&#10;not use ELPM instructions.  This is normally not a big concern as&#10;the linker setup arranges any program space constants declared&#10;using the macros from this header file so they are placed right after&#10;the interrupt vectors, and in front of any executable code.  However,&#10;it can become a problem if there are too many of these constants, or&#10;for bootloaders on devices with more than 64 KB of ROM.&#10;&#60;em>All these functions will not work in that situation.&#60;/em>&#10;\note For &#60;b>Xmega&#60;/b> devices, make sure the NVM controller&#10;command register (\c NVM.CMD or \c NVM_CMD) is set to 0x00 (NOP)&#10;before using any of these functions.&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fc6e1cd9730" loc="13:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="forceRefresh" ref="0x7fc6e1cd6d80" loc="17:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="goTo" ref="0x7fc6e1cd6690" loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="line" ref="0x7fc6e1cd60d0" loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="col" ref="0x7fc6e1cd6400" loc="16:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc6e1cd80b0" loc="14:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="string" ref="0x7fc6e1cd9dc0" loc="14:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="autoRefresh" ref="0x7fc6e1cd9020" loc="12:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <documentation loc="9:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
          <short>&#10; </short>
          <long>&#10; @param period&#9;refresh period in ms, set to 0 to disable auto refresh&#10;</long>
        </documentation>
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="period" ref="0x7fc6e1cdac50" loc="12:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write_P" ref="0x7fc6e1cd8a10" loc="15:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
        <interfacedef-ref qname="BufferedLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="string" ref="0x7fc6e1cd8790" loc="15:../tinyos_ws18/tos/lib_ecs/lcd/BufferedLcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FMClick" loc="19:FMClick/FMClick.nc">
      <function command="" provided="0" name="seek" ref="0x7fc6e1cc8cc0" loc="22:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7fc6e1cd41b0"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7fc6e1cd4be0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fc6e1cc8a40" loc="22:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7fc6e1cd41b0"/>
              <typename><typedef-ref name="seekmode_t" ref="0x7fc6e1cd4be0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initDone" ref="0x7fc6e1cc4030" loc="30:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="res" ref="0x7fc6e1cc5d80" loc="30:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setVolume" ref="0x7fc6e1cc7d30" loc="26:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x7fc6e1cc7ab0" loc="26:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="rdsReceived" ref="0x7fc6e1cc10c0" loc="36:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7fc6e1cd4e70"/>
              <typename><typedef-ref name="RDSType" ref="0x7fc6e1cc98b0"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fc6e1cc3ae0" loc="36:FMClick/FMClick.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7fc6e1cd4e70"/>
              <typename><typedef-ref name="RDSType" ref="0x7fc6e1cc98b0"/></typename>
            </type-tag>
          </variable>
          <variable name="buf" ref="0x7fc6e1cc3e00" loc="36:FMClick/FMClick.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveRDS" ref="0x7fc6e1cc56e0" loc="28:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fc6e1cc5460" loc="28:FMClick/FMClick.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="tuneComplete" ref="0x7fc6e1cc49f0" loc="32:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fc6e1cc4770" loc="32:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fc6e1cc7420" loc="24:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="seekComplete" ref="0x7fc6e1cc33e0" loc="34:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fc6e1cc3160" loc="34:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tune" ref="0x7fc6e1cc8350" loc="20:FMClick/FMClick.nc">
        <interfacedef-ref qname="FMClick"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fc6e1cc80d0" loc="20:FMClick/FMClick.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Glcd" loc="9:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
      <function command="" provided="0" name="drawTextPgm" ref="0x7fc6e1cdde00" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="109:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawTextPgm&#10;&#10; </short>
          <long>&#10; drawTextPgm&#10;&#10; @param text stored in program memory&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7fc6e1cdd4a0" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7fc6e1cdd800" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fc6e1cddb60" loc="119:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawRect" ref="0x7fc6e1ce3b70" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw rectangle&#10;&#10; </short>
          <long>&#10; Draw rectangle&#10;&#10; @param upper left x&#10; @param upper left y&#10; @param lower right x&#10; @param lower right y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7fc6e1ce4e20" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7fc6e1ce31c0" loc="70:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7fc6e1ce3550" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7fc6e1ce38c0" loc="71:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawLine" ref="0x7fc6e1ce4640" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="45:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw line&#10;&#10; </short>
          <long>&#10; Draw line&#10;&#10; @param first point x&#10; @param first point y&#10; @param second point x&#10; @param second point y&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x1" ref="0x7fc6e1ce5880" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y1" ref="0x7fc6e1ce5bf0" loc="56:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="x2" ref="0x7fc6e1ce4020" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y2" ref="0x7fc6e1ce4390" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPixel" ref="0x7fc6e1ce73f0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="12:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Set pixel&#10;&#10; </short>
          <long>&#10; Set pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fc6e1ce9db0" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fc6e1ce7160" loc="21:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="invertPixel" ref="0x7fc6e1ce50c0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="34:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Invert pixel&#10;&#10; </short>
          <long>&#10; Invert pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fc6e1ce6a70" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fc6e1ce6dd0" loc="43:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPixel" ref="0x7fc6e1ce62b0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="23:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Clear pixel&#10;&#10; </short>
          <long>&#10; Clear pixel&#10;&#10; @param x-coordinate&#10; @param y-coordinate&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fc6e1ce7ba0" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fc6e1ce6020" loc="32:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawEllipse" ref="0x7fc6e1ce0150" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Draw ellipse&#10;&#10; </short>
          <long>&#10; Draw ellipse&#10;&#10; @param center x&#10; @param center y&#10; @param radius horizontal&#10; @param radius vertical&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fc6e1ce1390" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fc6e1ce16f0" loc="84:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_h" ref="0x7fc6e1ce1ac0" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="radius_v" ref="0x7fc6e1ce1e70" loc="85:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="drawText" ref="0x7fc6e1cdfcc0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="97:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; drawText&#10;&#10; </short>
          <long>&#10; drawText&#10;&#10; @param text&#10; @param x-coordinate of lower left edge&#10; @param y-coordinate of lower left edge&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="text" ref="0x7fc6e1cdf360" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="x" ref="0x7fc6e1cdf6c0" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="y" ref="0x7fc6e1cdfa20" loc="107:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="fill" ref="0x7fc6e1ce0b80" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
        <documentation loc="87:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
          <short>&#10; Fill Display with pattern&#10;&#10; </short>
          <long>&#10; Fill Display with pattern&#10;&#10; @param pattern&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Glcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pattern" ref="0x7fc6e1ce0900" loc="95:../tinyos_ws18/tos/lib_ecs/glcd/Glcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpControl" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="setGateway" ref="0x7fc6e1ba94c0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="gateway" ref="0x7fc6e1ba9240" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGateway" ref="0x7fc6e1ba8d70" loc="14:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetmask" ref="0x7fc6e1ba9e70" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="netmask" ref="0x7fc6e1ba9bf0" loc="11:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIp" ref="0x7fc6e1ba85f0" loc="13:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetmask" ref="0x7fc6e1ba6510" loc="15:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
              <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setIp" ref="0x7fc6e1bb5ac0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
        <interfacedef-ref qname="IpControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x7fc6e1bb5840" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpControl.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpSend" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
      <function command="" provided="0" name="send" ref="0x7fc6e1baf990" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
        <interfacedef-ref qname="UdpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7fc6e1bb1b70" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dstPort" ref="0x7fc6e1baf020" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc6e1baf3a0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc6e1baf6e0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc6e1bae350" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
        <interfacedef-ref qname="UdpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc6e1bae0d0" loc="12:../tinyos_ws18/tos/lib_ecs/udp/UdpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../tinyos_ws18/tos/interfaces/SplitControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fc6e1ba3020" loc="113:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="106:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc6e1ba4c50" loc="113:../tinyos_ws18/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fc6e1ba2520" loc="138:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="132:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc6e1ba22a0" loc="138:../tinyos_ws18/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fc6e1ba4270" loc="104:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="89:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc6e1ba3870" loc="130:../tinyos_ws18/tos/interfaces/SplitControl.nc">
        <documentation loc="115:../tinyos_ws18/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpReceive" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/ip.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7fc6e1bab610" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
        <interfacedef-ref qname="UdpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7fc6e1bb67d0" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="srcPort" ref="0x7fc6e1bb6b40" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc6e1bab020" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc6e1bab360" loc="11:../tinyos_ws18/tos/lib_ecs/udp/UdpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketSender" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_type_t" ref="0x7fc6e1b0b630" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
          <interfacedef-ref qname="PacketSender"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7fc6e1b0b630"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7fc6e1b082a0" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <interfacedef-ref qname="PacketSender"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7fc6e1b0b630"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x7fc6e1b08020" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="item_type_t" scoped="" ref="0x7fc6e1b0b630"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc6e1b08be0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
        <interfacedef-ref qname="PacketSender"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc6e1b08960" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketSender.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpPacket" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPacket" ref="0x7fc6e1b01570" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpPacket.nc">
        <interfacedef-ref qname="IpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:540" alignment="I:1"><struct-ref ref="0x7fc6e1bc4810"/>
              <typename><typedef-ref name="ip_packet_t" ref="0x7fc6e1bc4c30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpReceive" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7fc6e1b05e20" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
        <interfacedef-ref qname="IpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7fc6e1b054c0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7fc6e1b05840" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc6e1b05b80" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcReceive" loc="8:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7fc6e1af07e0" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
        <interfacedef-ref qname="LlcReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7fc6e1aff8c0"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7fc6e1affc30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcMac" ref="0x7fc6e1af01d0" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7fc6e1aff8c0"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7fc6e1affc30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7fc6e1af0550" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcSend" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc6e1af32c0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
        <interfacedef-ref qname="LlcSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7fc6e1aff8c0"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7fc6e1affc30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstMac" ref="0x7fc6e1af6900" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7fc6e1aff8c0"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7fc6e1affc30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7fc6e1af6c80" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc6e1af3020" loc="11:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc6e1af3c00" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
        <interfacedef-ref qname="LlcSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc6e1af3980" loc="12:../tinyos_ws18/tos/lib_ecs/llc/LlcSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Arp" loc="10:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
      <function command="" provided="0" name="resolve" ref="0x7fc6e1ae85f0" loc="11:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
        <interfacedef-ref qname="Arp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x7fc6e1ae8370" loc="11:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resolved" ref="0x7fc6e1ae7020" loc="12:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
        <interfacedef-ref qname="Arp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7fc6e1aff8c0"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7fc6e1affc30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="macPtr" ref="0x7fc6e1ae8d10" loc="12:../tinyos_ws18/tos/lib_ecs/arp/Arp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7fc6e1aff8c0"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7fc6e1affc30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MacControl" loc="10:../tinyos_ws18/tos/lib_ecs/llc/MacControl.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMac" ref="0x7fc6e1aa4940" loc="11:../tinyos_ws18/tos/lib_ecs/llc/MacControl.nc">
        <interfacedef-ref qname="MacControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7fc6e1aff8c0"/>
              <typename><typedef-ref name="mac_addr_t" ref="0x7fc6e1affc30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mac" loc="10:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/mac.h">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc6e1aa25f0" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7fc6e1afc350"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7fc6e1afc770"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc6e1aa2020" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7fc6e1afc350"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7fc6e1afc770"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc6e1aa2360" loc="11:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="received" ref="0x7fc6e1aa19c0" loc="13:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7fc6e1afc350"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7fc6e1afc770"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc6e1aa1740" loc="13:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:554" alignment="I:1"><struct-ref ref="0x7fc6e1afc350"/>
                <typename><typedef-ref name="mac_packet_t" ref="0x7fc6e1afc770"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc6e1aa1020" loc="12:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc6e1aa2cb0" loc="12:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMac" ref="0x7fc6e1aa0190" loc="14:../tinyos_ws18/tos/lib_ecs/llc/Mac.nc">
        <interfacedef-ref qname="Mac"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7fc6e1aff8c0"/>
              <typename><typedef-ref name="mac_addr_t" ref="0x7fc6e1affc30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LlcQueue" loc="8:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc6e1a82420" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <interfacedef-ref qname="LlcQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7fc6e1aff8c0"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7fc6e1affc30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstMac" ref="0x7fc6e1a83710" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><union-ref ref="0x7fc6e1aff8c0"/>
                <typename><typedef-ref name="mac_addr_t" ref="0x7fc6e1affc30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etherType" ref="0x7fc6e1a83a90" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc6e1a83e10" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc6e1a82170" loc="9:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc6e1a82d60" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
        <interfacedef-ref qname="LlcQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc6e1a82ae0" loc="10:../tinyos_ws18/tos/lib_ecs/llc/LlcQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketQueue" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <parameters>
        <typedef name="item_type" ref="0x7fc6e1a74550" loc="8:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
          <interfacedef-ref qname="PacketQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="item_type" scoped="" ref="0x7fc6e1a74550"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0x7fc6e1a71a60" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7fc6e1a717e0" loc="10:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBuffer" ref="0x7fc6e1a71150" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="item_type" scoped="" ref="0x7fc6e1a74550"/></type-var>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7fc6e1a74e20" loc="9:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc6e1a6f730" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
        <interfacedef-ref qname="PacketQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x7fc6e1a6f150" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fc6e1a6f4a0" loc="11:../tinyos_ws18/tos/lib_ecs/packet_queue/PacketQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc6e19cb6d0" loc="53:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc6e19cb6d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fc6e19c8020" loc="61:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../tinyos_ws18/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fc6e27df170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc6e19b8410" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc6e19b8410"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fc6e19b8650" loc="57:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19b8650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fc6e19b6020" loc="64:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19b8650"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fc6e19b5120" loc="76:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="73:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fc6e19b68a0" loc="71:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="66:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fc6e19b5880" loc="82:../tinyos_ws18/tos/lib/timer/Counter.nc">
        <documentation loc="78:../tinyos_ws18/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc6e19c5ba0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc6e19c5ba0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fc6e19c5de0" loc="56:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19c5de0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fc6e19be9c0" loc="109:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="105:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19c5de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fc6e19c19b0" loc="78:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="75:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fc6e19be020" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="90:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19c5de0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19c5de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fc6e19bfa10" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19c5de0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fc6e19bfd50" loc="103:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19c5de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fc6e19bf1f0" loc="88:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="81:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fc6e19bd1f0" loc="116:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="111:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19c5de0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fc6e19c2960" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="59:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19c5de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fc6e19c26e0" loc="66:../tinyos_ws18/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19c5de0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc6e19c11f0" loc="73:../tinyos_ws18/tos/lib/timer/Alarm.nc">
        <documentation loc="68:../tinyos_ws18/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fc6e1987e50" loc="89:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fc6e1988c40" loc="85:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7fc6e198c8c0" loc="79:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fc6e1987680" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fc6e1987400" loc="86:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7fc6e1988470" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fc6e19881f0" loc="82:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fc6e1986890" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fc6e1986610" loc="90:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7fc6e198a0e0" loc="80:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7fc6e198aa80" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fc6e198a800" loc="81:../tinyos_ws18/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280TimerSync" loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
      <documentation loc="45:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; Changedto Sync for Atm1280&#10; @author Markus Hartmann&#10;</long>
      </documentation>
      <function command="" provided="0" name="setTimer2Synchronous" ref="0x7fc6e1977020" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="68:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Turn on timer 2 synchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBBusy" ref="0x7fc6e19750e0" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7fc6e1976020" loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7fc6e19777a0" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7fc6e19758f0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7fc6e1976850" loc="89:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7fc6e197bbe0" loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="56:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fc6e1df14d0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fc6e1df18f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7fc6e1978660" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
        <documentation loc="62:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280TimerSync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fc6e1df14d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fc6e1df18f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fc6e19783e0" loc="66:../tinyos_ws18/tos/chips_ecs/atm1280/timerSync/HplAtm1280TimerSync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fc6e1df14d0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fc6e1df18f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fc6e19853d0" loc="41:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19853d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7fc6e197e020" loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fc6e1981020" loc="58:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fc6e1985d10" loc="48:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19853d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fc6e1981790" loc="62:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fc6e197e7e0" loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc6e1982710" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19853d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fc6e1982490" loc="54:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e19853d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fc6e1980020" loc="65:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc6e1980770" loc="68:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fc6e199ba20" loc="55:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fc6e199ba20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7fc6e19932d0" loc="98:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fc6e1995350" loc="87:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fc6e1998390" loc="61:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fc6e199ba20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7fc6e1993cb0" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fc6e1993a30" loc="104:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7fc6e1992510" loc="110:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fc6e1997c90" loc="75:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fc6e1997500" loc="70:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fc6e1995b10" loc="93:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc6e1998d40" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fc6e199ba20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fc6e1998ac0" loc="67:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fc6e199ba20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fc6e1996420" loc="78:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc6e1996b70" loc="81:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:../tinyos_ws18/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpReceive" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function event="" provided="0" name="received" ref="0x7fc6e17f9140" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
        <interfacedef-ref qname="IcmpReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="srcIp" ref="0x7fc6e17fa460" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="code" ref="0x7fc6e17fa7a0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc6e17fab20" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc6e17fae60" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpReceive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpSend" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc6e17fc620" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <interfacedef-ref qname="IcmpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7fc6e17fe490" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x7fc6e17fe7d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="code" ref="0x7fc6e17feb10" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc6e17fc020" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc6e17fc360" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc6e17fb020" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
        <interfacedef-ref qname="IcmpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc6e17fcce0" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpSend" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc6e17efdf0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <interfacedef-ref qname="IpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7fc6e17ef490" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x7fc6e17ef810" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc6e17efb50" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc6e17ee770" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
        <interfacedef-ref qname="IpSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc6e17ee4f0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc6e17e7990" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <interfacedef-ref qname="IpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7fc6e17eac50" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="protocol" ref="0x7fc6e17e7020" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc6e17e73a0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc6e17e76e0" loc="9:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc6e17e6350" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
        <interfacedef-ref qname="IpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc6e17e60d0" loc="10:../tinyos_ws18/tos/lib_ecs/ip/IpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IcmpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc6e179f6d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <interfacedef-ref qname="IcmpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7fc6e17a0660" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x7fc6e17a09a0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="code" ref="0x7fc6e17a0ce0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc6e179f0d0" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc6e179f410" loc="9:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc6e179d040" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
        <interfacedef-ref qname="IcmpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc6e179fd90" loc="10:../tinyos_ws18/tos/lib_ecs/icmp/IcmpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplKS0108" loc="7:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <short>&#10; Hpl interface for KS0108 GLCD Display&#10; </short>
        <long>&#10; Hpl interface for KS0108 GLCD Display&#10; @author:    Markus Hartmann e988811@student.tuwien.ac.at&#10; @date:      01.02.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="dataWrite" ref="0x7fc6e17352b0" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="48:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write data&#10;&#10; </short>
          <long>&#10; Write data&#10;&#10; @param The controller to write to&#10; @param data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7fc6e1736c40" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7fc6e1735020" loc="57:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7fc6e1739030" loc="15:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="10:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Initialize GLCD&#10; &#10; </short>
          <long>&#10; Initialize GLCD&#10; &#10; @return SUCCESS&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataRead" ref="0x7fc6e1736440" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="38:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read data&#10;&#10; </short>
          <long>&#10; Read data&#10;&#10; @param The controller to be read from&#10; &#10; @return data&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7fc6e17361c0" loc="46:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlWrite" ref="0x7fc6e1737940" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="27:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Write to controller&#10;&#10; </short>
          <long>&#10; Write to controller&#10;&#10; @param The controller to write to&#10; @param controller data&#10; &#10; @return SUCCESS&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7fc6e1737330" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
          <variable name="data" ref="0x7fc6e17376b0" loc="36:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="controlRead" ref="0x7fc6e1739ab0" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
        <documentation loc="17:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
          <short>&#10; Read controller state&#10;&#10; </short>
          <long>&#10; Read controller state&#10;&#10; @param The controller to be checked&#10; &#10; @return state of the controller&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplKS0108"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="controller" ref="0x7fc6e1739830" loc="25:../tinyos_ws18/tos/lib_ecs/glcd/HplKS0108.nc">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fc6e16bee80" loc="44:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fc6e16bd5d0" loc="45:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fc6e16be070" loc="42:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fc6e16bc480" loc="47:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fc6e16be770" loc="43:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fc6e16bdcf0" loc="46:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc6e16c0270" loc="40:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fc6e16c0940" loc="41:../tinyos_ws18/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fc6e16ac430" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fc6e16ac430"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fc6e16ac670" loc="59:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e16ac670"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fc6e16ab2a0" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e16ac670"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fc6e16ab020" loc="66:../tinyos_ws18/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fc6e16ac670"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIOPort" loc="6:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
      <documentation loc="1:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fc6e16b2020" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fc6e16b3ca0" loc="8:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fc6e16b12e0" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fc6e16b1060" loc="10:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fc6e16b1c30" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fc6e16b19b0" loc="11:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fc6e16b35b0" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fc6e16b3330" loc="7:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fc6e16afce0" loc="13:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc6e16af5b0" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc6e16af330" loc="12:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc6e16b2950" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
        <interfacedef-ref qname="GeneralIOPort"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fc6e16b26d0" loc="9:../tinyos_ws18/tos/chips_ecs/atm128/GeneralIOPort.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Enc28j60Control" loc="11:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
      <function event="" provided="0" name="linkChange" ref="0x7fc6e1462900" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
        <interfacedef-ref qname="Enc28j60Control"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7fc6e1492700"/>
              <typename><typedef-ref name="link_status_t" ref="0x7fc6e1491020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x7fc6e1462680" loc="12:../tinyos_ws18/tos/chips_ecs/enc28j60/Enc28j60Control.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7fc6e1492700"/>
              <typename><typedef-ref name="link_status_t" ref="0x7fc6e1491020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../tinyos_ws18/tos/interfaces/SpiByte.nc">
      <documentation loc="34:../tinyos_ws18/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fc6e14540b0" loc="45:../tinyos_ws18/tos/interfaces/SpiByte.nc">
        <documentation loc="40:../tinyos_ws18/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fc6e145bde0" loc="45:../tinyos_ws18/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fc6e1459830" loc="56:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fc6e14562b0" loc="75:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fc6e14590e0" loc="51:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fc6e1457a60" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fc6e14577e0" loc="70:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fc6e145c960" loc="46:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fc6e1457020" loc="63:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../tinyos_ws18/tos/interfaces/Resource.nc">
      <documentation loc="63:../tinyos_ws18/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fc6e1450120" loc="120:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fc6e1452120" loc="97:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="90:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fc6e1453770" loc="88:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fc6e1452910" loc="102:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="99:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fc6e1450b80" loc="128:../tinyos_ws18/tos/interfaces/Resource.nc">
        <documentation loc="122:../tinyos_ws18/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc6e13e2600" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fc6e13edbb0" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fc6e13e2020" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc6e13e2360" loc="70:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc6e13e1b80" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fc6e13e0e50" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fc6e13e1220" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc6e13e1560" loc="82:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fc6e13e18d0" loc="83:../tinyos_ws18/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fc6e13e70b0" loc="62:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc6e13eedc0" loc="62:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fc6e13e64d0" loc="74:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc6e13e6250" loc="74:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fc6e13e7920" loc="68:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc6e13e5020" loc="81:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc6e13e6ce0" loc="81:../tinyos_ws18/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiControl" loc="8:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
      <function command="" provided="0" name="setClock" ref="0x7fc6e13e9020" loc="26:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
        <documentation loc="10:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
          <short>&#10; Control Spi speed&#10; &#10; IMPORTANT NOTE: Speed is reset to default after each resource release.</short>
          <long>&#10; Control Spi speed&#10; &#10; IMPORTANT NOTE: Speed is reset to default after each resource release.&#10; &#10;&#10; @param speed Spi speed in Fosc/speed&#10;&#10;    SPI_SPEED_4   - Set to Fosc/4&#10;    SPI_SPEED_16  - Set to Fosc/16&#10;    SPI_SPEED_64  - Set to Fosc/64&#10;    SPI_SPEED_128 - Set to Fosc/128&#10;    SPI_SPEED_2   - Set to Fosc/2&#10;    SPI_SPEED_8   - Set to Fosc/8&#10;    SPI_SPEED_32  - Set to Fosc/32&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7fc6e13efd10"/>
              <typename><typedef-ref name="spi_speed_t" ref="0x7fc6e13eb540"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7fc6e13ebd60" loc="26:../tinyos_ws18/tos/chips_ecs/atm1280/spi/SpiControl.nc">
            <type-tag size="I:1" alignment="I:1"><enum-ref ref="0x7fc6e13efd10"/>
              <typename><typedef-ref name="spi_speed_t" ref="0x7fc6e13eb540"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7fc6e13cccc0" loc="86:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7fc6e13c2a70" loc="126:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7fc6e13c54a0" loc="117:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7fc6e13c0530" loc="128:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7fc6e13c02b0" loc="128:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7fc6e13cc510" loc="83:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7fc6e13c3020" loc="122:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7fc6e13c4d50" loc="122:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fc6e13c8b50" loc="113:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7fc6e13c88d0" loc="113:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fc6e13cbc70" loc="97:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7fc6e13bb020" loc="141:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fc6e13bdd00" loc="141:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fc6e13c7350" loc="114:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7fc6e13bf690" loc="131:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7fc6e13bf410" loc="131:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fc6e13be610" loc="136:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7fc6e13c22e0" loc="125:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7fc6e13c2060" loc="125:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7fc6e13bd5d0" loc="140:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7fc6e13c5e60" loc="119:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7fc6e13c5be0" loc="119:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc6e13c9680" loc="103:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc6e13c9400" loc="103:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fc6e13c7cd0" loc="116:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7fc6e13c7a50" loc="116:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7fc6e13c3890" loc="123:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7fc6e13c0ca0" loc="129:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7fc6e13bfdf0" loc="132:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fc6e13bedc0" loc="138:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7fc6e13c4610" loc="120:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fc6e13cb4a0" loc="89:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fc6e13c80b0" loc="109:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc6e13c9e00" loc="109:../tinyos_ws18/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fc6e13b60e0" loc="90:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fc6e13b6940" loc="98:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../tinyos_ws18/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fc6e135dab0" loc="95:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fc6e135a350" loc="105:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../tinyos_ws18/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fc6e1305270" loc="53:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fc6e1305ba0" loc="61:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fc6e1302b70" loc="65:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fc6e1302350" loc="59:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fc6e12f8c10" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fc6e1303cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fc6e12f8990" loc="79:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fc6e1303cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fc6e12fcc50" loc="53:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fc6e12f97a0" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fc6e1303cb0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fc6e12f9520" loc="62:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fc6e1303cb0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fc6e12f80e0" loc="70:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../tinyos_ws18/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fc6e1303cb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fc6e1294680" loc="48:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:../tinyos_ws18/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UdpQueue" loc="8:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;12.12.2011&#10;&#10; based on an implementation of Harald Glanzer, 0727156 TU Wien&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fc6e1203620" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <interfacedef-ref qname="UdpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dstIp" ref="0x7fc6e12044d0" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><union-ref ref="0x7fc6e1bc8880"/>
                <typename><typedef-ref name="in_addr_t" ref="0x7fc6e1bc8ca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="srcPort" ref="0x7fc6e1204840" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
          <variable name="dstPort" ref="0x7fc6e1204bb0" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc6e1203020" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fc6e1203360" loc="9:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fc6e1202020" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
        <interfacedef-ref qname="UdpQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc6e1203ce0" loc="10:../tinyos_ws18/tos/lib_ecs/udp/UdpQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x7fc6e11cee30" loc="59:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x7fc6e11cee30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fc6e11cc470" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fc6e11d0e10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fc6e11cd770" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fc6e11d0e10"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fc6e11cdac0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fc6e11cde10" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc6e11cc1c0" loc="76:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fc6e11c6d30" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc6e11c6060" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fc6e11c63b0" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fc6e11c6700" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc6e11c6a80" loc="112:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc6e11ca310" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fc6e11d0e10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fc6e11cb600" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x7fc6e11d0e10"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fc6e11cb950" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fc6e11cbca0" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc6e11ca060" loc="92:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fc6e11c70e0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fc6e11c83a0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fc6e11c86f0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x7fc6e11c8a40" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fc6e11c8dc0" loc="102:../tinyos_ws18/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fc6e10a5420" loc="56:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fc6e10a4500" loc="73:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fc6e10a8b50" loc="46:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fc6e10a5c90" loc="65:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fc6e10a4e30" loc="81:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:../tinyos_ws18/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../tinyos_ws18/tos/interfaces/Leds.nc">
      <documentation loc="33:../tinyos_ws18/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fc6e1090c70" loc="61:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="58:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fc6e108f490" loc="67:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="63:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fc6e108fc70" loc="72:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="69:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fc6e108ebd0" loc="83:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="79:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fc6e108b350" loc="100:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="96:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fc6e108bb60" loc="117:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="103:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fc6e108e420" loc="77:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="74:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fc6e108a710" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="120:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fc6e108a490" loc="134:../tinyos_ws18/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fc6e10904e0" loc="56:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fc6e108c3e0" loc="89:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="86:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fc6e108cb70" loc="94:../tinyos_ws18/tos/interfaces/Leds.nc">
        <documentation loc="91:../tinyos_ws18/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7fc6e103b120" loc="62:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../tinyos_ws18/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x7fc6e1021a10" loc="46:../tinyos_ws18/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x7fc6e0fded00" loc="54:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x7fc6e0fdd490" loc="55:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x7fc6e0fdc580" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fc6e0fdc300" loc="60:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x7fc6e0fde5e0" loc="52:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x7fc6e0fd9e40" loc="65:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fc6e0fd4be0" loc="84:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7fc6e0fd8830" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fc6e0fd85b0" loc="67:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7fc6e0fd2450" loc="89:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x7fc6e0fe07a0" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x7fc6e0fe0520" loc="49:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x7fc6e0fd9710" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x7fc6e0fd9490" loc="64:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7fc6e0fd7120" loc="68:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x7fc6e0fdccc0" loc="61:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fc6e0fd5120" loc="75:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x7fc6e0fddbe0" loc="56:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fc6e0fd44a0" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fc6e0fd4220" loc="83:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fc6e0fd3d00" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc6e0fd3a80" loc="88:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x7fc6e0fd7920" loc="72:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x7fc6e0fe0e70" loc="50:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x7fc6e0fdb650" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fc6e0fdb3d0" loc="62:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x7fc6e0fd5b40" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7fc6e0fd58c0" loc="81:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7fc6e0fd3390" loc="85:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x7fc6e0fdbd80" loc="63:../tinyos_ws18/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x7fc6e0c88270" loc="43:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fc6e0c8bad0" loc="40:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fc6e0c87800" loc="54:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fc6e0c85020" loc="57:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fc6e0c88980" loc="46:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x7fc6e0c842a0" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x7fc6e0c84020" loc="65:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fc6e0c870e0" loc="51:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x7fc6e0c84a30" loc="70:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x7fc6e0c857b0" loc="62:../tinyos_ws18/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcConfig" loc="19:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
      <documentation loc="13:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7fc6e0c3c880" loc="32:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="27:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM1280_ADC_VREF_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fc6e0c3c020" loc="25:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="20:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM1280_ADC_SNGL_xxx&#10;   or ATM1280_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7fc6e0c3b120" loc="39:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
        <documentation loc="34:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM1280_ADC_PRESCALE_xxx values from Atm1280Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
      <documentation loc="33:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fc6e0c297c0" loc="52:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fc6e0c297c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fc6e0c260e0" loc="58:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="53:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fc6e0c26e50" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
        <documentation loc="60:../tinyos_ws18/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fc6e0c297c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fc6e0c268a0" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7fc6e1ebc3a0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7fc6e0c26bc0" loc="66:../tinyos_ws18/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fc6e0c297c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcSingle" loc="52:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega1280 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fc6e0c1a9c0" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega1280 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fc6e0c1db10" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7fc6e0c1a020" loc="70:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7fc6e0c1a3a0" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7fc6e0c1a710" loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fc6e0c17350" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fc6e0c19a40" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
        <documentation loc="73:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc6e0c19470" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7fc6e0c197b0" loc="81:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1280AdcMultiple" loc="77:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
      <documentation loc="42:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm1280ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7fc6e0c14020" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM1280_ADC_VREF_xxx constants in Atm1280ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM1280_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fc6e0c151f0" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7fc6e0c15570" loc="100:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7fc6e0c158f0" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7fc6e0c15c60" loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fc6e0c13e00" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
        <documentation loc="103:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm1280AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc6e0c14c50" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7fc6e0c13020" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7fc6e0c13380" loc="119:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7fc6e0c13760" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7fc6e0c13b40" loc="120:../tinyos_ws18/tos/chips_ecs/atm1280/adc/Atm1280AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1280Adc" loc="48:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
      <documentation loc="36:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <short>&#10; HPL interface to the Atmega1280 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega1280 A/D conversion subsystem. Please see the&#10; Atmega1280 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega1280 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7fc6e0c03c40" loc="114:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="111:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7fc6e0c0a8a0" loc="53:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="49:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e1aeb0"/>
            <typename><typedef-ref name="Atm1280Admux_t" ref="0x7fc6e1e193a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7fc6e0bff040" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="135:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM1280_ADC_PRESCALE_xxx&#10;   values from Atm1280Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fc6e0c00da0" loc="140:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7fc6e0c01530" loc="122:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="118:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7fc6e0c06650" loc="82:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="79:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7fc6e0c09350" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="54:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e1aeb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7fc6e1e193a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7fc6e0c090d0" loc="58:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fc6e1e1aeb0"/>
              <typename><typedef-ref name="Atm1280Admux_t" ref="0x7fc6e1e193a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7fc6e0c055a0" loc="91:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="88:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7fc6e0c00540" loc="133:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="128:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fc6e0bff840" loc="150:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="142:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7fc6e0c06db0" loc="86:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="83:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7fc6e0c044f0" loc="99:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="96:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7fc6e0c05d50" loc="95:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="92:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7fc6e0c04c80" loc="106:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="101:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7fc6e0c01d00" loc="127:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="123:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fc6e1ec6500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7fc6e0c08650" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="65:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc6e1e13cb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7fc6e1e12440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7fc6e0c083d0" loc="69:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc6e1e13cb0"/>
              <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7fc6e1e12440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7fc6e0c034f0" loc="110:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="107:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7fc6e0c09ba0" loc="64:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="60:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fc6e1e13cb0"/>
            <typename><typedef-ref name="Atm1280Adcsra_t" ref="0x7fc6e1e12440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fc6e0c08e60" loc="75:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="71:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7fc6e0bfe400" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
        <documentation loc="152:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1280Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc6e0bfe180" loc="156:../tinyos_ws18/tos/chips_ecs/atm1280/adc/HplAtm1280Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7fc6e27e0610"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplLcd" loc="6:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
      <documentation loc="1:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
        <short>&#10; </short>
        <long>&#10; @author:&#9;Andreas Hagmann &#60;ahagmann@ecs.tuwien.ac.at>&#10; @date:&#9;22.01.2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="writeData" ref="0x7fc6e0ad3020" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
        <interfacedef-ref qname="HplLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fc6e0ad4c50" loc="8:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="writeCommand" ref="0x7fc6e0ad45a0" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
        <interfacedef-ref qname="HplLcd"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="com" ref="0x7fc6e0ad4320" loc="7:../tinyos_ws18/tos/lib_ecs/lcd/HplLcd.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fc6e27e1ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
